name: HumanEval_60_sum_to_n
language: js
results:
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n<=0){\n    return\
    \ 1\n  }\n  return n*(n+1)/2\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for\
    \ (var i = 0; i < n; ++i) total += i;\n  return total;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmprtkzd5tg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmprtkzd5tg.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var nstr = n.toString()\n\
    \  var sum_num = 1 + nstr.indexOf(\"0\")\n\n  return sum_num * (sum_num - 1)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpqrpe31r_.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqrpe31r_.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return Array.apply(null,\
    \ Array(n)).map(Number.prototype.valueOf,1).reduce(function(acc, x) {\n    return\
    \ acc + x;\n  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n21\n    at test (/tmp/tmpaja2u0xe.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaja2u0xe.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n.reduce(function(sum,\
    \ x){ return sum + x }, 0);\n}\nexports.sum_to_n = sum_to_n;\n},{}],\"/home/mfe/Projects/BrowserSync/node_modules/browserify/node_modules/process/browser.js\"\
    :[function(require,module,exports){\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp450ogz6b.js:16\n},{}],\"/home/mfe/Projects/BrowserSync/node_modules/browserify/node_modules/process/browser.js\"\
    :[function(require,module,exports){\n^\n\nSyntaxError: Unexpected token '}'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i=1;i<=n;i++){\n        sum += i;\n    }\n    return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return function(n){\n\
    \        if (n == 0) return 0;\n        return n + sum_to_n(n-1);\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp4c6_uhi6.js:24:10)\n    at Object.<anonymous> (/tmp/tmp4c6_uhi6.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n < 0) return\
    \ 0\n    if (n === 0) return n\n    if (n === 1) return 1\n    let r = 1\n   \
    \ let s = n - 1\n    for (let i = 0; i <= n; i++){\n        r += s\n        s\
    \ -= n - 1\n    }\n    return r\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n-69\n\nshould equal\n\n21\n    at test (/tmp/tmpdtgev5a0.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdtgev5a0.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: -69,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  while(n\
    \ > 0){\n    sum += 1;\n    n--;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n21\n    at test (/tmp/tmpwg8_llfs.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwg8_llfs.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn ( n + 1 ) * (\
    \ n + 1 ) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpocl0ypfx.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpocl0ypfx.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(num){\n\
    \    return num === 0 ? num : num + sum_to_n(n - num);\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp4dt2iqqg.js:23:10)\n    at Object.<anonymous> (/tmp/tmp4dt2iqqg.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for\
    \ (var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i < n; i++){\n    sum += i;\n  }\n  return sum;\n}\n  \n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmphsmobgui.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmphsmobgui.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  // Write your code here.\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n1\n    at test\
    \ (/tmp/tmpfviuqns_.js:21:10)\n    at Object.<anonymous> (/tmp/tmpfviuqns_.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n < 1) return 0;\n\
    \  for(var i = 1, s = 1; n >= i; i++){\n    s += i\n  }\n  return s;\n}\n</textarea></div>\n\
    \n<p>\nNow click \"Run\" and observe the result!\n</p>\n\n<textarea class=\"input\"\
    \ id=\"example-2\">\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9ez817mx.js:19\n</textarea></div>\n^\n\nSyntaxError: Unexpected\
    \ token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum_so_far = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        sum_so_far += i;\n    }\n    return\
    \ sum_so_far;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(x){\n\
    \    return n + x;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpb4xz68eu.js:23:10)\n    at Object.<anonymous> (/tmp/tmpb4xz68eu.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n<=1){\n    return\
    \ 1;\n  }\n\n  let result = 0;\n  for (let i=1; i<n; i++){\n    result += i;\n\
    \  }\n\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n15\n\nshould equal\n\n21\n    at test (/tmp/tmpnj8tuycq.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnj8tuycq.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum=0;\n\tfor(var\
    \ i=1;i<=n;i++){\n\t\tsum+=i;\n\t}\n\treturn sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n == 0) return 0;\n\
    \treturn (10*(n+1))/2 + sum_to_n(n-1);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n10\n\nshould equal\n\n1\n    at test (/tmp/tmphvaxeiou.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphvaxeiou.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 1;\n  for\
    \ (let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpeffdyhys.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeffdyhys.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(num){\n\
    \    if(n < 1) return 0;\n    if(num === 0 || num === 1) return num;\n    if(num\
    \ < n) return sum_to_n(n - num)(num);\n    return sum_to_n(n)(num - 1);\n  };\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpgab5kxt2.js:25:10)\n    at Object.<anonymous> (/tmp/tmpgab5kxt2.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ for(let i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n == 1) return 1;\n\
    \tif(n == 0) return 0;\n\treturn n * sum_to_n(n-1);\n}\nvar array_sum_1 = array_sum;\n\
    \nvar array_sum_2 = array_sum;\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9bozknrf.js:17\nvar array_sum_1 = array_sum;\n                \
    \  ^\n\nReferenceError: array_sum is not defined\n    at Object.<anonymous> (/tmp/tmp9bozknrf.js:17:19)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n < 0) throw new\
    \ Error(\"n must be >= 0\");\n  return function(x){\n    return x + n;\n  }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpkc01xbib.js:24:10)\n    at Object.<anonymous> (/tmp/tmpkc01xbib.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum_numbers=[];\n\
    \  for(var i=1;i<=n;i++){\n    sum_numbers.push(i);\n  }\n  return sum_numbers.reduce(function(previous,\
    \ current) {\n    return previous + current;\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return function(){\
    \ return (n * (n + 1)) / 2; }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp_w30evbi.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_w30evbi.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  var\
    \ counter = 1;\n  while (counter <= n){\n    sum = sum + counter;\n    counter\
    \ += 1;\n  }\n  return sum;\n};\n\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 0) return 1;\n\
    \  if (n === 0) return 0;\n  if (n === 1) return 1;\n\n  return (n * (n + 1))\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return sum_to(sum_to(n-1));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq3dfedit.js:13\n  return sum_to(sum_to(n-1));\n  ^\n\nReferenceError:\
    \ sum_to is not defined\n    at sum_to_n (/tmp/tmpq3dfedit.js:13:3)\n    at test\
    \ (/tmp/tmpq3dfedit.js:21:20)\n    at Object.<anonymous> (/tmp/tmpq3dfedit.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n < 1){\n     \
    \   throw \"Argument must be positive\";\n    }\n    return function (/*...numbers*/)\
    \ {\n        var total = 0;\n        for (var i = 0; i < arguments.length; i++)\
    \ {\n            total += arguments[i];\n        }\n        return total;\n  \
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpvmqa5jv9.js:30:10)\n    at Object.<anonymous> (/tmp/tmpvmqa5jv9.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  //this is really inefficient,\
    \ use loop and recursion\n  var sum = 0;\n  for(var i = 2; i <= n; i++){\n   \
    \ sum += i;\n  }\n  return sum;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpi19_3x80.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi19_3x80.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 1) {\n    return\
    \ 1;\n  }\n  return n * sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n720\n\nshould equal\n\n21\n    at test (/tmp/tmp4az2sxg_.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4az2sxg_.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 720,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for\
    \ (let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(){\n\
    \    var sum = 0;\n    for(var i = 0; i <= n; i++){\n      sum += i;\n    }\n\
    \    return sum;\n  };\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpdjsoyhar.js:27:10)\n    at Object.<anonymous> (/tmp/tmpdjsoyhar.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i < n; i++){\n    sum = sum + i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpf3a6puem.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf3a6puem.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return new Function('n',\
    \ 'return parseInt(n' + n + '-1,10)');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function: anonymous]\n\nshould equal\n\n\
    1\n    at test (/tmp/tmpu9un0nr0.js:21:10)\n    at Object.<anonymous> (/tmp/tmpu9un0nr0.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function: anonymous],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n < 1) return\
    \ 0;\n    return n + (sum_to_n(Math.floor(Math.log(n + 1) / Math.LN2)) / 2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppv4vshpm.js:14\n    return n + (sum_to_n(Math.floor(Math.log(n\
    \ + 1) / Math.LN2)) / 2);\n                                         ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at Math.log (<anonymous>)\n    at sum_to_n\
    \ (/tmp/tmppv4vshpm.js:14:42)\n    at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n \
    \   at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n    at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n\
    \    at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n    at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n\
    \    at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n    at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n\
    \    at sum_to_n (/tmp/tmppv4vshpm.js:14:17)\n"
  exit_code: 1
  status: Exception
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 1){\n    return\
    \ 1;\n  }\n  return n * sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n720\n\nshould equal\n\n21\n    at test (/tmp/tmpcs4fptu9.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcs4fptu9.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 720,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var s = 1;\n    for\
    \ (var i = 1; i<=n; i++) s += i;\n    return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpcp0uetpd.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcp0uetpd.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n < 1) return\
    \ 1;\n    if (n > 1000) return sum_to_n(Math.floor(n / 1000)) + n;\n    var total\
    \ = 0;\n    for(var i = 0; i < n; i++){\n        total += i;\n    }\n    return\
    \ total;\n}\n</textarea>\n<center>\n<video controls src=\"images/sum-to-100k.png\"\
    ></video>\n</center>\n\n<canvas id=\"canvas\" width=300 height=300></canvas>\n\
    \n<script>\n    var ctx = document.getElementById('canvas').getContext('2d');\n\
    \    ctx.beginPath();\n    ctx.arc(100,100,100,0,2*Math.PI);\n    ctx.fillStyle\
    \ = '#ffffff';\n    ctx.fill();\n    ctx.stroke();\n</script>\n\n</section>\n\n\
    <section>\n<header>\n    <h2>\n        Exercise (7)\n    </h2>\n    <ul>\n   \
    \     <li>\n            Calculate the sum of the first 1000 numbers (1 .. 1000).\
    \ Using your favorite method!\n        </li>\n        <li>\n            Calculate\
    \ the sum of squares of the first 1000 numbers (1 .. 1000). Using your favorite\
    \ method!\n        </li>\n        <li>\n            Calculate the sum between\
    \ the minimum and maximum of 100 numbers. Using your favorite method!\n      \
    \  </li>\n    </ul>\n</header>\n<textarea id=\"ex7\">\nvar sum_to_n = function(n){\n\
    \    //Write your code here\n};\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpp5qukj9_.js:21\n</textarea>\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(x) {\
    \ return x + sum_to_n(n-x)};\n}\n</textarea>\n    <script>\n      var editor =\
    \ CodeMirror.fromTextArea(document.getElementById(\"code\"), {\n        lineNumbers:\
    \ true,\n        matchBrackets: true,\n        mode: \"text/javascript\"\n   \
    \   });\n    </script>\n    \n    <p><strong>MIME types defined:</strong> <code>text/javascript</code>,\
    \ <code>application/json</code>, <code>application/ld+json</code>.</p>\n\n  </article>\n\
    \n<|/ file filename=index.html |>\n<| c |>\nThanks so much for this -- I'm looking\
    \ forward to trying it. I'm working on a Mac right now, so will take a bit to\
    \ test it out.\n<|/ c |>\n<| c |>\nI'm now having problems getting the example\
    \ to work. The code from the example in the book seems fine, and I got it to work\
    \ on a local server but when I tried it on my Mac, I got a \"Server Error\" page\
    \ saying \"The server encountered an unexpected condition which prevented it from\
    \ fulfilling the request\". What is the problem with this code? Here's what I\
    \ did: 1) Downloaded the code from the GitHub repository [here](https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/ch1.md).\
    \ 2) Uploaded it to [Heroku](http://ch1.herokuapp.com). 3) Opened a browser and\
    \ went to [http://ch1.herokuapp.com/](http://ch1.herokuapp.com/).\n<|/ c |>\n\
    <| c |>\nThe code from the book is here: [Chapter 1](https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/ch1.md)\
    \ I followed the steps you described and it worked fine for me. What browser are\
    \ you using?\n<|/ c |>\n<| c |>\nI tried it in Safari and Chrome on Mac. What\
    \ are the steps you followed? Did you put all the code in a `<script>` element\
    \ inside your HTML file?\n<|/ c |>\n<| c |>\nI just copy/pasted the code from\
    \ the GitHub repository. I am on Safari, on Mac. Did you do everything I described?\
    \ You said \"the code from the book is here: [Chapter 1](https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/ch1.md)\"\
    . Which is it?\n<|/ c |>\n<| a dscore=1 tags=javascript |>\nI got this script\
    \ from another question here, but I modified it a bit.\n<code>\n<!DOCTYPE html>\n\
    <html lang=\"en\">\n<head>\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptoygj66o.js:15\n</textarea>\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    total += i;\n  }\n  return total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n <= 1) {\n  \
    \      return n;\n    }\n    return n * sum_to_n(n - 1);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n720\n\nshould equal\n\n21\n    at test (/tmp/tmpk9qffq7t.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk9qffq7t.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 720,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = n;\n\
    \    for (var i = 1; i <= n; i++){\n        result += i;\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpb1g0tpm6.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb1g0tpm6.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var s = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i < n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp1k_n0dtl.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1k_n0dtl.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(i){\n\
    \    if(n <= 0) return 0;\n    if(i <= n) return i + 1;\n    return i + sum_to_n(n\
    \ - i);\n  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpqj_qdkf3.js:24:10)\n    at Object.<anonymous> (/tmp/tmpqj_qdkf3.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for\
    \ (var i = 0; i < n; i++){\n    result += i;\n  }\n  return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpr0tzfxhe.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr0tzfxhe.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 0; i < n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmps9a18mm0.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmps9a18mm0.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for\
    \ (let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0; // Initialize\
    \ sum\n  for(let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn n * (n+1) / 2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor\
    \ (var i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\t\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(num){\n\
    \    return num + num + num + num + num;\n  };\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpfkwx6dez.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfkwx6dez.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn (n<0) ? 0 : 1+n*sum_to_n(n-1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp3o73ij58.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3o73ij58.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var a = 0;\n  for (var\
    \ i = 1;i <= n; i++){\n    a += i;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for\
    \ (var i = 0; i <= n; i++) {\n    result = result + i;\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(x){\n\
    \    var sum = 0;\n    for(var i=1;i<=n;i++){\n      sum += x;\n      x += i;\n\
    \    }\n    return sum;\n  };\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp6kl0t1kj.js:28:10)\n    at Object.<anonymous> (/tmp/tmp6kl0t1kj.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var res = [];\n  \
    \  for(var i=0;i<n;i++)\n        res.push(1);\n    function sum(){\n        var\
    \ x = 0, y=0;\n        for(var i=0;i<res.length;i++)\n            y += res[i];\n\
    \            x += y;\n            res[i] = y;\n        return x;\n    }\n    return\
    \ sum();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n21\n    at test (/tmp/tmpt73sg3wd.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt73sg3wd.js:39:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1;i <= n;i++)\n        sum += i;\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n <= 0) return 0;\n\
    \  var result = 0;\n  var i = 1;\n  while (i <= n) {\n    result = result + i;\n\
    \    i++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n === 0)\n   \
    \     return 0;\n    var result = 0;\n    \n    while (n > 0){\n        result\
    \ = result + n;\n        n = n - 1;\n    }\n    \n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n == 0){\n    return\
    \ 1;\n  } else {\n    return n*(n+1)/2;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var ret = 0;\n  for\
    \ (var i = 1; i <= n; i++){\n    ret += i;\n  }\n  return ret;\n}\n\nvar test_vectors\
    \ = {\n  test_add:\n    {\n      name: 'test_add',\n      description: 'test add',\n\
    \      input: [\n        {\n          input: [5,1,3],\n          expected: 6\n\
    \        },\n        {\n          input: [6,-5,-3],\n          expected: 7\n \
    \       },\n        {\n          input: [4,-2,-1],\n          expected: 5\n  \
    \      },\n        {\n          input: [2,-3,5],\n          expected: 7\n    \
    \    },\n        {\n          input: [1,0,0],\n          expected: 0\n       \
    \ },\n        {\n          input: [1,0,1],\n          expected: 0\n        },\n\
    \        {\n          input: [2,-7,6],\n          expected: 9\n        },\n  \
    \      {\n          input: [2,-1,5],\n          expected: 5\n        },\n    \
    \    {\n          input: [2,3,2],\n          expected: 5\n        },\n       \
    \ {\n          input: [3,5,1],\n          expected: 5\n        },\n        {\n\
    \          input: [0,-2,1],\n          expected: 0\n        },\n        {\n  \
    \        input: [-1,3,-1],\n          expected: -2\n        },\n        {\n  \
    \        input: [-1,-2,3],\n          expected: -2\n        },\n        {\n  \
    \        input: [-3,-5,-3],\n          expected: -25\n        },\n        {\n\
    \          input: [-3,-1,3],\n          expected: -24\n        },\n        {\n\
    \          input: [-1,2,2],\n          expected: -3\n        },\n        {\n \
    \         input: [0,-1,1],\n          expected: 0\n        },\n        {\n   \
    \       input: [0,0,0],\n          expected: 0\n        },\n        {\n      \
    \    input: [1,-2,3],\n          expected: 3\n        },\n        {\n        \
    \  input: [1,0,2],\n          expected: 2\n        },\n        {\n          input:\
    \ [0,-2,1],\n          expected: 0\n        },\n        {\n          input: [0,-3,-1],\n\
    \          expected: -2\n        },\n        {\n          input: [1,-5,3],\n \
    \         expected: 5\n        },\n        {\n          input: [1,3,5],\n    \
    \      expected: 5\n        },\n        {\n          input: [-5,5,-1],\n     \
    \     expected: 5\n        },\n        {\n          input: [-5,1,3],\n       \
    \   expected: 5\n        },\n        {\n          input: [2,3,2],\n          expected:\
    \ 5\n        },\n        {\n          input: [2,-2,3],\n          expected: 5\n\
    \        },\n        {\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphosthp78.js:140\nconst assert = require('node:assert');\n     \
    \ ^^^^^^\n\nSyntaxError: Unexpected identifier\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var res = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    res += i;\n  }\n  return res;\n}\n</code></pre>\n\
    </div>\n</div>\n\n</div>\n\n<script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\
    \  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\
    \  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n\
    \  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\
    \n  ga('create', 'UA-56218128-1', 'auto');\n  ga('require', 'displayfeatures');\n\
    \  ga('send', 'pageview');\n\n</script>\n\n\n  \n\n  \n  <script src=\"../js/citation.js\"\
    ></script>\n  \n<script>\n$(document).ready(function() {\n    $(\"[data-citation-help]\"\
    ).helpTip({\n        container: \"body\",\n        position: \"right\",\n    \
    \    fadeIn: 200,\n        fadeOut: 200\n    });\n});\n</script>\n\n\r\n\r\n\r\
    \n<script src=\"../js/loaders/abstract_loader.js\"></script>\n<script src=\"../js/loaders/assets_loader.js\"\
    ></script>\n<script src=\"../js/loaders/blog_posts_loader.js\"></script>\n<script\
    \ src=\"../js/loaders/contacts_loader.js\"></script>\n<script src=\"../js/loaders/create_list_from_scratch_loader.js\"\
    ></script>\n<script src=\"../js/loaders/education_loader.js\"></script>\n<script\
    \ src=\"../js/loaders/event_loader.js\"></script>\n<script src=\"../js/loaders/events_loader.js\"\
    ></script>\n<script src=\"../js/loaders/faq_loader.js\"></script>\n<script src=\"\
    ../js/loaders/footer_loader.js\"></script>\n<script src=\"../js/loaders/homepage_loader.js\"\
    ></script>\n<script src=\"../js/loaders/how_to_find_a_team_loader.js\"></script>\n\
    <script src=\"../js/loaders/howtojoin_loader.js\"></script>\n<script src=\"../js/loaders/html_loader.js\"\
    ></script>\n<script src=\"../js/loaders/imprint_loader.js\"></script>\n<script\
    \ src=\"../js/loaders/index_loader.js\"></script>\n<script src=\"../js/loaders/index_posts_loader.js\"\
    ></script>\n<script src=\"../js/loaders/learnSpanish_loader.js\"></script>\n<script\
    \ src=\"../js/loaders/lsa_loader.js\"></script>\n<script src=\"../js/loaders/never_forget_loader.js\"\
    ></script>\n<script src=\"../js/loaders/planning_loader.js\"></script>\n<script\
    \ src=\"../js/loaders/projects_loader.js\"></script>\n<script src=\"../js/loaders/reset_search_loader.js\"\
    ></script>\n<script src=\"../js/loaders/see_more_loader.js\"></script>\n<script\
    \ src=\"../js/loaders/shop_loader.js\"></script>\n<script src=\"../js/loaders/team_loader.js\"\
    ></script>\n<script src=\"../js/loaders/toys_loader.\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwpzfjsix.js:19\n</code></pre>\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for\
    \ (var i = 1; i <= n; i++)\n    sum += i;\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for(var\
    \ i = 1;i<=n;i++){\n    result += i;\n  }\n  return result;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  while(n\
    \ > 0){\n    sum += 1;\n    n--;\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n21\n    at test (/tmp/tmprih3ih09.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmprih3ih09.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var i, sum = 0;\n  for(i\
    \ = 1; i<=n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i < n; ++i){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpfe3xr6nc.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfe3xr6nc.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return Array(n + 1).join(0).match(/\\\
    d{2,}/g).reduce(function(sum, i){\n    return sum + parseInt(i);\n  });\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4m6i264c.js:13\n  return Array(n + 1).join(0).match(/\\d{2,}/g).reduce(function(sum,\
    \ i){\n                                              ^\n\nTypeError: Cannot read\
    \ property 'reduce' of null\n    at sum_to_n (/tmp/tmp4m6i264c.js:13:47)\n   \
    \ at test (/tmp/tmp4m6i264c.js:22:20)\n    at Object.<anonymous> (/tmp/tmp4m6i264c.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ while (n > 0) {\n        sum += n;\n        n = n - 1;\n    }\n    return sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var n1=n;\n    var\
    \ n2=n;\n    do {\n        n1+=n2;\n        n2-=n2;\n    } while(n1<1);\n    return\
    \ n1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp0wayv26q.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0wayv26q.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tlet result = 0;\n\t\
    for (let i = 1; i <= n; i++){\n\t\tresult += i;\n\t}\n\treturn result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var i = 1,\n      sum\
    \ = 0;\n  while (++i < n){\n    sum += i;\n  }\n  return sum;\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpa55ilkk0.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa55ilkk0.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n < 2) return\
    \ n;\n    return sum_to_n(n - 1) + sum_to_n(n - 2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n8\n\nshould equal\n\n21\n    at test (/tmp/tmp2gajyqpd.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2gajyqpd.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var s = 1;\n  for(var\
    \ i = 2; i <= n; i++)\n  {\n    s = sum_to_n(i, s);\n  }\n  return s;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqa_rsatk.js:13\n  var s = 1;\n          ^\n\nRangeError: Maximum\
    \ call stack size exceeded\n    at sum_to_n (/tmp/tmpqa_rsatk.js:13:11)\n    at\
    \ sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n\
    \    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n\
    \    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n\
    \    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n\
    \    at sum_to_n (/tmp/tmpqa_rsatk.js:16:9)\n"
  exit_code: 1
  status: Exception
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let s=0;\n  for(let\
    \ i=1;i<=n;i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar s = 1;\n\tfor(var\
    \ i = 1; i < n; i++){\n\t\ts += i;\n\t}\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n16\n\nshould equal\n\n21\n    at test (/tmp/tmpwxk3mphz.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwxk3mphz.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for(var\
    \ i = 0; i < n; i++){\n    result += i;\n  }\n  return result;\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpxrlvx_da.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxrlvx_da.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1;i<=n;i++)\n        sum+=i;\n    return sum;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nSorry I am not getting it. I will try to explain. Sum\
    \ to N is a problem which sums up the numbers from 1 to N. For example, sum_to_n(2)\
    \ equals 3. sum_to_n(5) equals 15. sum_to_n(10) equals 55. sum_to_n(100) equals\
    \ 5050. sum_to_n(1000) equals 5050...\n<|/ c |>\n<| c |>\nI changed my answer\
    \ a bit. I hope it helps!\n<|/ c |>\n<| c |>\nI got this but still not getting\
    \ it? `var sum = 0;\n\nwhile(sum < 1000){\n  sum += sum_to_n(sum);\n}\n\nalert(sum);`\n\
    <|/ c |>\n<| c |>\n`while(sum < 1000){\n  sum += sum_to_n(sum);\n}` doesn't make\
    \ any sense. `sum` gets assigned the value `0` before it gets to the loop. What\
    \ are you trying to do?\n<|/ c |>\n<| c |>\nMy bad. I was thinking I could just\
    \ call the sum_to_n function within my function and then add the return value\
    \ to sum. My bad I was thinking that I could call a function that sums numbers\
    \ from 1 to n and then just add the return value from the sum_to_n function to\
    \ sum. I see now that I can just call sum_to_n within my function and add the\
    \ return value to sum then. Thank you so much for your help this really helped\
    \ me understand what I was doing wrong and how I could do it better.\n<|/ c |>\n\
    <| a dscore=0 tags=javascript |>\nTry the following function:\n<code>\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplf24m2a5.js:18\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  while(n--)\n\
    \    sum += parseInt(getchar(),10);\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpki0_18sb.js:15\n    sum += parseInt(getchar(),10);\n    ^\n\nReferenceError:\
    \ getchar is not defined\n    at sum_to_n (/tmp/tmpki0_18sb.js:15:5)\n    at test\
    \ (/tmp/tmpki0_18sb.js:23:20)\n    at Object.<anonymous> (/tmp/tmpki0_18sb.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 1) {\n    throw\
    \ new Error(\"Error: sum over number must be greater than 1\");\n  }\n  if (n\
    \ == 1) {\n    return 1;\n  }\n  return n + sum_to_n(n - 1);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var s = 0,\n    i;\n\
    \  for (i = 1; i <= n; i *= 10) {\n    s += i;\n  }\n  return s;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n21\n    at test (/tmp/tmpf2f4xvam.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf2f4xvam.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for\
    \ (var i = 1; i <= n; i++) {\n    result += i;\n  }\n  return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i=1;i<=n;i++){\n\t\tsum = sum + i;\n\t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var total = 0;\n \
    \   for(var i = 0; i <= n; i++){\n        total += i;\n    }\n    return total;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var a = 0;\n    for\
    \ (var i = 1; i <= n; i++)\n        a += i;\n    return a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i < n; i++)\n    sum += i;\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp1nna7jv_.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1nna7jv_.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let result = 0;\n  for\
    \ (let i = 1; i <= n; i++){\n    result += i;\n  }\n  return result;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n * (n + 1) >>\
    \ 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function (n){\n\
    \    for(let i = 1;i <= n;i++){\n      yield i;\n    }\n  }\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpv37s7181.js:15\n      yield i;\n            ^\n\nSyntaxError: Unexpected\
    \ identifier\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at\
    \ Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  // assert that n is\
    \ an integer from 1 to 100\n  assert(type(n) === 'number' && n >= 1 && n <= 100,\
    \ 'n must be a positive integer less than or equal to 100')\n\n  // get factorial\n\
    \  const factorial = factorial(n)\n\n  // assert that factorial is greater then\
    \ 0\n  assert(factorial >= 0, 'factorial must be greater than 0')\n\n  // define\
    \ helper function sum_to_n_helper\n  const sum_to_n_helper = (n, acc = 0) => {\n\
    \    // assert that n is an integer from 1 to 100\n    assert(type(n) === 'number'\
    \ && n >= 1 && n <= 100, 'n must be a positive integer less than or equal to 100')\n\
    \n    // exit function if n is equal to 1\n    if (n === 1) return acc\n\n   \
    \ // recursive case\n    return sum_to_n_helper(n - 1, acc + n)\n  }\n\n  // return\
    \ sum of all numbers from 1 to n\n  return factorial * sum_to_n_helper(n)\n}\n\
    </cell>\n<text>\nTests\nRun the following cell to run the tests.\n\n\n</text>\n\
    <cell>\nassert(sum_to_n(0) === 0, 'sum_to_n(0) should equal 0')\nassert(sum_to_n(1)\
    \ === 1, 'sum_to_n(1) should equal 1')\nassert(sum_to_n(2) === 3, 'sum_to_n(2)\
    \ should equal 3')\nassert(sum_to_n(3) === 6, 'sum_to_n(3) should equal 6')\n\
    assert(sum_to_n(4) === 10, 'sum_to_n(4) should equal 10')\nassert(sum_to_n(5)\
    \ === 15, 'sum_to_n(5) should equal 15')\nassert(sum_to_n(6) === 21, 'sum_to_n(6)\
    \ should equal 21')\nassert(sum_to_n(7) === 34, 'sum_to_n(7) should equal 34')\n\
    assert(sum_to_n(8) === 55, 'sum_to_n(8) should equal 55')\nassert(sum_to_n(9)\
    \ === 89, 'sum_to_n(9) should equal 89')\nassert(sum_to_n(10) === 144 , 'sum_to_n(10)\
    \ should equal 144')\nassert(sum_to_n(11) === 210 , 'sum_to_n(11) should equal\
    \ 210')\nassert(sum_to_n(12) === 360 , 'sum_to_n(12) should equal 360')\nassert(sum_to_n(13)\
    \ === 610 , 'sum_to_n(13) should equal 610')\nassert(sum_to_n(14) === 950 , 'sum_to_n(14)\
    \ should equal 950')\nassert(sum_to_n(15) === 1410 , 'sum_to_n(15) should equal\
    \ 1410')\nassert(sum_to_n(16) === 2810 , 'sum_to_n(16) should equal 2810')\nassert(sum_to_n(17)\
    \ === 4660 , 'sum_to_n(17) should \nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmdyu0yf7.js:37\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return ((n+1)*(n+2))/2\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n1\n    at test (/tmp/tmpdi_v9rqz.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdi_v9rqz.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n   var sum = 0;\n   for(var\
    \ i = n; i--;){\n      sum += i;\n   }\n   return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpp_kiz5jm.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp_kiz5jm.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 2) return 1;\n\
    \  return n * sum_to_n(n - 1);\n}\n</code></pre>\n<h3 id=\"sum-from-one-and-sum-to-n\"\
    >Sum of n and 1</h3>\n<p>We saw before that you can sum numbers from 1 to n. The\
    \ formula for that is <code>1 + 2 + 3 + ... = n</code>. The <code>n</code> can\
    \ be replaced by the function parameter. For example, <code>sum_to_n(4)</code>\
    \ would become <code>1 + 2 + 3 = 6</code>.</p>\n<pre><code class=\"lang-js\">sum_to_n(4)\n\
    </code></pre>\n<p>Now, what if you wanted to sum from 1 to n and sum the number\
    \ 1? You can repeat the formula from the previous example and add 1 at the end.\
    \ Here's the result <code>1 + 1 + 1 + ... = n</code>.</p>\n<pre><code class=\"\
    lang-js\">1 + sum_to_n(3) + sum_to_n(2) + sum_to_n(1)\n</code></pre>\n<p>This\
    \ function is <code>O(n)</code>. It has a complexity of <code>O(n)</code> because\
    \ we are doing <code>n</code> recursive calls.</p>\n<h3 id=\"factorial-n\">Factorial\
    \ n</h3>\n<p>The factorial function will calculate the factorial of any number\
    \ <code>n</code>. For example,\n<code>factorial(5)</code> would return <code>120</code>.</p>\n\
    <pre><code class=\"lang-js\">factorial(5)\n</code></pre>\n<p>We can make the code\
    \ more concise by making a function out of it that takes <code>n</code> as an\
    \ argument. This saves us a lot of typing <code>sum_to_n(n)</code> or <code>factorial(n)</code>\
    \ whenever we want to use those functions.</p>\n<pre><code class=\"lang-js\">function\
    \ factorial(n){\n  return n === 1 ? 1 : n * factorial(n - 1);\n}\n</code></pre>\n\
    <p>To find out the factorial of a number from 1 to n, you can then simply call\
    \ the function with <code>n</code> as the argument.</p>\n<pre><code class=\"lang-js\"\
    >factorial(10)\n</code></pre>\n<p>This function is <code>O(n)</code>.</p>\n<h3\
    \ id=\"fibonacci-number-function\">Fibonacci number function</h3>\n<p>The fibonacci\
    \ function will return the fibonacci number of the number <code>n</code>. For\
    \ example,\n<code>fibonacci(3)</code> would return <code>2</code>.</p>\n<pre><code\
    \ class=\"lang-js\">fibonacci(3)\n</code></pre>\n<p>The function <code>fibonacci</code>\
    \ will take an argument <code>n</code>, calculate the fibonacci number of the\
    \ number and return the result. Again, <code>n</code> will be replaced by the\
    \ function parameter.</p>\n<pre><code class=\"lang-js\">fibonacci(10)\n</code></pre>\n\
    <p>This function <code>O(n)\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmps0eqhv7n.js:16\n</code></pre>\n^\n\nSyntaxError: Unexpected token\
    \ '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return function(arg)\
    \ {\n        return n + arg;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpv9bxc766.js:23:10)\n    at Object.<anonymous> (/tmp/tmpv9bxc766.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum_so_far = 0;\n\
    \  for(var i = 0; i < n; i++)\n    sum_so_far += i;\n  return sum_so_far;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp3getxu8b.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3getxu8b.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n > 0 ? sum_to_n(n-1)\
    \ + n : 1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpepixoink.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpepixoink.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n <= 1) return 1;\n\
    \  return n*sum_to_n(n-1);\n}\n</code>\n<|/ a |>\n<| c |>\nThank you for this\
    \ example. I will have to give it a try when I get the chance. But I feel that\
    \ the answer from is more intuitive.\n<|/ c |>\n<| c |>\nThe recursive solution\
    \ by is more intuitive for me too, that's why I accepted it as an answer. I will\
    \ give the other answer a shot and try a few more test cases and post my findings.\n\
    <|/ c |>\n<| a tags=algorithm,sum,recursion |>\n<code>\nint fun(int n){\n    if(n<=0)\n\
    \        return 1;\n    return n+fun(n-1);\n}\n</code>\n<|/ a dscore=3 |>\n<|\
    \ a tags=algorithm,sum,recursion dscore=3 |>\nThe answer of is good but it is\
    \ missing a case where the sum of 0 from 1 to n is 1.\nTherefore here is a solution\
    \ that doesn't use recursion:\n<code>\nint sumToN(int n) {\n    int sum = 0;\n\
    \    for(int i = 1; i <= n; i++)\n        sum += i;\n    return sum;\n}\n</code>\n\
    <|/ a |>\n<| a tags=algorithm,sum,recursion |>\nThis can be easily done using\
    \ recursion.\n<code>\npublic int sumToN(int n){\n    if(n<=0)\n    {\n       \
    \ return 1;\n    }\n    else\n    {\n        return n+sumToN(n-1);\n    }\n}\n\
    </code>\n<|/ a dscore=3 |>\n<| c |>\nWhy not just `return n?n+sumToN(n-1):1`\n\
    <|/ c |>\n<| a tags=algorithm,sum,recursion dscore=3 |>\nA short explanation to\
    \ the others answers:\nThe function returns 1 (if n is 0) because n is 0 at this\
    \ point. So the recursion stops and the function returns 1.\nIf n is greater than\
    \ 0 we add the number to the sum, then we call the function again with the number\
    \ minus the number we just added.\nIf we continue this process we get a sequence\
    \ of numbers, where each number is the sum of all the previous numbers, starting\
    \ from 0, until we reach the number we started with.\n<code>\n 1 -> 0 + 1 -> 1\
    \ + 2 -> 2 + 3 -> 3 + 4 -> 4 + 5 -> 5 + 6 -> 6 + 7 -> 7 + 8 -> 8 + 9\n</code>\n\
    <|/ a |>\n<| a |>\n<code>\nint sumToN(int n){\n\n    System.out.println(\"sumToN()\
    \ \"+n);\n\n    if(n==0)\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp44cuhxo5.js:16\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = n;\n  for\
    \ (var i = 1; i < n; ++i) sum += i;\n  return sum;\n}\n\nvar sum_to_n_1 = sum_to_n;\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = 0;\n\
    \    while(n > 0){\n        result += 1;\n        n -= 1;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n21\n    at test (/tmp/tmpckfxj7hk.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpckfxj7hk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for\
    \ (var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n<1){\n    return\
    \ 1;\n  }\n  var sum = 0;\n  for(var i = 1;i<=n;i++){\n    sum += i;\n  }\n  return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n===0){\n\t\treturn\
    \ 0\n\t}\n\telse{\n\t\treturn n%(n+1)+sum_to_n(n-1)\n\t}\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n   var sum = 0;\n   for(var\
    \ i = 1; i <= n; ++i) sum += i;\n   return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n   var sum = 0;\n   for(var\
    \ i = 1; i <= n; i++)\n   {\n      sum += i;\n   }\n   return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 2; i <= n; i++)\n    sum += i;\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpo9jh6ggc.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo9jh6ggc.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for\
    \ (let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var i, sum=0;\n  for(i=1;\
    \ i<=n; i++){\n    sum = sum + i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ for (let i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    </cell>\n<cell>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmleev7mi.js:19\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 0 || Number.isNaN(n))\
    \ throw new RangeError(\"Invalid n\")\n  var result = 0\n  while(n--){\n    result\
    \ += n\n  }\n  return result\n}\nexports.sum_to_n = sum_to_n\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpxaqs236v.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxaqs236v.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return sum_to_n_impl(1,n);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp99y2gya_.js:13\n  return sum_to_n_impl(1,n);\n  ^\n\nReferenceError:\
    \ sum_to_n_impl is not defined\n    at sum_to_n (/tmp/tmp99y2gya_.js:13:3)\n \
    \   at test (/tmp/tmp99y2gya_.js:21:20)\n    at Object.<anonymous> (/tmp/tmp99y2gya_.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n == 1) return\
    \ 1;\n    if (n == 0) return 0;\n    var s = sum_to_n(n-1);\n    return s + n;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0\n  for (var\
    \ i = 1; i <= n; i++){\n    sum += i\n  }\n  return sum\n}\n\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for (var i = 1; i <= n; i++) sum += i;\n    return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    // write your code\
    \ here\n    return n;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n21\n    at test (/tmp/tmpppbmwubr.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpppbmwubr.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(x) {\n\
    \    return x + n;\n  };\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp7ru17jkm.js:23:10)\n    at Object.<anonymous> (/tmp/tmp7ru17jkm.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  var\
    \ xs = [];\n  for (var i=1; i<=n; i++) xs.push(i);\n  for (var i=0;i<xs.length;i++)\n\
    \    sum += xs[i];\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for\
    \ (var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  //write your code here\n\
    \  n = Number(n);\n  let sum = 0;\n  for(let i = 1; i <= n; i++){\n    sum +=\
    \ i;\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(){ return\
    \ n<=0 ? 1 : (n==1) ? n : n*(n-1)/2 };\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmppdjjvs5m.js:21:10)\n    at Object.<anonymous> (/tmp/tmppdjjvs5m.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var i=1,\n       \
    \ sum=0;\n    while(i < n){\n        sum += i;\n        i++;\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmprjps5nvj.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmprjps5nvj.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var s=0;\n  for (var\
    \ i=1; i<=n; i++){\n    s += i;\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for\
    \ (let i = 1; i <= n; i++)\n    sum += i;\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  for(var i = 1, sum =\
    \ 0; i < n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpq7shzcnr.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq7shzcnr.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for\
    \ (let i = 0; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var res = 0;\n  var\
    \ i;\n  for (i = 1; i < n; i++) {\n    res += i;\n  }\n  return res;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmps1aoz2i6.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmps1aoz2i6.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i < n; i++){\n    sum += i;\n  }\n  return sum;\n}\n</textarea></form>\n\
    \    <script>\n      var editor = CodeMirror.fromTextArea(document.getElementById(\"\
    code\"), {\n        lineNumbers: true,\n        matchBrackets: true,\n       \
    \ theme: \"neo\"\n      });\n    </script>\n    <p><strong>MIME types defined:</strong>\
    \ <code>text/x-neo</code>.</p>\n  </article>\n\n  <article>\n    <h2>The <code>styleNumbers</code>\
    \ option</h2>\n    <p>\n      By default, CodeMirror highlights <a href=\"#numbers\"\
    >numbers</a> when\n      they appear at the end of a line. This behavior can be\n\
    \      disabled by setting <code>styleNumbers: false</code>.\n    </p>\n    <form>\n\
    \      <textarea id=\"code2\" name=\"code2\">\nvar pi = 3.14159\nvar foo = 'bip'\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplm1rl0it.js:19\n</textarea></form>\n^\n\nSyntaxError: Unexpected\
    \ token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for\
    \ (let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar i = 1;\n\tvar total\
    \ = 0;\n\n\twhile(i < n){\n\t\ttotal += i;\n\t\ti++;\n\t}\n\n\treturn total;\n\
    }\n<|/ file ext=.js |><|endofmask|><|endofmask|>source=github filename=main.js\
    \ dstars=0 |><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp7pmz6hxh.js:23\n<|/ file ext=.js |><|endofmask|><|endofmask|>source=github\
    \ filename=main.js dstars=0 |><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|><|endofmask|>\n\
    ^\n\nSyntaxError: Unexpected token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for\
    \ (var i = 2; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpno5ft78i.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpno5ft78i.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ for (let i = 1; i<=n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(){\n\
    \    var result = 0;\n    for(var i = 1;i <= n;i++)\n      result += i;\n    return\
    \ result;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmprizg3dal.js:26:10)\n    at Object.<anonymous> (/tmp/tmprizg3dal.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = 0;\n\
    \    for(var i=1;i<=n;i++){\n        result += i;\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=performance,javascript,algorithm,jquery,arrays dscore=2\
    \ |>\n<| c |>\nThis looks great, but it's not working for me. I don't know why,\
    \ but it keeps saying 'sum_to_n is not defined'\n<|/ c |>\n<| c |>\nIt works as\
    \ intended for me (tested on Firefox, Chrome, Safari). I think there's another\
    \ error somewhere else in your code.\n<|/ c |>\n<| c |>\nThanks. It's working\
    \ now! I guess I just didn't put it in a function.\n<|/ c |>\n<| c |>\nYou do\
    \ realize that the OP asked for a jQuery solution?\n<|/ c |>\n<| c |>\nI didn't\
    \ notice that, sorry. Thanks for pointing that out.\n<|/ c |>\n<| a tags=performance,javascript,algorithm,jquery,arrays\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8a6fzsbf.js:19\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let s = 0\n  for (let\
    \ i = 1; i < n; i++){\n    s = s + i\n  }\n  return s\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpq6ml3707.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq6ml3707.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum=0;\n    while\
    \ (n > 0){\n        sum += sum_to_n(n-1);\n        n--;\n    }\n    return sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpi6bcxtbu.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi6bcxtbu.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(m){\n\
    \    return m + sum_to_n(n)(n - m);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp99h03g0p.js:23:10)\n    at Object.<anonymous> (/tmp/tmp99h03g0p.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let result = n;\n  for\
    \ (let i = 1; i <= n; i++){\n    result += i;\n  }\n  return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmpdw6ojikh.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdw6ojikh.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n < 2 ? 1 :\
    \ n*(n-1)/2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n15\n\nshould equal\n\n21\n    at test (/tmp/tmp02r8saq1.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp02r8saq1.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var a = 1\n  for (var\
    \ i = 0; i <= n; i++){\n    a *= i\n  }\n  return a\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmptpon05zy.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmptpon05zy.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return Array(n+1).join(0);\n\
    }\n},{}],91:[function(require,module,exports){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpyyt_xqfu.js:15\n},{}],91:[function(require,module,exports){\n^\n\
    \nSyntaxError: Unexpected token '}'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i=1;i<=n;i++){\n    sum += i;\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var nSum = 0, i = 1;\n\
    \  while (i <= n){\n    nSum += i;\n    i++;\n  }\n  return nSum;\n}\n</cell>\n\
    <text>\nLet's check that it works!\n\n\n</text>\n<cell>\nsum_to_n(3)\n</cell>\n\
    <text>\nLet's look at an example where it fails:\n\n\n</text>\n<cell>\nsum_to_n(9)\n\
    </cell>\n<text>\nThis works, but it's pretty slow. We could speed it up considerably\
    \ by memoizing the results of sum_to_n in the first place.\n\nTo do that, we have\
    \ to change sum_to_n slightly. First, we'll need to make it return a number instead\
    \ of an array.\n\n\n</text>\n<cell>\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcdhi1s5_.js:20\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function sum(n){\n\
    \    return n < 1 ? 0 : n + sum(n-1);\n  }(n);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(a){\n\
    \    var sum = 0;\n    for(var i = 0; i < n; i++){\n      sum += a;\n      a =\
    \ a + 1;\n    }\n    return sum;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp9ypqsv2p.js:28:10)\n    at Object.<anonymous> (/tmp/tmp9ypqsv2p.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n >= 2) {\n    return\
    \ sum_to_n(n - 1) + n;\n  } else {\n    return 1;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ var i;\n    for(i=1;i<=n;i++){\n        sum += i;\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tlet total = 0;\n\tfor(let\
    \ i = 1; i <= n; i++){\n\t\ttotal += i;\n\t}\n\treturn total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n > 1){\n    return\
    \ sum_to_n(n - 1) + 1;\n  }\n  return 1;\n}\n\nvar max_to_n = sum_to_n;\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n21\n    at test (/tmp/tmp5k_kbfjf.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5k_kbfjf.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function (n){\n\
    \    if(!n) return 0;\n    return reduceSumTo(\n      function sumTo(n){\n   \
    \     return n>0 ? n + sumTo(n-1) : n;\n      },\n      0,\n      n\n    );\n\
    \  };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpbkkumfkj.js:30:10)\n    at Object.<anonymous> (/tmp/tmpbkkumfkj.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1;i <= n;i++){\n        sum += i;\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(a, b)\
    \ {\n    return a + b + n * n;\n  };\n};\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpcmhfx8vl.js:23:10)\n    at Object.<anonymous> (/tmp/tmpcmhfx8vl.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(i){\n\
    \    return i<n ? i : (i%n === 0 ? i : sum_to_n(n-i)+i);\n  };\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpsxpyyagl.js:23:10)\n    at Object.<anonymous> (/tmp/tmpsxpyyagl.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 0; i < n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp4f2zcjzz.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4f2zcjzz.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var ret = 0;\n   \
    \ for(var i = 1;i <= n;i++){\n        ret = ret + i;\n    }\n    return ret;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if(n <= 0){\n    throw\
    \ new Error('n must be positive integer');\n  }\n  return factorial(n) / factorial(n-1);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplbf45an4.js:16\n  return factorial(n) / factorial(n-1);\n  ^\n\n\
    ReferenceError: factorial is not defined\n    at sum_to_n (/tmp/tmplbf45an4.js:16:3)\n\
    \    at test (/tmp/tmplbf45an4.js:23:20)\n    at Object.<anonymous> (/tmp/tmplbf45an4.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  var\
    \ i;\n  for (i=1;i<=n;i++){\n    sum += i;\n  }\n  return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 0) return 0;\n\
    \  if (n < 10) return 1;\n  if (n < 100) return 2;\n  if (n < 1000) return 3;\n\
    \  if (n < 10000) return 4;\n  if (n < 100000) return 5;\n  if (n < 1000000) return\
    \ 6;\n  if (n < 10000000) return 7;\n  if (n < 100000000) return 8;\n  if (n <\
    \ 1000000000) return 9;\n  if (n < 10000000000) return 10;\n  if (n < 100000000000)\
    \ return 11;\n  if (n < 1000000000000) return 12;\n  if (n < 10000000000000) return\
    \ 13;\n  if (n < 100000000000000) return 14;\n  if (n < 1000000000000000) return\
    \ 15;\n  if (n < 10000000000000000) return 16;\n  if (n < 100000000000000000)\
    \ return 17;\n  if (n < 1000000000000000000) return 18;\n  return 19;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n21\n    at test (/tmp/tmp_ifo8y18.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_ifo8y18.js:47:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for\
    \ (var i = 1; i <= n; i++){\n    result +=i;\n  }\n  return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let arr = [];\n  for(let\
    \ i = 1; i <= n; i++){\n    arr.push(i);\n  }\n  return arr.reduce((acc, val)\
    \ => acc + val, 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for(var\
    \ i = 0; i <= n; i++){\n    total += i;\n  }\n  return total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(a, b){\n\
    \    return a + b;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpv1tebk3f.js:23:10)\n    at Object.<anonymous> (/tmp/tmpv1tebk3f.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n > 0 ? new BigNumber(1).plus(sum_to_n(n-1))\
    \ : 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcmxx3dru.js:13\n  return n > 0 ? new BigNumber(1).plus(sum_to_n(n-1))\
    \ : 1;\n                     ^\n\nReferenceError: BigNumber is not defined\n \
    \   at sum_to_n (/tmp/tmpcmxx3dru.js:13:22)\n    at test (/tmp/tmpcmxx3dru.js:21:20)\n\
    \    at Object.<anonymous> (/tmp/tmpcmxx3dru.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar m = 0, i = 0, result\
    \ = 0;\n\twhile(i < n){\n\t\tresult += m++;\n\t\ti += n;\n\t}\n\treturn result;\n\
    }\n\nvar pw = Math.pow;\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpk9zgjhad.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk9zgjhad.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for\
    \ (var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\nvar sum_to_n\
    \ = sum_to_n;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n <= 0){\n    return\
    \ 0;\n  }\n  if (n > 100){\n    return sum_to_n(n%10);\n  }\n  return sum_to_n(n%10)\
    \ + n;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5f863zpx.js:13\n  if (n <= 0){\n  ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at sum_to_n (/tmp/tmp5f863zpx.js:13:3)\n    at sum_to_n\
    \ (/tmp/tmp5f863zpx.js:19:10)\n    at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n \
    \   at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n    at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n\
    \    at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n    at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n\
    \    at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n    at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n\
    \    at sum_to_n (/tmp/tmp5f863zpx.js:19:10)\n"
  exit_code: 1
  status: Exception
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var a = 1;\n    for(var\
    \ i = 2; i <= n; i++){\n        a = a*i;\n    }\n    return a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n720\n\nshould equal\n\n21\n    at test (/tmp/tmp68yxqxqm.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp68yxqxqm.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 720,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  // return n <= 0 ? 1\
    \ : n + sum_to_n(n - 1);\n  return n<=0 ? 1 : n + sum_to_n(n-1);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp94daoing.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp94daoing.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i=1;i<=n;i++){\n    sum += i;\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar s = 0,i;\n\tfor(i=1;i<=n;i++)\n\
    \t\ts += i;\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return (n * (n + 1))\
    \ / 2\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return function(a,\
    \ b){\n        if (b === 0) return a;\n        return a + sum_to_n(b - 1);\n \
    \   };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpdy253lzs.js:24:10)\n    at Object.<anonymous> (/tmp/tmpdy253lzs.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i=1;i<=n;i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var a = 1;\n  for(var\
    \ x = 1; x <= n; x++){\n    a += x;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmp5nu9h3ew.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5nu9h3ew.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  //Make sure n gets converted\
    \ to an integer\n  n = parseInt(n);\n  //Return summation of numbers 1 to n\n\
    \  return function(n){\n    n = parseInt(n);\n    return (n * (n + 1)) / 2;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmppnkmd8lc.js:27:10)\n    at Object.<anonymous> (/tmp/tmppnkmd8lc.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return _.reduce(_.range(1,n+1),function(sum,i){\n\
    \    return sum + i;\n  });\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_o0_zc5m.js:13\n  return _.reduce(_.range(1,n+1),function(sum,i){\n\
    \  ^\n\nReferenceError: _ is not defined\n    at sum_to_n (/tmp/tmp_o0_zc5m.js:13:3)\n\
    \    at test (/tmp/tmp_o0_zc5m.js:23:20)\n    at Object.<anonymous> (/tmp/tmp_o0_zc5m.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n < 1) return 0;\n\
    \  return n*(n-1) + sum_to_n(n-1);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpgrx0bzyh.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgrx0bzyh.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  // Create an array of\
    \ numbers from 1 to n\n  // Note that arrays are 0-indexed\n  var numbers = [];\n\
    \  for (var i = 1; i <= n; i++){\n    numbers.push(i);\n  }\n  // Sum all the\
    \ numbers up to n\n  return numbers.reduce(function(a, b){\n    return a + b;\n\
    \  });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return ((n==0||n==1)?\
    \ n : sum_to_n(n-1)+(n))\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    for(var i = 1; i <\
    \ n; i++){\n        n += i;\n    }\n    return n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i < n; i++)\n\t\tsum += i;\n\treturn sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpcdj5lq2s.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcdj5lq2s.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  // make sure that the\
    \ number is greater than 0\n  if(n < 1){\n    return 1;\n  }\n  var sum = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var retVal = 1, i, x;\n\
    \  for (i = 1; i <= n; ++i){\n    x = i;\n    if (x % 2){\n      retVal += x;\n\
    \    } else {\n      retVal -= x;\n    }\n  }\n  return retVal;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n2\n\nshould equal\n\n1\n    at test (/tmp/tmprokmk86k.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmprokmk86k.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var s = 1,\n      i\
    \ = 1;\n  for(;i<=n;i++){\n    s = s * i;\n  }\n  return s;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n720\n\nshould equal\n\n21\n    at test (/tmp/tmp1umnref0.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1umnref0.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 720,\n  expected: 21,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let s = 1;\n    for\
    \ (let i=1; i<=n; i++){\n        s += i;\n    }\n    return s;\n}\n</code>\nThe\
    \ algorithm for finding the sum from 1 to n using recursion is as follows:\n\n\
    if n is 1 return n\nif n is 0 return 0\nelse return n+(n-1)+(n-2)+...+(n-(n-1))\n\
    \nThe code for this algorithm is as follows:\n<code>\nlet sum_to_n = function(n)\
    \ {\n    if (n === 1) {\n        return n;\n    }\n    if (n === 0){\n       \
    \ return 0;\n    }\n    else {\n        return n + sum_to_n(n-1);\n    }\n}\n\
    </code>\nNotice that if the last line of the algorithm return n+(n-1)+(n-2)+...+(n-(n-1))\
    \ is replaced with a return (n*(n+(n-1)+(n-2)+...+(n-(n-1)))).\n<|/ a tags=javascript\
    \ |>\n<| c |>\nI think this is the most comprehensive answer.\n<|/ c |>\n<| a\
    \ dscore=5 |>\nThe recursive function will always have a base case. \n<code>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpa2cxzc_a.js:19\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i=1;i<=n;i++){\n        sum += i;\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return function(input){\n\
    \    var total = 0;\n    for (var i = 1; i <= n; i++) {\n      total += input;\n\
    \      input = total + input;\n    }\n    return total;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmpeywq4ikp.js:28:10)\n    at Object.<anonymous> (/tmp/tmpeywq4ikp.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return function(array){\n\
    \        var sum = array[0],\n            i = 1;\n        while(i < n){\n    \
    \        sum = sum + array[i];\n            i += 1;\n        }\n        return\
    \ sum;\n    };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[Function]\n\nshould equal\n\n1\n    at\
    \ test (/tmp/tmp5q666lau.js:29:10)\n    at Object.<anonymous> (/tmp/tmp5q666lau.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [Function (anonymous)],\n  expected: 1,\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i < n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\n\nvar p5_instance\
    \ = new p5( sketchSetup );\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpif8zs496.js:21\nvar p5_instance = new p5( sketchSetup );\n    \
    \              ^\n\nReferenceError: p5 is not defined\n    at Object.<anonymous>\
    \ (/tmp/tmpif8zs496.js:21:19)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError

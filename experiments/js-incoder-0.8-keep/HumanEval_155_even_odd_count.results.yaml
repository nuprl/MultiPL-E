name: HumanEval_155_even_odd_count
language: js
results:
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    // write code here\n    var even_count\
    \ = 0;\n    var odd_count = 0;\n    while(num>0){\n        var temp = num%10;\n\
    \        if(temp%2 == 0){\n            even_count++;\n        }else{\n       \
    \     odd_count++;\n        }\n        num = num/10;\n    }\n    return [even_count,odd_count];\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpvbqrsiem.js:25:10)\n    at Object.<anonymous> (/tmp/tmpvbqrsiem.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet even = num.toString().split(\"\
    \").filter((n) => n % 2 === 0);\n\tlet odd = num.toString().split(\"\").filter((n)\
    \ => n % 2 != 0);\n\treturn {\n\t\teven:even.length,\n\t\todd:odd.length\n\t}\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 1 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmp8i5915_l.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8i5915_l.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 1 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  return [parseInt(num.toString().split('-')[1].replace(/0/g,\
    \ '')), parseInt(num.toString().split('-')[0].replace(/0/g, ''))]\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6wxu_2o3.js:6\n  return [parseInt(num.toString().split('-')[1].replace(/0/g,\
    \ '')), parseInt(num.toString().split('-')[0].replace(/0/g, ''))]\n          \
    \                                     ^\n\nTypeError: Cannot read property 'replace'\
    \ of undefined\n    at even_odd_count (/tmp/tmp6wxu_2o3.js:6:48)\n    at test\
    \ (/tmp/tmp6wxu_2o3.js:14:20)\n    at Object.<anonymous> (/tmp/tmp6wxu_2o3.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0, odd = 0, i = 1,\
    \ count = 0, temp_sum = 0;\n    while(i < num){\n        temp_sum = num / i;\n\
    \        if(temp_sum % 2 === 0){\n            count++;\n            even++;\n\
    \        }else{\n            odd++;\n        }\n        i++;\n    }\n    return\
    \ ({even:even, odd:odd});\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 6 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpgkcatxoe.js:25:10)\n    at Object.<anonymous> (/tmp/tmpgkcatxoe.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 6 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0;\n  let odd = 0;\n\
    \  \n  while (num >= 0){\n    \n    //if the number is even, add 2 to even\n \
    \   if (num % 2 == 0){\n      even = even + 2;\n    } \n    \n    //if the number\
    \ is odd, add 1 to odd\n    else if (num % 2 == 1){\n      odd = odd + 1;\n  \
    \  }\n    \n    //else, break\n    else{\n      break;\n    }\n    \n    //decrement\
    \ the number by one\n    num = num - 1;\n  }\n  \n  //return tuple with number\
    \ of even and odd digits.\n  return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 8, 4 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp6qaqdfds.js:39:10)\n    at Object.<anonymous> (/tmp/tmp6qaqdfds.js:49:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 8, 4 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var digits=num.toString().split('');\n\
    \    var odd_digits=[];\n    var even_digits=[];\n    for(var i=0; i< digits.length;\
    \ i++){\n        if(digits[i]%2==0){\n            even_digits.push(digits[i]);\n\
    \        }else{\n            odd_digits.push(digits[i]);\n        }\n    }\n \
    \   return({even:even_digits, odd:odd_digits});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: [], odd: [ '7' ] }\n\nshould equal\n\
    \n[ 0, 1 ]\n    at test (/tmp/tmpg5j0h29h.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg5j0h29h.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: [],\
    \ odd: [ '7' ] },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    num = num.toString().split('');\n\
    \    var even = 0, odd = 0;\n    for(var i = 0; i <num.length; i++){\n       \
    \ if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n      \
    \      odd++;\n        }\n    }\n    return ([even, odd])\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpxzwmw47w.js:25:10)\n    at Object.<anonymous> (/tmp/tmpxzwmw47w.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n   if(num === 0){\n      return (0,0);\n\
    \   }\n   if(num < 0){\n      return (even_odd_count(-num)[0]+1,even_odd_count(-num)[1]+1);\n\
    \   }\n   let str = \"\";\n   while(num!=0){\n      str = (num % 10) + str;\n\
    \      num = Math.floor(num/10);\n   }\n   let even = 0;\n   let odd = 0;\n  \
    \ for(let i = str.length-1;i>=0;i--){\n      if(str[i] % 2 === 0){\n         even++;\n\
    \      }else{\n         odd++;\n      }\n   }\n   return (even,odd);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp6vbebnws.js:34:10)\n    at Object.<anonymous> (/tmp/tmp6vbebnws.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var count_even = 1;\n    var\
    \ count_odd = 0;\n    while(num>0){\n        var remainder = num%10;\n       \
    \ num = Math.floor( num/10);\n        if(remainder === 0){\n            count_even\
    \ += 1;\n        }\n        else{\n            count_odd += 1;\n        }\n  \
    \  }\n    return(count_even, count_odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpf4hv4xm5.js:26:10)\n    at Object.<anonymous> (/tmp/tmpf4hv4xm5.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let result=[];\n  while(num){\n\
    \    result.push(num%10);\n    num/=10;\n  }\n  let evenCount=0;\n  for(let i=0;i<result.length;i++){\n\
    \    if(result[i]%2==0){\n      evenCount++;\n    }\n  }\n  return [evenCount,result.length-evenCount-1];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 324 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpvv36ub79.js:25:10)\n    at Object.<anonymous> (/tmp/tmpvv36ub79.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 324 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet odd = 1;\n\tlet even = 1;\n\
    \tif(num !== 0){\n\t\tlet temp = num % 10;\n\t\twhile(temp != 0){\n\t\t\tif(temp\
    \ % 2 === 0){\n\t\t\t\teven++;\n\t\t\t} else {\n\t\t\t\todd++;\n\t\t\t}\n\t\t\t\
    temp = num % 10;\n\t\t\tnum = Math.floor(num / 10);\n\t\t}\n\t}\n\treturn [even,odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 3 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpi8yqu6b7.js:28:10)\n    at Object.<anonymous> (/tmp/tmpi8yqu6b7.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 3 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0;\n  let odd = 0;\n\
    \  let strNum = num.toString().split(\"\");\n  strNum.forEach(item => {\n    if\
    \ (parseInt(item) % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n  \
    \  }\n  });\n  return { even, odd };\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 1 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpglizbfom.js:24:10)\n    at Object.<anonymous> (/tmp/tmpglizbfom.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 1 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n   var sum = 0;\n   while(num > 0){\n\
    \      if(num % 2 ==0){\n         sum++\n      }else{\n         sum--\n      }\n\
    \      num = Math.floor(num / 10)\n   }\n   return [sum, sum]\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -1 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpaoh4tv64.js:23:10)\n    at Object.<anonymous> (/tmp/tmpaoh4tv64.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ -1, -1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let count = 0;\n  while(num > 0){\n\
    \    count += num%10 == 0 ? 1 : 0;\n    num = Math.floor(num/10)\n  }\n  return\
    \ count\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp3t_qn8hw.js:19:10)\n    at Object.<anonymous> (/tmp/tmp3t_qn8hw.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num == 0){\n    return (0, 1)\n\
    \  }\n  let count = 0\n  while(num > 0){\n    count += isEven(num)? 0: 1\n   \
    \ num = Math.floor(num / 10)\n  }\n  return count\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgxjc4mtp.js:11\n    count += isEven(num)? 0: 1\n    ^\n\nReferenceError:\
    \ isEven is not defined\n    at even_odd_count (/tmp/tmpgxjc4mtp.js:11:5)\n  \
    \  at test (/tmp/tmpgxjc4mtp.js:22:20)\n    at Object.<anonymous> (/tmp/tmpgxjc4mtp.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar num_digits = num.toString().length;\n\
    \tvar odd_count = 0;\n\tvar even_count = 0;\n\t\n\tfor(var i=0; i<num_digits;\
    \ i++){\n\t\t\n\t\tif(num%10 == 0){\n\t\t\teven_count += 1;\n\t\t}\n\t\telse{\n\
    \t\t\todd_count += 1;\n\t\t}\n\t\t\n\t\tnum = num/10;\n\t}\n\t\n\treturn (even_count,\
    \ odd_count);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp0pa4etoo.js:30:10)\n    at Object.<anonymous> (/tmp/tmp0pa4etoo.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    \n    const odd = num % 2;\n\
    \    const even = num - odd;\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 6, 1 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpowu9p98x.js:17:10)\n    at Object.<anonymous> (/tmp/tmpowu9p98x.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 6, 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    let num_str = String(num);\n    for (const digit of num_str){\n    \
    \    if (digit.toLowerCase() === 'e'){\n            even++;\n        }\n     \
    \   else{\n            odd++;\n        }\n    }\n    return [even,odd];\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 3 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpowtzpy3s.js:25:10)\n    at Object.<anonymous> (/tmp/tmpowtzpy3s.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    while(num > 0){\n        num = num % 10\n        if(num % 2 == 0){\n\
    \            even = even + 1\n        }else{\n            odd = odd + 1\n    \
    \    }\n    }\n    return [(even, odd)]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if((num===0)||(num===1)){\n   \
    \ return (\"even\", 1);\n  }\n  let result = [];\n  let sum = 0;\n  while (num>0){\n\
    \    result.push(sum);\n    sum = sum + Math.floor(num/10);\n    num = num - sum*10;\n\
    \  }\n  if(result.length === 1){\n    return (\"odd\", 1);\n  }\n  if(result.length===2){\n\
    \    return (\"even\", result[1]);\n  }\n  return (\"odd\", result[0]);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "\n<--- Last few GCs --->\n\n[77919:0x5c67b60]     1237 ms: Scavenge 766.9\
    \ (800.2) -> 766.9 (800.2) MB, 28.0 / 0.0 ms  (average mu = 1.000, current mu\
    \ = 1.000) allocation failure \n[77919:0x5c67b60]     1794 ms: Scavenge 1149.4\
    \ (1182.8) -> 1149.4 (1182.8) MB, 77.7 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n[77919:0x5c67b60]     2537 ms: Scavenge 1723.2\
    \ (1756.6) -> 1723.2 (1756.6) MB, 65.0 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n\n\n<--- JS stacktrace --->\n\nFATAL ERROR:\
    \ invalid array length Allocation failed - JavaScript heap out of memory\n 1:\
    \ 0xa04200 node::Abort() [node]\n 2: 0x94e4e9 node::FatalError(char const*, char\
    \ const*) [node]\n 3: 0xb797be v8::Utils::ReportOOMFailure(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 4: 0xb79b37 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 5: 0xd343c5  [node]\n 6: 0xd0cf05  [node]\n 7: 0xe9568e\
    \  [node]\n 8: 0xe957da  [node]\n 9: 0x1032b83 v8::internal::Runtime_GrowArrayElements(int,\
    \ unsigned long*, v8::internal::Isolate*) [node]\n10: 0x14011f9  [node]\n"
  exit_code: -6
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0;\n  let odd = 0;\n\
    \  let i = 0;\n  while(num > 0){\n    i++;\n    num = num / 10;\n  }\n  while(i\
    \ < num){\n    even++;\n    num = num / 10;\n  }\n  while(i > 0){\n    i--;\n\
    \    num = num / 10;\n  }\n  return (odd, even);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpwgmy1t44.js:29:10)\n    at Object.<anonymous> (/tmp/tmpwgmy1t44.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  //initialize variables\n  var even\
    \ = 0, odd = 0, i=0;\n  while(i<num){\n    //if i is even, increment even.\n \
    \   if(num%2 === 0){\n      even++;\n    }\n    //if i is odd, increment odd.\n\
    \    else{\n      odd++;\n    }\n    i++;\n  }\n  return [even, odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 7 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpsaut8fxj.js:27:10)\n    at Object.<anonymous> (/tmp/tmpsaut8fxj.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let count = 0;\n    num = Math.abs(num);\n\
    \    while (num > 0){\n        num = num / 10;\n        count++;\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n325\n\nshould equal\n\n[ 0, 1 ]\n    at\
    \ test (/tmp/tmp3__ghb_v.js:20:10)\n    at Object.<anonymous> (/tmp/tmp3__ghb_v.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 325,\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  // Your code here\n  if(num < 0)\
    \ return (odd_count(-num), even_count(num));\n  let strNum = (\"\" + num);\n \
    \ let evens = 0;\n  let odds = 0;\n  for(let i = 0; i < strNum.length; i++){\n\
    \    if (strNum[i] % 2 == 0){\n      evens += 1;\n    }\n    else {\n      odds\
    \ += 1;\n    }\n  }\n  return ([evens, odds]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1p2d7amp.js:7\n  if(num < 0) return (odd_count(-num), even_count(num));\n\
    \              ^\n\nReferenceError: odd_count is not defined\n    at even_odd_count\
    \ (/tmp/tmp1p2d7amp.js:7:15)\n    at test (/tmp/tmp1p2d7amp.js:28:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp1p2d7amp.js:37:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  return ({even:num%2 === 0,odd:num%2\
    \ === 1});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: false, odd: true }\n\nshould equal\n\
    \n[ 0, 1 ]\n    at test (/tmp/tmp521otpjw.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp521otpjw.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: false,\
    \ odd: true },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\treturn (num%2==0)?([num/2,num/2]):([1,1]);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 1 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmptrkm0rd_.js:14:10)\n    at Object.<anonymous> (/tmp/tmptrkm0rd_.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0, odd = 0, remainder;\n\
    \    if(num<0){\n        remainder = num%10;\n        num = -num;\n    }\n   \
    \ while(num > 0){\n        remainder = num%10;\n        num = (num-remainder)/10;\n\
    \        if(remainder%2 == 0){\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return ([even,odd]);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 0 ]\n \
    \   at test (/tmp/tmp06btadg7.js:35:10)\n    at Object.<anonymous> (/tmp/tmp06btadg7.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 0 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even_count = 0\n  let odd_count\
    \ = 0\n  for (let i = 0; i <= Math.abs(num); i++){\n    if (num % 2 === 0 && num\
    \ % 10 === 0){\n      even_count++\n    }\n    \n    if (num % 2 !== 0 && num\
    \ % 10 === 0){\n      odd_count++\n    }\n  }\n  return [even_count, odd_count]\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp3ob_91np.js:25:10)\n    at Object.<anonymous> (/tmp/tmp3ob_91np.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var count = 0;\n    while( num\
    \ != 0){\n        num = Math.floor(num/10);\n        count++;\n    }\n    return\
    \ (count, count%2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpr4aj6keb.js:19:10)\n    at Object.<anonymous> (/tmp/tmpr4aj6keb.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let numStr = num.toString();\n\
    \  let evenCount = 0;\n  let oddCount = 0;\n  numStr.split('').forEach(item =>\
    \ {\n    if(item.trim().match(/^(-?\\d+)$/)) {\n      if(parseInt(item) % 2 ==\
    \ 0){\n        evenCount++;\n      }else{\n        oddCount++;\n      }\n    }\n\
    \  })\n  return [evenCount,oddCount];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var totalEven = 0; var totalOdd\
    \ = 0;\n  for(var i = 0; i < num.length; i++){\n    if(num[i] % 2 === 0){\n  \
    \    totalEven++;\n    }else{\n      totalOdd++;\n    }\n  }\n  return [totalEven,totalOdd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpo00n686t.js:22:10)\n    at Object.<anonymous> (/tmp/tmpo00n686t.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet count=0\n\twhile(num>0){\n\t\
    \tlet digit=num%10\n\t\tnum/=10\n\t\tif(digit%2==0){\n\t\t\tcount++\n\t\t}\n\t\
    }\n\treturn (count,count+1)\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpalox4ijq.js:22:10)\n    at Object.<anonymous> (/tmp/tmpalox4ijq.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even=0;\n    var odd=0;\n\
    \    if(num<0){\n        num=Math.abs(num);\n        even=-1;\n        odd=-num%2;\n\
    \    }else if(num==0){\n        even=0;\n        odd=0;\n    }else{\n        var\
    \ i=2;\n        while(i<=num){\n            if(num%i==0){\n                even+=2;\n\
    \            }else{\n                odd+=1;\n            }\n            i++;\n\
    \        }\n    }\n    return([even, odd]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 2, 5 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpel1_ts93.js:34:10)\n    at Object.<anonymous> (/tmp/tmpel1_ts93.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 2, 5 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar even_odd = [];\n\tvar count\
    \ = 0;\n\tvar remainder = 0;\n\twhile(num){\n\t\tremainder = num % 10;\n\t\tif(remainder\
    \ == 0){\n\t\t\teven_odd.push(remainder);\n\t\t\tcount++;\n\t\t}else{\n\t\t\t\
    even_odd.push(remainder);\n\t\t\teven_odd.push(0);\n\t\t}\n\t\tnum = Math.floor(num/10);\n\
    \t}\n\treturn [count,even_odd.length];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 2 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp2ml0cjdc.js:27:10)\n    at Object.<anonymous> (/tmp/tmp2ml0cjdc.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 2 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let count = 0;\n  for(let i = 0;\
    \ i <= num; i += 2){\n    if(num % 2 === 0) count++;\n    else count--;\n  }\n\
    \  return [count, num % 2];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -4, 1 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpz4gxbagb.js:19:10)\n    at Object.<anonymous> (/tmp/tmpz4gxbagb.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ -4, 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let sum = 0;\n    let flag =\
    \ 0;\n    while(num > 0){\n        sum = sum + Math.floor(num / 10);\n       \
    \ num = num % 10;\n    }\n    if(sum % 2 !== 0){\n        flag = 1;\n    }\n \
    \   return (flag, sum);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar even = 0, odd = 0;\n\tnum.toString().split(\"\
    \").forEach(function(digit, index){\n\t\tif((parseInt(digit) % 2 == 0) || (parseInt(digit)\
    \ % 2 == 1)){\n\t\t\tif(parseInt(digit) == 0){\n\t\t\t\teven++\n\t\t\t}else{\n\
    \t\t\t\todd++\n\t\t\t}\n\t\t}\n\t})\n\treturn({\n\t\teven: even,\n\t\todd: odd\n\
    \t})\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 1 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmp3t4htgi8.js:26:10)\n    at Object.<anonymous> (/tmp/tmp3t4htgi8.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 1 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var res = {even:0, odd:0}\n  while(num\
    \ > 0){\n    res.even = res.even * 10 + num % 10;\n    res.odd = res.odd * 10\
    \ + num % 10;\n    num = Math.floor(num / 10);\n  }\n  return res;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 7, odd: 7 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpvlr1a6k9.js:20:10)\n    at Object.<anonymous> (/tmp/tmpvlr1a6k9.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 7, odd: 7 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\t\n\treturn [even_digits(num), odd_digits(num)];\n\
    \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfs3_bnp1.js:7\n\treturn [even_digits(num), odd_digits(num)];\n\t\
    ^\n\nReferenceError: even_digits is not defined\n    at even_odd_count (/tmp/tmpfs3_bnp1.js:7:2)\n\
    \    at test (/tmp/tmpfs3_bnp1.js:16:20)\n    at Object.<anonymous> (/tmp/tmpfs3_bnp1.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    if (num < 0){\n        throw('Only\
    \ positive numbers are allowed.');\n    }\n\n    let evenCount = 0;\n    let oddCount\
    \ = 0;\n\n    while (num > 0){\n        if (num % 2 === 0){\n            evenCount\
    \ += 1;\n        }\n        else {\n            oddCount += 1;\n        }\n\n\
    \        num = Math.floor(num / 10);\n    }\n\n    return { evenCount, oddCount\
    \ };\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ evenCount: 0, oddCount: 1 }\n\nshould\
    \ equal\n\n[ 0, 1 ]\n    at test (/tmp/tmplo2xf7vl.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplo2xf7vl.js:42:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { evenCount:\
    \ 0, oddCount: 1 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    // Only even and odd numbers\
    \ can be considered 'even' and odd\n    if(num%2===0) return (0,1)[num%2===0];\n\
    \    return (1,0)[num%2!==0];\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpvnxp7l2g.js:15:10)\n    at Object.<anonymous> (/tmp/tmpvnxp7l2g.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even=0;\n    let odd=0;\n\
    \    if(num<0){\n        num=(-num);\n    }\n    let num=Number(num);\n    let\
    \ digits=String(num).split(\"\");\n    for (let i of digits){\n        if(i%2==0){\n\
    \            even++;\n        }else{\n            odd++;\n        }\n    }\n \
    \   return (even,odd);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9wyvtxi_.js:11\n    let num=Number(num);\n        ^\n\nSyntaxError:\
    \ Identifier 'num' has already been declared\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even=0\n  let odd=0\n  while\
    \ (num>0){\n    let rem = num%10\n    if (rem%2 === 0){\n      even++\n    } else\
    \ {\n      odd++\n    }\n    num = Math.floor(num/10)\n  }\n  return [even, odd]\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmptyy97rzu.js:27:10)\n    at Object.<anonymous> (/tmp/tmptyy97rzu.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let count = 0;\n    while(num\
    \ > 0){\n        let x = num % 10;\n        num = num / 10;\n        if(x % 2\
    \ == 0){\n            count = count + 1;\n        }\n        if(x % 2 == 1){\n\
    \            count = count + 1;\n        }\n    }\n    return(count);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpxaipk125.js:25:10)\n    at Object.<anonymous> (/tmp/tmpxaipk125.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num < 0) return (-num, -num)\n\
    \  var even = 0;\n  var odd = 0;\n  for(var i = num.toString().length - 1; i >=\
    \ 0; i --){\n    var cd = num.toString().charAt(i);\n    if(parseInt(cd) === 0)\
    \ continue;\n    if(cd === \"-\") continue;\n    if(cd === \"+\") continue;\n\
    \    if(cd === \"0\") continue;\n    if(cd === \"1\") even++;\n    else odd++;\n\
    \  }\n  return (even, odd);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp6dvqdzbr.js:26:10)\n    at Object.<anonymous> (/tmp/tmp6dvqdzbr.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even_count=0\n  let odd_count=0\n\
    \  for(let i=0;i<num.toString().length;i++){\n    let num_digit=num.toString().charAt(i);\n\
    \    if(num_digit=='0'){\n      even_count++;\n    }\n    else if(num_digit=='1'){\n\
    \      odd_count++;\n    }\n  }\n  return ({even_count:even_count, odd_count:odd_count});\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even_count: 0, odd_count: 0 }\n\nshould\
    \ equal\n\n[ 0, 1 ]\n    at test (/tmp/tmpcay59yim.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcay59yim.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even_count:\
    \ 0, odd_count: 0 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 1;\n    while(num > 0){\n        num = num/10;\n        if(num%2 === 0){\n \
    \           even++;\n        }\n        else{\n            odd++;\n        }\n\
    \    }\n    return ([even, odd]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpt7l6i307.js:25:10)\n    at Object.<anonymous> (/tmp/tmpt7l6i307.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num < 0){\n    throw Error('Cannot\
    \ determine even or odd count for negative number.');\n  }\n  if(num === 0){\n\
    \    return (0, 0);\n  }\n  let odd = 0;\n  let even = 0;\n  for(let i = 0; i\
    \ < num.length; i++){\n    const current_digit = num % 10;\n    num = Math.floor(num\
    \ / 10);\n    if(current_digit % 2 === 0){\n      even += 1;\n    }\n    else\
    \ {\n      odd += 1;\n    }\n  }\n  return (even, odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpo75ynrzs.js:32:10)\n    at Object.<anonymous> (/tmp/tmpo75ynrzs.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    num = num.toString();\n    let\
    \ even = 0;\n    let odd = 0;\n    for(let i = 0;i<num.length;i++){\n        num\
    \ = num.substr(0,i+1)\n        if(num.length%2 === 0){\n            even++;\n\
    \        }\n        else{\n            odd++;\n        }\n    }\n    return([even,odd])\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 1 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpnv964lt4.js:27:10)\n    at Object.<anonymous> (/tmp/tmpnv964lt4.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 1 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if (num < 0){\n    throw new Error(\"\
    Please input a number\");\n  }\n  num = num.toString();\n  let countEven = 0;\n\
    \  let countOdd = 0;\n  for (let i = num.length - 1; i >= 0; i--) {\n    countEven\
    \ = countEven + num[i].toString().length - 1;\n    if (num[i].toString().length\
    \ >= 2) {\n      countOdd = countOdd + 1;\n    }\n  }\n  return [countEven, countOdd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp9x86e_ql.js:26:10)\n    at Object.<anonymous> (/tmp/tmp9x86e_ql.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0,\n    odd = 0;\n \
    \ \n  for(let i=0;i<=num;i++){\n    if(i%2==0){\n      even++;\n    }else{\n \
    \     odd++;\n    }\n  }\n\n  return ([even,odd]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 4, 4 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmphcmmxgq1.js:25:10)\n    at Object.<anonymous> (/tmp/tmphcmmxgq1.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 4, 4 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let num_arr = [];\n  for(let i=0;\
    \ i<num.length;i++){\n    if(num%i===0 && num/i<0){\n      num_arr.push(i);\n\
    \    }\n  }\n  num_arr.sort((a,b)=>{\n    if(a%2==1){\n      return 1;\n    }\n\
    \    if(b%2==1){\n      return -1;\n    }\n    return 0;\n  });\n  let even =\
    \ 0;\n  let odd = 0;\n  num_arr.forEach((val)=>{\n    if(val%2===0){\n      even++;\n\
    \    }\n    else{\n      odd++;\n    }\n  });\n  if(num_arr.length==0){\n    return\
    \ (0,0)\n  }\n  if(even>odd){\n    return (even,even);\n  }\n  else{\n    return\
    \ (odd,odd)\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpceolbst0.js:47:10)\n    at Object.<anonymous> (/tmp/tmpceolbst0.js:57:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num == 0) return (0, 0);\n \
    \ if(num < 0) return (0, 0);\n  let sum = 0;\n  while(num > 0){\n    sum += ((num\
    \ % 10) !== 0) ? 1 : 0;\n    num /= 10;\n  }\n  return ((sum % 2) === 0) ? (sum\
    \ / 2, (sum + 1) / 2) : (sum, sum + 1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n326\n\nshould equal\n\n[ 0, 1 ]\n    at\
    \ test (/tmp/tmpwas73w3h.js:21:10)\n    at Object.<anonymous> (/tmp/tmpwas73w3h.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let odd = num%10;\n  let even =\
    \ num/10 - odd;\n  return ([even,odd]);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -6.3, 7 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpe56jjf0p.js:15:10)\n    at Object.<anonymous> (/tmp/tmpe56jjf0p.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ -6.3, 7 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar even = num % 2 ? 1 : 0;\n\t\
    var odd = num % 2 ? 0 : 1 ;\n\tvar result = num / 2;\n\tif(num < 0){\n\t\teven\
    \ = odd = -even;\n\t\tresult = -result;\n\t}\n\treturn [result, even, odd];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 3.5, 1, 0 ]\n\nshould equal\n\n[ 0, 1\
    \ ]\n    at test (/tmp/tmpk39t5wbt.js:21:10)\n    at Object.<anonymous> (/tmp/tmpk39t5wbt.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 3.5, 1, 0 ],\n  expected: [ 0, 1 ],\n \
    \ operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    if(num === 0){\n        return\
    \ (1,0);\n    }\n    const firstDigit = Math.trunc(num / 10);\n    const secondDigit\
    \ = num % 10;\n    return (even_odd_count(firstDigit) +1, secondDigit);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp6jx08lo4.js:19:10)\n    at Object.<anonymous> (/tmp/tmp6jx08lo4.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    \n    if (num == 0){\n      \
    \  return (0, 0)\n    }\n    \n    let even_count = 0\n    let odd_count = 0\n\
    \    let n = Math.abs(num)\n    \n    while (n > 0){\n        \n        if (n\
    \ % 2 == 0){\n            even_count += 1\n        }\n        \n        n /= 10\n\
    \    }\n    \n    n = Math.abs(num)\n    \n    while (n > 0){\n        \n    \
    \    if (n % 2 == 1){\n            odd_count += 1\n        }\n        \n     \
    \   n /= 10\n    }\n    \n    return (even_count, odd_count)\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpbzuyp3bn.js:42:10)\n    at Object.<anonymous> (/tmp/tmpbzuyp3bn.js:52:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 1;\n    let odd =\
    \ 1;\n    while (num>0){\n        num = num % 10;\n        if (num%2==0){\n  \
    \          even++;\n        } else {\n            odd++;\n        }\n    }\n \
    \   return([even,odd]);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    num = Math.abs(num);\n    let\
    \ evenCount = 0;\n    let oddCount = 0;\n    if(num<0){\n        num = -num;\n\
    \        evenCount = 1;\n        oddCount = 1;\n    }\n    while(num>0){\n   \
    \     if(num%2 == 0){\n            evenCount++;\n        }else{\n            oddCount++;\n\
    \        }\n        num = Math.floor(num / 10);\n    }\n    console.log(`${evenCount}\
    \ ${oddCount}`);\n    return [evenCount, oddCount];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: "0 1\n1 1\n2 2\n3 3\n3 3\n1 0\n2 3\n0 0\n"
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 0 ]\n \
    \   at test (/tmp/tmp0z_wi35m.js:38:10)\n    at Object.<anonymous> (/tmp/tmp0z_wi35m.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 0 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var total = 0;\n  var digits =\
    \ String(num).split('');\n  for (var i = 0; i < digits.length; i++){\n    var\
    \ digit = digits[i];\n    digit = parseInt(digit);\n    total += (digit % 2 ===\
    \ 0) ? 0 : 1;\n  }\n  return [total, digits.length - total];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpd3ajc66_.js:21:10)\n    at Object.<anonymous> (/tmp/tmpd3ajc66_.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  return even_odd_count_helper(num,\
    \ 0, 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0pi1ik5h.js:6\n  return even_odd_count_helper(num, 0, 1);\n  ^\n\
    \nReferenceError: even_odd_count_helper is not defined\n    at even_odd_count\
    \ (/tmp/tmp0pi1ik5h.js:6:3)\n    at test (/tmp/tmp0pi1ik5h.js:14:20)\n    at Object.<anonymous>\
    \ (/tmp/tmp0pi1ik5h.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even_counter = 0;\n    let\
    \ odd_counter = 0;\n\n    while(num > 0){\n        if (num % 2 === 0) {\n    \
    \        even_counter++;\n        }\n        num = Math.floor(num / 2);\n    }\n\
    \    \n    return even_counter, odd_counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp4x5mrvp4.js:24:10)\n    at Object.<anonymous> (/tmp/tmp4x5mrvp4.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var even=0;\n  var odd=0;\n  while(num>0){\n\
    \    if(num%2==0){\n      even++;\n    }else{\n      odd++;\n    }\n    num=Math.floor(num/10);\n\
    \  }\n  return [even,odd];\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThe `%` operator\
    \ is also not available in Javascript.\n<|/ c |>\n<| c |>\nI forgot that it's\
    \ valid in php, I've added it to the answer\n<|/ c |>\n<| a tags=javascript,function\
    \ dscore=1 |>\nAs mentioned by others, it can be implemented as below:\n<code>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpztvplxp6.js:18\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even_count = 0;\n  let odd_count\
    \ = 0;\n  let temp = num;\n  let last_digit = 0;\n  while(temp !== 0){\n    last_digit\
    \ = temp % 10;\n    temp = Math.floor(temp / 10);\n    if(last_digit % 2 === 0){\n\
    \      even_count++;\n    }else{\n      odd_count++;\n    }\n  }\n  return [even_count,\
    \ odd_count];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var count = 0;\n    while( num\
    \ >= 0 ){\n        count++;\n        num /= 10;\n    }\n    return ({\n      \
    \  \"even\" : count,\n        \"odd\" : Math.ceil(count / 2)\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  return even_odd_count_helper(num,\
    \ 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2vt0kx11.js:6\n  return even_odd_count_helper(num, 0);\n  ^\n\n\
    ReferenceError: even_odd_count_helper is not defined\n    at even_odd_count (/tmp/tmp2vt0kx11.js:6:3)\n\
    \    at test (/tmp/tmp2vt0kx11.js:14:20)\n    at Object.<anonymous> (/tmp/tmp2vt0kx11.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar count = 0, oddCount = 0;\n\t\
    for(var x = 1; x <= num; x++){\n\t\tif(num % x == 0){\n\t\t\tcount++;\n\t\t}\n\
    \t\telse if(num % x == 1){\n\t\t\toddCount++;\n\t\t}\n\t}\n\treturn [count,oddCount];\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 2, 3 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpu2dsl3gj.js:22:10)\n    at Object.<anonymous> (/tmp/tmpu2dsl3gj.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 2, 3 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let result = num.toString().split('');\n\
    \  let evens = result.filter(x => x % 2 === 0);\n  let odds = result.filter(x\
    \ => x % 2 !== 0);\n  return [evens.length, odds.length];\n}\n</code>\n<|/ a dscore=0\
    \ tags=javascript |>\n<| a tags=javascript |>\nThis answer is quite late, but\
    \ thought I would share anyway as I find this question one of the top Google search\
    \ results for \"get even or odd digits in javascript\" so thought this might help\
    \ future searchers. A more efficient version would be:\n<code>\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq7fz9wst.js:11\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0;\n  let odd = 0;\n\
    \  while (num > 0) {\n    let rem = num % 10;\n    if(rem == 0){\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpe_ydnsbh.js:26:10)\n    at Object.<anonymous> (/tmp/tmpe_ydnsbh.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let n = Math.abs(num);\n    let\
    \ even = 0;\n    let odd = 0;\n    while(n>0){\n        n = Math.floor(n/10)\n\
    \        if(n%2===0){\n            even++;\n        }\n        else{\n       \
    \     odd++;\n        }\n    }\n    return([even,odd])\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpk98ph94w.js:26:10)\n    at Object.<anonymous> (/tmp/tmpk98ph94w.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    num = Math.abs(num);\n    var\
    \ odd = 0, even = 0;\n    while(num!=0){\n       if (num%2 == 0){\n         even++;\n\
    \       }\n       else{\n         odd++;\n       }\n       num /= 10;\n    }\n\
    \    return ([even,odd]);\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmp_9rm4zqm.js:24:10)\n    at Object.<anonymous> (/tmp/tmp_9rm4zqm.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  while(num >= 0){\n    if(num % 2 === 0){\n      evenCount ++;\n    }\
    \ else {\n      oddCount ++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return\
    \ (evenCount, oddCount);\n}\n</cell>\n<cell>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwuzaok7v.js:18\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tnum = Math.abs(num);\n\tlet evenCount\
    \ = 0;\n\tlet oddCount = 0;\n\twhile(num>0){\n\t\tlet remainder = num % 10;\n\t\
    \tif(remainder == 0)\n\t\t\tevenCount++;\n\t\telse\n\t\t\toddCount++;\n\t\tnum\
    \ = Math.floor(num/10);\n\t}\n\treturn [evenCount, oddCount];\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 2 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpuwjeukzz.js:27:10)\n    at Object.<anonymous> (/tmp/tmpuwjeukzz.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 2 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  const even = num.toString().match(/(^\\\
    d*)$/)[1];\n  const odd = num.toString().match(/(^\\d*)$/)[0];\n  return { even:\
    \ parseInt(even, 10), odd: parseInt(odd, 10) }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 7, odd: 7 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpdx_grwso.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdx_grwso.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 7, odd: 7 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var result = [];\n  var numStr\
    \ = String(num);\n  for(var i=0; i <= numStr.length; i++){\n    result.push( numStr.charAt(i).match(/[13579]/g)\
    \ ? (+i+1) : (i+1) );\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpub5vk0mr.js:19:10)\n    at Object.<anonymous> (/tmp/tmpub5vk0mr.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var count = 0;\n  while (num >\
    \ 0) {\n    count++;\n    num = num / 10;\n  }\n  return [count, count % 2 ===\
    \ 0 ? 'even' : 'odd'];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 325, 'odd' ]\n\nshould equal\n\n[ 0, 1\
    \ ]\n    at test (/tmp/tmpqnhw8lum.js:19:10)\n    at Object.<anonymous> (/tmp/tmpqnhw8lum.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 325, 'odd' ],\n  expected: [ 0, 1 ],\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    for(var i = num;i>0;i--){\n        if(i % 2 == 0){\n            even++;\n\
    \        }\n        if(i % 2 == 1){\n            odd++;\n        }\n    }\n  \
    \  return [even,odd];\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 3, 4 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp2v9jv0z0.js:23:10)\n    at Object.<anonymous> (/tmp/tmp2v9jv0z0.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    \n    var even_counter=0;\n \
    \   var odd_counter=0;\n    var count=0;\n    \n    while (num > 0){\n       \
    \ if (num % 2 === 0){\n            count++;\n        }\n        else {\n     \
    \       count--;\n        }\n        num = Math.floor(num / 10);\n    }\n    \n\
    \    return [even_counter, odd_counter, count];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0, -1 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmphs6w7zoi.js:29:10)\n    at Object.<anonymous> (/tmp/tmphs6w7zoi.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, -1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0,\n      odd = 1\n\n\
    \  while (num >= 0){\n    if (num % 2 === 0){\n      even++\n    } else {\n  \
    \    odd++\n    }\n    num /= 10\n  }\n  return [even, odd]\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let count = 0;\n  let odd = 1;\n\
    \  let even = 1;\n  while(num > 0){\n    if (num % 2 === 0){\n      even++;\n\
    \    } else {\n      odd++;\n    }\n    num--;\n  }\n  return (even, odd);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n5\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmprmqalsxq.js:25:10)\n    at Object.<anonymous> (/tmp/tmprmqalsxq.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0, odd = 0, n = num.toString();\n\
    \    while (n){\n        if (n % 2 === 0) even++; else odd++;\n        n = n.toString().slice(1);\n\
    \    }\n    return([even, odd]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 3, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpi3z45zw4.js:20:10)\n    at Object.<anonymous> (/tmp/tmpi3z45zw4.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 3, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let [numString, evenDigits, oddDigits]\
    \ = num.toString().split('');\n  let evenCount = evenDigits.length;\n  let oddCount\
    \ = oddDigits.length;\n  return [evenCount, oddCount]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpji1lt44i.js:7\n  let evenCount = evenDigits.length;\n         \
    \                    ^\n\nTypeError: Cannot read property 'length' of undefined\n\
    \    at even_odd_count (/tmp/tmpji1lt44i.js:7:30)\n    at test (/tmp/tmpji1lt44i.js:17:20)\n\
    \    at Object.<anonymous> (/tmp/tmpji1lt44i.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var str=String(num);\n  var even=[];\n\
    \  var odd=[];\n  for(i=str.length-1;i>=0;i--){\n    if(str.charAt(i)=='-') break;\n\
    \    if(str.charAt(i)=='0') even.push(str.charAt(i));\n    if(str.charAt(i)!='0')\
    \ odd.push(str.charAt(i));\n  }\n  return({even:even,odd:odd});\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: [], odd: [ '7' ] }\n\nshould equal\n\
    \n[ 0, 1 ]\n    at test (/tmp/tmpd76t3_pc.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd76t3_pc.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: [],\
    \ odd: [ '7' ] },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 1;\n  let odd = 0;\n\
    \  while(num > 0){\n      if(num % 2 === 0){\n          even++;\n      }\n   \
    \   num -= num % 2;\n      num--;\n  }\n  return [even, odd];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpecw8mo7b.js:23:10)\n    at Object.<anonymous> (/tmp/tmpecw8mo7b.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num<0){\n    return (0, 0);\n\
    \  }\n  \n  let even_count = 0;\n  let odd_count = 0;\n  let temp = num;\n  while\
    \ (temp > 0){\n    if(temp%2 == 0){\n      even_count++;\n    }\n    else{\n \
    \     odd_count++;\n    }\n    temp--;\n  }\n  return ({\n    even_count: even_count,\n\
    \    odd_count: odd_count\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even_count: 3, odd_count: 4 }\n\nshould\
    \ equal\n\n[ 0, 1 ]\n    at test (/tmp/tmp20oe0bh3.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp20oe0bh3.js:43:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even_count:\
    \ 3, odd_count: 4 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar even_count = 0;\n\tvar odd_count\
    \ = 0;\n\t\n\twhile(num > 0){\n\t\tif(num % 2 == 0){\n\t\t\teven_count++;\n\t\t\
    } else {\n\t\t\todd_count++;\n\t\t}\n\t\t\n\t\tnum /= 10;\n\t}\n\t\n\treturn([even_count,\
    \ odd_count]);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpb_cal0fd.js:27:10)\n    at Object.<anonymous> (/tmp/tmpb_cal0fd.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let digits = num.toString().split('');\n\
    \  let evenCount = 0;\n  let oddCount = 0;\n  for (let i = 0; i < digits.length;\
    \ i++){\n    if (digits[i] % 2 === 0) evenCount++;\n    if (digits[i] % 2 !==\
    \ 0) oddCount++;\n  }\n  return [evenCount, oddCount];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmp06zoyx8d.js:21:10)\n    at Object.<anonymous> (/tmp/tmp06zoyx8d.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var res = [0,0];\n  var i=0;\n\
    \  while(num!==0){\n    res[i%2?0:1].push(num%10);\n    num = Math.floor(num/10);\n\
    \    i++;\n  }\n  return res\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1sv99i7k.js:9\n    res[i%2?0:1].push(num%10);\n               \
    \  ^\n\nTypeError: res[(intermediate value)(intermediate value)(intermediate value)].push\
    \ is not a function\n    at even_odd_count (/tmp/tmp1sv99i7k.js:9:18)\n    at\
    \ test (/tmp/tmp1sv99i7k.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1sv99i7k.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num<0) return 0;\n  let even=0;\
    \ let odd=0; \n  while (num!==0) {\n     if (num%2==0) even++;\n     else odd++;\n\
    \     num=Math.floor(num/10);\n  }\n  return ([even, odd]);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 1, 1 ]\n    at test\
    \ (/tmp/tmp5luua8me.js:22:10)\n    at Object.<anonymous> (/tmp/tmp5luua8me.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar even = num/2;\n\tvar odd =\
    \ num%2;\n\treturn [even,odd];\n}\n<|/ file source=github dstars=0 ext=.js |>\n\
    var countEven = even_odd_count;\nvar countOdd = even_odd_count;\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdvmzzu61.js:10\n<|/ file source=github dstars=0 ext=.js |>\n^\n\
    \nSyntaxError: Unexpected token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let n = 0\n    while(num > 0){\n\
    \        if(num % 2 == 0){\n            n++\n        }\n        num /= 2\n   \
    \ }\n    return([n, n-1])\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, -1 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpzb4d63eb.js:21:10)\n    at Object.<anonymous> (/tmp/tmpzb4d63eb.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, -1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let [even, odd] = num.toString(10).split('')\n\
    \  even = parseInt(even)\n  odd = parseInt(odd)\n  return [even, odd]\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 7, NaN ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpg4ubakea.js:17:10)\n    at Object.<anonymous> (/tmp/tmpg4ubakea.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 7, NaN ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var res = {\n        evens: 0,\n\
    \        odds: 0\n    }\n    var digit = num % 10;\n    if (digit === 0) return\
    \ res;\n    var res = even_odd_count(num/10);\n    if (res.odds !== 0 && digit\
    \ % 2 === 1) {\n        res.odds++;\n    } else if (res.evens !== 0 && digit %\
    \ 2 === 0) {\n        res.evens++;\n    }\n    return res;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ evens: 0, odds: 0 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpjh1ymosh.js:26:10)\n    at Object.<anonymous> (/tmp/tmpjh1ymosh.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { evens: 0, odds: 0 },\n  expected: [ 0,\
    \ 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let odd = num % 2;\n  let even\
    \ = num / 2;\n\n  return { even, odd };\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 3.5, odd: 1 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpd1jzap1w.js:17:10)\n    at Object.<anonymous> (/tmp/tmpd1jzap1w.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 3.5, odd: 1 },\n  expected: [ 0,\
    \ 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var digits = String(num);\n \
    \   var digit;\n    var odd_count = 0;\n    var even_count = 0;\n    for (var\
    \ i = 0; i < digits.length; i++){\n        digit = digits[i];\n        if (digit.match(/[0-9]/)){\n\
    \            if (digit.match(/[0-9]$/)){\n                even_count++;\n    \
    \        } else {\n                odd_count++;\n            }\n        }\n  \
    \  }\n    return ([even_count, odd_count]);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp4szjxbkl.js:27:10)\n    at Object.<anonymous> (/tmp/tmp4szjxbkl.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  return num.toString().match(/([0])(\\\
    1)*/);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nnull\n\nshould equal\n\n[ 0, 1 ]\n    at\
    \ test (/tmp/tmpblbz_dr0.js:14:10)\n    at Object.<anonymous> (/tmp/tmpblbz_dr0.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var odd = 0;\n  var even = 0;\n\
    \  for(var i=1; i<=Math.ceil(num/10)+1; i++){\n    if(num%10===0 && i!==1){\n\
    \      even++;\n    }\n    if(num%10!==0 && i%2===0){\n      odd++;\n    }\n \
    \ }\n  return [even,odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpl7n6v59b.js:25:10)\n    at Object.<anonymous> (/tmp/tmpl7n6v59b.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet even = 0;\n\tlet odd = 0;\n\
    \tlet sum = 0;\n\twhile(num >= 0){\n\t\tlet mod = num % 10;\n\t\tsum += mod;\n\
    \t\tif(mod > 0){\n\t\t\todd += 1;\n\t\t}\n\t\telse{\n\t\t\teven += 1;\n\t\t}\n\
    \t\tnum = num / 10;\n\t}\n\treturn [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    num = num.toString()\n    var\
    \ even = 0, odd = 0, digit\n    for (let i = 0; i < num.length; i++){\n      \
    \  digit = parseInt(num[i])\n        if (digit%2 !== 0){\n            odd++\n\
    \        } else {\n            even++\n        }\n    }\n    return([even, odd])\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpe6vi22tz.js:25:10)\n    at Object.<anonymous> (/tmp/tmpe6vi22tz.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let count = 0;\n    while(num\
    \ > 0){\n        let mod = num % 10;\n        if(mod < 2){\n            count\
    \ += 1;\n        }\n        num = num / 10;\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n324\n\nshould equal\n\n[ 0, 1 ]\n    at\
    \ test (/tmp/tmpizllvirw.js:22:10)\n    at Object.<anonymous> (/tmp/tmpizllvirw.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 324,\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar even = 0;\n\tvar odd = 1;\n\
    \t\n\tfor (var i = num.length - 1; i >= 0; i--){\n\t\tif (num[i]%2===0) even++;\n\
    \t\telse odd++;\n\t}\n\treturn (even, odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpfvvojf40.js:21:10)\n    at Object.<anonymous> (/tmp/tmpfvvojf40.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num === 0){\n      return (0,0);\n\
    \  }\n  if(num < 0){\n      return (Math.abs(num),1);\n  }\n  let odd_count =\
    \ 0;\n  let even_count = 0;\n  let x = Math.abs(num);\n  for(let i = 0; i < (x);\
    \ i++){\n      if((num % i) === 0){\n          even_count += 1;\n      }\n   \
    \   else{\n          odd_count += 1;\n      }\n  }\n  return (even_count, odd_count);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n6\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpoi0v_fyw.js:31:10)\n    at Object.<anonymous> (/tmp/tmpoi0v_fyw.js:41:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    return num ? [even_odd_count(num\
    \ % 10), even_odd_count(Math.floor(num / 10))]\n    : [];\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn_wth1s8.js:6\n    return num ? [even_odd_count(num % 10), even_odd_count(Math.floor(num\
    \ / 10))]\n    ^\n\nRangeError: Maximum call stack size exceeded\n    at even_odd_count\
    \ (/tmp/tmpn_wth1s8.js:6:5)\n    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n\
    \    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n\
    \    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n\
    \    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n\
    \    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n    at even_odd_count (/tmp/tmpn_wth1s8.js:6:19)\n"
  exit_code: 1
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  const count = Number(num.toString()).length;\n\
    \  const even = count % 2 == 0;\n  const odd = !even;\n  return { even, odd };\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: false, odd: true }\n\nshould equal\n\
    \n[ 0, 1 ]\n    at test (/tmp/tmpkxm0nttb.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkxm0nttb.js:27:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: false,\
    \ odd: true },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar odd_sum = 0;\n\tvar even_sum\
    \ = 0;\n\tvar even = true;\n\n\tfor(var i = 0; i< num.length; i++){\n\t\t\n\t\t\
    if(even){\n\t\t\tif(num[i] == 1){\n\t\t\t\teven_sum++;\n\t\t\t}\n\t\t\telse{\n\
    \t\t\t\todd_sum++;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(num[i] == 1){\n\t\t\t\t\
    odd_sum++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\teven_sum++;\n\t\t\t}\n\t\t}\n\t\teven\
    \ = !even;\n\t}\n\n\treturn [even_sum, odd_sum];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpqn0xf2p8.js:38:10)\n    at Object.<anonymous> (/tmp/tmpqn0xf2p8.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar count = 0;\n\tvar even = 1;\n\
    \tvar odd = 1;\n\twhile(num > 0){\n\t\tcount += ((num % 10) === 0);\n\t\tnum /=\
    \ 10;\n\t\tif (num % 10 === 0){\n\t\t\teven++;\n\t\t}else{\n\t\t\todd++;\n\t\t\
    }\n\t}\n\treturn [even,odd];\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 2, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmp8c5wytam.js:26:10)\n    at Object.<anonymous> (/tmp/tmp8c5wytam.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 2, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var count = 0;\n  for (var i =\
    \ num; i > 0; i--){\n    if ( i%2 === 0){\n      count++;\n    }else{\n      count\
    \ += 2;\n    }\n  }\n  return [count, num - count];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 11, -4 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmp_h6cfe78.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_h6cfe78.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 11, -4 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even_count = 0;\n  let odd_count\
    \ = 0;\n  \n  if(num >= 0){\n    for(let i=num;i>0;i--){\n      if(i%2 == 0){\n\
    \        even_count++;\n      }else{\n        odd_count++;\n      }\n    }\n \
    \ }else{\n    for(let i=num;i<0;i++){\n      if(i%2 ==0){\n        even_count++;\n\
    \      }else{\n        odd_count++;\n      }\n    }\n  }\n  return ({even_count,\
    \ odd_count});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even_count: 3, odd_count: 4 }\n\nshould\
    \ equal\n\n[ 0, 1 ]\n    at test (/tmp/tmpwue1cc8c.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwue1cc8c.js:44:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even_count:\
    \ 3, odd_count: 4 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var count = [0,0]\n    for(var\
    \ i=0;i<num;i++){\n      if((num%10)%2===0){\n        count[0]++\n      }\n  \
    \    else if((num%10)%2!==0){\n        count[1]++\n      }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 7 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpvuljqfzy.js:23:10)\n    at Object.<anonymous> (/tmp/tmpvuljqfzy.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let num_str = num.toString();\n\
    \    let count = 0;\n    for(let i = 0; i < num_str.length; i++){\n        if\
    \ (num_str[i] % 2 !== 0){\n            count += 1;\n        }\n        if (num_str[i]\
    \ % 2 === 0){\n            count += 2;\n        }\n    }\n    \n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpv0rq931s.js:25:10)\n    at Object.<anonymous> (/tmp/tmpv0rq931s.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  return even_odd_count(num, 1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplzykfh35.js:6\n  return even_odd_count(num, 1);\n  ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at even_odd_count (/tmp/tmplzykfh35.js:6:3)\n\
    \    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n\
    \    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n\
    \    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n\
    \    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n\
    \    at even_odd_count (/tmp/tmplzykfh35.js:6:10)\n"
  exit_code: 1
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num == 0) return (0,0)\n  if(num\
    \ < 0){\n    return (-1,1)\n  }\n  let evenCount = 0\n  let oddCount = 0\n  for(let\
    \ i = num; i-->0;){\n    if(i%2 == 0){\n      evenCount += 1;\n    }\n    else{\n\
    \      oddCount += 1;\n    }\n  }\n  return (evenCount, oddCount);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n3\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp8ekgz82d.js:28:10)\n    at Object.<anonymous> (/tmp/tmp8ekgz82d.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0;\n  let odd = 1;\n\
    \  let counter = 0;\n  while(num > 0){\n      counter++;\n      if(num % 2 ==\
    \ 0){\n          even++;\n          num/=2;\n      }else{\n          odd++;\n\
    \          num/=2;\n      }\n  }\n  return(even, odd, counter);\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1078\n\nshould equal\n\n[ 0, 1 ]\n    at\
    \ test (/tmp/tmpk16zwd4d.js:26:10)\n    at Object.<anonymous> (/tmp/tmpk16zwd4d.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1078,\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let count  = 0;\n  let even   =\
    \ 0;\n  let odd    = 0;\n  while (num){\n    if (num%2 == 0){\n      even++;\n\
    \    }else{\n      odd++;\n    }\n    num = Math.floor(num/2);\n  }\n  return\
    \ ([even, odd]);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 3 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpqpibiwbb.js:25:10)\n    at Object.<anonymous> (/tmp/tmpqpibiwbb.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let arr=[];\n  let count=0;\n \
    \ while(num){\n    arr.push(num%10);\n    num=Math.floor(num/10)\n  }\n  for(let\
    \ i=0;i<arr.length;i++){\n    if(arr[i]==0){\n      count++;\n    }else if(arr[i]!=0){\n\
    \      count+=2\n    }\n  }\n  return [count,count-arr.length];\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 2, 1 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp48sodo9h.js:26:10)\n    at Object.<anonymous> (/tmp/tmp48sodo9h.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 2, 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet result = {\n\t\teven_count\
    \ : 0,\n\t\todd_count : 0\n\t}\n\twhile(num > 0){\n\t\tresult.even_count = result.even_count\
    \ + num%2 === 0 ? result.even_count : result.even_count\n\t\tresult.odd_count\
    \  = result.odd_count + num%2 === 1 ? result.odd_count : result.odd_count\n\t\t\
    num  = Math.floor( num / 10 )\n\t}\n\treturn result\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even_count: 0, odd_count: 0 }\n\nshould\
    \ equal\n\n[ 0, 1 ]\n    at test (/tmp/tmppc1goqn5.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppc1goqn5.js:33:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even_count:\
    \ 0, odd_count: 0 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet even = 0,\n\todd = 0;\n\twhile\
    \ (num > 0) {\n\t\tlet lastDigit = num % 10;\n\t\tnum = Math.floor(num / 10);\n\
    \t\tif (lastDigit % 2 === 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t\
    }\n\t}\n\treturn [even, odd];\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmplvhgm2uy.js:26:10)\n    at Object.<anonymous> (/tmp/tmplvhgm2uy.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var result = 0;\n  for(var i=0;i<num.toString().length;i++){\n\
    \    if(num.toString()[i]%2==0){\n      result++;\n    }\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp9pey4um8.js:20:10)\n    at Object.<anonymous> (/tmp/tmp9pey4um8.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var even = [], odd = [];\n  for\
    \ (var i = Math.trunc(num); i; i--){\n    var remainder = num % i;\n    if (remainder\
    \ > 0){\n      even.unshift(remainder)\n    }\n    else{\n      odd.unshift(remainder)\n\
    \    }\n  }\n  return [even.length, odd.length];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 5, 2 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpcnrhdhv1.js:24:10)\n    at Object.<anonymous> (/tmp/tmpcnrhdhv1.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 5, 2 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even_count = 0;\n  let odd_count\
    \ = 0;\n  if(num < 0) {\n    num = -num;\n  }\n  while (num > 0) {\n    if(num%2\
    \ === 0) {\n      even_count ++;\n    }\n    else {\n      odd_count ++;\n   \
    \ }\n    num = Math.floor(num / 10);\n  }\n  return [even_count, odd_count];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 0 ]\n \
    \   at test (/tmp/tmpzo8vltne.js:35:10)\n    at Object.<anonymous> (/tmp/tmpzo8vltne.js:38:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 0 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n   var even = parseInt(num / 2)\n\
    \   var odd = num - (even*2)\n   return([even,odd])\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 3, 1 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp15qke2ql.js:16:10)\n    at Object.<anonymous> (/tmp/tmp15qke2ql.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 3, 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var count = 0, digit = 0;\n \
    \   while(num != 0){\n        if(num % 2 === 0){\n            digit++;\n     \
    \   }\n        num/= 10;\n    }\n    return { even: digit, odd: count-digit };\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 0 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpmu594m8d.js:21:10)\n    at Object.<anonymous> (/tmp/tmpmu594m8d.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 0 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let count = 0\n    let odd =\
    \ 0\n    let even = 0\n    while(num > 0){\n        count++\n        num = num/10\n\
    \        if(num % 2 === 0){\n            even++\n        }else{\n            odd++\n\
    \        }\n    }\n    return [even, odd]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 324 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpu36jmv3p.js:26:10)\n    at Object.<anonymous> (/tmp/tmpu36jmv3p.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 324 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0, odd = 0, num =\
    \ Math.abs(num);\n    while(num > 0){\n        num = Math.floor(num/10);\n   \
    \     ++even;\n        if(num%2 === 0){\n            ++odd;\n        }\n    }\n\
    \    return {'even':even, 'odd':odd};\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 1, odd: 1 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpxzz64mvd.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxzz64mvd.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 1, odd: 1 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var even = 0,\n      odd = 0;\n\
    \  var x = num;\n  if(x<0){\n    x = Math.abs(num);\n  }\n  while(x>0){\n    var\
    \ y = Math.floor(x / 10);\n    x=x%10;\n    if(y%2===0) even++;\n    else odd++;\n\
    \  }\n  return [even,odd];\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let arr = [];\n  while(num > 0){\n\
    \    let lastDigit = Math.floor(num/10); //The last digit of the number divided\
    \ by 10\n    arr.push(lastDigit);\n    num = num - lastDigit * 10;\n  }\n  //console.log(arr);\n\
    \  let even = [];\n  let odd = [];\n  for(let i = 0; i < arr.length; i++){\n \
    \   if(arr[i] % 2 === 0){\n      even.push(arr[i]);\n    } else {\n      odd.push(arr[i]);\n\
    \    }\n  }\n  return (even, odd);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "\n<--- Last few GCs --->\n\n[78677:0x5e08b60]      931 ms: Scavenge 766.9\
    \ (800.0) -> 766.9 (800.0) MB, 24.8 / 0.0 ms  (average mu = 1.000, current mu\
    \ = 1.000) allocation failure \n[78677:0x5e08b60]     1332 ms: Scavenge 1149.4\
    \ (1182.5) -> 1149.4 (1182.5) MB, 37.8 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n[78677:0x5e08b60]     2117 ms: Scavenge 1723.2\
    \ (1756.3) -> 1723.2 (1756.3) MB, 90.5 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n\n\n<--- JS stacktrace --->\n\nFATAL ERROR:\
    \ invalid array length Allocation failed - JavaScript heap out of memory\n 1:\
    \ 0xa04200 node::Abort() [node]\n 2: 0x94e4e9 node::FatalError(char const*, char\
    \ const*) [node]\n 3: 0xb797be v8::Utils::ReportOOMFailure(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 4: 0xb79b37 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 5: 0xd343c5  [node]\n 6: 0xd0cf05  [node]\n 7: 0xe9568e\
    \  [node]\n 8: 0xe957da  [node]\n 9: 0x1032b83 v8::internal::Runtime_GrowArrayElements(int,\
    \ unsigned long*, v8::internal::Isolate*) [node]\n10: 0x14011f9  [node]\n"
  exit_code: -6
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0\n    let odd = 0\n\
    \    while(num > 0){\n        num = Math.floor(num/10)\n        even += num%2\
    \ ? 1 : 0\n        odd += num%2 ? 0 : 1\n    }\n    return [(even, odd)]\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1 ]\n\nshould equal\n\n[ 0, 1 ]\n    at\
    \ test (/tmp/tmp0g1i6jh6.js:20:10)\n    at Object.<anonymous> (/tmp/tmp0g1i6jh6.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num == 0){\n    return (0, 0);\n\
    \  }\n  else if (num <= 0){\n    return (1, 1);\n  }\n  else {\n    var even =\
    \ 0;\n    var odd = 0;\n\n    while (num > 0){\n      if(num % 2 === 0){\n   \
    \     even++;\n      }\n      else {\n        odd++;\n      }\n      num = Math.floor(num\
    \ / 10);\n    }\n    return (even, odd);\n  }\n};\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp5xs2l9st.js:34:10)\n    at Object.<anonymous> (/tmp/tmp5xs2l9st.js:44:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if (num<0) return (0,0);\n  var\
    \ ans = 0,even = 0,odd = 0;\n  var numstr = String(num);\n  for (var i = 0; i<numstr.length;\
    \ i++){\n    num = numstr[i];\n    if (num%2 === 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n  }\n  ans = (even,odd);\n  return (ans)\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp0eot1m9l.js:26:10)\n    at Object.<anonymous> (/tmp/tmp0eot1m9l.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    \n    let result = 0;\n    let\
    \ oddDigits = 0;\n    let evenDigits = 0;\n\n    while(num > 0){\n        if(num%2\
    \ === 0){\n            evenDigits++;\n        }\n        else{\n            oddDigits++;\n\
    \        }\n        num/=10;\n    }\n\n    return ([evenDigits, oddDigits]);\n\
    \    \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpz3qt7g68.js:30:10)\n    at Object.<anonymous> (/tmp/tmpz3qt7g68.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even_count = 0;\n  let odd_count\
    \ = 0;\n  for(let i = 0; i < num.length; i++){\n    let value = num[i];\n    if\
    \ (value === '0'){\n      even_count++;\n    }else{\n      odd_count++;\n    }\n\
    \  }\n  return [even_count, odd_count];\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpp2umzmkr.js:23:10)\n    at Object.<anonymous> (/tmp/tmpp2umzmkr.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let count = 0\n    let odd =\
    \ 0\n    let even = 0\n    while (num > 0) {\n        if (num % 2 === 0) {\n \
    \           even++\n        }else{\n            odd++\n        }\n        num\
    \ = Math.floor(num/10)\n    }\n    return [even,odd]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmprbnmjvq9.js:26:10)\n    at Object.<anonymous> (/tmp/tmprbnmjvq9.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num < 0){\n    throw new RangeError(\"\
    even_odd_count(): input must be greater than 0.\");\n  }\n  let evenCount = 0;\n\
    \  let oddCount = 0;\n  let numStr = String(num);\n  for(let i=0; i<numStr.length;\
    \ i++){\n    if(i % 2 === 0){\n      evenCount++;\n    }else{\n      oddCount++;\n\
    \    }\n  }\n  return [evenCount, oddCount]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpu95np07y.js:27:10)\n    at Object.<anonymous> (/tmp/tmpu95np07y.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let result = [], even = 0, odd\
    \ = 0, tmp, count = [];\n    \n    for(let num of num){\n        tmp = num % 2;\n\
    \        \n        if(tmp === 0){\n            even++;\n        } else {\n   \
    \         odd++;\n        }\n    }\n    \n    result = [even, odd];\n    \n  \
    \  for(let n of result){\n        count[n] = count[n] + 1 || 1;\n    }\n    \n\
    \    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp53ucs7mx.js:8\n    for(let num of num){\n                   ^\n\
    \nReferenceError: Cannot access 'num' before initialization\n    at even_odd_count\
    \ (/tmp/tmp53ucs7mx.js:8:20)\n    at test (/tmp/tmp53ucs7mx.js:31:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp53ucs7mx.js:41:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 1;\n  let odd = 1;\n\
    \  while(num > 0){\n    if((num % 2 === 0) && (num % 2 !== 0)){\n      even++;\n\
    \      num = num / 2;\n    } else {\n      odd++;\n      num = num / 2;\n    }\n\
    \  }\n  return [even, odd];\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 1079 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpfbf057qp.js:24:10)\n    at Object.<anonymous> (/tmp/tmpfbf057qp.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 1079 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var odd = num%2 === 0;\n    var\
    \ even = num%2 === 0;\n    return { \n        odd: odd, \n        even: even,\
    \ \n        sum: even + odd\n    };\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ odd: false, even: false, sum: 0 }\n\n\
    should equal\n\n[ 0, 1 ]\n    at test (/tmp/tmp5kh8oqsf.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5kh8oqsf.js:30:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { odd: false,\
    \ even: false, sum: 0 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  // Get the integer and make sure\
    \ it's a positive integer\n  var even_odd = Math.floor((Math.pow(10,num) - Math.floor(Math.pow(10,num)))\
    \ + 1)\n  // Set the evens and odds variables\n  var even = 0, odd = 1\n  // Loop\
    \ through the integer and add 1 to the even/odd variables if the current digit\
    \ is even\n  for(var i = even_odd; i > 0; i--){\n    // Check if the current integer\
    \ is a multiple of 2\n    if(i % 2 === 0){\n      // If it is, add 1 to even\n\
    \      even++\n    } else {\n      // If it isn't, add 1 to odd\n      odd++\n\
    \    }\n  }\n  return [even,odd]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 2 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpe2fai4qc.js:29:10)\n    at Object.<anonymous> (/tmp/tmpe2fai4qc.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 2 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even_count = 0\n  let odd_count\
    \ = 0\n  \n  if(num >= 0){\n    const arr = [...String(num)]\n    \n    for(let\
    \ i = 0; i < arr.length; i++){\n      if(arr[i] % 2 === 0){\n        even_count++\n\
    \      }\n      else{\n        odd_count++\n      }\n    }\n  }\n\n  return [even_count,\
    \ odd_count]\n}\n</cell>\n<cell>\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz5_6245v.js:24\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let count = 0;\n  const odd = num\
    \ % 10\n  const even = num - odd\n  if(even > 0){\n    count++\n  }\n  if(odd\
    \ > 0){\n    count++\n  }\n  return [count, count-1]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpzsn34pzu.js:23:10)\n    at Object.<anonymous> (/tmp/tmpzsn34pzu.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    // Write your code here\n   \
    \ let even = 0;\n    let odd = 0;\n    while(num > 0){\n        if(num % 2 ==\
    \ 0){\n            even++;\n        }else{\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return [even,odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmp8toh_xat.js:25:10)\n    at Object.<anonymous> (/tmp/tmp8toh_xat.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar even = 0;\n\tvar odd = 0;\n\
    \t\n\twhile(num>0){\n\t\tif(num%2 === 0){\n\t\t\teven++;\n\t\t}else{\n\t\t\todd++;\n\
    \t\t}\n\t\tnum = Math.floor(num / 10);\n\t}\n\treturn [even,odd];\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpo7p3nlxc.js:26:10)\n    at Object.<anonymous> (/tmp/tmpo7p3nlxc.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    for (let i = 0; i < num.length; i++){\n        if (num.charAt(i) ===\
    \ num.charAt(i).replace(/\\D/g,'')){\n            even++;\n        }\n       \
    \ else{\n            odd++;\n        }\n    }\n    return [even, odd]\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpotiejr6w.js:24:10)\n    at Object.<anonymous> (/tmp/tmpotiejr6w.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = num.toString().split(\"\
    \").filter((n) => n % 2 == 0);\n    let odd = num.toString().split(\"\").filter((n)\
    \ => n % 2 != 0);\n    return { even, odd };\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: [], odd: [ '7' ] }\n\nshould equal\n\
    \n[ 0, 1 ]\n    at test (/tmp/tmp6yqpwi46.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6yqpwi46.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: [],\
    \ odd: [ '7' ] },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let evens = 0;\n  let odds = 0;\n\
    \n  while (num >= 0){\n    num%=10;\n    if (num%2===0) evens++;\n    else odds++;\n\
    \  }\n  return ([evens, odds]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even = 0;\n    var odd =\
    \ 0;\n    var remainder;\n    var newNum;\n    while(num > 0){\n        remainder\
    \ = num%10;\n        if(remainder % 2 === 0){\n            even++;\n        }else{\n\
    \            odd++;\n        }\n        num = Math.floor(num/10);\n    }\n   \
    \ newNum = even + odd;\n    if(newNum >= 1){\n        return [even, odd];\n  \
    \  }else{\n        return [even, odd];\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpxuszqsdu.js:33:10)\n    at Object.<anonymous> (/tmp/tmpxuszqsdu.js:42:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet even_count = 0;\n\tlet odd_count\
    \ = 0;\n\twhile(num > 0){\n\t\tif(num % 2 == 0){\n\t\t\teven_count++;\n\t\t}\n\
    \t\telse{\n\t\t\todd_count++;\n\t\t}\n\t\tnum /= 2;\n\t}\n\treturn [even_count,\
    \ odd_count]\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 1078 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmp2k7uu2cz.js:25:10)\n    at Object.<anonymous> (/tmp/tmp2k7uu2cz.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 1078 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    // Base case\n    if (num < 0){\n\
    \        return (0, 0)\n    }\n    //Get the even digits\n    let even = (num\
    \ / 10).toFixed(0)\n    num -= even * 10\n    //Get the odd digits\n    let odd\
    \ = (num / 10).toFixed(0)\n    num -= odd * 10\n    //Return the tuple with the\
    \ number of even and odd digits\n    return([even, odd])\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '1', '-0' ]\n\nshould equal\n\n[ 0, 1\
    \ ]\n    at test (/tmp/tmpkn9bj0je.js:25:10)\n    at Object.<anonymous> (/tmp/tmpkn9bj0je.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '1', '-0' ],\n  expected: [ 0, 1 ],\n \
    \ operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var sum = 0;\n  var temp = 0;\n\
    \  while (num > 0) {\n    temp = num % 10;\n    sum += temp;\n    num = num /\
    \ 10;\n  }\n  return [sum, sum % 2 === 0 ? 1 : 0];\n}\n</code>\n<|/ a tags=javascript\
    \ |>\n<| c |>\n`return [sum, sum % 2 === 0 ? 1 : 0];` - you don't need ternary\
    \ operators for that.\n<|/ c |>\n<| c |>\nThanks, I was just trying to avoid the\
    \ ugly ternary operator and using an if-else statement was more concise. I will\
    \ update my answer to reflect this.\n<|/ c |>\n<| c |>\nYes, and thank you. But\
    \ my question is how to do it with only a loop. without `while`, `for`, or anything\
    \ else like that.\n<|/ c |>\n<| c |>\nThe answer you have is pretty good, but\
    \ since it uses `while` loop, what would be the solution without a `while` loop?\
    \ I thought there might be a way of doing it without using a `while` loop.\n<|/\
    \ c |>\n<| c |>\nI updated my answer with another way of doing it. Let me know\
    \ if this works for you.\n<|/ c |>\n<| a tags=javascript |>\nHere is my solution\n\
    <code>\nvar input = 123;\nvar sum = 0;\nvar evenCount = 0;\nvar oddCount = 0;\n\
    \nif(input > 0) {\n  while(input > 0) {\n    var lastDigit = input % 10;\n   \
    \ sum = sum + lastDigit;\n\n    if(lastDigit % 2 === 0) {\n      evenCount++;\n\
    \    }\n    else {\n      oddCount++;\n    }\n\n    input = input / 10;\n  }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpud8ky3eo.js:15\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var odd = 0;\n  var even = 0;\n\
    \  while (num > 0){\n    if (num % 2 == 0){\n      even++;\n    }\n    else{\n\
    \      odd++;\n    }\n    num = parseInt(num/10)\n  }\n  return ([even, odd]);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpyc3uy7rj.js:26:10)\n    at Object.<anonymous> (/tmp/tmpyc3uy7rj.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num < 0){\n    return 0;\n \
    \ }\n  let even = 0;\n  let odd = 0;\n  let value = num.toString().split('');\n\
    \  for(let i = 0; i < value.length; i++){\n    if(value[i] % 2 === 0){\n     \
    \ even++;\n    }else{\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 1, 1 ]\n    at test\
    \ (/tmp/tmp6ucgzqro.js:28:10)\n    at Object.<anonymous> (/tmp/tmp6ucgzqro.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let sum = 0;\n  while (num > 0)\
    \ {\n    sum = sum + num % 10;\n    num = Math.floor(num / 10);\n  }\n  return\
    \ { even: sum % 2 === 0 ? 1 : 0, odd: sum % 2 === 1 ? 1 : 0 };\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 1 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmp1wtgq3iv.js:19:10)\n    at Object.<anonymous> (/tmp/tmp1wtgq3iv.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 1 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let evens = 0;\n  let odds = 0;\n\
    \  let str = String(num);\n  for(let i = 0; i < str.length; i++){\n    if(str[i]\
    \ % 2 === 0){\n      evens += 1;\n    }else{\n      odds += 1;\n    }\n  }\n \
    \ return [evens, odds];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpjde85d0r.js:25:10)\n    at Object.<anonymous> (/tmp/tmpjde85d0r.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar digit = 0;\n\tvar even = 0,\
    \ odd = 0;\n\twhile(num > 0){\n\t\tdigit = num % 10; // Get the remainder of division\
    \ by 10\n\t\tif(digit % 2 == 0){ // If the remainder is even\n\t\t\teven++;\n\t\
    \t}\n\t\telse{\n\t\t\todd++;\n\t\t}\n\t\tnum = Math.floor(num/10);\n\t}\n\t\n\t\
    return [even,odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpf9oa7y7u.js:28:10)\n    at Object.<anonymous> (/tmp/tmpf9oa7y7u.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even_count = 0;\n    let\
    \ odd_count = 0;\n\n    if(num < 0){\n        return (-num);\n    }\n\n    while(num\
    \ >= 0){\n        let digit = Math.floor(num/10);\n        if(digit % 2 === 0){\n\
    \            even_count++;\n        }else{\n            odd_count++;\n       \
    \ }\n        num = num%10;\n    }\n\n    return ({\n        evenCount:even_count,\n\
    \        oddCount:odd_count\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let count=0;\n    while(num>0){\n\
    \        let last_digit=num%10;\n        if(last_digit%2==0){\n            count+=1;\n\
    \        }\n        num=Math.floor(num/10);\n    }\n    return[count,count+1];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 1 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpa7vufl_7.js:23:10)\n    at Object.<anonymous> (/tmp/tmpa7vufl_7.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 1 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var sum = 0;\n  while (num >= 1){\n\
    \    sum += Math.floor(num/2);\n    num = num % 10;\n  }\n  return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = num%2 === 0? true:\
    \ false\n    let odd = num%2 !== 0? true: false\n    while(num > 0){\n       \
    \ num = parseInt(num/10)\n        if (num%2 === 0){\n            even += true\n\
    \        }\n        if (num%2 !== 0){\n            odd += true\n        }\n  \
    \  }\n    return { even, odd }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 1, odd: true }\n\nshould equal\n\
    \n[ 0, 1 ]\n    at test (/tmp/tmpc5ogmwy2.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc5ogmwy2.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: 1,\
    \ odd: true },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  for (let i = num; i; i--){\n    const remainder = i % 10;\n    if(remainder\
    \ === 0){\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n \
    \ return [evenCount, oddCount];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 7 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp15fbnx3v.js:24:10)\n    at Object.<anonymous> (/tmp/tmp15fbnx3v.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  const evenCount = (num.toString()).split(\"\
    \").filter(item => item % 2 === 0).length\n  const oddCount = (num.toString()).split(\"\
    \").filter(item => item % 2 !== 0).length\n\n  return evenCount ? evenCount :\
    \ oddCount\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpaza_6xh0.js:16:10)\n    at Object.<anonymous> (/tmp/tmpaza_6xh0.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num === 0){\n    return (0,\
    \ 0)\n  }\n  let evenCount = 0\n  let oddCount = 0\n  while(num > 0){\n    if(num\
    \ % 2 === 0){\n      evenCount++\n    } else {\n      oddCount++\n    }\n    num\
    \ = Math.floor(num / 10)\n  }\n  return ({evenCount,oddCount})\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ evenCount: 0, oddCount: 1 }\n\nshould\
    \ equal\n\n[ 0, 1 ]\n    at test (/tmp/tmpg77fjo3u.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg77fjo3u.js:37:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { evenCount:\
    \ 0, oddCount: 1 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let odd_digits = [];\n  let even_digits\
    \ = [];\n  for(let i = 0; i<=num; i++){\n    let remainder = Math.trunc(num/i);\n\
    \    if(i%2 === 1){\n      odd_digits.push(remainder);\n    }\n    else{\n   \
    \   even_digits.push(remainder);\n    }\n  }\n  return [even_digits,odd_digits];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ Infinity, 3, 1, 1 ], [ 7, 2, 1, 1 ]\
    \ ]\n\nshould equal\n\n[ 0, 1 ]\n    at test (/tmp/tmplwl03trl.js:25:10)\n   \
    \ at Object.<anonymous> (/tmp/tmplwl03trl.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ Infinity,\
    \ 3, 1, 1 ], [ 7, 2, 1, 1 ] ],\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num<0){\n    return (-num, 0);\n\
    \  }\n  let even = 0, odd = 1;\n  while(num){\n    if(num%2 !== 0) even++;\n \
    \   if(num%2 === 0) odd++;\n    num = num/2;\n  }\n  return [even, odd];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1078, 1 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmp451sha32.js:23:10)\n    at Object.<anonymous> (/tmp/tmp451sha32.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1078, 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let strNum = String(num);\n \
    \   let oddNum = 0;\n    let evenNum = 0;\n\n    for (let i=0; i <strNum.length;\
    \ i++){\n        if(Number(strNum[i])%2 === 0){\n            evenNum = evenNum\
    \ + 1;\n        }else{\n            oddNum = oddNum + 1;\n        }\n    }\n \
    \   return (evenNum, oddNum);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp5naald8y.js:25:10)\n    at Object.<anonymous> (/tmp/tmp5naald8y.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0;\n  let odd = 0;\n\
    \  while (num != 0){\n    if (num % 2 === 0){\n      even++;\n    }else{\n   \
    \   odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    if(num===0){\n        return\
    \ (0, 0);\n    }\n    let even = 0;\n    let odd = 0;\n    let sum = 0;\n    for(let\
    \ i = num; i!==0; i/=2){\n        even++;\n    }\n    for(let i = num; i!==0;\
    \ i/=2 ){\n        odd++;\n    }\n    sum = even+odd;\n    return({even: even,\
    \ odd: odd, sum: sum});\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 1078, odd: 1078, sum: 2156 }\n\n\
    should equal\n\n[ 0, 1 ]\n    at test (/tmp/tmpafp1ej85.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpafp1ej85.js:37:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { even: 1078,\
    \ odd: 1078, sum: 2156 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let arr = [];\n    while(num\
    \ != 0){\n        arr.push(num%10);\n        num /= 10;\n    }\n    arr.forEach((element,index)\
    \ => {\n        if(element %2 === 0){\n            arr[index] = 1;\n        }\n\
    \    });\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 7,\n  0.7,\n  0.06999999999999999,\n \
    \ 0.006999999999999999,\n  0.0006999999999999999,\n  0.00007,\n  0.000006999999999999999,\n\
    \  6.999999999999999e-7,\n  6.999999999999999e-8,\n  6.999999999999999e-9,\n \
    \ 6.999999999999999e-10,\n  6.999999999999999e-11,\n  6.999999999999999e-12,\n\
    \  6.999999999999999e-13,\n  6.999999999999999e-14,\n  6.999999999999999e-15,\n\
    \  6.999999999999999e-16,\n  6.999999999999999e-17,\n  7e-18,\n  6.999999999999999e-19,\n\
    \  6.999999999999999e-20,\n  6.999999999999999e-21,\n  6.999999999999999e-22,\n\
    \  6.99...\n\nshould equal\n\n[ 0, 1 ]\n    at test (/tmp/tmp2pam391v.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2pam391v.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n                          7,         \
    \           0.7,    0.06999999999999999,\n       0.006999999999999999,  0.0006999999999999999,\
    \                0.00007,\n    0.000006999999999999999,   6.999999999999999e-7,\
    \   6.999999999999999e-8,\n       6.999999999999999e-9,  6.999999999999999e-10,\
    \  6.999999999999999e-11,\n      6.999999999999999e-12,  6.999999999999999e-13,\
    \  6.999999999999999e-14,\n      6.999999999999999e-15,  6.999999999999999e-16,\
    \  6.999999999999999e-17,\n                      7e-18,  6.999999999999999e-19,\
    \  6.999999999999999e-20,\n      6.999999999999999e-21,  6.999999999999999e-22,\
    \  6.999999999999999e-23,\n                      7e-24, 6.9999999999999995e-25,\
    \                  7e-26,\n                      7e-27,                  7e-28,\
    \  "
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var even_count=0; \n    var odd_count=0;\n\
    \    var result=\"\";\n    \n    while(num>0){\n        if(num%2==0){\n      \
    \      even_count++;\n        }else{\n            odd_count++;\n        }\n  \
    \      num=parseInt(num/10);\n    }\n    result=even_count+\",\"+odd_count;\n\
    \    return parseInt(result);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmphre55vau.js:27:10)\n    at Object.<anonymous> (/tmp/tmphre55vau.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even = 0;\n  let odd = 0;\n\
    \  while(num > 0){\n    num = num % 10;\n    even = even + (num % 2 == 0 ? 1 :\
    \ 0);\n    odd = odd + (num % 2 != 0 ? 1 : 0);\n  }\n  return [even, odd];\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let [even,odd] = num.toString().split('').reduce(([even,\
    \ odd],curr)=>{\n        if(curr === '0'){\n            return [even+1,odd]\n\
    \        }else{\n            return [even,odd+1]\n        }\n    },[0,0])\n  \
    \  return [even,odd]\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 3 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpgzge_fl4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpgzge_fl4.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let even=0\n  let odd=0\n  if(num===0){\n\
    \    return (0,0)\n  }\n  while (num!==0){\n    if(num%2===0){\n      even++\n\
    \    }else{\n      odd++\n    }\n    num=num/10\n  }\n  return ({even,odd})\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 325 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpvt7s6hld.js:27:10)\n    at Object.<anonymous> (/tmp/tmpvt7s6hld.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 325 },\n  expected: [ 0,\
    \ 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num<0){\n      num*=-1;\n  }\n\
    \  let even=0\n  let odd=0\n  while(num){\n      let curr=num%10\n      if(curr==0){\n\
    \          even++\n      }\n      else{\n          odd++\n      }\n      num=Math.floor(num/10)\n\
    \  }\n  return [even,odd]\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 2 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpexv3n0s2.js:30:10)\n    at Object.<anonymous> (/tmp/tmpexv3n0s2.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 2 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var counter = 0;\n  while(num >\
    \ 0){\n    num = num/10;\n    counter++;\n  }\n  return [counter,counter];\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 325, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmpd5ej9eum.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd5ej9eum.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 325, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0\n    let odd = 0\n\
    \    while(num != 0){\n        let remainder = num % 10 //get the last digit of\
    \ the number in integer\n        num = Math.floor(num / 10); //remove the last\
    \ digit from number\n        if(remainder == 0){\n            even += 1 //if last\
    \ digit is 0, then add 1 to the even variable\n        }else{\n            odd\
    \ += 1\n        }\n    }\n    return ({even:even, odd:odd})\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=javascript |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq_jfk9i9.js:19\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    const numString = num.toString();\n\
    \    const evenCount = 0;\n    const oddCount = 0;\n    for (let i = 0; i < numString.length;\
    \ i++) {\n        if (numString[i] % 2 == 0) {\n            evenCount++;\n   \
    \     }\n        else {\n            oddCount++;\n        }\n    }\n    return\
    \ (evenCount, oddCount);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4skkl546.js:14\n            oddCount++;\n                    ^\n\
    \nTypeError: Assignment to constant variable.\n    at even_odd_count (/tmp/tmp4skkl546.js:14:21)\n\
    \    at test (/tmp/tmp4skkl546.js:25:20)\n    at Object.<anonymous> (/tmp/tmp4skkl546.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    if (num === 0){\n        return\
    \  (1, 0);\n    }\n    if (num < 0){\n        throw new Error(\"Parameter must\
    \ be positive\");\n    }\n\n    var result = [];\n\n    while (num >= 10){\n \
    \       result.push((num % 10) + 1);\n        num = Math.floor(num / 10);\n  \
    \  }\n\n    if (num > 0){\n        result.push((num + 1));\n    }\n\n    return\
    \  (result);\n}\n</code>\n<|/ a tags=algorithm,javascript,numbers |>\n<| c |>\n\
    Yes, that's it! This is what I am looking for! Thank you very much! :)\n<|/ c\
    \ |>\n<| c |>\nThank you for posting your solution. It might be useful for other\
    \ people to see how you figured it out.\n<|/ c |>\n<| c |>\nI spent way too long\
    \ trying to write this myself.  Glad I could help.\n<|/ c |>\n<| a tags=algorithm,javascript,numbers\
    \ |>\n<code>\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnfr5ql08.js:26\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet evenCount = 0;\n\tlet oddCount\
    \ = 0;\n\t\n\t//Iterate through the number till its last digit.\n\twhile(num >\
    \ 0){\n\t\tlet lastDigit = num%10;\n\t\tif(lastDigit % 2 === 0){\n\t\t\tevenCount++;\n\
    \t\t}\n\t\telse{\n\t\t\toddCount++;\n\t\t}\n\t\tnum = Math.floor(num/10);\n\t\
    }\n\t\n\t//Return both even and odd count\n\treturn (evenCount, oddCount);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpsfhlzznt.js:30:10)\n    at Object.<anonymous> (/tmp/tmpsfhlzznt.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let numStr = String(num);\n  let\
    \ evenNumStr = (numStr.length - (numStr.length % 2)) / 2;\n  let oddNumStr = (numStr.length\
    \ - (numStr.length % 2)) % 2;\n  return (evenNumStr, oddNumStr);\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpnktrg8kl.js:16:10)\n    at Object.<anonymous> (/tmp/tmpnktrg8kl.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var evenCount = 0;\n  var oddCount\
    \ = 0;\n  while (num > 0){\n    num = num / 10;\n    evenCount++;\n  }\n  num\
    \ = Math.abs(num);\n  while (num > 0){\n    num = num / 10;\n    oddCount++;\n\
    \  }\n  return {\"even\": evenCount, \"odd\": oddCount};\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 325, odd: 0 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmp1t7amr34.js:25:10)\n    at Object.<anonymous> (/tmp/tmp1t7amr34.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 325, odd: 0 },\n  expected: [ 0,\
    \ 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\treturn Math.trunc(Math.sqrt(num))\
    \ % 2 === 0? 1: 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpawrl6q23.js:14:10)\n    at Object.<anonymous> (/tmp/tmpawrl6q23.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even_count = 0\n    let odd_count\
    \ = 0\n    let even = []\n    let odd = []\n    while (num>0){\n        if (num%2===0){\n\
    \            even.push(num)\n        }\n        else{\n            odd.push(num)\n\
    \        }\n        num-=1;\n    }\n    if (even.length===0){\n        return\
    \ (0,0)\n    }\n    while(even.length>0){\n        even_count+=1;\n        even.pop()\n\
    \    }\n    while(odd.length>0){\n        odd_count+=1;\n        odd.pop()\n \
    \   }\n    return(even_count, odd_count)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp9pssv582.js:38:10)\n    at Object.<anonymous> (/tmp/tmp9pssv582.js:48:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even = 0;\n    let odd =\
    \ 0;\n    for(let i = num; i >= 0; i -= num){\n        if(i % 2 === 0) even++\n\
    \        else odd++;\n    }\n    return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 1 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpffs39p72.js:20:10)\n    at Object.<anonymous> (/tmp/tmpffs39p72.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 1 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let str=String(num);\n  let even=str.replace(/(^-?\\\
    d+)(\\d+)$/,\"$1\");\n  let odd=str.replace(/(^-?\\d+)(\\d+)$/,\"$2\");\n  return\
    \ (Number(even),Number(odd));\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n7\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpbom8feuf.js:17:10)\n    at Object.<anonymous> (/tmp/tmpbom8feuf.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    return Math.floor((num+\"\").length\
    \ / 2);\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis is very inefficient. Don't\
    \ use string operations on numbers to count the digits of numbers. That's what\
    \ `Math.floor` is for, it's faster than `parseInt`, but it's still overkill. `+''`\
    \ -> `+` -> `*1` -> `*2` -> `/1` -> `/2` -> `%1` -> `%2` -> `+`...\n<|/ c |>\n\
    <| a |>\nHere's another approach which only uses strings:\n<code>\nconst numberToList\
    \ = function(n) {\n  let res = [];\n  let sign = '';\n  let digits = n.toString();\n\
    \  let len = digits.length;\n  for (let i = 0; i < len; i++) {\n    let digit\
    \ = digits[i];\n    if (i % 2 === 0) {\n      res.push(sign + digit);\n      sign\
    \ = '';\n    } else {\n      sign += digit;\n    }\n  }\n  return res;\n};\n</code>\n\
    It turns a number into a list of digits.\n<|/ a dscore=1 tags=javascript,string,numbers,algorithm\
    \ |>\n<| a dscore=0 tags=javascript,string,numbers,algorithm |>\n<code>\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1ub5_9ym.js:8\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if(num<0) return (0,0);\n  var\
    \ even = 0,odd = 0;\n  if(num>0){\n    while(num>0){\n      if(num%2==0) even++;\n\
    \      else odd++;\n      num/=10;\n    }\n  }\n  return([even,odd]);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 325 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmp3ta2_3oo.js:23:10)\n    at Object.<anonymous> (/tmp/tmp3ta2_3oo.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 325 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even_digits = []\n    let\
    \ odd_digits = []\n    while (num > 0){\n        let mod = num % 10\n        if\
    \ (mod > 0){\n            odd_digits.push(mod)\n        }else{\n            even_digits.push(mod)\n\
    \        }\n        num = Math.floor(num/10)\n    }\n    return [even_digits,\
    \ odd_digits]\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [], [ 7 ] ]\n\nshould equal\n\n[ 0, 1\
    \ ]\n    at test (/tmp/tmpfv_iebco.js:25:10)\n    at Object.<anonymous> (/tmp/tmpfv_iebco.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ [], [ 7 ] ],\n  expected: [ 0, 1 ],\n \
    \ operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  const str = String(num);\n  let\
    \ even = 0;\n  let odd = 0;\n  for (let i = 0; i < str.length; i++) {\n    const\
    \ numStr = str[i];\n    const numStr = numStr.charCodeAt(0);\n    if (numStr %\
    \ 2 === 0){\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return [even,\
    \ odd];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfiwd85qs.js:11\n    const numStr = numStr.charCodeAt(0);\n    \
    \      ^\n\nSyntaxError: Identifier 'numStr' has already been declared\n    at\
    \ wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let rev = num.toString().split('').reverse().join('');\n\
    \    let even = 0, odd = 0;\n    rev.split('').forEach( x => {\n        if( x\
    \ % 2 ) even++;\n        else odd++;\n    })\n    return [ even, odd ];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmp9kwxz8hl.js:20:10)\n    at Object.<anonymous> (/tmp/tmp9kwxz8hl.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    var count = 0;\n    var odd_count\
    \ = 0;\n    for(var i = num; i > 0; i /= 10){\n        count++;\n        if((i%2)\
    \ === 0){\n            odd_count++;\n        }\n    }\n    return {'odd': odd_count,\
    \ 'even': count};\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ odd: 0, even: 325 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpwrfh61ug.js:21:10)\n    at Object.<anonymous> (/tmp/tmpwrfh61ug.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { odd: 0, even: 325 },\n  expected: [ 0,\
    \ 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let evenCount = 0, oddCount = 0;\n\
    \  for(let i=0; i< num; i++){\n    if(num % 2 == 0){\n      evenCount++;\n   \
    \ }\n    else if(num % 2 == 1){\n      oddCount++;\n    }\n  }\n  return [evenCount,\
    \ oddCount];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 7 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpyalxf3l4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyalxf3l4.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  if (num <= 0){\n    return (0,\
    \ 0);\n  }\n  if (num < 10) {\n    return (0, 1);\n  }\n  let evens = 0;\n  let\
    \ odds = 0;\n  for (let i = 0; i <= num; i++) {\n    if ((num % 2) === 1){\n \
    \     odds++;\n    }\n    else {\n      evens++;\n    }\n  }\n  return (evens,\
    \ odds);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmp8s2vjo7u.js:30:10)\n    at Object.<anonymous> (/tmp/tmp8s2vjo7u.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let result = num.toString().split('').reduce((acc,\
    \ curr) => {\n    if (curr%2 === 0){\n      acc.even++\n    } else {\n      acc.odd++\n\
    \    }\n    return acc\n  }, {even: 0, odd: 0})\n  return result\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 1 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpc0ffdqjk.js:22:10)\n    at Object.<anonymous> (/tmp/tmpc0ffdqjk.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 1 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    if (num < 0){\n        num *=\
    \ -1;\n    }\n    var result = {\n        evens: 0,\n        odds: 0\n    };\n\
    \    while (num){\n        if (num % 2 === 0){\n            result.evens++;\n\
    \        }\n        else{\n            result.odds++;\n        }\n        num\
    \ /= 10;\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ evens: 0, odds: 325 }\n\nshould equal\n\
    \n[ 0, 1 ]\n    at test (/tmp/tmpmfec7jzz.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmfec7jzz.js:39:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { evens: 0,\
    \ odds: 325 },\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tvar odd_count=0;\n\tvar even_count=0;\n\
    \t\n\tvar numStr = String(num);\n\t\n\t//Odd count starts\n\tfor(var i = 0; i\
    \ < numStr.length; i++){\n\t\t\n\t\tif((numStr[i] % 2) == 0){\n\t\t\teven_count++;\n\
    \t\t}\n\t}\n\t\n\t//Even count starts\n\tfor(var i = 0; i < numStr.length; i++){\n\
    \t\t\n\t\tif((numStr[i] % 2) != 0){\n\t\t\teven_count++;\n\t\t}\n\t}\n\t\n\treturn\
    \ even_count, odd_count;\n}\n\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n[ 0, 1 ]\n    at test\
    \ (/tmp/tmpri1lelos.js:36:10)\n    at Object.<anonymous> (/tmp/tmpri1lelos.js:46:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    return even_odd_count_recursive(num,0,0);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0gxkmkdr.js:6\n    return even_odd_count_recursive(num,0,0);\n\
    \    ^\n\nReferenceError: even_odd_count_recursive is not defined\n    at even_odd_count\
    \ (/tmp/tmp0gxkmkdr.js:6:5)\n    at test (/tmp/tmp0gxkmkdr.js:13:20)\n    at Object.<anonymous>\
    \ (/tmp/tmp0gxkmkdr.js:23:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var even = 0;\n  var odd = 0;\n\
    \  while (num > 0){\n    num = num%10 + num/10\n    if (num%2 === 0) even++;\n\
    \    else odd++;\n  }\n  return [even, odd]\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n\tlet evenCount = 0;\n\tlet oddCount\
    \ = 0;\n\tfor (let i = 0; i < num.length; i++) {\n\t\tif (num[i] % 2 === 0) {\n\
    \t\t\tevenCount++;\n\t\t} else {\n\t\t\toddCount++;\n\t\t}\n\t}\n\treturn [evenCount,\
    \ oddCount];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpcd2p43r6.js:23:10)\n    at Object.<anonymous> (/tmp/tmpcd2p43r6.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  let odd = num.toString().split(\"\
    \").filter((v, i, a) => i % 2 === 1).length;\n  let even = num.toString().split(\"\
    \").filter((v, i, a) => i % 2 === 0).length;\n  return [even,odd];\n}\n\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 0 ]\n\nshould equal\n\n[ 0, 1 ]\n \
    \   at test (/tmp/tmpwqdybhke.js:17:10)\n    at Object.<anonymous> (/tmp/tmpwqdybhke.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let result = [];\n    let even_count\
    \ = 0;\n    let odd_count = 0;\n\n    for(let i=0;i<=Math.pow(10,Math.floor(Math.log10(num))+1);i++){\n\
    \        if(num%Math.pow(10,i)===0){\n            even_count += 1;\n        }else{\n\
    \            odd_count += 1;\n        }\n    }\n\n    result.push(even_count,odd_count);\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 10 ]\n\nshould equal\n\n[ 0, 1 ]\n\
    \    at test (/tmp/tmphzyvy3fr.js:27:10)\n    at Object.<anonymous> (/tmp/tmphzyvy3fr.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 10 ],\n  expected: [ 0, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n  var even = 0, odd = 0, i = 0;\n\
    \  while(i < num.toString().length){\n    var a = num.toString().charAt(i), b\
    \ = num.toString().charAt(i + 1);\n    if (a === b) even++;\n    else odd++;\n\
    \    i += 2;\n  }\n  return [even, odd];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 0, 2 ]\n\nshould equal\n\n[ 1, 1 ]\n \
    \   at test (/tmp/tmpfyc2gzk8.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfyc2gzk8.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 0, 2 ],\n  expected: [ 1, 1 ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Given an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
    \ ==> (1, 2)\nfunction even_odd_count(num){\n    let even=0;\n    let odd=0;\n\
    \    for(let i =0;i<num;i++){\n        if(num%2==0){\n            even+=1;\n \
    \       }\n        else{\n            odd+=1;\n        }\n    }\n    return {'even':even,'odd':odd};\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n{ even: 0, odd: 7 }\n\nshould equal\n\n\
    [ 0, 1 ]\n    at test (/tmp/tmpix0cf2ve.js:24:10)\n    at Object.<anonymous> (/tmp/tmpix0cf2ve.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: { even: 0, odd: 7 },\n  expected: [ 0, 1\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError

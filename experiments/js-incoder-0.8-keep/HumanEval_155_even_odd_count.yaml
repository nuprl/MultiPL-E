name: HumanEval_155_even_odd_count
language: js
prompt: "//Given an integer. return a tuple that has the number of even and odd digits\
  \ respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
  \ ==> (1, 2)\nfunction even_odd_count(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
  \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
  \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
  \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
  \ 0]);\n}\n\ntest();"
completions: ["    // write code here\n    var even_count = 0;\n    var odd_count\
    \ = 0;\n    while(num>0){\n        var temp = num%10;\n        if(temp%2 == 0){\n\
    \            even_count++;\n        }else{\n            odd_count++;\n       \
    \ }\n        num = num/10;\n    }\n    return [even_count,odd_count];\n}", "\t\
    let even = num.toString().split(\"\").filter((n) => n % 2 === 0);\n\tlet odd =\
    \ num.toString().split(\"\").filter((n) => n % 2 != 0);\n\treturn {\n\t\teven:even.length,\n\
    \t\todd:odd.length\n\t}\n}\n", "  return [parseInt(num.toString().split('-')[1].replace(/0/g,\
    \ '')), parseInt(num.toString().split('-')[0].replace(/0/g, ''))]\n}\n", "   \
    \ var even = 0, odd = 0, i = 1, count = 0, temp_sum = 0;\n    while(i < num){\n\
    \        temp_sum = num / i;\n        if(temp_sum % 2 === 0){\n            count++;\n\
    \            even++;\n        }else{\n            odd++;\n        }\n        i++;\n\
    \    }\n    return ({even:even, odd:odd});\n}\n", "  let even = 0;\n  let odd\
    \ = 0;\n  \n  while (num >= 0){\n    \n    //if the number is even, add 2 to even\n\
    \    if (num % 2 == 0){\n      even = even + 2;\n    } \n    \n    //if the number\
    \ is odd, add 1 to odd\n    else if (num % 2 == 1){\n      odd = odd + 1;\n  \
    \  }\n    \n    //else, break\n    else{\n      break;\n    }\n    \n    //decrement\
    \ the number by one\n    num = num - 1;\n  }\n  \n  //return tuple with number\
    \ of even and odd digits.\n  return [even, odd];\n}\n", "    var digits=num.toString().split('');\n\
    \    var odd_digits=[];\n    var even_digits=[];\n    for(var i=0; i< digits.length;\
    \ i++){\n        if(digits[i]%2==0){\n            even_digits.push(digits[i]);\n\
    \        }else{\n            odd_digits.push(digits[i]);\n        }\n    }\n \
    \   return({even:even_digits, odd:odd_digits});\n}\n", "    num = num.toString().split('');\n\
    \    var even = 0, odd = 0;\n    for(var i = 0; i <num.length; i++){\n       \
    \ if(num[i] % 2 == 0){\n            even++;\n        }\n        else{\n      \
    \      odd++;\n        }\n    }\n    return ([even, odd])\n}\n", "   if(num ===\
    \ 0){\n      return (0,0);\n   }\n   if(num < 0){\n      return (even_odd_count(-num)[0]+1,even_odd_count(-num)[1]+1);\n\
    \   }\n   let str = \"\";\n   while(num!=0){\n      str = (num % 10) + str;\n\
    \      num = Math.floor(num/10);\n   }\n   let even = 0;\n   let odd = 0;\n  \
    \ for(let i = str.length-1;i>=0;i--){\n      if(str[i] % 2 === 0){\n         even++;\n\
    \      }else{\n         odd++;\n      }\n   }\n   return (even,odd);\n}\n", " \
    \   var count_even = 1;\n    var count_odd = 0;\n    while(num>0){\n        var\
    \ remainder = num%10;\n        num = Math.floor( num/10);\n        if(remainder\
    \ === 0){\n            count_even += 1;\n        }\n        else{\n          \
    \  count_odd += 1;\n        }\n    }\n    return(count_even, count_odd);\n}\n",
  "  let result=[];\n  while(num){\n    result.push(num%10);\n    num/=10;\n  }\n\
    \  let evenCount=0;\n  for(let i=0;i<result.length;i++){\n    if(result[i]%2==0){\n\
    \      evenCount++;\n    }\n  }\n  return [evenCount,result.length-evenCount-1];\n\
    }\n", "\tlet odd = 1;\n\tlet even = 1;\n\tif(num !== 0){\n\t\tlet temp = num %\
    \ 10;\n\t\twhile(temp != 0){\n\t\t\tif(temp % 2 === 0){\n\t\t\t\teven++;\n\t\t\
    \t} else {\n\t\t\t\todd++;\n\t\t\t}\n\t\t\ttemp = num % 10;\n\t\t\tnum = Math.floor(num\
    \ / 10);\n\t\t}\n\t}\n\treturn [even,odd];\n}\n", "  let even = 0;\n  let odd\
    \ = 0;\n  let strNum = num.toString().split(\"\");\n  strNum.forEach(item => {\n\
    \    if (parseInt(item) % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  });\n  return { even, odd };\n}\n", "   var sum = 0;\n   while(num >\
    \ 0){\n      if(num % 2 ==0){\n         sum++\n      }else{\n         sum--\n\
    \      }\n      num = Math.floor(num / 10)\n   }\n   return [sum, sum]\n}\n",
  "  let count = 0;\n  while(num > 0){\n    count += num%10 == 0 ? 1 : 0;\n    num\
    \ = Math.floor(num/10)\n  }\n  return count\n}\n", "  if(num == 0){\n    return\
    \ (0, 1)\n  }\n  let count = 0\n  while(num > 0){\n    count += isEven(num)? 0:\
    \ 1\n    num = Math.floor(num / 10)\n  }\n  return count\n}\n", "\tvar num_digits\
    \ = num.toString().length;\n\tvar odd_count = 0;\n\tvar even_count = 0;\n\t\n\t\
    for(var i=0; i<num_digits; i++){\n\t\t\n\t\tif(num%10 == 0){\n\t\t\teven_count\
    \ += 1;\n\t\t}\n\t\telse{\n\t\t\todd_count += 1;\n\t\t}\n\t\t\n\t\tnum = num/10;\n\
    \t}\n\t\n\treturn (even_count, odd_count);\n}\n", "    \n    const odd = num %\
    \ 2;\n    const even = num - odd;\n    return [even, odd];\n}\n", "    let even\
    \ = 0;\n    let odd = 0;\n    let num_str = String(num);\n    for (const digit\
    \ of num_str){\n        if (digit.toLowerCase() === 'e'){\n            even++;\n\
    \        }\n        else{\n            odd++;\n        }\n    }\n    return [even,odd];\n\
    }", "    let even = 0;\n    let odd = 0;\n    while(num > 0){\n        num = num\
    \ % 10\n        if(num % 2 == 0){\n            even = even + 1\n        }else{\n\
    \            odd = odd + 1\n        }\n    }\n    return [(even, odd)]\n}\n",
  "  if((num===0)||(num===1)){\n    return (\"even\", 1);\n  }\n  let result = [];\n\
    \  let sum = 0;\n  while (num>0){\n    result.push(sum);\n    sum = sum + Math.floor(num/10);\n\
    \    num = num - sum*10;\n  }\n  if(result.length === 1){\n    return (\"odd\"\
    , 1);\n  }\n  if(result.length===2){\n    return (\"even\", result[1]);\n  }\n\
    \  return (\"odd\", result[0]);\n}\n", "  let even = 0;\n  let odd = 0;\n  let\
    \ i = 0;\n  while(num > 0){\n    i++;\n    num = num / 10;\n  }\n  while(i < num){\n\
    \    even++;\n    num = num / 10;\n  }\n  while(i > 0){\n    i--;\n    num = num\
    \ / 10;\n  }\n  return (odd, even);\n}\n", "  //initialize variables\n  var even\
    \ = 0, odd = 0, i=0;\n  while(i<num){\n    //if i is even, increment even.\n \
    \   if(num%2 === 0){\n      even++;\n    }\n    //if i is odd, increment odd.\n\
    \    else{\n      odd++;\n    }\n    i++;\n  }\n  return [even, odd];\n}\n", " \
    \   let count = 0;\n    num = Math.abs(num);\n    while (num > 0){\n        num\
    \ = num / 10;\n        count++;\n    }\n    return count;\n}\n", "  // Your code\
    \ here\n  if(num < 0) return (odd_count(-num), even_count(num));\n  let strNum\
    \ = (\"\" + num);\n  let evens = 0;\n  let odds = 0;\n  for(let i = 0; i < strNum.length;\
    \ i++){\n    if (strNum[i] % 2 == 0){\n      evens += 1;\n    }\n    else {\n\
    \      odds += 1;\n    }\n  }\n  return ([evens, odds]);\n}\n", "  return ({even:num%2\
    \ === 0,odd:num%2 === 1});\n}\n", "\treturn (num%2==0)?([num/2,num/2]):([1,1]);\n\
    }\n", "    var even = 0, odd = 0, remainder;\n    if(num<0){\n        remainder\
    \ = num%10;\n        num = -num;\n    }\n    while(num > 0){\n        remainder\
    \ = num%10;\n        num = (num-remainder)/10;\n        if(remainder%2 == 0){\n\
    \            even++;\n        } else {\n            odd++;\n        }\n    }\n\
    \    return ([even,odd]);\n}\n", "  let even_count = 0\n  let odd_count = 0\n\
    \  for (let i = 0; i <= Math.abs(num); i++){\n    if (num % 2 === 0 && num % 10\
    \ === 0){\n      even_count++\n    }\n    \n    if (num % 2 !== 0 && num % 10\
    \ === 0){\n      odd_count++\n    }\n  }\n  return [even_count, odd_count]\n}\n",
  "    var count = 0;\n    while( num != 0){\n        num = Math.floor(num/10);\n\
    \        count++;\n    }\n    return (count, count%2);\n}\n", "  let numStr =\
    \ num.toString();\n  let evenCount = 0;\n  let oddCount = 0;\n  numStr.split('').forEach(item\
    \ => {\n    if(item.trim().match(/^(-?\\d+)$/)) {\n      if(parseInt(item) % 2\
    \ == 0){\n        evenCount++;\n      }else{\n        oddCount++;\n      }\n \
    \   }\n  })\n  return [evenCount,oddCount];\n}\n", "  var totalEven = 0; var totalOdd\
    \ = 0;\n  for(var i = 0; i < num.length; i++){\n    if(num[i] % 2 === 0){\n  \
    \    totalEven++;\n    }else{\n      totalOdd++;\n    }\n  }\n  return [totalEven,totalOdd];\n\
    }\n", "\tlet count=0\n\twhile(num>0){\n\t\tlet digit=num%10\n\t\tnum/=10\n\t\t\
    if(digit%2==0){\n\t\t\tcount++\n\t\t}\n\t}\n\treturn (count,count+1)\n}\n", " \
    \   var even=0;\n    var odd=0;\n    if(num<0){\n        num=Math.abs(num);\n\
    \        even=-1;\n        odd=-num%2;\n    }else if(num==0){\n        even=0;\n\
    \        odd=0;\n    }else{\n        var i=2;\n        while(i<=num){\n      \
    \      if(num%i==0){\n                even+=2;\n            }else{\n         \
    \       odd+=1;\n            }\n            i++;\n        }\n    }\n    return([even,\
    \ odd]);\n}\n", "\tvar even_odd = [];\n\tvar count = 0;\n\tvar remainder = 0;\n\
    \twhile(num){\n\t\tremainder = num % 10;\n\t\tif(remainder == 0){\n\t\t\teven_odd.push(remainder);\n\
    \t\t\tcount++;\n\t\t}else{\n\t\t\teven_odd.push(remainder);\n\t\t\teven_odd.push(0);\n\
    \t\t}\n\t\tnum = Math.floor(num/10);\n\t}\n\treturn [count,even_odd.length];\n\
    }", "  let count = 0;\n  for(let i = 0; i <= num; i += 2){\n    if(num % 2 ===\
    \ 0) count++;\n    else count--;\n  }\n  return [count, num % 2];\n}\n", "   \
    \ let sum = 0;\n    let flag = 0;\n    while(num > 0){\n        sum = sum + Math.floor(num\
    \ / 10);\n        num = num % 10;\n    }\n    if(sum % 2 !== 0){\n        flag\
    \ = 1;\n    }\n    return (flag, sum);\n}\n", "\tvar even = 0, odd = 0;\n\tnum.toString().split(\"\
    \").forEach(function(digit, index){\n\t\tif((parseInt(digit) % 2 == 0) || (parseInt(digit)\
    \ % 2 == 1)){\n\t\t\tif(parseInt(digit) == 0){\n\t\t\t\teven++\n\t\t\t}else{\n\
    \t\t\t\todd++\n\t\t\t}\n\t\t}\n\t})\n\treturn({\n\t\teven: even,\n\t\todd: odd\n\
    \t})\n}", "  var res = {even:0, odd:0}\n  while(num > 0){\n    res.even = res.even\
    \ * 10 + num % 10;\n    res.odd = res.odd * 10 + num % 10;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return res;\n}\n", "\t\n\treturn [even_digits(num), odd_digits(num)];\n\
    \n}\n", "    if (num < 0){\n        throw('Only positive numbers are allowed.');\n\
    \    }\n\n    let evenCount = 0;\n    let oddCount = 0;\n\n    while (num > 0){\n\
    \        if (num % 2 === 0){\n            evenCount += 1;\n        }\n       \
    \ else {\n            oddCount += 1;\n        }\n\n        num = Math.floor(num\
    \ / 10);\n    }\n\n    return { evenCount, oddCount };\n}\n", "    // Only even\
    \ and odd numbers can be considered 'even' and odd\n    if(num%2===0) return (0,1)[num%2===0];\n\
    \    return (1,0)[num%2!==0];\n}", "    let even=0;\n    let odd=0;\n    if(num<0){\n\
    \        num=(-num);\n    }\n    let num=Number(num);\n    let digits=String(num).split(\"\
    \");\n    for (let i of digits){\n        if(i%2==0){\n            even++;\n \
    \       }else{\n            odd++;\n        }\n    }\n    return (even,odd);\n\
    }\n", "  let even=0\n  let odd=0\n  while (num>0){\n    let rem = num%10\n   \
    \ if (rem%2 === 0){\n      even++\n    } else {\n      odd++\n    }\n    num =\
    \ Math.floor(num/10)\n  }\n  return [even, odd]\n}\n\n", "    let count = 0;\n\
    \    while(num > 0){\n        let x = num % 10;\n        num = num / 10;\n   \
    \     if(x % 2 == 0){\n            count = count + 1;\n        }\n        if(x\
    \ % 2 == 1){\n            count = count + 1;\n        }\n    }\n    return(count);\n\
    }\n", "  if(num < 0) return (-num, -num)\n  var even = 0;\n  var odd = 0;\n  for(var\
    \ i = num.toString().length - 1; i >= 0; i --){\n    var cd = num.toString().charAt(i);\n\
    \    if(parseInt(cd) === 0) continue;\n    if(cd === \"-\") continue;\n    if(cd\
    \ === \"+\") continue;\n    if(cd === \"0\") continue;\n    if(cd === \"1\") even++;\n\
    \    else odd++;\n  }\n  return (even, odd);\n}\n", "  let even_count=0\n  let\
    \ odd_count=0\n  for(let i=0;i<num.toString().length;i++){\n    let num_digit=num.toString().charAt(i);\n\
    \    if(num_digit=='0'){\n      even_count++;\n    }\n    else if(num_digit=='1'){\n\
    \      odd_count++;\n    }\n  }\n  return ({even_count:even_count, odd_count:odd_count});\n\
    }\n", "    let even = 0;\n    let odd = 1;\n    while(num > 0){\n        num =\
    \ num/10;\n        if(num%2 === 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    return ([even, odd]);\n}\n", "  if(num\
    \ < 0){\n    throw Error('Cannot determine even or odd count for negative number.');\n\
    \  }\n  if(num === 0){\n    return (0, 0);\n  }\n  let odd = 0;\n  let even =\
    \ 0;\n  for(let i = 0; i < num.length; i++){\n    const current_digit = num %\
    \ 10;\n    num = Math.floor(num / 10);\n    if(current_digit % 2 === 0){\n   \
    \   even += 1;\n    }\n    else {\n      odd += 1;\n    }\n  }\n  return (even,\
    \ odd);\n}\n", "    num = num.toString();\n    let even = 0;\n    let odd = 0;\n\
    \    for(let i = 0;i<num.length;i++){\n        num = num.substr(0,i+1)\n     \
    \   if(num.length%2 === 0){\n            even++;\n        }\n        else{\n \
    \           odd++;\n        }\n    }\n    return([even,odd])\n}\n", "  if (num\
    \ < 0){\n    throw new Error(\"Please input a number\");\n  }\n  num = num.toString();\n\
    \  let countEven = 0;\n  let countOdd = 0;\n  for (let i = num.length - 1; i >=\
    \ 0; i--) {\n    countEven = countEven + num[i].toString().length - 1;\n    if\
    \ (num[i].toString().length >= 2) {\n      countOdd = countOdd + 1;\n    }\n \
    \ }\n  return [countEven, countOdd];\n}\n", "  let even = 0,\n    odd = 0;\n \
    \ \n  for(let i=0;i<=num;i++){\n    if(i%2==0){\n      even++;\n    }else{\n \
    \     odd++;\n    }\n  }\n\n  return ([even,odd]);\n}\n", "  let num_arr = [];\n\
    \  for(let i=0; i<num.length;i++){\n    if(num%i===0 && num/i<0){\n      num_arr.push(i);\n\
    \    }\n  }\n  num_arr.sort((a,b)=>{\n    if(a%2==1){\n      return 1;\n    }\n\
    \    if(b%2==1){\n      return -1;\n    }\n    return 0;\n  });\n  let even =\
    \ 0;\n  let odd = 0;\n  num_arr.forEach((val)=>{\n    if(val%2===0){\n      even++;\n\
    \    }\n    else{\n      odd++;\n    }\n  });\n  if(num_arr.length==0){\n    return\
    \ (0,0)\n  }\n  if(even>odd){\n    return (even,even);\n  }\n  else{\n    return\
    \ (odd,odd)\n  }\n}\n", "  if(num == 0) return (0, 0);\n  if(num < 0) return (0,\
    \ 0);\n  let sum = 0;\n  while(num > 0){\n    sum += ((num % 10) !== 0) ? 1 :\
    \ 0;\n    num /= 10;\n  }\n  return ((sum % 2) === 0) ? (sum / 2, (sum + 1) /\
    \ 2) : (sum, sum + 1);\n}\n", "  let odd = num%10;\n  let even = num/10 - odd;\n\
    \  return ([even,odd]);\n}", "\tvar even = num % 2 ? 1 : 0;\n\tvar odd = num %\
    \ 2 ? 0 : 1 ;\n\tvar result = num / 2;\n\tif(num < 0){\n\t\teven = odd = -even;\n\
    \t\tresult = -result;\n\t}\n\treturn [result, even, odd];\n}\n", "    if(num ===\
    \ 0){\n        return (1,0);\n    }\n    const firstDigit = Math.trunc(num / 10);\n\
    \    const secondDigit = num % 10;\n    return (even_odd_count(firstDigit) +1,\
    \ secondDigit);\n}\n", "    \n    if (num == 0){\n        return (0, 0)\n    }\n\
    \    \n    let even_count = 0\n    let odd_count = 0\n    let n = Math.abs(num)\n\
    \    \n    while (n > 0){\n        \n        if (n % 2 == 0){\n            even_count\
    \ += 1\n        }\n        \n        n /= 10\n    }\n    \n    n = Math.abs(num)\n\
    \    \n    while (n > 0){\n        \n        if (n % 2 == 1){\n            odd_count\
    \ += 1\n        }\n        \n        n /= 10\n    }\n    \n    return (even_count,\
    \ odd_count)\n}", "    let even = 1;\n    let odd = 1;\n    while (num>0){\n \
    \       num = num % 10;\n        if (num%2==0){\n            even++;\n       \
    \ } else {\n            odd++;\n        }\n    }\n    return([even,odd]);\n}\n",
  "    num = Math.abs(num);\n    let evenCount = 0;\n    let oddCount = 0;\n    if(num<0){\n\
    \        num = -num;\n        evenCount = 1;\n        oddCount = 1;\n    }\n \
    \   while(num>0){\n        if(num%2 == 0){\n            evenCount++;\n       \
    \ }else{\n            oddCount++;\n        }\n        num = Math.floor(num / 10);\n\
    \    }\n    console.log(`${evenCount} ${oddCount}`);\n    return [evenCount, oddCount];\n\
    }\n", "  var total = 0;\n  var digits = String(num).split('');\n  for (var i =\
    \ 0; i < digits.length; i++){\n    var digit = digits[i];\n    digit = parseInt(digit);\n\
    \    total += (digit % 2 === 0) ? 0 : 1;\n  }\n  return [total, digits.length\
    \ - total];\n}\n", "  return even_odd_count_helper(num, 0, 1);\n}\n", "    let\
    \ even_counter = 0;\n    let odd_counter = 0;\n\n    while(num > 0){\n       \
    \ if (num % 2 === 0) {\n            even_counter++;\n        }\n        num =\
    \ Math.floor(num / 2);\n    }\n    \n    return even_counter, odd_counter;\n}\n",
  "  var even=0;\n  var odd=0;\n  while(num>0){\n    if(num%2==0){\n      even++;\n\
    \    }else{\n      odd++;\n    }\n    num=Math.floor(num/10);\n  }\n  return [even,odd];\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThe `%` operator is also not available\
    \ in Javascript.\n<|/ c |>\n<| c |>\nI forgot that it's valid in php, I've added\
    \ it to the answer\n<|/ c |>\n<| a tags=javascript,function dscore=1 |>\nAs mentioned\
    \ by others, it can be implemented as below:\n<code>", "  let even_count = 0;\n\
    \  let odd_count = 0;\n  let temp = num;\n  let last_digit = 0;\n  while(temp\
    \ !== 0){\n    last_digit = temp % 10;\n    temp = Math.floor(temp / 10);\n  \
    \  if(last_digit % 2 === 0){\n      even_count++;\n    }else{\n      odd_count++;\n\
    \    }\n  }\n  return [even_count, odd_count];\n}\n", "    var count = 0;\n  \
    \  while( num >= 0 ){\n        count++;\n        num /= 10;\n    }\n    return\
    \ ({\n        \"even\" : count,\n        \"odd\" : Math.ceil(count / 2)\n    });\n\
    }\n", "  return even_odd_count_helper(num, 0);\n}\n", "\tvar count = 0, oddCount\
    \ = 0;\n\tfor(var x = 1; x <= num; x++){\n\t\tif(num % x == 0){\n\t\t\tcount++;\n\
    \t\t}\n\t\telse if(num % x == 1){\n\t\t\toddCount++;\n\t\t}\n\t}\n\treturn [count,oddCount];\n\
    }", "  let result = num.toString().split('');\n  let evens = result.filter(x =>\
    \ x % 2 === 0);\n  let odds = result.filter(x => x % 2 !== 0);\n  return [evens.length,\
    \ odds.length];\n}\n</code>\n<|/ a dscore=0 tags=javascript |>\n<| a tags=javascript\
    \ |>\nThis answer is quite late, but thought I would share anyway as I find this\
    \ question one of the top Google search results for \"get even or odd digits in\
    \ javascript\" so thought this might help future searchers. A more efficient version\
    \ would be:\n<code>", "  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n\
    \    let rem = num % 10;\n    if(rem == 0){\n      even++;\n    } else {\n   \
    \   odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n\
    }\n", "    let n = Math.abs(num);\n    let even = 0;\n    let odd = 0;\n    while(n>0){\n\
    \        n = Math.floor(n/10)\n        if(n%2===0){\n            even++;\n   \
    \     }\n        else{\n            odd++;\n        }\n    }\n    return([even,odd])\n\
    }\n", "    num = Math.abs(num);\n    var odd = 0, even = 0;\n    while(num!=0){\n\
    \       if (num%2 == 0){\n         even++;\n       }\n       else{\n         odd++;\n\
    \       }\n       num /= 10;\n    }\n    return ([even,odd]);\n}", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  while(num >= 0){\n    if(num % 2 === 0){\n    \
    \  evenCount ++;\n    } else {\n      oddCount ++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return (evenCount, oddCount);\n}\n</cell>\n<cell>", "\tnum =\
    \ Math.abs(num);\n\tlet evenCount = 0;\n\tlet oddCount = 0;\n\twhile(num>0){\n\
    \t\tlet remainder = num % 10;\n\t\tif(remainder == 0)\n\t\t\tevenCount++;\n\t\t\
    else\n\t\t\toddCount++;\n\t\tnum = Math.floor(num/10);\n\t}\n\treturn [evenCount,\
    \ oddCount];\n}\n\n", "  const even = num.toString().match(/(^\\d*)$/)[1];\n \
    \ const odd = num.toString().match(/(^\\d*)$/)[0];\n  return { even: parseInt(even,\
    \ 10), odd: parseInt(odd, 10) }\n}\n", "  var result = [];\n  var numStr = String(num);\n\
    \  for(var i=0; i <= numStr.length; i++){\n    result.push( numStr.charAt(i).match(/[13579]/g)\
    \ ? (+i+1) : (i+1) );\n  }\n  return result;\n}\n", "  var count = 0;\n  while\
    \ (num > 0) {\n    count++;\n    num = num / 10;\n  }\n  return [count, count\
    \ % 2 === 0 ? 'even' : 'odd'];\n}\n", "    var even = 0;\n    var odd = 0;\n \
    \   for(var i = num;i>0;i--){\n        if(i % 2 == 0){\n            even++;\n\
    \        }\n        if(i % 2 == 1){\n            odd++;\n        }\n    }\n  \
    \  return [even,odd];\n}", "    \n    var even_counter=0;\n    var odd_counter=0;\n\
    \    var count=0;\n    \n    while (num > 0){\n        if (num % 2 === 0){\n \
    \           count++;\n        }\n        else {\n            count--;\n      \
    \  }\n        num = Math.floor(num / 10);\n    }\n    \n    return [even_counter,\
    \ odd_counter, count];\n}\n", "  let even = 0,\n      odd = 1\n\n  while (num\
    \ >= 0){\n    if (num % 2 === 0){\n      even++\n    } else {\n      odd++\n \
    \   }\n    num /= 10\n  }\n  return [even, odd]\n}\n", "  let count = 0;\n  let\
    \ odd = 1;\n  let even = 1;\n  while(num > 0){\n    if (num % 2 === 0){\n    \
    \  even++;\n    } else {\n      odd++;\n    }\n    num--;\n  }\n  return (even,\
    \ odd);\n}\n", "    let even = 0, odd = 0, n = num.toString();\n    while (n){\n\
    \        if (n % 2 === 0) even++; else odd++;\n        n = n.toString().slice(1);\n\
    \    }\n    return([even, odd]);\n}\n", "  let [numString, evenDigits, oddDigits]\
    \ = num.toString().split('');\n  let evenCount = evenDigits.length;\n  let oddCount\
    \ = oddDigits.length;\n  return [evenCount, oddCount]\n}\n", "  var str=String(num);\n\
    \  var even=[];\n  var odd=[];\n  for(i=str.length-1;i>=0;i--){\n    if(str.charAt(i)=='-')\
    \ break;\n    if(str.charAt(i)=='0') even.push(str.charAt(i));\n    if(str.charAt(i)!='0')\
    \ odd.push(str.charAt(i));\n  }\n  return({even:even,odd:odd});\n}", "  let even\
    \ = 1;\n  let odd = 0;\n  while(num > 0){\n      if(num % 2 === 0){\n        \
    \  even++;\n      }\n      num -= num % 2;\n      num--;\n  }\n  return [even,\
    \ odd];\n}\n", "  if(num<0){\n    return (0, 0);\n  }\n  \n  let even_count =\
    \ 0;\n  let odd_count = 0;\n  let temp = num;\n  while (temp > 0){\n    if(temp%2\
    \ == 0){\n      even_count++;\n    }\n    else{\n      odd_count++;\n    }\n \
    \   temp--;\n  }\n  return ({\n    even_count: even_count,\n    odd_count: odd_count\n\
    \  });\n}\n", "\tvar even_count = 0;\n\tvar odd_count = 0;\n\t\n\twhile(num >\
    \ 0){\n\t\tif(num % 2 == 0){\n\t\t\teven_count++;\n\t\t} else {\n\t\t\todd_count++;\n\
    \t\t}\n\t\t\n\t\tnum /= 10;\n\t}\n\t\n\treturn([even_count, odd_count]);\n}\n",
  "  let digits = num.toString().split('');\n  let evenCount = 0;\n  let oddCount\
    \ = 0;\n  for (let i = 0; i < digits.length; i++){\n    if (digits[i] % 2 ===\
    \ 0) evenCount++;\n    if (digits[i] % 2 !== 0) oddCount++;\n  }\n  return [evenCount,\
    \ oddCount];\n}", "  var res = [0,0];\n  var i=0;\n  while(num!==0){\n    res[i%2?0:1].push(num%10);\n\
    \    num = Math.floor(num/10);\n    i++;\n  }\n  return res\n}\n", "  if(num<0)\
    \ return 0;\n  let even=0; let odd=0; \n  while (num!==0) {\n     if (num%2==0)\
    \ even++;\n     else odd++;\n     num=Math.floor(num/10);\n  }\n  return ([even,\
    \ odd]);\n}\n", "\tvar even = num/2;\n\tvar odd = num%2;\n\treturn [even,odd];\n\
    }\n<|/ file source=github dstars=0 ext=.js |>\nvar countEven = even_odd_count;\n\
    var countOdd = even_odd_count;\n", "    let n = 0\n    while(num > 0){\n     \
    \   if(num % 2 == 0){\n            n++\n        }\n        num /= 2\n    }\n \
    \   return([n, n-1])\n}\n", "  let [even, odd] = num.toString(10).split('')\n\
    \  even = parseInt(even)\n  odd = parseInt(odd)\n  return [even, odd]\n}\n", " \
    \   var res = {\n        evens: 0,\n        odds: 0\n    }\n    var digit = num\
    \ % 10;\n    if (digit === 0) return res;\n    var res = even_odd_count(num/10);\n\
    \    if (res.odds !== 0 && digit % 2 === 1) {\n        res.odds++;\n    } else\
    \ if (res.evens !== 0 && digit % 2 === 0) {\n        res.evens++;\n    }\n   \
    \ return res;\n}\n", "  let odd = num % 2;\n  let even = num / 2;\n\n  return\
    \ { even, odd };\n}\n", "    var digits = String(num);\n    var digit;\n    var\
    \ odd_count = 0;\n    var even_count = 0;\n    for (var i = 0; i < digits.length;\
    \ i++){\n        digit = digits[i];\n        if (digit.match(/[0-9]/)){\n    \
    \        if (digit.match(/[0-9]$/)){\n                even_count++;\n        \
    \    } else {\n                odd_count++;\n            }\n        }\n    }\n\
    \    return ([even_count, odd_count]);\n}", "  return num.toString().match(/([0])(\\\
    1)*/);\n}\n", "  var odd = 0;\n  var even = 0;\n  for(var i=1; i<=Math.ceil(num/10)+1;\
    \ i++){\n    if(num%10===0 && i!==1){\n      even++;\n    }\n    if(num%10!==0\
    \ && i%2===0){\n      odd++;\n    }\n  }\n  return [even,odd];\n}\n", "\tlet even\
    \ = 0;\n\tlet odd = 0;\n\tlet sum = 0;\n\twhile(num >= 0){\n\t\tlet mod = num\
    \ % 10;\n\t\tsum += mod;\n\t\tif(mod > 0){\n\t\t\todd += 1;\n\t\t}\n\t\telse{\n\
    \t\t\teven += 1;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\treturn [even, odd];\n}\n",
  "    num = num.toString()\n    var even = 0, odd = 0, digit\n    for (let i = 0;\
    \ i < num.length; i++){\n        digit = parseInt(num[i])\n        if (digit%2\
    \ !== 0){\n            odd++\n        } else {\n            even++\n        }\n\
    \    }\n    return([even, odd])\n}\n", "    let count = 0;\n    while(num > 0){\n\
    \        let mod = num % 10;\n        if(mod < 2){\n            count += 1;\n\
    \        }\n        num = num / 10;\n    }\n    return count;\n}\n", "\tvar even\
    \ = 0;\n\tvar odd = 1;\n\t\n\tfor (var i = num.length - 1; i >= 0; i--){\n\t\t\
    if (num[i]%2===0) even++;\n\t\telse odd++;\n\t}\n\treturn (even, odd);\n}\n",
  "  if(num === 0){\n      return (0,0);\n  }\n  if(num < 0){\n      return (Math.abs(num),1);\n\
    \  }\n  let odd_count = 0;\n  let even_count = 0;\n  let x = Math.abs(num);\n\
    \  for(let i = 0; i < (x); i++){\n      if((num % i) === 0){\n          even_count\
    \ += 1;\n      }\n      else{\n          odd_count += 1;\n      }\n  }\n  return\
    \ (even_count, odd_count);\n}\n", "    return num ? [even_odd_count(num % 10),\
    \ even_odd_count(Math.floor(num / 10))]\n    : [];\n}\n", "  const count = Number(num.toString()).length;\n\
    \  const even = count % 2 == 0;\n  const odd = !even;\n  return { even, odd };\n\
    }\n", "\tvar odd_sum = 0;\n\tvar even_sum = 0;\n\tvar even = true;\n\n\tfor(var\
    \ i = 0; i< num.length; i++){\n\t\t\n\t\tif(even){\n\t\t\tif(num[i] == 1){\n\t\
    \t\t\teven_sum++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\todd_sum++;\n\t\t\t}\n\t\t}\n\t\
    \telse{\n\t\t\tif(num[i] == 1){\n\t\t\t\todd_sum++;\n\t\t\t}\n\t\t\telse{\n\t\t\
    \t\teven_sum++;\n\t\t\t}\n\t\t}\n\t\teven = !even;\n\t}\n\n\treturn [even_sum,\
    \ odd_sum];\n}", "\tvar count = 0;\n\tvar even = 1;\n\tvar odd = 1;\n\twhile(num\
    \ > 0){\n\t\tcount += ((num % 10) === 0);\n\t\tnum /= 10;\n\t\tif (num % 10 ===\
    \ 0){\n\t\t\teven++;\n\t\t}else{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn [even,odd];\n\
    }\n", "  var count = 0;\n  for (var i = num; i > 0; i--){\n    if ( i%2 === 0){\n\
    \      count++;\n    }else{\n      count += 2;\n    }\n  }\n  return [count, num\
    \ - count];\n}\n", "  let even_count = 0;\n  let odd_count = 0;\n  \n  if(num\
    \ >= 0){\n    for(let i=num;i>0;i--){\n      if(i%2 == 0){\n        even_count++;\n\
    \      }else{\n        odd_count++;\n      }\n    }\n  }else{\n    for(let i=num;i<0;i++){\n\
    \      if(i%2 ==0){\n        even_count++;\n      }else{\n        odd_count++;\n\
    \      }\n    }\n  }\n  return ({even_count, odd_count});\n}\n", "    var count\
    \ = [0,0]\n    for(var i=0;i<num;i++){\n      if((num%10)%2===0){\n        count[0]++\n\
    \      }\n      else if((num%10)%2!==0){\n        count[1]++\n      }\n    }\n\
    \    return count;\n}\n", "    let num_str = num.toString();\n    let count =\
    \ 0;\n    for(let i = 0; i < num_str.length; i++){\n        if (num_str[i] % 2\
    \ !== 0){\n            count += 1;\n        }\n        if (num_str[i] % 2 ===\
    \ 0){\n            count += 2;\n        }\n    }\n    \n    return count;\n}\n",
  "  return even_odd_count(num, 1);\n}\n", "  if(num == 0) return (0,0)\n  if(num\
    \ < 0){\n    return (-1,1)\n  }\n  let evenCount = 0\n  let oddCount = 0\n  for(let\
    \ i = num; i-->0;){\n    if(i%2 == 0){\n      evenCount += 1;\n    }\n    else{\n\
    \      oddCount += 1;\n    }\n  }\n  return (evenCount, oddCount);\n}\n", "  let\
    \ even = 0;\n  let odd = 1;\n  let counter = 0;\n  while(num > 0){\n      counter++;\n\
    \      if(num % 2 == 0){\n          even++;\n          num/=2;\n      }else{\n\
    \          odd++;\n          num/=2;\n      }\n  }\n  return(even, odd, counter);\n\
    }", "  let count  = 0;\n  let even   = 0;\n  let odd    = 0;\n  while (num){\n\
    \    if (num%2 == 0){\n      even++;\n    }else{\n      odd++;\n    }\n    num\
    \ = Math.floor(num/2);\n  }\n  return ([even, odd]);\n}\n", "  let arr=[];\n \
    \ let count=0;\n  while(num){\n    arr.push(num%10);\n    num=Math.floor(num/10)\n\
    \  }\n  for(let i=0;i<arr.length;i++){\n    if(arr[i]==0){\n      count++;\n \
    \   }else if(arr[i]!=0){\n      count+=2\n    }\n  }\n  return [count,count-arr.length];\n\
    }", "\tlet result = {\n\t\teven_count : 0,\n\t\todd_count : 0\n\t}\n\twhile(num\
    \ > 0){\n\t\tresult.even_count = result.even_count + num%2 === 0 ? result.even_count\
    \ : result.even_count\n\t\tresult.odd_count  = result.odd_count + num%2 === 1\
    \ ? result.odd_count : result.odd_count\n\t\tnum  = Math.floor( num / 10 )\n\t\
    }\n\treturn result\n}\n", "\tlet even = 0,\n\todd = 0;\n\twhile (num > 0) {\n\t\
    \tlet lastDigit = num % 10;\n\t\tnum = Math.floor(num / 10);\n\t\tif (lastDigit\
    \ % 2 === 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn\
    \ [even, odd];\n}\n", "  var result = 0;\n  for(var i=0;i<num.toString().length;i++){\n\
    \    if(num.toString()[i]%2==0){\n      result++;\n    }\n  }\n  return result;\n\
    }\n", "  var even = [], odd = [];\n  for (var i = Math.trunc(num); i; i--){\n\
    \    var remainder = num % i;\n    if (remainder > 0){\n      even.unshift(remainder)\n\
    \    }\n    else{\n      odd.unshift(remainder)\n    }\n  }\n  return [even.length,\
    \ odd.length];\n}\n", "  let even_count = 0;\n  let odd_count = 0;\n  if(num <\
    \ 0) {\n    num = -num;\n  }\n  while (num > 0) {\n    if(num%2 === 0) {\n   \
    \   even_count ++;\n    }\n    else {\n      odd_count ++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even_count, odd_count];\n}\n", "   var even = parseInt(num\
    \ / 2)\n   var odd = num - (even*2)\n   return([even,odd])\n}\n", "    var count\
    \ = 0, digit = 0;\n    while(num != 0){\n        if(num % 2 === 0){\n        \
    \    digit++;\n        }\n        num/= 10;\n    }\n    return { even: digit,\
    \ odd: count-digit };\n}\n", "    let count = 0\n    let odd = 0\n    let even\
    \ = 0\n    while(num > 0){\n        count++\n        num = num/10\n        if(num\
    \ % 2 === 0){\n            even++\n        }else{\n            odd++\n       \
    \ }\n    }\n    return [even, odd]\n}\n", "    var even = 0, odd = 0, num = Math.abs(num);\n\
    \    while(num > 0){\n        num = Math.floor(num/10);\n        ++even;\n   \
    \     if(num%2 === 0){\n            ++odd;\n        }\n    }\n    return {'even':even,\
    \ 'odd':odd};\n}\n", "  var even = 0,\n      odd = 0;\n  var x = num;\n  if(x<0){\n\
    \    x = Math.abs(num);\n  }\n  while(x>0){\n    var y = Math.floor(x / 10);\n\
    \    x=x%10;\n    if(y%2===0) even++;\n    else odd++;\n  }\n  return [even,odd];\n\
    }", "  let arr = [];\n  while(num > 0){\n    let lastDigit = Math.floor(num/10);\
    \ //The last digit of the number divided by 10\n    arr.push(lastDigit);\n   \
    \ num = num - lastDigit * 10;\n  }\n  //console.log(arr);\n  let even = [];\n\
    \  let odd = [];\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 ===\
    \ 0){\n      even.push(arr[i]);\n    } else {\n      odd.push(arr[i]);\n    }\n\
    \  }\n  return (even, odd);\n}\n", "    let even = 0\n    let odd = 0\n    while(num\
    \ > 0){\n        num = Math.floor(num/10)\n        even += num%2 ? 1 : 0\n   \
    \     odd += num%2 ? 0 : 1\n    }\n    return [(even, odd)]\n}", "  if(num ==\
    \ 0){\n    return (0, 0);\n  }\n  else if (num <= 0){\n    return (1, 1);\n  }\n\
    \  else {\n    var even = 0;\n    var odd = 0;\n\n    while (num > 0){\n     \
    \ if(num % 2 === 0){\n        even++;\n      }\n      else {\n        odd++;\n\
    \      }\n      num = Math.floor(num / 10);\n    }\n    return (even, odd);\n\
    \  }\n};\n", "  if (num<0) return (0,0);\n  var ans = 0,even = 0,odd = 0;\n  var\
    \ numstr = String(num);\n  for (var i = 0; i<numstr.length; i++){\n    num = numstr[i];\n\
    \    if (num%2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n  }\n\
    \  ans = (even,odd);\n  return (ans)\n}\n", "    \n    let result = 0;\n    let\
    \ oddDigits = 0;\n    let evenDigits = 0;\n\n    while(num > 0){\n        if(num%2\
    \ === 0){\n            evenDigits++;\n        }\n        else{\n            oddDigits++;\n\
    \        }\n        num/=10;\n    }\n\n    return ([evenDigits, oddDigits]);\n\
    \    \n}\n", "  let even_count = 0;\n  let odd_count = 0;\n  for(let i = 0; i\
    \ < num.length; i++){\n    let value = num[i];\n    if (value === '0'){\n    \
    \  even_count++;\n    }else{\n      odd_count++;\n    }\n  }\n  return [even_count,\
    \ odd_count];\n}", "    let count = 0\n    let odd = 0\n    let even = 0\n   \
    \ while (num > 0) {\n        if (num % 2 === 0) {\n            even++\n      \
    \  }else{\n            odd++\n        }\n        num = Math.floor(num/10)\n  \
    \  }\n    return [even,odd]\n}\n", "  if(num < 0){\n    throw new RangeError(\"\
    even_odd_count(): input must be greater than 0.\");\n  }\n  let evenCount = 0;\n\
    \  let oddCount = 0;\n  let numStr = String(num);\n  for(let i=0; i<numStr.length;\
    \ i++){\n    if(i % 2 === 0){\n      evenCount++;\n    }else{\n      oddCount++;\n\
    \    }\n  }\n  return [evenCount, oddCount]\n}\n", "    let result = [], even\
    \ = 0, odd = 0, tmp, count = [];\n    \n    for(let num of num){\n        tmp\
    \ = num % 2;\n        \n        if(tmp === 0){\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n    }\n    \n    result = [even, odd];\n\
    \    \n    for(let n of result){\n        count[n] = count[n] + 1 || 1;\n    }\n\
    \    \n    return count;\n}", "  let even = 1;\n  let odd = 1;\n  while(num >\
    \ 0){\n    if((num % 2 === 0) && (num % 2 !== 0)){\n      even++;\n      num =\
    \ num / 2;\n    } else {\n      odd++;\n      num = num / 2;\n    }\n  }\n  return\
    \ [even, odd];\n}", "    var odd = num%2 === 0;\n    var even = num%2 === 0;\n\
    \    return { \n        odd: odd, \n        even: even, \n        sum: even +\
    \ odd\n    };\n}\n", "  // Get the integer and make sure it's a positive integer\n\
    \  var even_odd = Math.floor((Math.pow(10,num) - Math.floor(Math.pow(10,num)))\
    \ + 1)\n  // Set the evens and odds variables\n  var even = 0, odd = 1\n  // Loop\
    \ through the integer and add 1 to the even/odd variables if the current digit\
    \ is even\n  for(var i = even_odd; i > 0; i--){\n    // Check if the current integer\
    \ is a multiple of 2\n    if(i % 2 === 0){\n      // If it is, add 1 to even\n\
    \      even++\n    } else {\n      // If it isn't, add 1 to odd\n      odd++\n\
    \    }\n  }\n  return [even,odd]\n}\n", "  let even_count = 0\n  let odd_count\
    \ = 0\n  \n  if(num >= 0){\n    const arr = [...String(num)]\n    \n    for(let\
    \ i = 0; i < arr.length; i++){\n      if(arr[i] % 2 === 0){\n        even_count++\n\
    \      }\n      else{\n        odd_count++\n      }\n    }\n  }\n\n  return [even_count,\
    \ odd_count]\n}\n</cell>\n<cell>", "  let count = 0;\n  const odd = num % 10\n\
    \  const even = num - odd\n  if(even > 0){\n    count++\n  }\n  if(odd > 0){\n\
    \    count++\n  }\n  return [count, count-1]\n}\n", "    // Write your code here\n\
    \    let even = 0;\n    let odd = 0;\n    while(num > 0){\n        if(num % 2\
    \ == 0){\n            even++;\n        }else{\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return [even,odd];\n}\n", "\tvar even = 0;\n\t\
    var odd = 0;\n\t\n\twhile(num>0){\n\t\tif(num%2 === 0){\n\t\t\teven++;\n\t\t}else{\n\
    \t\t\todd++;\n\t\t}\n\t\tnum = Math.floor(num / 10);\n\t}\n\treturn [even,odd];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    for (let i = 0; i < num.length;\
    \ i++){\n        if (num.charAt(i) === num.charAt(i).replace(/\\D/g,'')){\n  \
    \          even++;\n        }\n        else{\n            odd++;\n        }\n\
    \    }\n    return [even, odd]\n}\n", "    let even = num.toString().split(\"\"\
    ).filter((n) => n % 2 == 0);\n    let odd = num.toString().split(\"\").filter((n)\
    \ => n % 2 != 0);\n    return { even, odd };\n}", "  let evens = 0;\n  let odds\
    \ = 0;\n\n  while (num >= 0){\n    num%=10;\n    if (num%2===0) evens++;\n   \
    \ else odds++;\n  }\n  return ([evens, odds]);\n}\n", "    var even = 0;\n   \
    \ var odd = 0;\n    var remainder;\n    var newNum;\n    while(num > 0){\n   \
    \     remainder = num%10;\n        if(remainder % 2 === 0){\n            even++;\n\
    \        }else{\n            odd++;\n        }\n        num = Math.floor(num/10);\n\
    \    }\n    newNum = even + odd;\n    if(newNum >= 1){\n        return [even,\
    \ odd];\n    }else{\n        return [even, odd];\n    }\n}\n", "\tlet even_count\
    \ = 0;\n\tlet odd_count = 0;\n\twhile(num > 0){\n\t\tif(num % 2 == 0){\n\t\t\t\
    even_count++;\n\t\t}\n\t\telse{\n\t\t\todd_count++;\n\t\t}\n\t\tnum /= 2;\n\t\
    }\n\treturn [even_count, odd_count]\n}\n", "    // Base case\n    if (num < 0){\n\
    \        return (0, 0)\n    }\n    //Get the even digits\n    let even = (num\
    \ / 10).toFixed(0)\n    num -= even * 10\n    //Get the odd digits\n    let odd\
    \ = (num / 10).toFixed(0)\n    num -= odd * 10\n    //Return the tuple with the\
    \ number of even and odd digits\n    return([even, odd])\n}\n", "  var sum = 0;\n\
    \  var temp = 0;\n  while (num > 0) {\n    temp = num % 10;\n    sum += temp;\n\
    \    num = num / 10;\n  }\n  return [sum, sum % 2 === 0 ? 1 : 0];\n}\n</code>\n\
    <|/ a tags=javascript |>\n<| c |>\n`return [sum, sum % 2 === 0 ? 1 : 0];` - you\
    \ don't need ternary operators for that.\n<|/ c |>\n<| c |>\nThanks, I was just\
    \ trying to avoid the ugly ternary operator and using an if-else statement was\
    \ more concise. I will update my answer to reflect this.\n<|/ c |>\n<| c |>\n\
    Yes, and thank you. But my question is how to do it with only a loop. without\
    \ `while`, `for`, or anything else like that.\n<|/ c |>\n<| c |>\nThe answer you\
    \ have is pretty good, but since it uses `while` loop, what would be the solution\
    \ without a `while` loop? I thought there might be a way of doing it without using\
    \ a `while` loop.\n<|/ c |>\n<| c |>\nI updated my answer with another way of\
    \ doing it. Let me know if this works for you.\n<|/ c |>\n<| a tags=javascript\
    \ |>\nHere is my solution\n<code>\nvar input = 123;\nvar sum = 0;\nvar evenCount\
    \ = 0;\nvar oddCount = 0;\n\nif(input > 0) {\n  while(input > 0) {\n    var lastDigit\
    \ = input % 10;\n    sum = sum + lastDigit;\n\n    if(lastDigit % 2 === 0) {\n\
    \      evenCount++;\n    }\n    else {\n      oddCount++;\n    }\n\n    input\
    \ = input / 10;\n  }\n}\n", "  var odd = 0;\n  var even = 0;\n  while (num > 0){\n\
    \    if (num % 2 == 0){\n      even++;\n    }\n    else{\n      odd++;\n    }\n\
    \    num = parseInt(num/10)\n  }\n  return ([even, odd]);\n}\n", "  if(num < 0){\n\
    \    return 0;\n  }\n  let even = 0;\n  let odd = 0;\n  let value = num.toString().split('');\n\
    \  for(let i = 0; i < value.length; i++){\n    if(value[i] % 2 === 0){\n     \
    \ even++;\n    }else{\n      odd++;\n    }\n  }\n  return [even, odd];\n}\n",
  "  let sum = 0;\n  while (num > 0) {\n    sum = sum + num % 10;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return { even: sum % 2 === 0 ? 1 : 0, odd: sum % 2 === 1 ? 1\
    \ : 0 };\n}\n", "  let evens = 0;\n  let odds = 0;\n  let str = String(num);\n\
    \  for(let i = 0; i < str.length; i++){\n    if(str[i] % 2 === 0){\n      evens\
    \ += 1;\n    }else{\n      odds += 1;\n    }\n  }\n  return [evens, odds];\n}\n",
  "\tvar digit = 0;\n\tvar even = 0, odd = 0;\n\twhile(num > 0){\n\t\tdigit = num\
    \ % 10; // Get the remainder of division by 10\n\t\tif(digit % 2 == 0){ // If\
    \ the remainder is even\n\t\t\teven++;\n\t\t}\n\t\telse{\n\t\t\todd++;\n\t\t}\n\
    \t\tnum = Math.floor(num/10);\n\t}\n\t\n\treturn [even,odd];\n}\n", "    let even_count\
    \ = 0;\n    let odd_count = 0;\n\n    if(num < 0){\n        return (-num);\n \
    \   }\n\n    while(num >= 0){\n        let digit = Math.floor(num/10);\n     \
    \   if(digit % 2 === 0){\n            even_count++;\n        }else{\n        \
    \    odd_count++;\n        }\n        num = num%10;\n    }\n\n    return ({\n\
    \        evenCount:even_count,\n        oddCount:odd_count\n    });\n}\n", " \
    \   let count=0;\n    while(num>0){\n        let last_digit=num%10;\n        if(last_digit%2==0){\n\
    \            count+=1;\n        }\n        num=Math.floor(num/10);\n    }\n  \
    \  return[count,count+1];\n}\n", "  var sum = 0;\n  while (num >= 1){\n    sum\
    \ += Math.floor(num/2);\n    num = num % 10;\n  }\n  return sum;\n}", "    let\
    \ even = num%2 === 0? true: false\n    let odd = num%2 !== 0? true: false\n  \
    \  while(num > 0){\n        num = parseInt(num/10)\n        if (num%2 === 0){\n\
    \            even += true\n        }\n        if (num%2 !== 0){\n            odd\
    \ += true\n        }\n    }\n    return { even, odd }\n}\n", "  let evenCount\
    \ = 0;\n  let oddCount = 0;\n  for (let i = num; i; i--){\n    const remainder\
    \ = i % 10;\n    if(remainder === 0){\n      evenCount++;\n    } else {\n    \
    \  oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "  const evenCount\
    \ = (num.toString()).split(\"\").filter(item => item % 2 === 0).length\n  const\
    \ oddCount = (num.toString()).split(\"\").filter(item => item % 2 !== 0).length\n\
    \n  return evenCount ? evenCount : oddCount\n}", "  if(num === 0){\n    return\
    \ (0, 0)\n  }\n  let evenCount = 0\n  let oddCount = 0\n  while(num > 0){\n  \
    \  if(num % 2 === 0){\n      evenCount++\n    } else {\n      oddCount++\n   \
    \ }\n    num = Math.floor(num / 10)\n  }\n  return ({evenCount,oddCount})\n}\n",
  "  let odd_digits = [];\n  let even_digits = [];\n  for(let i = 0; i<=num; i++){\n\
    \    let remainder = Math.trunc(num/i);\n    if(i%2 === 1){\n      odd_digits.push(remainder);\n\
    \    }\n    else{\n      even_digits.push(remainder);\n    }\n  }\n  return [even_digits,odd_digits];\n\
    }\n", "  if(num<0){\n    return (-num, 0);\n  }\n  let even = 0, odd = 1;\n  while(num){\n\
    \    if(num%2 !== 0) even++;\n    if(num%2 === 0) odd++;\n    num = num/2;\n \
    \ }\n  return [even, odd];\n}\n", "    let strNum = String(num);\n    let oddNum\
    \ = 0;\n    let evenNum = 0;\n\n    for (let i=0; i <strNum.length; i++){\n  \
    \      if(Number(strNum[i])%2 === 0){\n            evenNum = evenNum + 1;\n  \
    \      }else{\n            oddNum = oddNum + 1;\n        }\n    }\n    return\
    \ (evenNum, oddNum);\n}\n", "  let even = 0;\n  let odd = 0;\n  while (num !=\
    \ 0){\n    if (num % 2 === 0){\n      even++;\n    }else{\n      odd++;\n    }\n\
    \    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n}", "    if(num===0){\n\
    \        return (0, 0);\n    }\n    let even = 0;\n    let odd = 0;\n    let sum\
    \ = 0;\n    for(let i = num; i!==0; i/=2){\n        even++;\n    }\n    for(let\
    \ i = num; i!==0; i/=2 ){\n        odd++;\n    }\n    sum = even+odd;\n    return({even:\
    \ even, odd: odd, sum: sum});\n}\n", "    let arr = [];\n    while(num != 0){\n\
    \        arr.push(num%10);\n        num /= 10;\n    }\n    arr.forEach((element,index)\
    \ => {\n        if(element %2 === 0){\n            arr[index] = 1;\n        }\n\
    \    });\n    return arr;\n}\n", "    var even_count=0; \n    var odd_count=0;\n\
    \    var result=\"\";\n    \n    while(num>0){\n        if(num%2==0){\n      \
    \      even_count++;\n        }else{\n            odd_count++;\n        }\n  \
    \      num=parseInt(num/10);\n    }\n    result=even_count+\",\"+odd_count;\n\
    \    return parseInt(result);\n}\n", "  let even = 0;\n  let odd = 0;\n  while(num\
    \ > 0){\n    num = num % 10;\n    even = even + (num % 2 == 0 ? 1 : 0);\n    odd\
    \ = odd + (num % 2 != 0 ? 1 : 0);\n  }\n  return [even, odd];\n}\n", "    let\
    \ [even,odd] = num.toString().split('').reduce(([even, odd],curr)=>{\n       \
    \ if(curr === '0'){\n            return [even+1,odd]\n        }else{\n       \
    \     return [even,odd+1]\n        }\n    },[0,0])\n    return [even,odd]\n}\n",
  "  let even=0\n  let odd=0\n  if(num===0){\n    return (0,0)\n  }\n  while (num!==0){\n\
    \    if(num%2===0){\n      even++\n    }else{\n      odd++\n    }\n    num=num/10\n\
    \  }\n  return ({even,odd})\n}\n", "  if(num<0){\n      num*=-1;\n  }\n  let even=0\n\
    \  let odd=0\n  while(num){\n      let curr=num%10\n      if(curr==0){\n     \
    \     even++\n      }\n      else{\n          odd++\n      }\n      num=Math.floor(num/10)\n\
    \  }\n  return [even,odd]\n}\n", "  var counter = 0;\n  while(num > 0){\n    num\
    \ = num/10;\n    counter++;\n  }\n  return [counter,counter];\n}", "    let even\
    \ = 0\n    let odd = 0\n    while(num != 0){\n        let remainder = num % 10\
    \ //get the last digit of the number in integer\n        num = Math.floor(num\
    \ / 10); //remove the last digit from number\n        if(remainder == 0){\n  \
    \          even += 1 //if last digit is 0, then add 1 to the even variable\n \
    \       }else{\n            odd += 1\n        }\n    }\n    return ({even:even,\
    \ odd:odd})\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=javascript |>\n<code>",
  "    const numString = num.toString();\n    const evenCount = 0;\n    const oddCount\
    \ = 0;\n    for (let i = 0; i < numString.length; i++) {\n        if (numString[i]\
    \ % 2 == 0) {\n            evenCount++;\n        }\n        else {\n         \
    \   oddCount++;\n        }\n    }\n    return (evenCount, oddCount);\n}\n", " \
    \   if (num === 0){\n        return  (1, 0);\n    }\n    if (num < 0){\n     \
    \   throw new Error(\"Parameter must be positive\");\n    }\n\n    var result\
    \ = [];\n\n    while (num >= 10){\n        result.push((num % 10) + 1);\n    \
    \    num = Math.floor(num / 10);\n    }\n\n    if (num > 0){\n        result.push((num\
    \ + 1));\n    }\n\n    return  (result);\n}\n</code>\n<|/ a tags=algorithm,javascript,numbers\
    \ |>\n<| c |>\nYes, that's it! This is what I am looking for! Thank you very much!\
    \ :)\n<|/ c |>\n<| c |>\nThank you for posting your solution. It might be useful\
    \ for other people to see how you figured it out.\n<|/ c |>\n<| c |>\nI spent\
    \ way too long trying to write this myself.  Glad I could help.\n<|/ c |>\n<|\
    \ a tags=algorithm,javascript,numbers |>\n<code>", "\tlet evenCount = 0;\n\tlet\
    \ oddCount = 0;\n\t\n\t//Iterate through the number till its last digit.\n\twhile(num\
    \ > 0){\n\t\tlet lastDigit = num%10;\n\t\tif(lastDigit % 2 === 0){\n\t\t\tevenCount++;\n\
    \t\t}\n\t\telse{\n\t\t\toddCount++;\n\t\t}\n\t\tnum = Math.floor(num/10);\n\t\
    }\n\t\n\t//Return both even and odd count\n\treturn (evenCount, oddCount);\n}\n",
  "  let numStr = String(num);\n  let evenNumStr = (numStr.length - (numStr.length\
    \ % 2)) / 2;\n  let oddNumStr = (numStr.length - (numStr.length % 2)) % 2;\n \
    \ return (evenNumStr, oddNumStr);\n}", "  var evenCount = 0;\n  var oddCount =\
    \ 0;\n  while (num > 0){\n    num = num / 10;\n    evenCount++;\n  }\n  num =\
    \ Math.abs(num);\n  while (num > 0){\n    num = num / 10;\n    oddCount++;\n \
    \ }\n  return {\"even\": evenCount, \"odd\": oddCount};\n}\n", "\treturn Math.trunc(Math.sqrt(num))\
    \ % 2 === 0? 1: 2;\n}\n", "    let even_count = 0\n    let odd_count = 0\n   \
    \ let even = []\n    let odd = []\n    while (num>0){\n        if (num%2===0){\n\
    \            even.push(num)\n        }\n        else{\n            odd.push(num)\n\
    \        }\n        num-=1;\n    }\n    if (even.length===0){\n        return\
    \ (0,0)\n    }\n    while(even.length>0){\n        even_count+=1;\n        even.pop()\n\
    \    }\n    while(odd.length>0){\n        odd_count+=1;\n        odd.pop()\n \
    \   }\n    return(even_count, odd_count)\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    for(let i = num; i >= 0; i -= num){\n        if(i % 2 === 0) even++\n\
    \        else odd++;\n    }\n    return [even, odd];\n}\n", "  let str=String(num);\n\
    \  let even=str.replace(/(^-?\\d+)(\\d+)$/,\"$1\");\n  let odd=str.replace(/(^-?\\\
    d+)(\\d+)$/,\"$2\");\n  return (Number(even),Number(odd));\n}\n", "    return\
    \ Math.floor((num+\"\").length / 2);\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    This is very inefficient. Don't use string operations on numbers to count the\
    \ digits of numbers. That's what `Math.floor` is for, it's faster than `parseInt`,\
    \ but it's still overkill. `+''` -> `+` -> `*1` -> `*2` -> `/1` -> `/2` -> `%1`\
    \ -> `%2` -> `+`...\n<|/ c |>\n<| a |>\nHere's another approach which only uses\
    \ strings:\n<code>\nconst numberToList = function(n) {\n  let res = [];\n  let\
    \ sign = '';\n  let digits = n.toString();\n  let len = digits.length;\n  for\
    \ (let i = 0; i < len; i++) {\n    let digit = digits[i];\n    if (i % 2 === 0)\
    \ {\n      res.push(sign + digit);\n      sign = '';\n    } else {\n      sign\
    \ += digit;\n    }\n  }\n  return res;\n};\n</code>\nIt turns a number into a\
    \ list of digits.\n<|/ a dscore=1 tags=javascript,string,numbers,algorithm |>\n\
    <| a dscore=0 tags=javascript,string,numbers,algorithm |>\n<code>", "  if(num<0)\
    \ return (0,0);\n  var even = 0,odd = 0;\n  if(num>0){\n    while(num>0){\n  \
    \    if(num%2==0) even++;\n      else odd++;\n      num/=10;\n    }\n  }\n  return([even,odd]);\n\
    }\n", "    let even_digits = []\n    let odd_digits = []\n    while (num > 0){\n\
    \        let mod = num % 10\n        if (mod > 0){\n            odd_digits.push(mod)\n\
    \        }else{\n            even_digits.push(mod)\n        }\n        num = Math.floor(num/10)\n\
    \    }\n    return [even_digits, odd_digits]\n}\n", "  const str = String(num);\n\
    \  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < str.length; i++) {\n \
    \   const numStr = str[i];\n    const numStr = numStr.charCodeAt(0);\n    if (numStr\
    \ % 2 === 0){\n      even++;\n    } else {\n      odd++;\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "    let rev = num.toString().split('').reverse().join('');\n\
    \    let even = 0, odd = 0;\n    rev.split('').forEach( x => {\n        if( x\
    \ % 2 ) even++;\n        else odd++;\n    })\n    return [ even, odd ];\n}\n",
  "    var count = 0;\n    var odd_count = 0;\n    for(var i = num; i > 0; i /= 10){\n\
    \        count++;\n        if((i%2) === 0){\n            odd_count++;\n      \
    \  }\n    }\n    return {'odd': odd_count, 'even': count};\n}", "  let evenCount\
    \ = 0, oddCount = 0;\n  for(let i=0; i< num; i++){\n    if(num % 2 == 0){\n  \
    \    evenCount++;\n    }\n    else if(num % 2 == 1){\n      oddCount++;\n    }\n\
    \  }\n  return [evenCount, oddCount];\n}", "  if (num <= 0){\n    return (0, 0);\n\
    \  }\n  if (num < 10) {\n    return (0, 1);\n  }\n  let evens = 0;\n  let odds\
    \ = 0;\n  for (let i = 0; i <= num; i++) {\n    if ((num % 2) === 1){\n      odds++;\n\
    \    }\n    else {\n      evens++;\n    }\n  }\n  return (evens, odds);\n}\n",
  "  let result = num.toString().split('').reduce((acc, curr) => {\n    if (curr%2\
    \ === 0){\n      acc.even++\n    } else {\n      acc.odd++\n    }\n    return\
    \ acc\n  }, {even: 0, odd: 0})\n  return result\n}\n", "    if (num < 0){\n  \
    \      num *= -1;\n    }\n    var result = {\n        evens: 0,\n        odds:\
    \ 0\n    };\n    while (num){\n        if (num % 2 === 0){\n            result.evens++;\n\
    \        }\n        else{\n            result.odds++;\n        }\n        num\
    \ /= 10;\n    }\n    return result;\n}", "\tvar odd_count=0;\n\tvar even_count=0;\n\
    \t\n\tvar numStr = String(num);\n\t\n\t//Odd count starts\n\tfor(var i = 0; i\
    \ < numStr.length; i++){\n\t\t\n\t\tif((numStr[i] % 2) == 0){\n\t\t\teven_count++;\n\
    \t\t}\n\t}\n\t\n\t//Even count starts\n\tfor(var i = 0; i < numStr.length; i++){\n\
    \t\t\n\t\tif((numStr[i] % 2) != 0){\n\t\t\teven_count++;\n\t\t}\n\t}\n\t\n\treturn\
    \ even_count, odd_count;\n}\n\n", "    return even_odd_count_recursive(num,0,0);\n\
    }", "  var even = 0;\n  var odd = 0;\n  while (num > 0){\n    num = num%10 + num/10\n\
    \    if (num%2 === 0) even++;\n    else odd++;\n  }\n  return [even, odd]\n}",
  "\tlet evenCount = 0;\n\tlet oddCount = 0;\n\tfor (let i = 0; i < num.length; i++)\
    \ {\n\t\tif (num[i] % 2 === 0) {\n\t\t\tevenCount++;\n\t\t} else {\n\t\t\toddCount++;\n\
    \t\t}\n\t}\n\treturn [evenCount, oddCount];\n}\n", "  let odd = num.toString().split(\"\
    \").filter((v, i, a) => i % 2 === 1).length;\n  let even = num.toString().split(\"\
    \").filter((v, i, a) => i % 2 === 0).length;\n  return [even,odd];\n}\n\n", " \
    \   let result = [];\n    let even_count = 0;\n    let odd_count = 0;\n\n    for(let\
    \ i=0;i<=Math.pow(10,Math.floor(Math.log10(num))+1);i++){\n        if(num%Math.pow(10,i)===0){\n\
    \            even_count += 1;\n        }else{\n            odd_count += 1;\n \
    \       }\n    }\n\n    result.push(even_count,odd_count);\n    return result;\n\
    }\n", "  var even = 0, odd = 0, i = 0;\n  while(i < num.toString().length){\n\
    \    var a = num.toString().charAt(i), b = num.toString().charAt(i + 1);\n   \
    \ if (a === b) even++;\n    else odd++;\n    i += 2;\n  }\n  return [even, odd];\n\
    }\n", "    let even=0;\n    let odd=0;\n    for(let i =0;i<num;i++){\n       \
    \ if(num%2==0){\n            even+=1;\n        }\n        else{\n            odd+=1;\n\
    \        }\n    }\n    return {'even':even,'odd':odd};\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

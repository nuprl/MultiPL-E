name: HumanEval_14_all_prefixes
language: js
results:
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var result = [];\n    for(var i=0; i<string.length; i++){\n        var prefix\
    \ = string.substring(0, i);\n        result.push(prefix);\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp5dj41yfm.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5dj41yfm.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n  for(var i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i))\n  }\n  return prefixes\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp3sa0cyr5.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3sa0cyr5.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar i, \n\t\tstr_length = string.length,\n\t\toutput = new Array(str_length),\n\
    \t\tprefixes = [string[0]];\n\t\n\tfor(i = 1; i < str_length; i++){\n\t\tif(string[i]\
    \ !== string[i-1]){\n\t\t\tprefixes = [];\n\t\t}\n\t\tprefixes.push(string[i]);\n\
    \t}\n\t\n\tfor(i = str_length - 1; i >= 0; i--){\n\t\toutput[i] = prefixes.slice(0,i).join();\n\
    \t}\n\t\n\treturn output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'h', 'h', 'h', 'h', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpbvoeipes.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbvoeipes.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'h', 'h', 'h', 'h', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var i, j, k, prefixes = [];\n  for (i = 0; i < string.length; i++){\n    if\
    \ (string[i] === \"-\") continue;\n    j = i + 1;\n    prefixes[j] = prefixes[j]\
    \ || [];\n    while (string[j] !== \"-\"){\n      j = j + 1;\n      prefixes[j]\
    \ = prefixes[j] || [];\n    }\n    prefixes[j].push(string.slice(i, j + 1));\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefix_array = string.split('').map(function(x){\n    return x;\n  });\n\
    \  var prefixes_count = prefix_array.length;\n  return prefix_array.filter(function(x){\n\
    \    return prefixes_count > 0;\n  }).reverse();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'h', 'g', 'f', 'd', 's', 'a' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpmskkyhl3.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmskkyhl3.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g', 'f', 'd', 's', 'a' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = [];\n  for (let i=0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpif7hhq9j.js:18:10)\n    at Object.<anonymous> (/tmp/tmpif7hhq9j.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  var i, l = string.length;\n  for (i = 0; i < l; i++) {\n\
    \    var prefix = string.slice(0, i);\n    if (string.slice(i).indexOf(prefix)\
    \ === 0) {\n      result.push(prefix);\n    }\n  }\n  return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp5z2kd28z.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5z2kd28z.js:26:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var result = [];\n    var current = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        var next = string.charAt(i);\n        if(next != current){\n\
    \            result.push(current);\n            current = next;\n        }\n \
    \   }\n    result.push(current);\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmp5p0iam_1.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5p0iam_1.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = []\n  for (let i = 0; i < string.length; i++) {\n    prefixes.push(string.slice(0,\
    \ i))\n  }\n  return prefixes\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpsgb729bc.js:18:10)\n    at Object.<anonymous> (/tmp/tmpsgb729bc.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [],\n      l = string.length,\n      prefix;\n\n  for (var i\
    \ = 1; i < l; i++) {\n    prefix = string.substr(0, i);\n    if (all_prefixes.hasOwnProperty(prefix))\
    \ {\n      prefixes.push.apply(prefixes, all_prefixes[prefix]);\n    }\n  }\n\n\
    \  return prefixes;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpghf48wk9.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpghf48wk9.js:28:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefix = [];\n  for(var i = string.length - 1; i >= 0; i--){\n    if(string[i]\
    \ === ''){\n      break;\n    }\n    prefix.push(string[i]);\n  }\n  return prefix;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'h', 'g', 'f', 'd', 's', 'a' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp9nayepju.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9nayepju.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g', 'f', 'd', 's', 'a' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefix = [];\n  for(var i = 0; i < string.length; i++){\n    prefix.push(string.slice(0,\
    \ i));\n  }\n  return prefix;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp7k84980i.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7k84980i.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar prefixes = [];\n\tfor(var i = 0; i < string.length; i++){\n\t\tprefixes.push(string.substring(0,\
    \ i));\n\t}\n\treturn prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpwegzan3o.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwegzan3o.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var result = [];\n    string.split('').forEach(function(letter){\n      \
    \  result.push(letter);\n    });\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpddompwfd.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpddompwfd.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var min_len = Math.min(string.length, prefixes.length);\n    var i, prefix;\n\
    \    var output = new Array(min_len);\n    for(i=0; i<min_len; i++){\n       \
    \ prefix = prefixes[i];\n        if((prefix.length < string.length) && (string.substr(0,\
    \ prefix.length) === prefix)){\n            output[i] = prefix;\n        }\n \
    \   }\n    return output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6u4nu877.js:5\n    var min_len = Math.min(string.length, prefixes.length);\n\
    \                                          ^\n\nReferenceError: prefixes is not\
    \ defined\n    at all_prefixes (/tmp/tmp6u4nu877.js:5:43)\n    at test (/tmp/tmp6u4nu877.js:22:20)\n\
    \    at Object.<anonymous> (/tmp/tmp6u4nu877.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  for(var i = 0, result = []; i < string.length; i++){\n    result.push(string.slice(0,\
    \ i))\n  }\n  return result\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp51lnud4b.js:17:10)\n    at Object.<anonymous> (/tmp/tmp51lnud4b.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var i, prefixes = [];\n    for(i = 0; i < string.length; i++){\n        prefixes.unshift(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfg', 'asdf', 'asd', 'as', 'a', ''\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpqqvin1xg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqqvin1xg.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg', 'asdf', 'asd', 'as', 'a', '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.split('').reduce((prefixes, char) => prefixes.concat(prefixes.length\
    \ ? all_prefixes(char) : char), []);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp3bv9se7t.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3bv9se7t.js:18:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var list = []\n  for(var i=0;i<string.length;i++){\n    list.push(string.slice(0,\
    \ i))\n  }\n  return list\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpjjzh3ey2.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjjzh3ey2.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var res = [];\n  string.replace(/[a-zA-Z]+/g, function(s){\n    res.push(s);\n\
    \  });\n  return res.sort();\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp7mffw0q6.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7mffw0q6.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var results = [];\n  \n  for(var i = 0; i < string.length; i++){\n    results.push(string.substring(0,\
    \ i));\n  }\n\n  return results;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpd3retlcq.js:20:10)\n    at Object.<anonymous> (/tmp/tmpd3retlcq.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar output = [];\n\t\n\tfor(var i in string){\n\t\toutput.push(string[i]);\n\
    \t}\n\t\n\treturn output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpgavm0_iy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgavm0_iy.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var prefix = '';\n    for(var i = 0; i < string.length;\
    \ i++){\n        prefix = string.substring(0, i) + prefix;\n        if(prefix\
    \ !== ''){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n</code>\n<|/ a tags=javascript,string,prefix,algorithm dscore=1 |>\n<| a tags=javascript,string,prefix,algorithm\
    \ dscore=0 |>\nI came up with a solution based on's answer\n<code>\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_mk29xb9.js:15\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var arr = [];\n  for (var x = string.length; x; x--) arr.push(string.slice(0,\
    \ x));\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh', 'asdfg', 'asdf', 'asd', 'as',\
    \ 'a' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n \
    \   at test (/tmp/tmpa61fo6z3.js:16:10)\n    at Object.<anonymous> (/tmp/tmpa61fo6z3.js:20:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'asdfg', 'asdf', 'asd', 'as',\
    \ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var res = [];\n    for(var i = 0; i < string.length; i++){\n        for(var\
    \ j = 0; j < res.length; j++){\n            if(string[i] === res[j]){\n      \
    \          break;\n            }\n        }\n        res.push(string[i]);\n  \
    \  }\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpuzueejwg.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuzueejwg.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tlet prefixes = [string[0]];\n\t\n\tfor(let i = 1; i < string.length; i++){\n\
    \t\tprefixes.push(string[0] + string[i]);\n\t}\n\n\treturn prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined ]\n\nshould equal\n\n[]\n  \
    \  at test (/tmp/tmpdwtnvuo4.js:19:10)\n    at Object.<anonymous> (/tmp/tmpdwtnvuo4.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined ],\n  expected: [],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = [];\n  let prefix = \"\";\n  for (let i = 0; i < string.length;\
    \ i++){\n    if (string.charAt(i) != prefix.charAt(0)){\n      prefix = prefix\
    \ + string.charAt(i);\n      prefixes.push(prefix);\n      prefix = \"\";\n  \
    \  }\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmppmtoel6o.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmppmtoel6o.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let result = [];\n  let prefix = string.substring(0, string.length - 1);\n\
    \  while(!result.includes(prefix)) {\n    result.push(prefix);\n    prefix = string.substring(0,\
    \ string.length - 1);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpdss2t071.js:19:10)\n    at Object.<anonymous> (/tmp/tmpdss2t071.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [],\n    i, len;\n  \n  // Add all prefixes in order of input\
    \ string\n  for (i = 0, len = string.length; i < len; i++){\n    prefixes.push(string.slice(0,\
    \ i));\n  }\n  \n  // Add all prefixes in order of input string\n  for (i = 0,\
    \ len = string.length; i < len; i++){\n    prefixes.push(string.slice(i + 1, len));\n\
    \  }\n  \n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n\
    \  'asdfg',\n  'sdfgh',\n  'dfgh',\n  'fgh',\n  'gh',\n  'h',\n  '' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpezjkat7j.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpezjkat7j.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    '',      'a',    'as',\n    'asd',\
    \   'asdf', 'asdfg',\n    'sdfgh', 'dfgh', 'fgh',\n    'gh',    'h',    ''\n \
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  for(var i = string.length; i > 0; i--){\n    prefixes.unshift(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar prefixes = [],\n\t\tprefix = \"\";\n\t\n\tfor (var i=0; i < string.length;\
    \ i++){\n\t\tprefixes.push(prefix);\n\t\tprefix = prefix + string[i];\n\t}\n\t\
    \n\tprefixes.push(prefix);\n\treturn prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpinduwpz1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpinduwpz1.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.split('').reduce((prefixes, char) => {\n    if(char === string[0]){\n\
    \      prefixes.unshift(char);\n    } else {\n      prefixes.push(char);\n   \
    \ }\n    return prefixes;\n  }, []);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp4xe52bw6.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4xe52bw6.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [],\n        prefix = '';\n    for(var i=string.length-1;\
    \ i>=0; i--){\n        prefix = prefix + string.charAt(i);\n        if(!in_array(prefix,\
    \ prefixes)) {\n            prefixes.push(prefix);\n        }\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_d81y35q.js:9\n        if(!in_array(prefix, prefixes)) {\n    \
    \    ^\n\nReferenceError: in_array is not defined\n    at all_prefixes (/tmp/tmp_d81y35q.js:9:9)\n\
    \    at test (/tmp/tmp_d81y35q.js:22:20)\n    at Object.<anonymous> (/tmp/tmp_d81y35q.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  for (var i = string.length - 1; i >= 0; i--) {\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfg', 'asdf', 'asd', 'as', 'a', ''\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp1q88paz9.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1q88paz9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg', 'asdf', 'asd', 'as', 'a', '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  var prefix = '';\n  for(var i=0,len=string.length;i<len;++i){\n\
    \    var char = string[i];\n    if(!char){\n      continue;\n    }\n    if(!result.length){\n\
    \      prefix = char;\n    }else if(result[0].length >= char.length){\n      prefix\
    \ = char;\n    }else{\n      result.unshift(prefix);\n      prefix = char;\n \
    \   }\n  }\n  result.unshift(prefix);\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmprn9lle3g.js:30:10)\n    at Object.<anonymous> (/tmp/tmprn9lle3g.js:35:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var i = 0;\n    var len = string.length;\n    while(i\
    \ < len){\n        prefixes.push(string.substring(i, i += 1));\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpee5y9igp.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpee5y9igp.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.match('^((.*)|(.*[^.]{0,})$)').map(function($1){\n    return\
    \ $1;\n  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', '', '', undefined ]\n\nshould equal\n\
    \n[]\n    at test (/tmp/tmp6ixwc8zu.js:15:10)\n    at Object.<anonymous> (/tmp/tmp6ixwc8zu.js:20:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', '', '', undefined ],\n  expected: [],\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  if(string.length == 0){\n    return [];\n  }\n  var all_prefixes = [];\n  var\
    \ prefixes = [];\n  for(var i = 0; i <= string.length; i++){\n    all_prefixes.push(string);\n\
    \    prefixes.push(string.slice(0, i));\n  }\n  var l = all_prefixes.length;\n\
    \  for(var i = 0; i <= l; i++){\n    for(var j = 0; j <= l; j++){\n      var p\
    \ = all_prefixes[i].slice(0, j);\n      if(prefixes.indexOf(p) === -1){\n    \
    \    all_prefixes[i].splice(j, 1);\n        j = all_prefixes.length;\n      }\n\
    \    }\n  }\n  return all_prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkn766xug.js:17\n      var p = all_prefixes[i].slice(0, j);\n  \
    \                            ^\n\nTypeError: Cannot read property 'slice' of undefined\n\
    \    at all_prefixes (/tmp/tmpkn766xug.js:17:31)\n    at test (/tmp/tmpkn766xug.js:33:20)\n\
    \    at Object.<anonymous> (/tmp/tmpkn766xug.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n  var shortest = string.length\n  var longest = 0\n\n  //\
    \ Iterate through all the characters in string\n  for (var i = 0; i < shortest\
    \ ; i++){\n    // Iterate through all possible prefixes of the string\n    for\
    \ (var j = 0; j < longest ; j++){\n      // If character i and j are equal, push\
    \ them to the array\n      if (string[i] === string[j]) {\n        prefixes.push(string.substr(i,\
    \ j))\n      }\n    }\n  }\n\n  // Return all prefixes and their length\n  return\
    \ prefixes\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp7clsgsh2.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7clsgsh2.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [],\n        len = string.length,\n        idx = len - 1;\n\
    \n    while(idx >= 0){\n        prefixes.unshift(string.substr(idx,1));\n    \
    \    idx -= 1;\n    }\n\n    return prefixes;\n}\nexports.all_prefixes = all_prefixes;\n\
    \n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpjn01cg73.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjn01cg73.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var array = [],\n      counter = 0,\n      length = string.length;\n\n  while\
    \ (counter < length){\n    array.push(string.substr(counter, string[counter]=='?':1));\n\
    \    counter++;\n  }\n\n  return array;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpu_r879se.js:10\n    array.push(string.substr(counter, string[counter]=='?':1));\n\
    \                                                       ^^^\n\nSyntaxError: missing\
    \ ) after argument list\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    let prefixes = []\n    let splits = string.split('')\n    for (let i = 0;\
    \ i<splits.length; i++){\n        if (splits.slice(i,i+1).includes('')){\n   \
    \         prefixes.push(splits.slice(i,i+1).join(''))\n        }\n    }\n    return\
    \ prefixes\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp2db09r5n.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp2db09r5n.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  for(var i = 0;i < string.length;i++)\n    result.push(string.slice(0,\
    \ i));\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmphkylvk7j.js:16:10)\n    at Object.<anonymous> (/tmp/tmphkylvk7j.js:20:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    string = string.toLowerCase();\n    var str_list = string.split('');\n  \
    \  var prefixes = [];\n    for(var i=0;i<str_list.length;i++){\n        var character\
    \ = str_list[i];\n        if( str_list.indexOf(character) > -1 ){\n          \
    \  prefixes.push(character);\n            str_list.splice(i, 1);\n        }\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'd', 'g' ]\n\nshould equal\n\n[ 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpzwe5pm_u.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzwe5pm_u.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'd', 'g' ],\n  expected: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar i, len, p = [], len = string.length;\n\tfor(i = 0; i < len; i++){\n\t\t\
    p.push( string.substr(i,1));\n\t}\n\treturn p;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpcfo6pcfz.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcfo6pcfz.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    string = string.split(\"\");\n    var prefixes = [];\n    for(var i=0;i<string.length;i++){\n\
    \        prefixes.push(string[i].substring(0,i+1));\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpgui28gxb.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgui28gxb.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  for (var i=0; i<string.length; i++) {\n    prefixes.push(string.substr(0,\
    \ i));\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpkjzhwl9w.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkjzhwl9w.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var res = [];\n  for(var i = 0; i<string.length; i++){\n    res.push(string.slice(0,\
    \ i));\n  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp3_tuyqe4.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3_tuyqe4.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var res = [];\n    var prefix;\n    for(var i=string.length; i > 0; i--){\n\
    \        prefix = string.substr(0,i);\n        if(isPrefixed(prefix) && res.indexOf(prefix)\
    \ === -1) res.push(prefix);\n    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpo6cb6mhz.js:9\n        if(isPrefixed(prefix) && res.indexOf(prefix)\
    \ === -1) res.push(prefix);\n        ^\n\nReferenceError: isPrefixed is not defined\n\
    \    at all_prefixes (/tmp/tmpo6cb6mhz.js:9:9)\n    at test (/tmp/tmpo6cb6mhz.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmpo6cb6mhz.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var current = \"\";\n    for(var i=0;i<string.length;i++){\n\
    \        current = prefix + string[i];\n        prefixes.push(current);\n    }\n\
    \    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9hj71rcv.js:8\n        current = prefix + string[i];\n        ^\n\
    \nReferenceError: prefix is not defined\n    at all_prefixes (/tmp/tmp9hj71rcv.js:8:9)\n\
    \    at test (/tmp/tmp9hj71rcv.js:20:20)\n    at Object.<anonymous> (/tmp/tmp9hj71rcv.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  var len = string.length;\n  for (var i = 0; i < len; i++){\n\
    \    var prefix = string.substring(0, i);\n    if (prefix.length === 0){\n   \
    \   prefix = string.substring(i);\n    }\n    result.push(prefix);\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmph9tj2j_t.js:23:10)\n    at Object.<anonymous> (/tmp/tmph9tj2j_t.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  if(string.length == 0){return [];}\n  var all_prefixes = [];\n  var len = string.length;\n\
    \  for(var i = len; i >= 0; --i){\n    if(string.substring(0, i) == string){\n\
    \      all_prefixes.push(string.substring(0, i));\n    }\n  }\n  return all_prefixes;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp00uigmvv.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp00uigmvv.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    string = string.toString().toLowerCase();\n    var prefixes = [];\n    for\
    \ (var i = 0; i < string.length; i++){\n        var letter = string.charAt(i);\n\
    \        for (var j = 0; j < prefixes.length; j++){\n            if (prefixes[j][letter]\
    \ === true){\n                prefixes.push(letter);\n                break;\n\
    \            }\n        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp5uugh148.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5uugh148.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar prefixes = [],\n\t\tlen = string.length,\n\t\tchar,\n\t\ti,\n\t\tprefix;\n\
    \tfor(i = 0; i < len; i++){\n\t\tchar = string.charAt(i);\n\t\tif(!prefixes.length){\n\
    \t\t\tprefix = (char.match(/[a-zA-Z]/) || [''])[0];\n\t\t}else{\n\t\t\tprefix\
    \ = prefixes.pop();\n\t\t}\n\t\tprefixes[prefixes.length] = prefix;\n\t}\n\treturn\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpkpb_akuu.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkpb_akuu.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  var l = string.length;\n  while(l--) if(string.charAt(l)\
    \ !== undefined) prefixes.push(string.charAt(l));\n  return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'h', 'g', 'f', 'd', 's', 'a' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp4f28hdjz.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4f28hdjz.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g', 'f', 'd', 's', 'a' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n\n  for(var i = 0; i < string.length; i++){\n    if(string.charAt(i)\
    \ == string.charAt(string.length - i-1)){\n      prefixes.push(string.charAt(i));\n\
    \    }\n  }\n\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp2dlr1jo9.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp2dlr1jo9.js:26:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [],\n      i = string.length,\n      prefix;\n\n  while (i--)\
    \ {\n    prefix = string.substring(0, i);\n    if (string[i] === '0') {\n    \
    \  if (prefix.length > 0) {\n        prefix = prefix.slice(0, prefix.length -\
    \ 1);\n      }\n    }\n    result.push(prefix);\n  }\n  return result;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfg', 'asdf', 'asd', 'as', 'a', ''\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp6exhxonu.js:26:10)\n    at Object.<anonymous> (/tmp/tmp6exhxonu.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg', 'asdf', 'asd', 'as', 'a', '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = []\n  for (let i = 0; i < string.length; i++){\n    let char\
    \ = string[i]\n    if (prefixes.length > 0){\n      let prefix = prefixes[prefixes.length\
    \ - 1]\n      if (prefix[prefix.length - 1] != char){\n        prefixes[prefixes.length]\
    \ = prefix\n      }\n    }\n    prefixes[prefixes.length] = char\n  }\n  return\
    \ prefixes\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'a', 's', 's', 'd', 'd', 'f', 'f',\
    \ 'g', 'g', 'h' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ]\n    at test (/tmp/tmp48ud20mz.js:24:10)\n    at Object.<anonymous> (/tmp/tmp48ud20mz.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'a', 'a', 's', 's',\n    'd', 'd',\
    \ 'f', 'f',\n    'g', 'g', 'h'\n  ],\n  expected: [ 'a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [],\n      char,\n      i = 0;\n\n  while (i < string.length){\n\
    \    char = string.charAt(i++);\n    if (char === undefined){\n      break;\n\
    \    }\n    prefixes.push(char);\n  }\n\n  return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpk9f_xeo8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk9f_xeo8.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = [];\n  let longest = 0;\n\n  for (let i = 0; i <= string.length;\
    \ i++) {\n    if (string[i] === '') {\n      prefixes.push('');\n      continue;\n\
    \    }\n\n    while (longest < string[i].length && string[longest] === string[i]){\n\
    \      prefixes.push(string[i].slice(0, longest));\n      longest++;\n    }\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptq2ar036.js:14\n    while (longest < string[i].length && string[longest]\
    \ === string[i]){\n                               ^\n\nTypeError: Cannot read\
    \ property 'length' of undefined\n    at all_prefixes (/tmp/tmptq2ar036.js:14:32)\n\
    \    at test (/tmp/tmptq2ar036.js:27:20)\n    at Object.<anonymous> (/tmp/tmptq2ar036.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    if (string.length == 1) return [string];\n    return all_prefixes(string.substring(0,\
    \ string.length-1)) + [string];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2otlxj9b.js:6\n    return all_prefixes(string.substring(0, string.length-1))\
    \ + [string];\n                               ^\n\nRangeError: Maximum call stack\
    \ size exceeded\n    at String.substring (<anonymous>)\n    at all_prefixes (/tmp/tmp2otlxj9b.js:6:32)\n\
    \    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n\
    \    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n\
    \    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n\
    \    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n    at all_prefixes (/tmp/tmp2otlxj9b.js:6:12)\n"
  exit_code: 1
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var res = [];\n  var prefix = null;\n  for(var i = 0, len = string.length;\
    \ i < len; i++){\n    var char = string[i];\n    if(prefix === null){\n      prefix\
    \ = char;\n      res.push(prefix);\n    } else {\n      if(prefix != char) res.push(prefix);\n\
    \      prefix = null;\n    }\n  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'a', 'd', 'd', 'g', 'g' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpj0e_h0l3.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj0e_h0l3.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'a', 'd', 'd', 'g', 'g' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    let prefixes = [];\n    let length = string.length;\n    if(length < 2)\n\
    \        return prefixes;\n    for(let i = 1; i < length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg' ]\n\n\
    should equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp724gnbtc.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp724gnbtc.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var result = [];\n    var prefixes = string.split('');\n    for(var i = 0;\
    \ i < prefixes.length; i++){\n        result.push(prefixes[i]);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpyagt514v.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyagt514v.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var s = string.split('');\n    for(var i=0; i<s.length;\
    \ i++){\n        for(var j=0; j<i; j++){\n            prefixes.push(s.slice(i,\
    \ j+1).join(''));\n        }\n    }\n    return prefixes;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', '', '', '', '', '', '', '', '', '',\
    \ '', '', '', '', '' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ]\n    at test (/tmp/tmp0yz0sveo.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0yz0sveo.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '',\
    \ '', '', '', '', '',\n    '', '', '', '', '', '',\n    '', '', ''\n  ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var current = [], tmp;\n  for (var i = 0; i < string.length; i++){\n    tmp\
    \ = string.substr(0, i);\n    if (current.indexOf(tmp) === -1){\n      current.push(tmp);\n\
    \    }\n  }\n  return current;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpwat40hjb.js:21:10)\n    at Object.<anonymous> (/tmp/tmpwat40hjb.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  string\n    .toLowerCase()\n    .split('')\n    .forEach(function(letter){\n\
    \      prefixes.unshift(letter);\n    });\n  return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'h', 'g', 'f', 'd', 's', 'a' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpyih9gh49.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyih9gh49.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g', 'f', 'd', 's', 'a' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var maxLength = Math.floor(string.length / 2),\n      substrings = [],\n  \
    \    result = [],\n      i,\n      j;\n\n  for (i = 0; i <= maxLength; i++) {\n\
    \    for (j = i; j <= maxLength && j <= string.length; j++) {\n      substrings.push(string.substring(i,j));\n\
    \    }\n  }\n\n  for (i = 0; i <= maxLength; i++) {\n    for (j = i + 1; j <=\
    \ maxLength; j++) {\n      if (j == string.length) {\n        j = 0;\n      }\n\
    \      \n      result.push(substrings[i-1] + substrings[j]);\n    }\n  }\n\n \
    \ return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'undefineda', 'undefinedas', 'undefinedasd',\
    \ 'as', 'asd', 'aasd' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ]\n    at test (/tmp/tmpcdc61jj1.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcdc61jj1.js:40:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'undefineda',\
    \ 'undefinedas', 'undefinedasd', 'as', 'asd', 'aasd' ],\n  expected: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var list = string.split('');\n    var prefixes = [];\n    for(var i=0;i<list.length;i++){\n\
    \        prefixes.push(list[i]);\n        prefixes.push(list[i]+list[i+1]);\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a',\n  'as',\n  's',\n  'sd',\n  'd',\n\
    \  'df',\n  'f',\n  'fg',\n  'g',\n  'gh',\n  'h',\n  'hundefined' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp6fcc5war.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6fcc5war.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'a', 'as',\n    's', 'sd',\n    'd',\
    \ 'df',\n    'f', 'fg',\n    'g', 'gh',\n    'h', 'hundefined'\n  ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var result = [];\n    var current_string = \"\";\n\n    for(var i=0;i<string.length;i++){\n\
    \        current_string += string[i];\n        if(string.substr(i,string.length-i)\
    \ == current_string){\n            result.push(current_string);\n            current_string\
    \ = \"\";\n        }\n    }\n    \n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmphszks88i.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphszks88i.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var min = [];\n    var max = string;\n    var prefix = [];\n    while (min.length\
    \ < max.length){\n        min = min.concat(prefix);\n    }\n    while (max.length\
    \ < min.length){\n        max = max.concat(prefix);\n    }\n    while (min.length\
    \ && max.length){\n        prefix.push(min.shift());\n    }\n    while (min.length){\n\
    \        prefix.push(min.shift());\n    }\n    while (max.length){\n        prefix.push(max.pop());\n\
    \    }\n    while (prefix.length !== 0){\n        prefix.unshift(min.shift());\n\
    \    }\n    return prefix;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  var i = 0;\n  var len = string.length;\n  var char;\n\
    \  while(i < len){\n    char = string.substr(i,1);\n    if(string[0] === char){\n\
    \      prefixes.push(char);\n      i = i + 1;\n    }else{\n      break;\n    }\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpckqyln69.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpckqyln69.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = []\n  for (let i = 0; i < string.length; i++){\n    prefixes.push(string.substring(0,\
    \ i))\n  }\n  return prefixes\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp1ghu32bm.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1ghu32bm.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefix = [];\n  for (let i = 0; i < string.length; i++){\n    prefix.push(string.substring(0,\
    \ i));\n  }\n  return prefix;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp37by3e5y.js:18:10)\n    at Object.<anonymous> (/tmp/tmp37by3e5y.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = [];\n  for (let i = 0; i < string.length; i++) {\n    prefixes.push(string[i]);\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpuzoalddm.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuzoalddm.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n\n  for(var i = 0, j = string.length; i < j; i++){\n  \
    \  prefixes[i] = string.slice(0, i);\n  }\n\n  return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp7et1e6fk.js:20:10)\n    at Object.<anonymous> (/tmp/tmp7et1e6fk.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n\n  for(var i = 0; i < string.length; i++){\n    prefixes\
    \ = [];\n    for(var j = i; j < string.length; j++){\n      if(string[i] === string[j]){\n\
    \        prefixes.push(string[j]);\n        break;\n      }\n    }\n  }\n\n  return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'h' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpbyk0d7u4.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbyk0d7u4.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'h' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [],\n    i = 0,\n    len = string.length;\n\n  for(; i < len;\
    \ i++){\n    prefixes.push(string.slice(0, i));\n  }\n\n  return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpwyhkzbmj.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwyhkzbmj.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var shortest = string.length + 1;\n    var longest\
    \ = 0;\n\n    for (var i = 0; i < shortest && i < string.length; i++){\n     \
    \   prefixes.push(string.slice(0, i));\n    }\n    for (var j = 0; j < prefixes.length;\
    \ j++){\n        longest = Math.max(longest, prefixes[j].length);\n    }\n   \
    \ for (i = 0; i < string.length; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    for (var j = 0; j < prefixes.length; j++){\n        longest\
    \ = Math.max(longest, prefixes[j].length);\n    }\n    prefixes.unshift(string.slice(0,\
    \ shortest));\n\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpzkzaqbfn.js:31:10)\n    at Object.<anonymous> (/tmp/tmpzkzaqbfn.js:36:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = []\n\n  for(let i = 0; i < string.length; i++){\n    prefixes.push(string.substring(0,\
    \ i))\n  }\n\n  return prefixes\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpvtq0jzku.js:20:10)\n    at Object.<anonymous> (/tmp/tmpvtq0jzku.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    string = string.toLowerCase().split('');\n    var maxLength = Math.max(string.length,\
    \ 1);\n    var prefixes = [];\n    for(var i = 0; i < maxLength; i++){\n     \
    \   prefixes.push(string.slice(i).join());\n    }\n    return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpswxyckzw.js:19:10)\n    at Object.<anonymous> (/tmp/tmpswxyckzw.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar prefixes = [],\n\t\ti;\n\tfor(i = 0; i < string.length; i++){\n\t\tvar c\
    \ = string[i];\n\t\tif( c === '\\\\'){\n\t\t\tc = string[++i]; // increment index\
    \ because c will be escaped\n\t\t}\n\t\tprefixes.push(string.substr(0, i+1).split('').concat(['\\\
    \\\\\\', c]).join(''));\n\t}\n\treturn prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a\\\\\\\\a',\n  'as\\\\\\\\s',\n  'asd\\\
    \\\\\\d',\n  'asdf\\\\\\\\f',\n  'asdfg\\\\\\\\g',\n  'asdfgh\\\\\\\\h' ]\n\n\
    should equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp48t_i5th.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp48t_i5th.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'a\\\\\\\\a',\n    'as\\\\\\\\s',\n\
    \    'asd\\\\\\\\d',\n    'asdf\\\\\\\\f',\n    'asdfg\\\\\\\\g',\n    'asdfgh\\\
    \\\\\\h'\n  ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  var length = 0;\n\n  for (var i = 0; i < string.length;\
    \ i++){\n    length += string[i].length;\n    prefixes.push(string.slice(0, i).concat(string.slice(i+1,\
    \ length)));\n  }\n\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp82d4bmlg.js:22:10)\n    at Object.<anonymous> (/tmp/tmp82d4bmlg.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    return prefixes(string).reverse();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpy5gj04a_.js:5\n    return prefixes(string).reverse();\n    ^\n\n\
    ReferenceError: prefixes is not defined\n    at all_prefixes (/tmp/tmpy5gj04a_.js:5:5)\n\
    \    at test (/tmp/tmpy5gj04a_.js:13:20)\n    at Object.<anonymous> (/tmp/tmpy5gj04a_.js:18:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all_prefixes = [];\n  for(var i = 0, len = string.length; i < len; i++){\n\
    \    var prefixes = string.split('');\n    for(var x = 0; x < prefixes.length;\
    \ x++){\n      if(prefixes[x] === string[i]){\n        break;\n      }\n    }\n\
    \    all_prefixes.push(string.substring(i));\n  }\n  return all_prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh',\
    \ 'h' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n \
    \   at test (/tmp/tmp0xn6jm7o.js:24:10)\n    at Object.<anonymous> (/tmp/tmp0xn6jm7o.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh',\
    \ 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    let prefixes = [];\n    for(let i = 0; i < string.length; i++){\n       \
    \ let prefix = string.substring(0, i);\n        prefixes.push(prefix);\n    }\n\
    \    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp58x1mcnr.js:19:10)\n    at Object.<anonymous> (/tmp/tmp58x1mcnr.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n\n  for (var i = 0; i < string.length; i++){\n    prefixes.push(\
    \ string.slice(0, i) ); \n  }\n\n  return prefixes;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpsuwxjcb9.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsuwxjcb9.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var min_len = Math.min.apply(Math, string.split(''));\n  var lens = string.split('');\n\
    \  var prefixes = [];\n  var i, len;\n\n  // Iterate in reverse to maintain index\
    \ invariant, as splice operates in place.\n  for (i = lens.length - 1; i >= 0;\
    \ i--) {\n    len = lens[i];\n\n    // No prefix of the current length found.\n\
    \    if (len < min_len) {\n      break;\n    }\n\n    // Found a prefix which\
    \ matches the current length\n    // We can break here as we only need to know\
    \ if the current length was\n    // long enough to prefix all the previous characters.\n\
    \    if (len === min_len) {\n      prefixes.push(lens.slice(0, i).join(''));\n\
    \    }\n  }\n\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpv_tv6zh1.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpv_tv6zh1.js:40:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n\n  // Initialize prefixes with empty string\n  prefixes.push(\"\
    \");\n  \n  // Loop over input string\n  for (var i = 0; i < string.length; i++)\
    \ {\n    // Add prefix to current prefix\n    prefixes.push(string[i].toUpperCase()\
    \ + prefixes[prefixes.length-1]);\n  }\n  \n  return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmp62_tujsp.js:24:10)\n    at Object.<anonymous> (/tmp/tmp62_tujsp.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    //return an array of all prefixes of the input string\
    \ with length 1\n    var shortest = 0;\n    var longest = string.length;\n   \
    \ for(var i = 0; i < longest; i++){\n        if(string[i] == string[shortest]){\n\
    \            shortest++;\n        }else{\n            prefixes[i] = string[shortest];\n\
    \            shortest = 0;\n        }\n    }\n    prefixes[longest] = string[shortest];\n\
    \    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined ]\n\nshould equal\n\n[]\n  \
    \  at test (/tmp/tmphmqeqs_2.js:26:10)\n    at Object.<anonymous> (/tmp/tmphmqeqs_2.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined ],\n  expected: [],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    return string.split('').map(function(s){return s.substr(0, s.length);}).slice(0,string.length);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp_bxp1kyn.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_bxp1kyn.js:18:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var returnStrings = [];\n    var prefixes = [];\n    var stringArray = string.split(\"\
    \");\n    for(var i=stringArray.length-1;i>=0;i--){\n        var character = stringArray[i];\n\
    \        returnStrings.push(character);\n        var newString = \"\";\n     \
    \   for(var j=0;j<stringArray.length;j++){\n            var otherCharacter = stringArray[j];\n\
    \            newString += character+otherCharacter;\n        }\n        prefixes.push(newString);\n\
    \    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hahshdhfhghh',\n  'gagsgdgfgggh',\n \
    \ 'fafsfdfffgfh',\n  'dadsdddfdgdh',\n  'sasssdsfsgsh',\n  'aaasadafagah' ]\n\n\
    should equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp0efpf37o.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0efpf37o.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'hahshdhfhghh',\n    'gagsgdgfgggh',\n\
    \    'fafsfdfffgfh',\n    'dadsdddfdgdh',\n    'sasssdsfsgsh',\n    'aaasadafagah'\n\
    \  ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    string = string.split('');\n    var l = string.length;\n    var prefixes\
    \ = [];\n    for(var i = 0; i < l; i++){\n        if(string.charAt(i) == string.slice(0,i).join('')){\n\
    \            prefixes.push(string.slice(0, i));\n            string = string.slice(i).join('');\n\
    \        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmm5iw600.js:9\n        if(string.charAt(i) == string.slice(0,i).join('')){\n\
    \                  ^\n\nTypeError: string.charAt is not a function\n    at all_prefixes\
    \ (/tmp/tmpmm5iw600.js:9:19)\n    at test (/tmp/tmpmm5iw600.js:23:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpmm5iw600.js:27:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return prefix_array.slice()\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz3x_vrkw.js:5\n  return prefix_array.slice()\n  ^\n\nReferenceError:\
    \ prefix_array is not defined\n    at all_prefixes (/tmp/tmpz3x_vrkw.js:5:3)\n\
    \    at test (/tmp/tmpz3x_vrkw.js:13:20)\n    at Object.<anonymous> (/tmp/tmpz3x_vrkw.js:18:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  if(string.length <= 1){\n    result = [string];\n  } else\
    \ {\n    var index = 0;\n    while(index < string.length){\n      result.push(string.substring(0,\
    \ index));\n      index += 1;\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmp8z_3a8p7.js:23:10)\n    at Object.<anonymous> (/tmp/tmp8z_3a8p7.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n  prefixes_by_length = prefixes_by_length || {}\n  string\
    \ = string + ''\n\n  var i = 0\n  var l = string.length\n  for(; i < l; i++){\n\
    \    var c = string.charAt(i)\n    var l = string.length\n\n    // Loop until\
    \ we reach a character that does not have a prefix of the string\n    for(; i\
    \ + 1 < l && string.charAt(i + 1) == c; i++){\n      l = l - 1\n    }\n\n    //\
    \ Add the prefix if it is not yet in the list of prefixes\n    if(!prefixes_by_length[l]){\n\
    \      prefixes_by_length[l] = []\n    }\n\n    // Add this prefix to the list\
    \ of prefixes and move on to the next letter\n    prefixes_by_length[l].unshift(c)\n\
    \  }\n\n  return prefixes_by_length\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpv7qr8m96.js:6\n  prefixes_by_length = prefixes_by_length || {}\n\
    \  ^\n\nReferenceError: prefixes_by_length is not defined\n    at all_prefixes\
    \ (/tmp/tmpv7qr8m96.js:6:3)\n    at test (/tmp/tmpv7qr8m96.js:37:20)\n    at Object.<anonymous>\
    \ (/tmp/tmpv7qr8m96.js:42:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar result = [];\n\tvar prefixes = [string];\n\t\n\twhile(prefixes.length >\
    \ 0){\n\t\tvar prefix = prefixes.shift();\n\t\t\n\t\tif (prefix.length == 0)\n\
    \t\t\tcontinue;\n\t\t\n\t\tfor(var i = 0, l = prefix.length; i < l; i++){\n\t\t\
    \tvar c = prefix[i];\n\t\t\t\n\t\t\tif (result.indexOf(c) == -1)\n\t\t\t\tresult.push(c);\n\
    \t\t\t\n\t\t\tprefixes.push(prefixes.shift() + c);\n\t\t}\n\t}\n\t\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    for(var i=string.length-1;i>=0;i--){\n        if(string[i-1]!==undefined){\n\
    \            break;\n        }\n    }\n    var prefix_list = string.substring(0,\
    \ i+1);\n    return prefix_list;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n[]\n    at test (/tmp/tmpr34xpywn.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr34xpywn.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  var prefixes = [];\n  \n  var i;\n  for(i = 0; i < string.length;\
    \ i++){ \n    if(string.charAt(i) == string.substr(0, i).charAt(0))\n      prefixes.push(string.substr(0,\
    \ i));\n  }\n  \n  prefixes.sort(function(a, b){\n    return a.length - b.length;\n\
    \  });\n  \n  for(i = 0; i < prefixes.length; i++)\n    result.push(prefixes[i]);\n\
    \  \n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpws8dp87k.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpws8dp87k.js:34:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    for(var x = 0, l = string.length; x < l; x++){\n        for(var y = 0; y\
    \ < x; y++){\n            if(string[x + y] !== string[x + y - 1]){\n         \
    \       break;\n            }\n        }\n        if(y > x + y){\n           \
    \ string = string.substring(x, x + y);\n        }\n    }\n    return string.split('');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpf1xf9wn4.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf1xf9wn4.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var i, j, current, length = string.length;\n    \n    if(length <= 0) return\
    \ [];\n    \n    for (i = 0; i < length; i++) {\n        current = string.charAt(i);\n\
    \        \n        for (j = 0; j < length; j++) {\n            if (current !=\
    \ string.charAt(j)) break;\n        }\n        \n        if (j == length) results.push(current);\n\
    \    }\n    \n    return results;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgia44ynh.js:19\n    return results;\n    ^\n\nReferenceError: results\
    \ is not defined\n    at all_prefixes (/tmp/tmpgia44ynh.js:19:5)\n    at test\
    \ (/tmp/tmpgia44ynh.js:28:20)\n    at Object.<anonymous> (/tmp/tmpgia44ynh.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    if(string == '' || string.length == 1)\n        return [string];\n    \n\
    \    var maxLength = Math.max(string.length, min_suffix(string));\n    \n    var\
    \ prefixes = [];\n    \n    for(var i = 0; i < maxLength; ++i){\n        if(string.startsWith(prefixes.join(''))){\n\
    \            prefixes.push(i);\n        }\n    }\n    \n    prefixes.sort(function(a,\
    \ b){return a - b});\n    \n    for(var i = 0; i < prefixes.length; ++i){\n  \
    \      prefixes[i] = prefixes[i].toString();\n    }\n    \n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpc6e9t9pl.js:32:10)\n    at Object.<anonymous> (/tmp/tmpc6e9t9pl.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  const prefixes = [];\n  for (let i = 0; i < string.length; i++){\n    prefixes[i]\
    \ = string.slice(0, i);\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpu4hiz9wh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpu4hiz9wh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.match(/.{1,}/g).filter(function(prefix){\n    return string.indexOf(prefix)\
    \ === 0;\n  });\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptww7xrg4.js:5\n  return string.match(/.{1,}/g).filter(function(prefix){\n\
    \                               ^\n\nTypeError: Cannot read property 'filter'\
    \ of null\n    at all_prefixes (/tmp/tmptww7xrg4.js:5:32)\n    at test (/tmp/tmptww7xrg4.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmptww7xrg4.js:19:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var arr = [];\n  var maxlen = string.length - 1;\n  for(var i = 0, l = string.length;\
    \ i < l; i++){\n    var prefix = string.slice(0, i + 1);\n    if(prefix.length\
    \ > maxlen) continue;\n    if(arr.indexOf(prefix) === -1) arr.push(prefix)\n \
    \ }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg' ]\n\n\
    should equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpuy1tlchb.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuy1tlchb.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  var start = 0;\n  var end = string.length;\n  while(start\
    \ < end){\n    prefixes.push(string.slice(start, end));\n    start = end + 1;\n\
    \    end--;\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp2q96_jwa.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2q96_jwa.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var res = [];\n    for (var i=string.length-1;i>=0;i--){\n        res.push(string.slice(0,\
    \ i));\n    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfg', 'asdf', 'asd', 'as', 'a', ''\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpwekrdcoz.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwekrdcoz.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg', 'asdf', 'asd', 'as', 'a', '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  if (string == '')\n    return [string]\n  else\n    return all_prefixes(string.substring(0,\
    \ string.length - 1)) + [string]\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmp0lijy4q4.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0lijy4q4.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar result = [];\n\tfor(var i = 1; i < string.length; i++){\n\t\tvar prefix\
    \ = string.slice(0, i);\n\t\tif(string.length > i)\n\t\t\tresult.push(prefix);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg' ]\n\n\
    should equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpays1kiwx.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpays1kiwx.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var len = string.length, prefixes = [], i = 0; \n  while(len--){\n    prefixes.push(string.substr(i,\
    \ len));\n    i+= len;\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfg', 'h', '', '', '', '' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpnwdf6jqu.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnwdf6jqu.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg', 'h', '', '', '', '' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all_strs = [];\n  all_strs.push(string);\n  string = '';\n  for(var i =\
    \ all_strs.length - 1; i >= 0; i--){\n    string += all_strs[i];\n    all_strs\
    \ = string.split('');\n    all_strs.reverse();\n    all_strs = all_strs.join('');\n\
    \    string = all_strs.split('');\n    string.reverse();\n    string = string.join('');\n\
    \  }\n  return string.split('');\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpouo0j8xd.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpouo0j8xd.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all_prefixes = [];\n  var input_string = string.split('');\n  var input_length\
    \ = input_string.length;\n  var prefix_length = 0, curr_prefix_length = 0;\n \
    \ \n  for(var i = 0; i < input_length; i++){\n    curr_prefix_length = prefix_length\
    \ + input_string[i].length;\n    if(curr_prefix_length > all_prefixes[all_prefixes.length-1].length){\n\
    \      all_prefixes.push(prefix_string);\n    }\n    if(curr_prefix_length ===\
    \ all_prefixes[all_prefixes.length-1].length){\n      prefix_length += input_string[i].length;\n\
    \    }\n  }\n  \n  return all_prefixes;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0pi6luyg.js:12\n    if(curr_prefix_length > all_prefixes[all_prefixes.length-1].length){\n\
    \                                                                ^\n\nTypeError:\
    \ Cannot read property 'length' of undefined\n    at all_prefixes (/tmp/tmp0pi6luyg.js:12:65)\n\
    \    at test (/tmp/tmp0pi6luyg.js:28:20)\n    at Object.<anonymous> (/tmp/tmp0pi6luyg.js:32:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    \n    var prefixes = []\n    var start = 0\n    \n    for(var i = string.length;\
    \ i>0; i--){\n        \n        var character = string[start++]\n        \n  \
    \      while(start < string.length && string[start] === character){\n        \
    \    start++\n        }\n        \n        prefixes[i] = string.substring(start,\
    \ i)\n    }\n    \n    return prefixes\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ , 'sdfgh', 'dfg', 'f', 'f', 'dfg', 'sdfgh'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpcd1nsqpg.js:29:10)\n    at Object.<anonymous> (/tmp/tmpcd1nsqpg.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ <1 empty item>, 'sdfgh', 'dfg', 'f', 'f',\
    \ 'dfg', 'sdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var arr = [];\n  var n = string.length;\n  while(n){\n    arr.unshift(string.substr(0,n));\n\
    \    n = n-1;\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var current = string[0];\n  return [current].concat(string.substr(1).split(current));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, '' ]\n\nshould equal\n\n[]\n\
    \    at test (/tmp/tmprtds6nxn.js:14:10)\n    at Object.<anonymous> (/tmp/tmprtds6nxn.js:19:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, '' ],\n  expected: [],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    if(string.length == 0){\n        return [];\n    }\n\n    var prefixes =\
    \ [string[0]];\n    var current = string[0];\n    for(var i = 1; i < string.length;\
    \ i++){\n        if(string[i] == current){\n            prefixes.push(current);\n\
    \        }else{\n            prefixes.push(current+string[i]);\n        }\n  \
    \      current = string[i];\n    }\n    prefixes.push(current);\n\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'as', 'sd', 'df', 'fg', 'gh', 'h'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpecbrgmhw.js:30:10)\n    at Object.<anonymous> (/tmp/tmpecbrgmhw.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'a',  'as', 'sd',\n    'df', 'fg',\
    \ 'gh',\n    'h'\n  ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var current = [], i;\n  for(i = 0; i < string.length; i++){\n    current =\
    \ current.concat(_all_prefixes(string[i], string.length));\n  }\n  return current;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxm7cgz7h.js:7\n    current = current.concat(_all_prefixes(string[i],\
    \ string.length));\n                      ^\n\nReferenceError: _all_prefixes is\
    \ not defined\n    at all_prefixes (/tmp/tmpxm7cgz7h.js:7:23)\n    at test (/tmp/tmpxm7cgz7h.js:18:20)\n\
    \    at Object.<anonymous> (/tmp/tmpxm7cgz7h.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all = [];\n  var prefixes = string.split(/[a-z]+/);\n  for(var i = 0; i\
    \ < prefixes.length; i++){\n    if(prefixes[i].length >= all.length) all = all.concat(prefixes.slice(i).reverse());\n\
    \  }\n  return all;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpa_tgjsq5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpa_tgjsq5.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n\n    for (var i = 0, len = string.length; i < len; i++)\n\
    \    {\n        var char = string[i];\n\n        for (var j = 0, jlen = prefixes.length;\
    \ j < jlen; j++)\n        {\n            var prefix = prefixes[j];\n\n       \
    \     if (prefix.length > char.length)\n            {\n                if (prefix\
    \ == char.substring(0, prefix.length))\n                {\n                  \
    \  prefixes[j] = null;\n                }\n\n                break;\n        \
    \    }\n        }\n\n        if (j < prefixes.length)\n        {\n           \
    \ prefixes.push(char);\n        }\n    }\n\n    return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp71p4jiop.js:41:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp71p4jiop.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.split('')\n    .map(function (a) {\n      return a.slice(0, 1);\n\
    \    })\n    .reduce(function (a, b) {\n      return a.concat(b);\n    }, []);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpjurvwh51.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjurvwh51.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = [string];\n  for(let i = 1; i<string.length; i++){\n    prefixes.push(string[0]+string.substr(0,i));\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpe5jjrzsz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpe5jjrzsz.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var str = ''\n  for (var i = 0; i < string.length; i++){\n    str += string.slice(0,\
    \ i)\n  }\n  return str\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n[]\n    at test (/tmp/tmpr1nladz2.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr1nladz2.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    for(var i = 0; i <= string.length; i++){\n        for(var j = 0, k = string.length\
    \ + 1; j <= k; j++){\n            if(j == i || string[i] != string[j]){\n    \
    \            string = '' + string + '';\n                break;\n            }\n\
    \        }\n    }\n    return string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n[]\n    at test (/tmp/tmphfuaslfc.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmphfuaslfc.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = []\n  for (let i=0; i<string.length;i++){\n    let current =\
    \ string.slice(0,i)\n    if (prefixes.includes(current)) {\n      prefixes = prefixes.filter(prefix\
    \ => prefix !== current)\n    } else {\n      prefixes = [...prefixes, current]\n\
    \    }\n  }\n  return prefixes\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpggf1wrg4.js:23:10)\n    at Object.<anonymous> (/tmp/tmpggf1wrg4.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    let prefixes = [];\n    let prefix = '';\n    for(let i = 0; i < string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        if(string.indexOf(prefix)\
    \ === 0){\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  for(var x=0;x<string.length;x++){\n    if(is_prefix(string,x)){\n      array.push(string[x]);\n\
    \    }\n  }\n  return array;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzg46mupi.js:10\n  return array;\n  ^\n\nReferenceError: array is\
    \ not defined\n    at all_prefixes (/tmp/tmpzg46mupi.js:10:3)\n    at test (/tmp/tmpzg46mupi.js:18:20)\n\
    \    at Object.<anonymous> (/tmp/tmpzg46mupi.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var i, result = [];\n  var prefix = \"\";\n  for(i = 0; i<string.length; i++){\n\
    \    prefix = string.substring(0, i) + prefix;\n    result.push(prefix);\n  }\n\
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'asa', 'asdasa', 'asdfasdasa',\
    \ 'asdfgasdfasdasa' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ]\n    at test (/tmp/tmpksldevk4.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpksldevk4.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'asa', 'asdasa', 'asdfasdasa', 'asdfgasdfasdasa' ],\n  expected: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    for(var i = 0; i <= string.length; i++){\n      \
    \  prefixes.push(string.slice(0, i));\n    }\n    return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmp8bqait92.js:17:10)\n    at Object.<anonymous> (/tmp/tmp8bqait92.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefix = [];\n    var strings = string.split('');\n\n    for(var i =\
    \ 0; i < strings.length; i++){\n        var stringLength = strings[i].length;\n\
    \        if(stringLength > prefix.length){\n            prefix = strings[i].slice(0,\
    \ stringLength);\n        }\n    }\n\n    return prefix;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'a'\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpee8fplsy.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpee8fplsy.js:28:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'a',\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all_strings = [];\n  if(string.length <= 1) return string;\n  var prefix\
    \ = \"\";\n  for(var i = 1; i < string.length; i++){\n    prefix = prefix + string.charAt(i).toLowerCase();\n\
    \    all_strings.push(prefix);\n  }\n  return all_strings;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n[]\n    at test (/tmp/tmpfitvi8_n.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfitvi8_n.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all_prefixes = [];\n  var prev_char = string;\n  var last_char = string;\n\
    \  all_prefixes.push(string);\n  \n  while (prev_char !== last_char){\n    prev_char\
    \ = last_char;\n    last_char = string.substring(last_char.length - 1, last_char.length);\n\
    \    all_prefixes.push(last_char);\n  }\n  \n  return all_prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmptdyoa3sp.js:24:10)\n    at Object.<anonymous> (/tmp/tmptdyoa3sp.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n  var characters = string.split(\"\")\n  characters.pop()\n\
    \  characters.forEach(function(char){\n    prefix = all_prefixe(char).reverse()\n\
    \    prefix = prefix.concat(prefix)\n    prefixes.push(prefix)\n  })\n  return\
    \ prefixes\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjuibsuep.js:9\n    prefix = all_prefixe(char).reverse()\n    ^\n\
    \nReferenceError: all_prefixe is not defined\n    at /tmp/tmpjuibsuep.js:9:5\n\
    \    at Array.forEach (<anonymous>)\n    at all_prefixes (/tmp/tmpjuibsuep.js:8:14)\n\
    \    at test (/tmp/tmpjuibsuep.js:21:20)\n    at Object.<anonymous> (/tmp/tmpjuibsuep.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n       \
    \ for(var j = 0;j < string.length; j++){\n            if(i != j && string.substr(i,\
    \ j) == string.substr(j, i)){\n                prefixes.push(string.substr(i,\
    \ j));\n            }\n        }\n    }\n    return prefixes;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp_2r6qdlp.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp_2r6qdlp.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var res = [];\n    string = string.toLowerCase();\n    var i, len = string.length;\n\
    \    for(i = 0; i < len; i++){\n        res.push(string.substring(0, i));\n  \
    \  }\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpx26rw9yy.js:20:10)\n    at Object.<anonymous> (/tmp/tmpx26rw9yy.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tstring = string.split('');\n\tvar all_prefixes = [];\n\tvar prev_prefix = '';\n\
    \tfor(var i = 0; i < string.length; i++){\n\t\tif(prev_prefix === ''){\n\t\t\t\
    all_prefixes.push(string[i]);\n\t\t}\n\t\telse {\n\t\t\tprev_prefix = prev_prefix\
    \ + '-' + string[i];\n\t\t}\n\t}\n\treturn all_prefixes;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp9fyft3zg.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9fyft3zg.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var prefix_length = 0;\n    for (var i=0; i<string.length;\
    \ i++){\n        var new_prefix = string.substr(0, i);\n        prefixes.push(new_prefix);\n\
    \        if (prefix_length < new_prefix.length){\n            prefix_length =\
    \ new_prefix.length;\n        }\n    }\n    return prefixes;\n}\n</cell>\n<cell>\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpm_ew_9_d.js:16\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  const prefixes = [];\n  let length = string.length;\n  for(let i = 0; i < length;\
    \ i++) {\n    let temp = string.substr(0, i);\n    if(!prefixes.includes(temp)){\n\
    \      prefixes.push(temp);\n    }\n  }\n  return prefixes;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpshijmlut.js:22:10)\n    at Object.<anonymous> (/tmp/tmpshijmlut.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar result = [];\n\tvar i = string.length;\n\twhile(i--){\n\t\tvar c = string.charAt(i);\n\
    \t\tif(c.length === 1 && isAlphaNumeric(c)){\n\t\t\tresult.unshift(c);\n\t\t}\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpr91093rr.js:9\n\t\tif(c.length === 1 && isAlphaNumeric(c)){\n\t\
    \t            ^\n\nReferenceError: isAlphaNumeric is not defined\n    at all_prefixes\
    \ (/tmp/tmpr91093rr.js:9:15)\n    at test (/tmp/tmpr91093rr.js:22:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpr91093rr.js:26:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  for(var i = 0; i < string.length; i++){\n    result.push(string.substring(0,\
    \ i));\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp0nlqdht2.js:17:10)\n    at Object.<anonymous> (/tmp/tmp0nlqdht2.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  var characters = string.split('');\n  for(var i = 0;\
    \ characters.length > i; i++){\n    prefixes.push(characters.slice(0, i + 1).join(''));\n\
    \  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var current_len = string.length;\n    var index =\
    \ 0;\n    while(index < current_len){\n        if(string.substr(index, 1) == ''){\n\
    \            prefixes.push(string.substr(0, index));\n            break;\n   \
    \     } else {\n            prefixes.push(string.substr(index, 1));\n        \
    \    index++;\n        }\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp1csx2c8l.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1csx2c8l.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    var start\
    \ = string.substring(0, i);\n    var prefix = prefixes.indexOf(start);\n    if(prefix\
    \ == -1){\n      prefixes.push(start);\n    }\n  }\n  return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpy45fg3en.js:22:10)\n    at Object.<anonymous> (/tmp/tmpy45fg3en.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var res = [];\n  for (var i = 0;i < string.length;i++)\n    res.push(string.slice(0,\
    \ i));\n  return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpnkp7lmgy.js:17:10)\n    at Object.<anonymous> (/tmp/tmpnkp7lmgy.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n  var prefix_length = Math.min.apply(Math, string.split(''))\n\
    \  var start_length = prefix_length\n  var start_index = 0\n  var current_length\n\
    \  while(start_length !== string.length){\n    current_length = start_length\n\
    \    for(; start_index < string.length; start_index++){\n      if(string.charAt(start_index)\
    \ !== string.charAt(current_length)){\n        break\n      }\n      current_length++\n\
    \    }\n    prefixes.push(string.substr(start_index, current_length))\n    start_length\
    \ = current_length\n  }\n  return prefixes\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "\n<--- Last few GCs --->\n\n[1068:0x5734b60]     4894 ms: Scavenge 878.9\
    \ (896.8) -> 862.9 (896.8) MB, 0.2 / 0.0 ms  (average mu = 0.713, current mu =\
    \ 0.712) allocation failure \n[1068:0x5734b60]     4914 ms: Scavenge 878.9 (896.8)\
    \ -> 862.9 (896.8) MB, 0.2 / 0.0 ms  (average mu = 0.713, current mu = 0.712)\
    \ allocation failure \n[1068:0x5734b60]     4934 ms: Scavenge 878.9 (896.8) ->\
    \ 862.9 (896.8) MB, 0.2 / 0.0 ms  (average mu = 0.713, current mu = 0.712) allocation\
    \ failure \n\n\n<--- JS stacktrace --->\n\nFATAL ERROR: invalid array length Allocation\
    \ failed - JavaScript heap out of memory\n 1: 0xa04200 node::Abort() [node]\n\
    \ 2: 0x94e4e9 node::FatalError(char const*, char const*) [node]\n 3: 0xb797be\
    \ v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\n\
    \ 4: 0xb79b37 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 5: 0xd343c5  [node]\n 6: 0xd0cf05  [node]\n 7: 0xe9671e\
    \  [node]\n 8: 0xe9686d  [node]\n 9: 0x1032b83 v8::internal::Runtime_GrowArrayElements(int,\
    \ unsigned long*, v8::internal::Isolate*) [node]\n10: 0x14011f9  [node]\n"
  exit_code: -6
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  let prefixes = [];\n  for(let i = 0; i < string.length; i++){\n    prefixes.push(string.slice(0,\
    \ i + 1));\n  }\n  return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  var re = /^(.+?)(.+)?/;\n  var matches, match, prefix,\
    \ i;\n  while(match = string.match(re)){\n    prefix = match[1];\n    matches\
    \ = match[2];\n    for(i=0; i<prefixes.length; i++){\n      if(prefixes[i] ===\
    \ prefix){\n        prefixes.splice(i, 1);\n      }\n    }\n    string = matches;\n\
    \  }\n  return prefixes.join('');\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n[]\n    at test (/tmp/tmpo64v7vi6.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo64v7vi6.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.split('').reduce(function(prefixes,char){\n    prefixes.unshift(char);\n\
    \    return prefixes;\n  },[]);\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'h', 'g', 'f', 'd', 's', 'a' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpuvn581qr.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuvn581qr.js:20:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g', 'f', 'd', 's', 'a' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.split('').sort().reduce(function(prefixes, char){\n    prefixes.push(prefixes[prefixes.length-1]\
    \ + '/' + char)\n    return prefixes\n  }, [])\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'undefined/a',\n  'undefined/a/d',\n \
    \ 'undefined/a/d/f',\n  'undefined/a/d/f/g',\n  'undefined/a/d/f/g/h',\n  'undefined/a/d/f/g/h/s'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpf_b8ktr5.js:17:10)\n    at Object.<anonymous> (/tmp/tmpf_b8ktr5.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'undefined/a',\n    'undefined/a/d',\n\
    \    'undefined/a/d/f',\n    'undefined/a/d/f/g',\n    'undefined/a/d/f/g/h',\n\
    \    'undefined/a/d/f/g/h/s'\n  ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    string = string.toString()\n    let prefixes = []\n    let string = string.toString()\n\
    \    for(let i = 0; i < string.length; i++){\n        let prefix = string.substring(0,\
    \ i)\n        if(prefixes.includes(prefix)){\n            continue\n        }\n\
    \        prefixes = [prefix].concat(prefixes)\n    }\n    return prefixes\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpkkamc53q.js:7\n    let string = string.toString()\n        ^\n\n\
    SyntaxError: Identifier 'string' has already been declared\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefix = [];\n  string = string.toLowerCase();\n  for(var i = 0, n = string.length;\
    \ i < n; i++){\n    prefix.push(string.substr(0,i+1));\n  }\n  return prefix;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'w', 'ww', 'www' ]\n\nshould equal\n\n\
    [ 'W', 'WW', 'WWW' ]\n    at test (/tmp/tmp6z069l3f.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6z069l3f.js:22:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'w', 'ww',\
    \ 'www' ],\n  expected: [ 'W', 'WW', 'WWW' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    return prefixes(string, function(word) {\n      return string.length < word.length\
    \ ? true : false;\n    });\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpno4uv3sc.js:5\n    return prefixes(string, function(word) {\n \
    \   ^\n\nReferenceError: prefixes is not defined\n    at all_prefixes (/tmp/tmpno4uv3sc.js:5:5)\n\
    \    at test (/tmp/tmpno4uv3sc.js:15:20)\n    at Object.<anonymous> (/tmp/tmpno4uv3sc.js:20:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var res = [];\n    var prefixes = string.split('');\n    for (var i=0; i<prefixes.length;\
    \ i++){\n        prefixes = prefixes.map( function(s){\n            return s.slice(0,\
    \ 1);\n        });\n        res.push( prefixes.join() );\n    }\n    return res;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a,s,d,f,g,h',\n  'a,s,d,f,g,h',\n  'a,s,d,f,g,h',\n\
    \  'a,s,d,f,g,h',\n  'a,s,d,f,g,h',\n  'a,s,d,f,g,h' ]\n\nshould equal\n\n[ 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpe837tlww.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe837tlww.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'a,s,d,f,g,h',\n    'a,s,d,f,g,h',\n\
    \    'a,s,d,f,g,h',\n    'a,s,d,f,g,h',\n    'a,s,d,f,g,h',\n    'a,s,d,f,g,h'\n\
    \  ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var list = [];\n  var prefixes = [''];\n\n  for(var i=0;i<string.length;i++){\n\
    \    list.push(prefixes[i]+string[i]);\n  }\n\n  return list;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a',\n  'undefineds',\n  'undefinedd',\n\
    \  'undefinedf',\n  'undefinedg',\n  'undefinedh' ]\n\nshould equal\n\n[ 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpjmzwt5fc.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjmzwt5fc.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'a',\n    'undefineds',\n    'undefinedd',\n\
    \    'undefinedf',\n    'undefinedg',\n    'undefinedh'\n  ],\n  expected: [ 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  var _str = '';\n\n  for (var i = 0; i<string.length;\
    \ i++){\n    _str += string.charAt(i);\n    if ( _str.indexOf(string) == 0 ){\n\
    \      prefixes.push(_str);\n      _string = '';\n    }\n  }\n\n  return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpgq4kiyqt.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgq4kiyqt.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n  var n = string.length\n  for(var i = 0; i<n; i++){\n \
    \   var p = string.substr(0,i)\n    prefixes.push(p)\n  }\n  return prefixes\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp3v_0pw5l.js:20:10)\n    at Object.<anonymous> (/tmp/tmp3v_0pw5l.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefix = [];\n  prefix_iterate(string,prefix.push.bind(prefix));\n  return\
    \ prefix;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprw7987s8.js:6\n  prefix_iterate(string,prefix.push.bind(prefix));\n\
    \  ^\n\nReferenceError: prefix_iterate is not defined\n    at all_prefixes (/tmp/tmprw7987s8.js:6:3)\n\
    \    at test (/tmp/tmprw7987s8.js:15:20)\n    at Object.<anonymous> (/tmp/tmprw7987s8.js:20:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tlet prefixes = [];\n\n\tfor(let i = 0; i<string.length; i++){\n\t\tprefixes.push(string.slice(0,\
    \ i));\n\t}\n\n\treturn prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpfokech6t.js:20:10)\n    at Object.<anonymous> (/tmp/tmpfokech6t.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var array = [];\n  var i = string.length;\n  while (i--) array[i] = string.slice(0,\
    \ i);\n  return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpe7celx56.js:17:10)\n    at Object.<anonymous> (/tmp/tmpe7celx56.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all_strings = [];\n  for(var i=0; i< string.length; i++){\n    all_strings.push(string[0]);\n\
    \  }\n  return all_strings;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'a', 'a', 'a', 'a', 'a' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpkhtaijl0.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkhtaijl0.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'a', 'a', 'a', 'a', 'a' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n\n    for(var i = 0; i < string.length; i++){\n     \
    \   var prefix = string.substr(0, i);\n        if(prefixes.indexOf(prefix) ==\
    \ -1){\n            prefixes.push(prefix);\n        }\n    }\n\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpyvjgdhnj.js:23:10)\n    at Object.<anonymous> (/tmp/tmpyvjgdhnj.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    for (var i = string.length; i--;){\n        prefixes[i]\
    \ = string.slice(0, i);\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpxotcheao.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxotcheao.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefix = [];\n  var re = new RegExp(string, 'g');\n  var split = re.split('');\n\
    \  for(var i = 0; i < split.length; i++){\n    if(split[i]===''){\n      prefix.push(split[i]);\n\
    \    }\n  }\n  return prefix;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpchx7uoay.js:7\n  var split = re.split('');\n                 ^\n\
    \nTypeError: re.split is not a function\n    at all_prefixes (/tmp/tmpchx7uoay.js:7:18)\n\
    \    at test (/tmp/tmpchx7uoay.js:21:20)\n    at Object.<anonymous> (/tmp/tmpchx7uoay.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = []\n    for(let i = 0; i < string.length; i++){\n        prefixes[i-1]\
    \ = string[i]\n    }\n    return prefixes\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 's', 'd', 'f', 'g', 'h', '-1': 'a' ]\n\
    \nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test\
    \ (/tmp/tmp41us23oy.js:18:10)\n    at Object.<anonymous> (/tmp/tmp41us23oy.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 's', 'd', 'f', 'g', 'h', '-1': 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var results = [];\n  for (var i = string.length; i >= 0; i--)\n    results.unshift(string.substr(0,\
    \ i));\n  return results;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpuhkbnebv.js:16:10)\n    at Object.<anonymous> (/tmp/tmpuhkbnebv.js:21:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar prefix = [];\n\tfor(var i=1;i<=string.length;i++)\n\t\tprefix.push(string.substr(0,i));\n\
    \treturn prefix;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  var chars = string.split('');\n  var len = chars.length;\n\
    \n  for (var i = 0; i < len; i++) {\n    result.push(chars[i]);\n  }\n\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp8szf8c0j.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8szf8c0j.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var res = [];\n  var shortest = '';\n  var longest = '';\n  for (var i = 0;\
    \ i < string.length; i++){\n    if (shortest == string[i]){\n      res[i] = shortest;\n\
    \    }\n    if (longest == string[i]){\n      res[i] = longest;\n    }\n    if\
    \ (shortest != '' && longest != '' && shortest < string[i]){\n      res[i] = shortest;\n\
    \    }\n    if (longest != '' && shortest != '' && longest > string[i]){\n   \
    \   res[i] = longest;\n    }\n  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpo8u_yg_0.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpo8u_yg_0.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var arr = [];\n  for (var i=string.length-1; i>=0; i--){\n    arr.push(string.substring(0,\
    \ i+1));\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh', 'asdfg', 'asdf', 'asd', 'as',\
    \ 'a' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n \
    \   at test (/tmp/tmpdnec4a2w.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdnec4a2w.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'asdfg', 'asdf', 'asd', 'as',\
    \ 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    for(var i = 0; i < string.length; i++){\n       \
    \ prefixes.push(string.substring(0, i));\n    }\n    return prefixes;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpsgzumtqj.js:18:10)\n    at Object.<anonymous> (/tmp/tmpsgzumtqj.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar output = [];\n\tfor (var i=0, len = string.length; i < len; i++){\n\t\t\
    output.push(string.substring(0, i));\n\t}\n\treturn output;\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpaftwmj40.js:19:10)\n    at Object.<anonymous> (/tmp/tmpaftwmj40.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var index = -1;\n    while (++index < string.length){\n\
    \        prefixes.push(string.substr(0, index));\n    }\n    return prefixes;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpcibeizu9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcibeizu9.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = [];\n  for(var i = 0; i < string.length; i++){\n    var char\
    \ = string.charAt(i);\n    while(prefixes.length >= 0 && prefixes[prefixes.length-1]\
    \ < string.length){\n      prefixes.push(char);\n    }\n  }\n  return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpwnawx1h_.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwnawx1h_.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return string.split(/[\\s\\-\\_]/).map(function(x){return x}).filter(function(x){return\
    \ x})\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpu_ht5rfn.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu_ht5rfn.js:18:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var results = [];\n    for (var i=0; i < string.length; i++){\n        var\
    \ prefix = string.substring(0, i);\n        results.push(prefix);\n    }\n   \
    \ return results;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp1thwry8e.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1thwry8e.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var current = ''\n    var prefixes = []\n    for (var i=0; i<string.length;\
    \ i++){\n        if (current!==string[i]){\n            prefix = string.substr(0,i)\n\
    \            prefixes.push(prefix)\n            current = string[i]\n        }\n\
    \    }\n    return prefixes\n}\n</code>\n<|/ a |>\n<| c |>\nthanks a lot for this\
    \ solution. I used `split` and then `join` to concatenate the prefixes and suffixes\
    \ into a single string.\n<|/ c |>\n<| a |>\nHere is a solution which uses String.split()\
    \ and String.join(). \n<code>\nvar input = \"abcdef\";\n\nvar prefix = input.split('');\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp28bfvn4y.js:16\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n\n  for(var i = 0; i < string.length; i++){\n    for(var\
    \ j = 0; j < prefixes.length; j++){\n      if (string.substr(0,j+1) === prefixes[j])\
    \ {\n        prefixes.splice(j, 1);\n      }\n    }\n    prefixes.push(string.substr(0,i+1));\n\
    \  }\n  return prefixes\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpvzugnrke.js:23:10)\n    at Object.<anonymous> (/tmp/tmpvzugnrke.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var minlen = 1;\n  var maxlen = string.length;\n  var prefixes = [];\n\n  while(true){\n\
    \    if(minlen > maxlen){\n      return prefixes;\n    }\n\n    var prefix = string.substr(0,\
    \ maxlen);\n\n    if(prefixes.indexOf(prefix) === -1){\n      prefixes.push(prefix);\n\
    \      minlen++;\n    }\n\n    maxlen--;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh', 'asdfg', 'asdf' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpna5omx4h.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpna5omx4h.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'asdfg', 'asdf' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefix = [], \n      i;\n  for (i = 0; i < string.length; i++)\n    if\
    \ (string[i] !== string[0])\n      prefix.push(string.slice(0, i));\n  return\
    \ prefix;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg' ]\n\n\
    should equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpiqvet4mk.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpiqvet4mk.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = new Array();\n    var i = 0;\n    while(i < string.length){\n\
    \        prefixes.push(string.substring(0, i));\n        i++;\n    }\n    return\
    \ prefixes;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpy5ynuckt.js:20:10)\n    at Object.<anonymous> (/tmp/tmpy5ynuckt.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = []\n  for(var i = 0; i < string.length; i++){\n    var character\
    \ = string[i]\n    if(character == undefined) throw Error('String is undefined\
    \ or empty!')\n    if(prefixes.length == 0) prefixes = [character]\n    else if(character\
    \ in prefixes){\n      prefixes.push(character)\n    }\n  }\n  return prefixes\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a' ]\n\nshould equal\n\n[ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp6kn9q8dc.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6kn9q8dc.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    let prefixes = [];\n    let i = string.length;\n    while (i){\n        prefixes.unshift(string.slice(0,\
    \ i));\n        i = string.slice(0,i).lastIndexOf('');\n    }\n    return prefixes;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var results = [];\n  for(var i=0, l=string.length; i<l; i++){\n    var prefix\
    \ = string.slice(0, i);\n    results.push(prefix);\n  }\n  return results;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp5tw0shr4.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5tw0shr4.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar i=0, n=string.length, prefix, prefix, prefixes = [], prefixesList = [],\
    \ j = 0;\n\twhile(i<n){\n\t\tprefix = string.slice(0,i);\n\t\tif (prefix) prefixes.push(prefix);\n\
    \t\ti++;\n\t}\n\twhile(j<prefixes.length){\n\t\tprefix = prefixes[j];\n\t\twhile(prefixesList.indexOf(prefix)==-1){\n\
    \t\t\tprefixesList.push(prefix);\n\t\t}\n\t\tprefix++;\n\t\tj++;\n\t}\n\treturn\
    \ prefixesList;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg' ]\n\n\
    should equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmp60qwvz16.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp60qwvz16.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  return prefix_tree(string, false, true);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_o6sag77.js:5\n  return prefix_tree(string, false, true);\n  ^\n\
    \nReferenceError: prefix_tree is not defined\n    at all_prefixes (/tmp/tmp_o6sag77.js:5:3)\n\
    \    at test (/tmp/tmp_o6sag77.js:13:20)\n    at Object.<anonymous> (/tmp/tmp_o6sag77.js:18:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var result = [];\n  var i = string.length - 1;\n  while(i >= 0){\n    result.unshift(string.substr(0,i));\n\
    \    i--;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpt6qbgp3e.js:20:10)\n    at Object.<anonymous> (/tmp/tmpt6qbgp3e.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var chars = string.toLowerCase().split('');\n   \
    \ for(var i=0;i<chars.length;i++){\n        var char = chars[i];\n        for(var\
    \ j=0;j<prefixes.length;j++){\n            var prefix = prefixes[j];\n       \
    \     if(prefix == char){\n                break;\n            }else{\n      \
    \          continue;\n            }\n        }\n        if(j == prefixes.length){\n\
    \            prefixes.push(char);\n        }\n    }\n    return prefixes;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpotwhdvym.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpotwhdvym.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var array = [];\n    var prefix = \"\";\n    \n    for(var i = 0; i <= string.length;\
    \ i++){\n        prefix = prefix + string[i];\n        array.push(prefix);\n \
    \   }\n    return array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'undefined' ]\n\nshould equal\n\n[]\n\
    \    at test (/tmp/tmpkfe9rq7s.js:20:10)\n    at Object.<anonymous> (/tmp/tmpkfe9rq7s.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'undefined' ],\n  expected: [],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    // Convert string to array of characters from string method\n    array =\
    \ string.split('');\n    // Return array of all possible prefixes from the input\
    \ string\n    return array.map((x,i) => (array.length > 1 ? all_prefixes(array.slice(i+1).join(''))\
    \ : x))\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ [ [ [ [ 'h' ], 'h' ], 'g', 'h' ], 'f',\
    \ 'g', 'h' ],\n    'd',\n    'f',\n    'g',\n    'h' ],\n  's',\n  'd',\n  'f',\n\
    \  'g',\n  'h' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ]\n    at test (/tmp/tmp0ry8g174.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0ry8g174.js:20:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    [\n      [ [ [ [Array], 'h' ], 'g',\
    \ 'h' ], 'f', 'g', 'h' ],\n      'd',\n      'f',\n      'g',\n      'h'\n   \
    \ ],\n    's',\n    'd',\n    'f',\n    'g',\n    'h'\n  ],\n  expected: [ 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  if(string === ''){return []}\n  var all_prefixes = []\n  var character\n  var\
    \ length\n  for(var i = 1, len = string.length; i < len; i++){\n    character\
    \ = string[i]\n    length = string.length - i\n    if(character === string[0]){\n\
    \      all_prefixes.push(character)\n      all_prefixes.push(string.slice(0, length))\n\
    \    }\n  }\n  return all_prefixes\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpnzfnyi8x.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpnzfnyi8x.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  const prefixes = [];\n  let curr = '';\n  let i = 0;\n  while(i < string.length){\n\
    \    curr = string.substr(i, string.length);\n    while(i < string.length && string.substr(i,\
    \ string.length) !== curr){\n      i += 1;\n    }\n    if(i < string.length){\n\
    \      prefixes.push(curr);\n    }\n    i += 1;\n  }\n  return prefixes;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh',\
    \ 'h' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n \
    \   at test (/tmp/tmpks4u2v1w.js:27:10)\n    at Object.<anonymous> (/tmp/tmpks4u2v1w.js:31:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh', 'sdfgh', 'dfgh', 'fgh', 'gh',\
    \ 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    if(!string){\n        return [];\n    }\n    var prefixes = [];\n    var\
    \ i;\n    for(i = string.length; i >= 0; i--){\n        prefixes.unshift(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ]\n    at test (/tmp/tmptlu9_q91.js:22:10)\n    at Object.<anonymous> (/tmp/tmptlu9_q91.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar i = 0;\n\tvar result = [];\n\twhile(i < string.length){\n\t\tresult.push(string.substr(0,\
    \ i));\n\t\ti = i + 1;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp0ybd4ls4.js:20:10)\n    at Object.<anonymous> (/tmp/tmp0ybd4ls4.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var i, prefixes = [];\n    for(i = 0; i < string.length; i++){\n        prefixes.unshift(string.substr(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'asdfg', 'asdf', 'asd', 'as', 'a', ''\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmpg1kksgeh.js:18:10)\n    at Object.<anonymous> (/tmp/tmpg1kksgeh.js:22:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg', 'asdf', 'asd', 'as', 'a', '' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var res = [];\n  var len = string.length;\n  for(var i=0;i<len;i++){\n    if(string[i]===string[0]){\n\
    \      res.unshift(string[0]);\n    } else {\n      res.push(string[i]);\n   \
    \ }\n  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'a', 's', 'd', 'f', 'g', 'h' ]\n\nshould\
    \ equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpmgm0pink.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmgm0pink.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's', 'd', 'f', 'g', 'h' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var str = '';\n    for(var i=0; i<string.length; i++){\n        str += string.slice(0,\
    \ i) + string.slice(i);\n    }\n    return str;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n[]\n    at test (/tmp/tmpa_amwygg.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa_amwygg.js:21:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var prefixes = Array.from(new Set(string.split('')))\n  return prefixes.map(function(item){return\
    \ item.substr(0, item.length - 1)})\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', '', '', '', '', '' ]\n\nshould equal\n\
    \n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmptgvkrtw_.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmptgvkrtw_.js:19:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', '', '', '', '', '' ],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \  var all = []\n  var i = 0\n  while (i< string.length){\n    all.push(string.substr(0,i))\n\
    \    i++\n  }\n  return all\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmprcwbtur1.js:20:10)\n    at Object.<anonymous> (/tmp/tmprcwbtur1.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    var prefixes = [];\n    var len = string.length;\n    if(string.length ==\
    \ 0) return prefixes;\n    for(var i = 0; i < len; i++){\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'a', 'as', 'asd', 'asdf', 'asdfg'\
    \ ]\n\nshould equal\n\n[ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ]\n    at\
    \ test (/tmp/tmp50be2ftf.js:20:10)\n    at Object.<anonymous> (/tmp/tmp50be2ftf.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'a', 'as', 'asd', 'asdf', 'asdfg' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \tvar prefixes = []\n\tvar re = /(.)\\1{2,}/g\n\twhile(re.test(string)){\n\t\t\
    prefixes.push(string.match(re)[0])\n\t\tstring = string.slice(string.match(re)[0].length)\n\
    \t}\n\treturn prefixes\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ]\n    at test (/tmp/tmpg10e4avt.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpg10e4avt.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Return list of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes('abc')\n// ['a', 'ab', 'abc']\nfunction all_prefixes(string){\n\
    \    return prefix_array(string, function(prefix, pos){\n        return prefix.length\
    \ > pos.length;\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpfr3640t0.js:5\n    return prefix_array(string, function(prefix,\
    \ pos){\n    ^\n\nReferenceError: prefix_array is not defined\n    at all_prefixes\
    \ (/tmp/tmpfr3640t0.js:5:5)\n    at test (/tmp/tmpfr3640t0.js:15:20)\n    at Object.<anonymous>\
    \ (/tmp/tmpfr3640t0.js:20:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError

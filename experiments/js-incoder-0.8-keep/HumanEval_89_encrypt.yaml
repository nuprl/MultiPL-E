name: HumanEval_89_encrypt
language: js
prompt: "//Create a function encrypt that takes a string as an argument and\n// returns\
  \ a string encrypted with the alphabet being rotated. \n// The alphabet should be\
  \ rotated in a manner such that the letters \n// shift down by two multiplied to\
  \ two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl')\
  \ returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\n\
  function encrypt(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = encrypt;\n  assert.deepEqual(candidate(\"hi\"),\"lm\");\n  assert.deepEqual(candidate(\"\
  asdfghjkl\"),\"ewhjklnop\");\n  assert.deepEqual(candidate(\"gf\"),\"kj\");\n  assert.deepEqual(candidate(\"\
  et\"),\"ix\");\n  assert.deepEqual(candidate(\"faewfawefaewg\"),\"jeiajeaijeiak\"\
  );\n  assert.deepEqual(candidate(\"hellomyfriend\"),\"lippsqcjvmirh\");\n  assert.deepEqual(candidate(\"\
  dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"),\"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\"\
  );\n  assert.deepEqual(candidate(\"a\"),\"e\");\n}\n\ntest();"
completions: ["  alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  var x = [];\n  var n\
    \ = s.length;\n  var y = 0;\n  for(var i =0;i<n;i++){\n    var y = alphabet.indexOf(s.charAt(i));\n\
    \    x.push(y);\n  }\n  \n  y = x[x.length-1];\n  y = y % 26;\n  var b = \"\"\
    ;\n  \n  for(i = 0;i < x.length;i++){\n    var c = x[i];\n    b = b + alphabet[c];\n\
    \  }\n  \n  return b;\n}\n", "    \n}\n", "  let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\
    \  let letters = '';\n  \n  for (let i = 0; i < s.length; i++)\n    letters +=\
    \ alphabet.shift();\n\n  let result = '';\n  let key = '';\n  \n  for(let j =\
    \ 0; j < alphabet.length; j++)\n    key += alphabet[j];\n  \n  for(let i = 0;\
    \ i < s.length; i++){\n    let index = alphabet.indexOf(key[i % key.length]);\n\
    \    result += alphabet.splice(index,1);\n    result += alphabet.shift();\n  }\n\
    \  \n  return result;\n}\n", "    var encrypted = [];\n    \n    // First we need\
    \ to get the length of the string\n    var len = s.length;\n    \n    // Then\
    \ we need to get the alphabet's length (26 letters)\n    var alphaLen = alphabet.length;\n\
    \    \n    // Then we need to convert the letter's ASCII value into it's corresponding\
    \ value from the alphabet array\n    var alphaTable = alphabet.split('');\n  \
    \  var alphaVals = [];\n    alphaVals = alphaTable.map(function(alphaVal){\n \
    \       var idx = alphabet.indexOf(alphaVal);\n        return idx;\n    });\n\
    \    \n    // Now we use the value from the alpha table to get our rotated value\
    \ \n    for (var i = 0; i < len; i++){\n        encrypted.push(alphaVals.shift()\
    \ + alphaVals.shift());\n    }\n    \n    // Now that we have our encrypted string,\
    \ we just have to turn it into a string\n    // and return a string that contains\
    \ the letters being encrypted\n    return encrypted.toString();\n}\n", "    var\
    \ alphabet = list;\n    alphabet.shift();\n    return alphabet[rotate(alphabet,s)]\n\
    }\n", "  var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  var newLetters = \"\
    \";\n  for (var i =0; i < s.length; i+=2){\n    newLetters += alphabet.charAt(alphabet.indexOf(s.charAt(i)\
    \ + alphabet.indexOf(s.charAt(i+1))) + 2);\n  }\n  return newLetters;\n}\n", " \
    \   var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var shift = 3;\n\n   \
    \ // The for loop is used to rotate each letter by two places\n    // so it can\
    \ be easily shifted down by two multiplied to two\n    // places. This process\
    \ repeats until all letters are rotated\n    // the amount of times indicated\
    \ by the shift parameter.\n    for(var i = 0; i < alphabet.length; i++){\n   \
    \     var temp = alphabet[i];\n        alphabet[i] = alphabet[alphabet.length\
    \ - shift - i];\n        alphabet[alphabet.length - shift - i] = temp;\n    }\n\
    \n    // The for loop is used to reverse the rotated alphabet by two\n    // places.\
    \ This process repeats until all letters are shifted\n    // the amount of times\
    \ indicated by the shift parameter. The result \n    // of this operation is what\
    \ is encrypted using our function.\n    for(var i = 0; i < alphabet.length; i++){\n\
    \        var temp = alphabet[i];\n        alphabet[i] = alphabet[i + shift];\n\
    \        alphabet[i + shift] = temp;\n    }\n\n    // The for loop will take each\
    \ letter from the input string and\n    // encrypt it. Each character is converted\
    \ into a number, which is \n    // then used to find and return the encrypted\
    \ character\n    for(var i = 0; i < s.length; i++){\n        var temp = s.charAt(i);\n\
    \        temp = alphabet[alphabet.indexOf(temp) + 2];\n        s = s.substring(0,\
    \ i) + temp + s.substring(i + 1);\n    }\n    return s;\n}\n", "  var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n  var rotated_alphabet = alphabet.split(\"\
    \").map(function(e){return e.charCodeAt(0) - 2;});\n  var encrypt_alphabet = alphabet.split(\"\
    \").map(function(e){return e.charCodeAt(0);});\n  var rotated_alphabet = rotated_alphabet.concat(rotated_alphabet);\n\
    \  var encrypt_alphabet = encrypt_alphabet.concat(encrypt_alphabet);\n  var encrypted_string\
    \ = rotate_right(encrypt_alphabet, s);\n  return encrypted_string.split(\"\").map(function(e){return\
    \ String.fromCharCode(e.charCodeAt(0) + 2);}).join(\"\");\n}\n", "\tlet alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\tlet newString = s.split(\"\").map(e=>alphabet[alphabet.indexOf(e)-1]).join(\"\
    \");\n\treturn newString;\n}\n", "\treturn s.split(\"\").map(function(x){\n\t\t\
    x = x.charCodeAt(0); \n\t\treturn String.fromCharCode((x-(26*((x+26)%26))%26)\
    \ + 26)\n\t}).join(\"\");\n}", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var encryptedString = \"\";\n  var index = 0;\n  for(i = 0; i < s.length;\
    \ i++){\n    encryptedString += alphabet.charAt(alphabet.length - index--);\n\
    \  }\n  return encryptedString;\n}\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('').reverse().join('');\n\
    \    let encrypted = '';\n    for (let i = 0; i < s.length; i++){\n        encrypted\
    \ += alphabet.indexOf(s.charAt(i)) + alphabet.length * 2 - 2;\n    }\n    return\
    \ encrypted;\n}\n", "\tlet enc = \"\";\n\tfor (let i = 0; i < s.length; i++) {\n\
    \t\tenc += rotation(s.charAt(i));\n\t}\n\treturn enc;\n}\n", "    var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    var alphabetLength = alphabet.length;\n\
    \    var letters = alphabet.split(\"\");\n    var rotatedLetters = Array(alphabetLength);\n\
    \    \n    for (var i = 0; i < alphabetLength; i++)\n    {\n        rotatedLetters[i]\
    \ = letters[(i + alphabetLength) % alphabetLength];\n    }\n    \n    return rotatedLetters.join(s);\n\
    }\n", "    // Complete the function by filling in the missing code below.\n  \
    \  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    var length = alphabet.length;\n\
    \    var newString = '';\n    for (var index = 0; index < s.length; index++){\n\
    \        var rotation = alphabet.indexOf(s.charAt(index)) + 2;\n        newString\
    \ += alphabet.charAt(rotation);\n    }\n    console.log(newString);\n}\n</code>\n\
    <|/ a |>\n<| c |>\nHey I appreciate the help. What you wrote is correct, but I\
    \ cannot use it. What I need to do is create a function that will rotate the alphabet\
    \ by two characters. So for instance if the alphabet was 'abcdef' after rotation\
    \ it would become 'bcdefg'\n<|/ c |>\n<| c |>\nI've updated my answer to show\
    \ you how to rotate the alphabet by two places. You can just use this function\
    \ to encrypt the string.\n<|/ c |>\n<| c |>\nYou can't use a for loop? I guess\
    \ I misunderstood what you were trying to accomplish then, can you just use a\
    \ while loop? I've updated my answer.\n<|/ c |>\n<| c |>\nI believe your code\
    \ is correct, but it is still returning the original string. I tried debugging\
    \ it and it is just returning the original string\n<|/ c |>\n<| c |>\nI believe\
    \ the issue is with you passing the string into the function. You need to pass\
    \ the string you want to encrypt, or else it will just return the original string.\
    \ I updated my answer to reflect that. Also, I noticed I forgot to put return\
    \ before the call to encrypt, so I just added that in too.\n<|/ c |>\n<| a tags=javascript\
    \ dscore=0 |>\n<code>", "  return cipherAlphabets[alphabetPosition++] + s;\n}\n",
  "    // rotate the alphabet by two\n    for(var i=0; i<s.length; i++){\n       \
    \ var c = s.charAt(i);\n        c = ROTATE_LETTERS[ROTATE_LETTERS.indexOf(c) +\
    \ 2];\n        s.charAt(i) = c;\n    }\n    return s;\n}\n", "\tvar alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n\tvar shift = alphabet.indexOf(s.charAt(s.length\
    \ - 1));\n\tvar firstHalf = alphabet;\n\tvar secondHalf = alphabet.substr(0, shift\
    \ + 2);\n\treturn firstHalf + secondHalf + s.charAt(s.length - 2);\n}", "    \n\
    \    // Create a variable called alphabet and set it to the alphabet\n    // array\
    \ declared in our class variable.\n    var alphabet = this.alphabet;\n    \n \
    \   // Create a variable called output and set it to an empty string.\n    var\
    \ output = '';\n    \n    // Loop from 0 to s.length - 1 and add each letter to\
    \ the output string.\n    // Start with i = 0 and end with the letter in the alphabet\
    \ array\n    // that corresponds to the last letter of our alphabet.\n    for\
    \ (var i = 0; i < s.length; i++){\n        // Add the current letter to the output\
    \ string, shifted down by 2\n        // to get the appropriate letter from the\
    \ rotated alphabet.\n        output = output + alphabet[alphabet.indexOf(alphabet[i])\
    \ - 2]\n    }\n    \n    // Return the output string.\n    return output;\n}\n",
  "  var alphabet='abcdefghijklmnopqrstuvwxyz'.split('');\n  alphabet=alphabet.map(function(letter){\n\
    \    letter=letter.split('');\n    letter[1]=letter[1].toUpperCase()\n    return\
    \ letter.join('');\n  }).join('');\n  alphabet=alphabet.split('').map(function(letter){\n\
    \    letter=letter.split('');\n    return letter.join('');\n  })\n  \n  var encrypted=\"\
    \"\n  for(var i=0; i<s.length; i++){\n    encrypted+=alphabet[alphabet.indexOf(s.charAt(i))+2];\n\
    \  }\n  return encrypted\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    \n  var key = alphabet.split(\"\").reverse().join(\"\")\n  var result = ''\n \
    \ for(i = 0; i < s.length; i++){\n    var current = s.charAt(i)\n    var index\
    \ = alphabet.indexOf(current)\n    result += alphabet.charAt(index - alphabet.indexOf(key)\
    \  + 2)\n  }\n  return result\n}\n", "    var alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    \    var newAlphabet = ''\n    var i = 0\n    while(i < alphabet.length){\n  \
    \      newAlphabet += alphabet.charAt(i)\n        i++\n    }\n    \n    var result\
    \ = ''\n    \n    for (i = 0; i < s.length; i++){\n        result += alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + alphabet.indexOf(newAlphabet.charAt(0)))\n    }\n    \n    return result\n\
    }\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var rotated_alphabet\
    \ = \"\";\n    for(var i = 0; i < alphabet.length; i++){\n        rotated_alphabet\
    \ += alphabet.charAt(alphabet.indexOf(alphabet.charAt(i)) + 2);\n    }\n    var\
    \ rotated_s = \"\";\n    for(var i = 0; i < s.length; i++){\n        var current_char\
    \ = s.charAt(i);\n        var current_index = alphabet.indexOf(current_char);\n\
    \        current_index += 2\n        rotated_s += rotated_alphabet.charAt(current_index);\n\
    \    }\n    return rotated_s;\n}", "    let r = [];\n    for (let i = 0; i < s.length;\
    \ i++){\n        if (s.charCodeAt(i) > 96 && s.charCodeAt(i) < 123){\n       \
    \     r.push(s.charCodeAt(i) - 32);\n        }\n        else {\n            r.push(s.charCodeAt(i)\
    \ + 2);\n        }\n    }\n    return r.join('');\n}", "  s = s.toString();\n\
    \  var key = key.substring(0,4);\n  var alphabet = alphabet.substring(0,4);\n\
    \  var keyLength = key.length;\n  var alphabetLength = alphabet.length;\n  var\
    \ sLength = s.length;\n  var output = '';\n  for(var i=0;i<sLength;i++){\n   \
    \ var letter = s.charAt(i);\n    var letterIndex = alphabet.indexOf(letter);\n\
    \    var keyIndex = key.indexOf(key[i]);\n    var keyAndLetter = keyIndex + letterIndex*2;\n\
    \    output += alphabet.charAt(keyAndLetter);\n  }\n  return output;\n}\n", " \
    \ var alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  var chars = []\n  for(var i=0;i<alphabet.length;i++)\n\
    \  {\n    var char = alphabet.charAt(i)\n    var index = alphabet.indexOf(char,\
    \ alphabet.indexOf(char)+2)\n    if(index!==-1)\n    {\n      chars.push(index)\n\
    \    }\n  }\n  \n  s = s.split('')\n  for(var i=0;i<s.length;i++)\n  {\n    index\
    \ = chars.indexOf(s[i])\n    s[index] = alphabet[index + 2]\n    s[index + 1]\
    \ = alphabet[index + 1]\n  }\n  \n  return s.join('')\n}\n", "    \n    let chars\
    \ = [];\n    for(let i = 0; i < s.length; i++){\n        chars.push(s.charCodeAt(i));\n\
    \    }\n    \n    let newString = '';\n    for(let i = 0; i < chars.length; i++){\n\
    \        newString += String.fromCharCode(chars[(i + chars.length) % chars.length]);\n\
    \    }\n    \n    return newString;\n}\n", "    let newStr=''\n    let alphabet\
    \ = rot13(alphabet)\n    for (let i = 0; i < s.length; i++){\n        let char\
    \ = s.charAt(i)\n        newStr += alphabet[char.charCodeAt(0) - 97]\n    }\n\
    \    return newStr\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var\
    \ encrypted = \"\";\n  \n  for (var i = 0; i < s.length; i++){\n    var position\
    \ = alphabet.indexOf(s.charAt(i));\n    var newPosition = position + 2;\n    if\
    \ (newPosition > alphabet.length-1){\n      newPosition = alphabet.charAt(newPosition\
    \ - alphabet.length);\n    }\n    encrypted += alphabet.charAt(newPosition);\n\
    \  }\n  return encrypted;\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  var rotatedAlphabet = alphabet;\n  for(var i = alphabet.length - 1; i >= 1;\
    \ i--){\n    rotatedAlphabet = rotatedAlphabet.substring(1) + rotatedAlphabet.substring(0,1);\n\
    \  }\n  var rotated = '', rotatedCounter = 0;\n  for(var i = 0; i < s.length;\
    \ i++){\n    rotated += rotatedAlphabet.charAt(alphabet.indexOf(s.charAt(i)) +\
    \ \n      (rotatedCounter % alphabet.length));\n    rotatedCounter += 1;\n  }\n\
    \  return rotated;\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var\
    \ key = alphabet;\n  var newKey = '';\n\n  for(var i=0; i<alphabet.length; i++){\n\
    \    newKey += key[i];\n  }\n  for(var i=0; i<alphabet.length; i++){\n    newKey\
    \ += key[alphabet.length - 1 - i];\n  }\n  key = newKey;\n\n  var encrypted =\
    \ '';\n  for(i=0; i<s.length; i++){\n    encrypted += String.fromCharCode(alphabet.indexOf(key[s.charCodeAt(i)\
    \ % key.length]));\n  }\n  return encrypted;\n}\n", "  let alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
    \  let alphabetReverse = ['z','y','x','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a']\n\
    \  let encrypted = ''\n  let reverse = 0\n  let length = 0\n\n  for (let i=0;\
    \ i< s.length; i++){\n    reverse = reverse * 26 + alphabet.indexOf(s[i])\n  \
    \  encrypted = encrypted + alphabetReverse[reverse]\n    length++\n  }\n\n  return\
    \ encrypted\n}\n", "\treturn rotate(s, alphabet);\n}\n", "    var alphabet = 'abcdefghijklmnopqrstuvwxyz',\n\
    \        len = alphabet.length,\n        len = s.length,\n        encrypted =\
    \ '',\n        i = 0, j = 0;\n    while(i < len){\n        encrypted += alphabet.charAt(Math.floor(alphabet.indexOf(s[i],\
    \ j) + 2));\n        j += 2;\n        i++;\n    }\n    return encrypted;\n}",
  "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var alphabetLength = alphabet.length;\n\
    \  var alphabetPosition = alphabetLength;\n  \n  //Store the first letter of the\
    \ alphabet into the 'firstLetter' variable\n  var firstLetter = alphabet.substr(0,alphabetPosition);\
    \ \n  var newFirstLetter = firstLetter;\n  \n  //Shift the first letter down by\
    \ two to shift it to the second letter\n  var shiftedFirstLetter = alphabet.substr(alphabetPosition-1,alphabetPosition);\
    \ \n  var newShiftedFirstLetter = shiftedFirstLetter;\n  \n  //Shift the second\
    \ letter down by two to shift it to the third letter\n  var shiftedSecondLetter\
    \ = alphabet.substr(alphabetPosition-2,alphabetPosition); \n  var newShiftedSecondLetter\
    \ = shiftedSecondLetter;\n  \n  //Shift the third letter down by two to shift\
    \ it to the fourth letter\n  var shiftedThirdLetter = alphabet.substr(alphabetPosition-3,alphabetPosition);\
    \ \n  var newShiftedThirdLetter = shiftedThirdLetter;\n  \n  //Shift the fourth\
    \ letter down by two to shift it to the fifth letter\n  var shiftedFourthLetter\
    \ = alphabet.substr(alphabetPosition-4,alphabetPosition); \n  var newShiftedFourthLetter\
    \ = shiftedFourthLetter;\n  \n  //Shift the fifth letter down by two to shift\
    \ it to the sixth letter\n  var shiftedFifthLetter = alphabet.substr(alphabetPosition-5,alphabetPosition);\
    \ \n  var newShiftedFifthLetter = shiftedFifthLetter;\n  \n  //Shift the sixth\
    \ letter down by two to shift it to the seventh letter\n  var shiftedSixthLetter\
    \ = alphabet.substr(alphabetPosition-6,alphabetPosition); \n  var newShiftedSixthLetter\
    \ = shiftedSixthLetter;\n  \n  //Shift the seventh letter down by two to shift\
    \ it to the eight letter\n  var shiftedSeventhLetter = alphabet.substr(alphabetPosition-7,alphabetPosition);\
    \ \n  var newShiftedSeventhLetter = shiftedSeventhLetter;\n  \n  //Shift the eighth\
    \ letter down by two to shift it to the ninth letter\n  var shiftedEighthLetter\
    \ = alphabet.substr(alphabetPosition-8,alphabetPosition); \n  var newShiftedEighthLetter\
    \ = shiftedEighthLetter;\n  \n  //Shift the ninth letter down by two to shift\
    \ it to the tenth letter\n  var shiftedNinthLetter = alphabet.substr(alphabetPosition-9,",
  "  var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  var alphabet_map =\
    \ {};\n  alphabet.forEach(function(letter){\n    alphabet_map[letter] = letter;\n\
    \  });\n\n  var new_s = '';\n  var len = s.length;\n  for(var i = 0; i < len;\
    \ i++){\n    if(alphabet_map[s[i]]) {\n      var pos = alphabet.indexOf(s[i]);\n\
    \      if(alphabet_map[s[i]] == 'z'){\n        new_s += alphabet_map[alphabet[pos\
    \ + 2]];\n      } else {\n        new_s += alphabet_map[alphabet[pos + 1]];\n\
    \      }\n    } else {\n      new_s += s[i];\n    }\n  }\n  return new_s;\n}\n",
  "    var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\
    \    var shiftValue = 2;\n\n    var encrypted = \"\";\n    for(var i = 0; i <\
    \ s.length; i++){\n        encrypted += alphabet.charAt(s.charCodeAt(i) % (alphabet.length-1));\n\
    \    }\n    for(var i = 0; i < shiftValue; i++){\n        encrypted += alphabet.charAt(alphabet.indexOf((alphabet.charAt(alphabet.length-1)\
    \ + alphabet.charAt(alphabet.length-2)) % (alphabet.length-1)));\n    }\n    \n\
    \    return encrypted;\n}\n", "  let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    .split(\"\");\n  let rotatableLetters = alphabet.map((v, i) => alphabet.indexOf(v)\
    \ + 2).map(v => alphabet.indexOf(v));\n  let alphabetLength = alphabet.length;\n\
    \n  return s.split(\"\").map(char => {\n    if (rotatableLetters.includes(alphabet.indexOf(char))){\n\
    \      return alphabet[rotatableLetters.indexOf(char)]\n    }else{\n      return\
    \ char\n    }\n  }).join(\"\")\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rot = \"gf\";\n\n  var newLetters= [];\n  var letterCount = 0;\n  for(var\
    \ i = 0; i < s.length; i++) {\n    var thisLetter = s.charAt(i).toLowerCase();\n\
    \    newLetters.push(alphabet[alphabet.indexOf(thisLetter) - alphabet.indexOf(rot)]);\n\
    \    letterCount++;\n  }\n\n  var rotatedLetters = newLetters.join(\"\");\n  return\
    \ rotatedLetters;\n}", "    return s.split('').map(function (c) {\n        const\
    \ alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n        const\
    \ i = alphabet.indexOf(c);\n        if (i < 0) {\n            throw Error(\"Character\
    \ is not an alphabet\");\n        }\n        return alphabet.splice(i, 1)[0];\n\
    \    }).join('');\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz'; // 'abcdefghijklmnopqrstuvwxyz'\n\
    \  var output = ''; // Initialize output as an empty string\n  \n  // Place each\
    \ letter of the alphabet in turn.\n  // First place the first letter in the alphabet\n\
    \  var firstLetter = alphabet[0];\n  \n  // Place the letters in order in the\
    \ output string\n  for(var i = 0; i < s.length; i++){\n    output += firstLetter;\n\
    \  \n    // Rotate firstLetter two places to the left\n    var rotateLetter =\
    \ firstLetter;\n    firstLetter = alphabet.charAt(alphabet.indexOf(firstLetter)\
    \ - 1);\n    firstLetter = alphabet.charAt(alphabet.indexOf(firstLetter) + 1);\n\
    \    output += firstLetter;\n  \n    // Place the second letter in the alphabet\n\
    \    var secondLetter = alphabet[alphabet.indexOf(firstLetter) + 1]\n    \n  \
    \  // Place the letters in order in the output string\n    output += secondLetter;\n\
    \  \n    // Rotate secondLetter two places to the left\n    secondLetter = alphabet.charAt(alphabet.indexOf(secondLetter)\
    \ - 1);\n    secondLetter = alphabet.charAt(alphabet.indexOf(secondLetter) + 1);\n\
    \    output += secondLetter;\n  \n    // Place the third letter in the alphabet\n\
    \    var thirdLetter = alphabet[alphabet.indexOf(secondLetter) + 1]\n    \n  \
    \  // Place the letters in order in the output string\n    output += thirdLetter;\n\
    \    \n    // Rotate thirdLetter two places to the left\n    thirdLetter = alphabet.charAt(alphabet.indexOf(thirdLetter)\
    \ - 1);\n    thirdLetter = alphabet.charAt(alphabet.indexOf(thirdLetter) + 1);\n\
    \    output += thirdLetter;\n  }\n  \n  // Return the encrypted string\n  return\
    \ output;\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n  var s = s.replace(/\\\
    s/g,'');\n  var newArr = [];\n  var newArr2 = [];\n  var newArr3 = [];\n  var\
    \ i = 0;\n  var j = 0;\n  var c = 0;\n  for(i = 0; i < s.length; i++) {\n    newArr[i]\
    \ = alphabet.charCodeAt(i);\n    newArr2[i] = alphabet.charCodeAt(i) + 2;\n  \
    \  newArr3[i] = alphabet.charCodeAt(i) + 4;\n  }\n  for(i = 0; i < newArr.length;\
    \ i++) {\n    for(j = 0; j < newArr2.length; j++) {\n      if(newArr[i] == newArr2[j]\
    \ && newArr[i] == newArr3[j]) {\n        c = newArr[i];\n        newArr[i] = newArr[j];\n\
    \        newArr[j] = c;\n      }\n    }\n  }\n  return newArr.join('');\n}", "\t\
    var newWord = String.fromCharCode(0,0); //Create an empty string \n\t\n\tfor (var\
    \ i = 0; i < s.length; i++){\n\t\tvar char = s.charAt(i);\n\t\tvar code = alphabet.indexOf(char);\
    \ //Get ASCII value of a character\n\t\tif (code < 26) //If character is lower\
    \ case in the alphabet\n\t\t\tnewWord += alphabet.charAt(code);\n\t\telse //If\
    \ character is upper case in the alphabet\n\t\t\tnewWord += alphabet.charAt(code\
    \ - 26);\n\t}\n\treturn newWord;\n}\n", "\tvar encryptedString = \"\";\n\tfor(var\
    \ i = 0; i < s.length; i++){\n\t\tvar newIndex = (i + 2)%26;\n\t\tvar newChar\
    \ = alphabet[newIndex];\n\t\tencryptedString += newChar;\n\t}\n\treturn encryptedString;\n\
    }\n", "    //your code here\n}\n", "    var a = [];\n    var l = s.length;\n \
    \   for(var i = 0; i < l; i++){\n        a.push(s.charCodeAt(i) - 97 + 2);\n \
    \   }\n    a = rotate(a);\n    l = a.length;\n    for(var i = 0; i < l; i++){\n\
    \        a.push(s.charAt(i) + String.fromCharCode(a[i]));\n    }\n    return a.join('');\n\
    }\n", "  \n  s = s.replace(/./g,function(c){\n    let letterIndex = alphabet.indexOf(c)\
    \ + 1; \n    return alphabet[letterIndex];\n  });\n  \n  return s;\n}\n", "\t\
    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\tvar rot_alphabet = \"zyxwvutsrqponmlkjihgfedcba\"\
    ;\n\tvar rot_alphabet_index = alphabet.length - rot_alphabet.length + 1;\n\tvar\
    \ rot_alphabet_index = alphabet.length - rot_alphabet.length;\n\tvar rot_alphabet_index2\
    \ = alphabet.length - rot_alphabet.length * 2;\n\tvar rot_alphabet2 = alphabet.length\
    \ - rot_alphabet.length * 4;\n\tvar rot_alphabet3 = alphabet.length - rot_alphabet.length\
    \ * 8;\n\tvar rot_alphabet4 = alphabet.length - rot_alphabet.length * 16;\n\t\
    var rot_alphabet5 = alphabet.length - rot_alphabet.length * 32;\n\tvar rot_alphabet6\
    \ = alphabet.length - rot_alphabet.length * 64;\n\tvar rot_alphabet7 = alphabet.length\
    \ - rot_alphabet.length * 128;\n\tvar rot_alphabet8 = alphabet.length - rot_alphabet.length\
    \ * 256;\n\tvar rot_alphabet9 = alphabet.length - rot_alphabet.length * 512;\n\
    \tvar rot_alphabet10 = alphabet.length - rot_alphabet.length * 1024;\n\tvar rot_alphabet11\
    \ = alphabet.length - rot_alphabet.length * 2048;\n\tvar rot_alphabet12 = alphabet.length\
    \ - rot_alphabet.length * 4096;\n\tvar rot_alphabet13 = alphabet.length - rot_alphabet.length\
    \ * 8192;\n\tvar rot_alphabet14 = alphabet.length - rot_alphabet.length * 16384;\n\
    \tvar rot_alphabet15 = alphabet.length - rot_alphabet.length * 32768;\n\tvar rot_alphabet16\
    \ = alphabet.length - rot_alphabet.length * 65536;\n\tvar rot_alphabet17 = alphabet.length\
    \ - rot_alphabet.length * 131072;\n\tvar rot_alphabet18 = alphabet.length - rot_alphabet.length\
    \ * 262144;\n\tvar rot_alphabet19 = alphabet.length - rot_alphabet.length * 524288;\n\
    \tvar rot_alphabet20 = alphabet.length - rot_alphabet.length * 1048576;\n\tvar\
    \ rot_alphabet21 = alphabet.length - rot_alphabet.length * 2097152;\n\tvar rot_alphabet22\
    \ = alphabet.length - rot_alphabet.length * 4194304;\n\tvar rot_alphabet23 = alphabet.length\
    \ - rot_alphabet.length * 8388608;\n\tvar rot_alphabet24 = alphabet.length - rot_alphabet.length\
    \ * 16777216;\n\tvar rot_alphabet25 = alphabet.length - rot_alphabet.length *\
    \ 33554432;\n\tvar rot_alphabet26 = alphabet.length - rot_alphabet.length * 67108864;\n\
    \tvar rot_alphabet27 = alphabet.length - rot_alphabet.length * 134217728;\n\t\
    var rot_alphabet28 = alphabet.length - rot_alphabet.length * 268435456;\n\tvar\
    \ rot_alphabet29 = alphabet.length - rot_alphabet.length * 536870912;\n\tvar rot_alphabet30\
    \ = alphabet.length - rot_alphabet.length * 1073741824;\n\tvar rot_alphabet31\
    \ = alphabet.length - rot_alphabet.length * 2147483648;\n", "  \n  let rotatedLetters\
    \ = []\n  \n  //Loop through every letter in the alphabet\n  for (let i = 0; i\
    \ < alphabet.length; i++) {\n    \n    //Create a variable which holds the letter\
    \ in the current index position\n    let letter = alphabet[i]\n    \n    //If\
    \ the letter is not empty or equal to the alphabet\n    if (letter != '') {\n\
    \    \n      //Loop through every letter in the alphabet\n      for (let j = 0;\
    \ j < alphabet.length; j++) {\n        \n        //Store the letter in the rotatedLetters\
    \ variable if it is not equal to the alphabet\n        if (alphabet[j] != '')\
    \ {\n          rotatedLetters.push(alphabet[j])\n        }\n      }\n    }\n \
    \ }\n  \n  //Loop through every letter in the input string\n  for (let i = 0;\
    \ i < s.length; i++) {\n    \n    //If the letter is not empty or equal to the\
    \ alphabet\n    if (s[i] != ''){\n      \n      //Add each letter to the output\
    \ string\n      encryptedLetters += rotatedLetters[alphabet.indexOf(s[i])]\n \
    \   }\n  }\n  \n  //Return the encrypted string\n  return encryptedLetters\n}\n",
  "    \n    let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\
    \    let encrypted = '';\n    \n    for(let char of s){\n        let index = alphabet.indexOf(char);\n\
    \        index = (index / 2) * 2; \n        index = index % alphabet.length;\n\
    \        encrypted += alphabet[index];\n    }\n    return encrypted;\n}\n", " \
    \   //Your code goes here \n    var alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\
    \    var result = \"\";\n    var index = 0;\n    var length = s.length;\n\n  \
    \  for(var i = 0; i < length; i++){\n        var temp = alphabet.indexOf(s[i]);\n\
    \n        if(temp > -1){\n            temp += 2;\n            if(temp >= 26){\n\
    \                temp -= 26;\n            }\n        }else{\n            temp\
    \ = alphabet.indexOf(\"Z\");\n        }\n        index = temp;\n\n        result\
    \ += alphabet[index];\n    }\n    return result;\n}\n", "\tvar alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \tvar rotation = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tvar newString = s;\n\tfor(var\
    \ i=0; i<s.length; i++){\n\t\tvar rotatedAlphabet = rotation.substr(rotation[alphabet.indexOf(s[i])]+2);\n\
    \t\tnewString = newString.replace(s[i],rotatedAlphabet);\n\t}\n\treturn newString;\n\
    }\n", "    \n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var rotated_alphabet\
    \ = alphabet.split(\"\").map(function (x) {\n        return x;\n    }).reverse().join(\"\
    \").split(\"\").map(function (x) {\n        return x;\n    }).join(\"\") + alphabet;\n\
    \    // console.log(rotated_alphabet);\n    let rotated_string = \"\";\n    for\
    \ (let char of s) {\n        rotated_string += rotated_alphabet[alphabet.indexOf(char)]\n\
    \    }\n    return rotated_string;\n}", "    var newStr = []\n    var newNum =\
    \ 0\n    for(var i=0; i<s.length; i++){\n        newStr[i] = newNum % (alphabet.length)\n\
    \        newNum += alphabet.charAt(newStr[i])\n    }\n    return newStr.join('')\n\
    }\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    let alphabetArr =\
    \ alphabet.split(\"\");\n    let encrypted = s;\n\n    // Rotate the alphabet\
    \ by the number of letters shifted down by 2\n    alphabetArr.splice(1, 1);\n\
    \    alphabetArr.splice(0, 1);\n    alphabetArr.splice(-1, 1);\n    alphabetArr.splice(-2,\
    \ 1);\n\n    // Pad the alphabet by two characters to complete the rotation\n\
    \    alphabetArr.splice(alphabetArr.length+1);\n\n    // Concatenate rotated alphabet\
    \ to return encrypted string\n    return alphabetArr.concat(encrypted).join(\"\
    \");\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    var newStr\
    \ = \"\";\n    for(var i=0; i < s.length; i++){\n        var ch = s.charAt(i);\n\
    \        var index = alphabet.indexOf(ch);\n        newStr += alphabet.substr(0,index)+alphabet.substr(index+2,alphabet.length).substr(0,index+2);\n\
    \    }\n    return newStr;\n}", "  var s = s.replace(/[^a-zA-Z]/g, \"\").toLowerCase();\n\
    \  var sArr = s.split(\"\");\n  var newArr = [];\n  for(var i = 0; i < sArr.length;\
    \ i++){\n    newArr.push(rotate(sArr.charAt(i), 2));\n  }\n  return newArr.join(\"\
    \");\n}\n", "  let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  let encrypted =\
    \ '';\n  for(let i = 0; i < s.length; i++){\n    encrypted += alphabet.substr(alphabet.indexOf(s.charAt(i)),i+1)\n\
    \  }\n  return encrypted;\n}\n", "  var ret = '';\n  var i = s.length;\n  \n \
    \ while(i){\n    ret += s.charAt(i%26)\n    i = Math.floor(i/26);\n  }\n  \n \
    \ return ret;\n}", "  var new_alphabet = [...alphabet];\n  new_alphabet.splice(alphabet.length-2,\
    \ 2)\n  new_alphabet.splice(alphabet.length-1, 1)\n  new_alphabet.splice(alphabet.length,\
    \ 0, alphabet[1])\n  new_alphabet = new_alphabet.map(function (char, index){\n\
    \    return char + alphabet[index]\n  })\n\n  alphabet = new_alphabet\n\n  result\
    \ = \"\"\n  var index = 0\n  for (var i of s) {\n    result += new_alphabet[index++]\n\
    \  }\n\n  return result\n}\n", "  let alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  let newArr = []\n  for (let i = 0; i < s.length; i++){\n    let x = alphabet.indexOf(s.charAt(i))\n\
    \    newArr.push(alphabet[(x - 2) % 26])\n  }\n  return newArr.join('')\n}\n",
  "    return alphabet[rotate(alphabet, s)]\n}", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotation = alphabet.split(\"\").reverse();\n  var newStr = \"\";\n  for(var\
    \ i = 0; i < s.length; i++){\n    var char = s.charAt(i);\n    newStr += rotation.indexOf(char)\
    \ + 2;\n  }\n  return newStr;\n}\n", "    var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    var rotated_alphabet = alphabet.split(\"\").map(function(letter){\n     \
    \   return letter.charCodeAt(0)+2;\n    }).join(\"\");\n    var result = \"\"\
    ;\n    for (var i = 0; i < s.length; i++) {\n        result += rotated_alphabet.charAt(alphabet.indexOf(s.substr(i,\
    \ 1)));\n    }\n    return result;\n}\n", "\tvar alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \tvar retVal = '';\n\tvar oldAlpha = 'abcdefghijklmnopqrstuvwxyz';\n\tvar oldAlphaLength\
    \ = oldAlpha.length;\n\tvar i = 0;\n\tvar c = s.charCodeAt(0);\n\tfor(i=0; i<alphabet.length;\
    \ i++){\n\t\tretVal += alphabet[oldAlpha.indexOf(alphabet[i])+2*c];\n\t\tc = c<26\
    \ ? c+1 : 0;\n\t}\n\treturn retVal;\n}\n", "  var alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n  \n  var strArr = s.split(\"\");\n  var newArr = \"\";\n  \n  for(var i=0;\
    \ i<strArr.length; i++){\n    var newLetter = alphabet[((alphabet.indexOf(strArr[i])\
    \ + 4) % alphabet.length)];\n    newArr += newLetter;\n  }\n  \n  newArr = newArr.replace(/\
    \ /g,'');\n  return newArr;\n}\n", "   var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n   var newString=\"\";\n   for(var i=0; i<s.length; i++){\n      newString+=alphabet[alphabet.indexOf(s.charAt(i))+2];\n\
    \   }\n   return newString;\n}\n", "  var alphabet = ['a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z'];\n  var newStr = \"\";\n  for(var i = 0; i < s.length;\
    \ i++) {\n    newStr += alphabet[alphabet.indexOf(s.charAt(i)) % alphabet.length];\n\
    \  }\n  return newStr;\n}\n", "\tfor(var i = 0;i<alphabet.length;i++){\n\t\talphabet[i]\
    \ = alphabet[alphabet.indexOf(i)+1];\n\t}\n\tfor(var j = 0;j<s.length();j++){\n\
    \t\tvar index = alphabet.indexOf(s.charAt(j));\n\t\tvar shifted_index = index+1;\n\
    \t\tif(shifted_index<alphabet.length){\n\t\t\talphabet[index] = alphabet[shifted_index];\n\
    \t\t\talphabet[shifted_index] = alphabet[index];\n\t\t}\n\t}\n\t\n\tfor(i = 0;i<alphabet.length;i++){\n\
    \t\talphabet[i] = alphabet[i]+alphabet[i]; //double up on the letters to get a\
    \ 'shift' of two to the right\n\t}\n\t\n\tfor(var i = 0;i<alphabet.length;i++){\n\
    \t\tvar new_index = (alphabet[i].charCodeAt(0) % 26) + 26;\n\t\talphabet[i] =\
    \ alphabet[i].charAt(new_index);\n\t}\n\t\n\tvar decryped = '';\n\tfor(i = 0;i<s.length;i++){\n\
    \t\tnew_index = (alphabet.indexOf(s.charAt(i)) % 26) + 26;\n\t\tdecryped += alphabet[new_index];\n\
    \t}\n\treturn decryped;\n}\n", "    let cipher = \"\";\n    for (let i = s.length\
    \ - 1; i >= 0; i--) {\n        cipher += alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + 2);\n    }\n    return cipher;\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var encryptedString = \"\";\n  for(var i=0; i<s.length; i++){\n    encryptedString\
    \ += alphabet[s.charCodeAt(i)+2];\n  }\n  return encryptedString;\n}\n", "  let\
    \ result = '';\n  for (let i=0; i<s.length; i++){\n    let char = s.charAt(i);\n\
    \    if (char === 'z'){\n      char = 'a';\n    }\n    result += char;\n  }\n\
    \  return result;\n}", "    var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n   \
    \ var length = alphabet.length;\n    var newString = '';\n    \n    // Iterate\
    \ through each character in the string\n    for (var i = 0; i < s.length; i++){\n\
    \        // Get a character\n        var c = s[i];\n        // Get the encrypted\
    \ character\n        var enc = alphabet.indexOf(c);\n        // Get the new letter,\
    \ shifted down by two\n        var newLetter = alphabet.charAt(enc + 2);\n   \
    \     // Add it to the new string with the shifted letter\n        newString +=\
    \ alphabet.charAt(enc + 1);\n    }\n    \n    return newString;\n}\n", "    let\
    \ cipher = [];\n    for (let i = 0; i < s.length; i++){\n        let index = alphabet.indexOf(s[i]);\n\
    \        index = (index + 2) % alphabet.length;\n        cipher.push(alphabet[index]);\n\
    \    }\n    return cipher.join('');\n}\n", "  s = s.replace(/[^a-z]+/g, '');\n\
    \  s = s.split('');\n  var newString = \"\";\n  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  for( var i = 0; i < s.length; i++ ){\n    if( alphabet.indexOf(s[i]) < alphabet.indexOf(s[i+1])\
    \ ){\n      newString += s[i+1];\n    } else {\n      newString += s[i];\n   \
    \ }\n  }\n  return newString;\n}\n", "  var alphabet = \"gfedcbabc\";\n  return\
    \ s.split(\"\").map(function(l){\n    return alphabet[alphabet.indexOf(l)+1];\n\
    \  }).join(\"\");\n}\n", "\tlet alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlet\
    \ result = new Array()\n\tlet counter = 0\n\n\tfor(let i = 0; i < s.length; i++){\n\
    \t\tlet letter = alphabet[counter]\n\t\tresult = result.concat(shift(s, letter))\n\
    \t\tcounter += 1\n\t\tif(counter === alphabet.length){\n\t\t\tcounter = 0\n\t\t\
    }\n\t}\n\n\tfor (let i = 0; i < s.length; i++) {\n\t\tresult[i] = alphabet[i]\n\
    \t}\n\n\treturn result.join('')\n}", "  let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\
    \  let result = new Array(s.length);\n  \n  //Create a string with all letters\
    \ in the alphabet \n  //shifted down two places. \n  for(let i=0; i<s.length;\
    \ i++){\n    result[i] = alphabet[alphabet.indexOf(s)-(i*2)];\n  }\n  \n  //return\
    \ the rotated string\n  return result.join('');\n}\n", "\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tvar letter = \"\";\n\tvar newLetter = \"\";\n\tfor(var i = 0;i < s.length;\
    \ i++){\n\t\tletter = alphabet.indexOf(s.charAt(i));\n\t\tif(letter < 26){\n\t\
    \t\tnewLetter = alphabet.charAt(letter + 21);\n\t\t}\n\t\telse{\n\t\t\tnewLetter\
    \ = alphabet.charAt(letter + 26);\n\t\t}\n\t\talphabet = newLetter;\n\t}\n\treturn\
    \ alphabet;\n}\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\
    \    let rotate = alphabet.map( x => alphabet[alphabet.indexOf(x)-1] );\n    let\
    \ newAlphabet = rotate.concat( alphabet.slice().reverse().map( x => alphabet[alphabet.indexOf(x)+1]\
    \ ) );\n    \n    let newArr = [];\n    for(let i = 0; i < s.length; i++){\n \
    \       newArr.push( newAlphabet[alphabet.indexOf(s.charAt(i))] + alphabet[alphabet.indexOf(\
    \ s.charAt(i) ) + 2] );\n    }\n    \n    return newArr.join('');\n}\n", "   \
    \ \n    var arr = [];\n    var counter = 0;\n    var str = '';\n    \n    for(var\
    \ i = 0; i < s.length; i++){\n        var c = s[i];\n        \n        switch(counter){\n\
    \            case 0:\n                counter = 1;\n                arr[0] = c;\n\
    \                break;\n            case 1:\n                counter = 2;\n \
    \               arr[1] = c;\n                break;\n            case 2:\n   \
    \             counter = 3;\n                arr[2] = c;\n                break;\n\
    \            case 3:\n                counter = 4;\n                arr[3] = c;\n\
    \                break;\n            case 4:\n                counter = 5;\n \
    \               arr[4] = c;\n                break;\n            case 5:\n   \
    \             counter = 6;\n                arr[5] = c;\n                break;\n\
    \            case 6:\n                counter = 7;\n                arr[6] = c;\n\
    \                break;\n            case 7:\n                counter = 8;\n \
    \               arr[7] = c;\n                break;\n            case 8:\n   \
    \             counter = 9;\n                arr[8] = c;\n                break;\n\
    \            case 9:\n                counter = 10;\n                arr[9] =\
    \ c;\n                break;\n            case 10:\n                counter =\
    \ 11;\n                arr[10] = c;\n                break;\n            case\
    \ 11:\n                counter = 12;\n                arr[11] = c;\n         \
    \       break;\n            case 12:\n                counter = 13;\n        \
    \        arr[12] = c;\n                break;\n            case 13:\n        \
    \        counter = 14;\n                arr[13] = c;\n                break;\n\
    \            case 14:\n                counter = 15;\n                arr[14]\
    \ = c;\n                break;\n            case 15:\n                counter\
    \ = 16;\n                arr[15] = c;\n                break;\n            case\
    \ 16:\n                counter = 17;\n                arr[16] = c;\n         \
    \       break;\n            case 17:\n                counter = 18;\n        \
    \        arr[17] = c;\n                break;\n            case 18:\n        \
    \        counter = 19;\n                arr[18] = c;\n                break;\n\
    \            case 19:\n                counter = 20;\n                arr[19]\
    \ = c;\n                break;\n            case 20:\n                counter\
    \ = 21;\n                arr[20] = c;\n                break;\n            case\
    \ 21:\n                counter = 22;\n                arr[21] = c;\n         \
    \       break;\n            case 22:\n                counter = 23;\n        \
    \        arr[22] = c;\n                break;\n            case 23:\n        \
    \        counter = 24;\n                arr[23] = c;\n                break;\n\
    \            case 24:\n                counter = 25;\n                arr[24]\
    \ = c;\n                break;\n            case 25:\n                counter\
    \ = 26;\n                arr[25] = c;\n                break;\n            case\
    \ 26:\n                counter = 27;\n                arr[26] = c;\n         \
    \       break;\n            case 27:\n                counter = 28;\n        \
    \        arr[27] = c;\n                break;\n            case 28:\n        \
    \        counter = 29;\n                arr[28] = c;\n                break;\n\
    \            case 29:\n                counter = 30;\n                arr[30]\
    \ = c;\n                break;\n            case 30:", "  var result = \"\";\n\
    \  for(var i = 0; i < s.length; i++){\n    var char = s.charCodeAt(i);\n    var\
    \ shifted = (char + 2) % 27;\n    result += String.fromCharCode(shifted);\n  }\n\
    \  return result;\n}\n", "   var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \   var newstring = \"\";\n   for (var i = 0; i < s.length; i++){\n     newstring\
    \ += alphabet.charAt(alphabet.indexOf(s.charAt(i)) + 2);\n   }\n   return newstring;\n\
    }\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  var result\
    \ = '';\n  for (var i = 0, n = s.length; i < n; i += 2) {\n    result += alphabet.shift()\n\
    \  }\n  return result;\n}\n", "  let newStr = s;\n  const alphabet = [ 'a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' ];\n  const rotate = (alphabet) => {\n\
    \    let newStr = alphabet;\n    let rotated = [];\n    for(var i = 0; i < alphabet.length;\
    \ i++){\n      newStr.shiftRight(1);\n      rotated.push(alphabet[newStr.indexOf(0)]);\n\
    \    }\n    return rotated;\n  }\n  rotated = rotate(alphabet);\n  for(var i =\
    \ 0; i < rotated.length; i++){\n    newStr = newStr + rotated[i];\n  }\n  return\
    \ newStr;\n}\n", "    let\n        letters = s.split(''),\n        rotatedLetters\
    \ = new Array(26);\n\n    // loop through each letter and put them in the new\
    \ array\n    for(let i = 0; i < letters.length; i++){\n        rotatedLetters[letters[i]\
    \ - 'a'] = letters[i] - 'a' + 26;\n    }\n    // now loop through the new array\
    \ and shift them down by two places\n    for(let i = 0; i < 26; i++){\n      \
    \  rotatedLetters[rotatedLetters[i] - 'a'] = rotatedLetters[i] - 'a' + 26;\n \
    \   }\n    // and put that array into a new string\n    return rotatedLetters.join('');\n\
    }\n", "  let alphabet = makeRotatingAlphabet();\n  let encrypted = \"\";\n  for\
    \ (let i = 0; i < s.length; i++){\n    encrypted += alphabet[alphabet.indexOf(s.charAt(i))\
    \ + 2];\n  }\n  return encrypted;\n}\n", "    // Add two to the sum of the length\
    \ of the string and \n    // two to keep track of the current position\n    let\
    \ encryptedStr = '';\n    let position = 2;\n    for(let i = 0; i < s.length;\
    \ i++){\n        encryptedStr += alphabet[alphabet.indexOf(s.charAt(i)) + ((i\
    \ + 1) * position)];\n        position += 2;\n    }\n    console.log('Encrypted\
    \ String: ' + encryptedStr);\n}\n", "    var res = '', i;\n    for(i = 0; i <\
    \ s.length; i++){\n        res += alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + 2);\n    }\n    return res;\n}\n", "  s = String(s);\n  s = s.split('');\n\
    \  \n  // create new array based on original array that has been rotated\n  let\
    \ resultArr = new Array(s.length);\n  for (let i=0; i<s.length; i++){\n    resultArr[i]\
    \ = alphabet[s[i]];\n  }\n  \n  // concatenate new array into the string\n  let\
    \ result = '';\n  for (let i=0; i<s.length; i++){\n    result += resultArr[i];\n\
    \  }\n  \n  return result;\n}\n", "  var alphabet = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ];\n  var encryptedString = \"\";\n  var currentChar = \"\";\n\n  //Loop through\
    \ each character in the string\n  for (var i = 0, len = s.length; i < len; i++){\n\
    \    currentChar = s[i];\n\n    //Get the index of the character in the alphabet\
    \ and subtract two from \n    //that to account for the shift.\n    var index\
    \ = alphabet.indexOf(currentChar) - 2;\n\n    //Add the character to the encrypted\
    \ string and update the alphabet\n    encryptedString += alphabet[index];\n  \
    \  alphabet[index] = alphabet[index+1];\n    alphabet[index+1] = currentChar;\n\
    \  }\n  return encryptedString;\n}\n", "    var len = s.length;\n    var str =\
    \ \"\";\n    for(var i = 0; i < len; i++){\n        str += String.fromCharCode(s.charCodeAt(i)+2);\n\
    \    }\n    return str; \n}\n", "\tvar alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \tvar alphabetLength = alphabet.length;\n\tvar alphabetRotated = alphabet.substring(alphabetLength-1,\
    \ alphabetLength);\n\tvar alphabetLength = alphabet.length;\n\tvar alphabet =\
    \ alphabet.substring(0, alphabetLength-1);\n\tvar key = '';\n\tvar key = alphabet.substring(alphabetLength-1,\
    \ alphabetLength);\n\tvar encrypted = '';\n\tfor (var i = 0; i < s.length; i++)\
    \ {\n\t\tvar letter = s.charAt(i);\n\t\tvar index = alphabet.indexOf(letter);\n\
    \t\tif (index > -1) {\n\t\t\tvar multiplier = (index+1) * 2;\n\t\t\tencrypted\
    \ = encrypted + alphabet.substring(alphabetLength-1, alphabetLength-1) + key.substring(0,1);\n\
    \t\t\tkey = key.substring(1);\n\t\t\tkey = key.substring(1) + key.substring(0,1)\
    \ + alphabet.substring(alphabetLength-1, alphabetLength-1);\n\t\t}\n\t}\n\treturn\
    \ encrypted;\n}\n", "   var alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"\
    f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n   var rotatedAlphabet\
    \ = alphabet.map(function(letter){\n      return letter.split(\"\").map((c) =>\
    \ {\n         return c.charCodeAt(0);\n      }).reduce((p, c) => {\n         return\
    \ p + c;\n      }, 0);\n   });\n   \n   var rotatedAlphabetArray = rotatedAlphabet.map((c)\
    \ => {\n      return String.fromCharCode(c);\n   });\n   var result = \"\";\n\
    \   for (var i = 0; i < s.length; i++) {\n      var charCode = s.charCodeAt(i);\n\
    \      \n      \n      \n      //Get the index of the character in the alphabet\
    \ that corresponds to \n      //the character being rotated (i.e. 'g')\n     \
    \ var rotatedCharIndex = rotatedAlphabetArray.indexOf(charCode);\n      \n   \
    \   //Replace the character in the string with the letter at the \n      //position\
    \ calculated from the previous index\n      result += rotatedAlphabet[rotatedCharIndex];\n\
    \   }\n   return result;\n}\n", "  // Create an array of 26 variables and a variable\
    \ for the alphabet \n  // characters that will be rotated\n  let alphabet = `abcdefghijklmnopqrstuvwxyz`.split('');\n\
    \  let rotator = 0;\n\n  // While there are characters in the string to be rotated\
    \ \n  while (s.length > 0){\n    // Rotate the alphabet to the left by one and\
    \ store it in a temporary variable\n    let temp = alphabet[rotator];\n    //\
    \ Rotate the alphabet to the next character by two and store it in \n    // another\
    \ temporary variable\n    rotator += 2;\n    // Replace the current character\
    \ with the next character in the alphabet\n    alphabet[rotator] = alphabet[rotator+1];\n\
    \    // Update the alphabet with that of the new alphabet\n    alphabet[rotator+1]\
    \ = temp;\n    // Get the first character in the string to be rotated and remove\
    \ it from the string\n    s = s.charAt(0).toLowerCase();\n  }\n  // Return the\
    \ encrypted string\n  return alphabet.join(s);\n}\n", "  \n  // Create a variable\
    \ to hold the rotated alphabet. \n  // It will store alphabet and shift multiplied\
    \ alphabet.\n  let rotatedAlphabet = '';\n  \n  // Create a variable to hold the\
    \ current character in the string. \n  // It will store the character passed into\
    \ the function.\n  let currentCharacter = s;\n\n  // Create a loop that will run\
    \ while the length of the current character\n  // is less than the length of the\
    \ string to be encrypted. \n  // When the length of the current character is less\
    \ than the length of the \n  // string to be encrypted, the current character\
    \ will be appended to the \n  // rotatedAlphabet. When the length of the current\
    \ character is greater than\n  // the length of the string to be encrypted, the\
    \ loop will terminate. \n  while(currentCharacter.length < s.length){\n    rotatedAlphabet\
    \ += alphabets[alphabetCounter];\n    alphabetCounter += 2;\n  }\n\n  // Create\
    \ a second loop that will run while the current character is less than\n  // the\
    \ length of the string to be encrypted. \n  // When the length of the current\
    \ character is less than the length of the \n  // string to be encrypted, the\
    \ current character will be appended to the \n  // rotatedAlphabet. When the length\
    \ of the current character is greater than\n  // the length of the string to be\
    \ encrypted, the loop will terminate. \n  while(currentCharacter.length >= s.length){\n\
    \    rotatedAlphabet += currentCharacter;\n    currentCharacter = s.charAt(s.length\
    \ - 1);\n  }\n\n  // Return rotatedAlphabet\n  return rotatedAlphabet;\n}\n",
  "  if(s.length==1){\n    return s+s;\n  }\n  var newString = '';\n  for(var i=0;\
    \ i<s.length; i++){\n    var letter = s.charAt(i);\n    var nextLetter = s.charAt(i+1);\n\
    \    var newLetter = Math.floor((letter + letter + letter + letter) /3) * 2;\n\
    \    newString += newLetter;\n  }\n  return newString;\n}\n", "  var alphabet\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"];\n  var newString = \"\";\n  var encryptedString\
    \ = \"\";\n  for(var i = 0; i < s.length; i++) {\n    var c = s.charAt(i);\n \
    \   encryptedString += alphabet[(alphabet.indexOf(c) + 2) % alphabet.length];\n\
    \  }\n  return encryptedString;\n}\n", "  //Using .split() to turn the string\
    \ into a character array.\n  var chars = s.split('');\n  \n  //Starting with the\
    \ first character in the string, move two places in the \n  //alphabet at a time\
    \ until we reach the end.\n  var encrypted = chars[0];\n  for(var i = 1; i < chars.length;\
    \ i++){\n    var next = chars[i];\n    var newNext = encrypt(next);\n    var newEncrypted\
    \ = encrypted + newNext;\n    encrypted = newEncrypted;\n  }\n  return encrypted;\n\
    }\n", "  // Convert the string into a character array\n  s = s.split(\"\");\n\
    \  // Create a variable that will hold a string of the encrypted string.\n  let\
    \ encryptedString = \"\";\n  // Loop through the characters in the string\n  for(let\
    \ i = 0; i < s.length; i++){\n    // Add the character at index i to the encryptedString\
    \ \n    // using the rotate method\n    encryptedString += rotate(s[i],i);\n \
    \ }\n  // Return the encrypted string.\n  return encryptedString;\n}", "  return\
    \ alphabet[rotate(alphabet[s])];\n}\n", "    console.log(s);\n    \n}\n", "  \
    \  let newString = \"\";\n    for (let i = 0; i < s.length; i++) {\n        newString\
    \ += alphabet.charAt(alphabet.indexOf(s.charAt(i)) + 2);\n    }\n    return newString;\n\
    }\n", "  s = '';\n  for (var i = 0; i < s.length; i++){\n    var c = s.charCodeAt(i);\
    \ \n    s = String.fromCharCode((c + 2) % 26 + c);\n  }\n  return s;\n}\n", " \
    \ var alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  var code = '';\n  for (var i=s.length-1;\
    \ i>=0; i--){\n    var index = alphabet.indexOf(s[i]);\n    code += alphabet[\
    \ (alphabet.indexOf( alphabet.charAt( index+1 )) + ( alphabet.indexOf( alphabet.charAt(\
    \ index )) ) ) ];\n  }\n  return code;\n}\n", "\tvar result = \"\";\n\tfor (var\
    \ i=s.length-1; i>0; i--){\n\t\tvar index = i % alphabet.length;\n\t\tresult +=\
    \ alphabet[index];\n\t}\n\tresult += alphabet[0];\n\treturn result;\n}\n", " \
    \ var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  var key = 'zxcvbnmasdfghjkl'.split('');\n\
    \  var index = 0;\n  var enc = '';\n  for (var i = 0; i < s.length; i++) {\n \
    \   var c = alphabet.indexOf(s.charAt(i));\n    if (c < 0) {\n      c = 0;\n \
    \   } else if (c > 26) {\n      c = 25;\n    }\n    enc += key[index];\n    enc\
    \ += alphabet[c];\n    index++;\n  }\n  return enc;\n}\n", "\tvar result = \"\"\
    ;\n\tvar s = s.replace(/[^a-z]/g, ' ');\n\tvar len = s.length * 2;\n\tfor (var\
    \ i = 0; i < len; i += 2){\n\t\tvar n = (s.charAt(i) + s.charAt(i+1)).toUpperCase();\n\
    \t\tresult += alphabet.indexOf(n) * 2;\n\t}\n\treturn result;\n}\n", "  return\
    \ s.split('').reduce((p,c,i,a) => {\n    return c + p[i%p.length];\n  }, '');\n\
    }\n", "    var result = \"\";\n    for(var i=0; i<s.length; i++){\n       var\
    \ temp = s.charCodeAt(i) - 65;\n       result = result + String.fromCharCode((temp\
    \ << 2) + (temp << 1) + temp);\n    }\n    return result;\n}\n", "\tvar alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\tvar key = 3;\n\tvar r = \"\";\n\t\n\twhile(\
    \ s < alphabet.length ){\n\t\tvar c = alphabet.indexOf( s.charAt( 0 ) );\n\t\t\
    var n = Math.floor( c.toString() + key.toString() );\n\t\tr += alphabet.charAt(\
    \ n );\n\t\tkey += 1;\n\t\ts = s.substring( 1 );\n\t}\n\t\n\treturn r;\n}\n",
  "\tvar res = [];\n\tfor(var i=0;i<s.length;i++){\n\t\tvar char = s.charAt(i);\n\t\
    \tvar index = getIndex(char);\n\t\tvar rotate = index%2;\n\t\tvar add = index%3;\n\
    \t\tres = [rotate].concat(res).concat([add]);\n\t}\n\treturn res.join('');\n}\n",
  "    return s + encrypt(s.slice(1)) + s.charAt(0);\n}\n", "  var rotated = '',\n\
    \      alpha = 'abcdefghijklmnopqrstuvwxyz';\n  for (var i = 0; i < s.length;\
    \ i++){\n    rotated += alpha[(alpha.indexOf(s[i]) + 2) % alpha.length];\n  }\n\
    \  return rotated;\n}\n", "\tvar new_str = '';\n\tfor(var i=0; i<s.length; i++){\n\
    \t\tvar cur = s.charAt(i);\n\t\tvar code = alphabet.indexOf(cur);\n\t\tif(code\
    \ === -1)\n\t\t\tcontinue;\n\t\tvar new_code = code%alphabet.length;\n\t\tvar\
    \ shift = ((code-new_code)/alphabet.length)*2+2;\n\t\tnew_str += alphabet.charAt(new_code);\n\
    \t\tnew_str += alphabet.charAt(shift);\n\t}\n\treturn new_str;\n}\n", "    \n\
    \    // Create an array to store each character in the string with each index\n\
    \    // being the ASCII code value of the letter. \n    let arr = [];\n    for(let\
    \ char of s){\n        arr.push(char.charCodeAt(0));\n    }\n    \n    // Create\
    \ an empty string to represent the encrypted string.\n    let e = '';\n    \n\
    \    // Loop through each element in the array.\n    for(let i = 0; i < arr.length;\
    \ i++){\n        \n        // If the current position is even, swap it with the\
    \ current position.\n        if(i%2 === 0){\n            e += arr[i];\n      \
    \      e += arr[i];\n            e += arr[i];\n            e += arr[i];\n    \
    \        e += arr[i];\n            e += arr[i];\n            e += arr[i];\n  \
    \          e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n        }\n        \n   \
    \     // If the current position is odd, swap it with the current position.\n\
    \        else if(i%2 === 1){\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n        }\n        \n   \
    \     // If the current position is equal to the length of the array,\n      \
    \  // don't swap it.\n        if(i == arr.length){\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n            e += arr[i];\n            e += arr[i];\n\
    \            e += arr[i];\n        }\n    }\n    \n    // Return the encrypted\
    \ string\n    return e;\n}\n", "    // Your code here.\n}\n", "  var alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  var rotated_alphabet = \"BCDFGHJKLMNPQRSTUVWXYZABCDE\"\
    ;\n  \n  //The first two characters are moved two places to the left\n  //and\
    \ the last two to the right\n  s = String.fromCharCode(s.charCodeAt(0) - 2); \n\
    \  s += String.fromCharCode(s.charCodeAt(0) + 2);\n\n  //Create a variable with\
    \ the alphabet being rotated \n  //and remove all non-letter characters\n  var\
    \ rotated_alphabet = alphabet.split(\"\").join(rotated_alphabet);\n  var rotated_s\
    \ = s.split(\"\").join(rotated_alphabet);\n\n  return rotated_s;\n}\n", "   var\
    \ key = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n   var alpha =\
    \ key.split('')\n   var alpharot = alpha.map(function(char, index){\n      return\
    \ alpha[(index+1)%alpha.length]\n   })\n   var result = alpharot.reduce(function(a,b){\n\
    \      return a+b\n   }, \"\")\n   return result+=s\n}\n", "    var s = toCharArray(s);\n\
    \    var n = s.length; //the length of the string\n    \n    //create an array\
    \ to hold the current state of the alphabet\n    var alphabet = Array(26);\n \
    \   for(var i=0; i<26; i++){\n        alphabet[i] = i;\n    }\n    \n    for(var\
    \ i=0; i<n; i++){\n        //shift the alphabet down for two places \n       \
    \ var cIndex = alphabet[alphabet.length-2] % 26;\n        alphabet[alphabet.length-2]\
    \ = alphabet[cIndex];\n        alphabet[cIndex] = alphabet[alphabet.length-1];\n\
    \        \n        //swap the current character with the current alphabet\n  \
    \      var temp = s[i];\n        s[i] = alphabet[alphabet.length-2];\n       \
    \ alphabet[alphabet.length-2] = temp;\n        \n        //shift the alphabet\
    \ up for two places\n        var cIndex = alphabet[alphabet.length-1] % 26;\n\
    \        alphabet[alphabet.length-1] = alphabet[cIndex];\n        alphabet[cIndex]\
    \ = alphabet[alphabet.length-2];\n    }\n    \n    //return the encrypted string\n\
    \    return fromCharArray(alphabet);\n}\n", "    let rotated_alphabet =\n    \
    \    [\n        \t 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n    \
    \    \t 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\
    \ 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n        \t 'a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n        \t 'a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z',\n        \t 'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z',\n        \t 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n\
    \        \t 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\
    \ 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n        \t 'a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'\n        ]\n    let encrypted_string\
    \ = s\n    for (let i = 0; i<rotated_alphabet.length; i++) {\n        encrypted_string\
    \ = encrypted_string.replace(rotated_alphabet[i], rotated_alphabet[rotated_alphabet.length-i-1]);\n\
    \    }\n    return encrypted_string\n}\n", "  s=s.replace(/[^a-z]/g,function(x){return\
    \ String.fromCharCode(x.charCodeAt(0)+2)});\n  return s.replace(/\\w{2}/g,function(x){return\
    \ String.fromCharCode(x.charCodeAt(0)+2)+String.fromCharCode(x.charCodeAt(1)-2)});\n\
    }\n", "  return s.split('').map(function (c) {\n    return String.fromCharCode((c.charCodeAt(0)\
    \ - 65) % (26 * 2)) + String.fromCharCode((c.charCodeAt(0) + 65) % (26 * 2))\n\
    \  }).join('');\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n \
    \   let key = [...new Array(26)].map(() => Math.floor(Math.random()*26)); //create\
    \ a key array with 26 elements that range from 0 to 25\n    \n    //shift the\
    \ key down to twice the key length\n    for(let i = 0; i < key.length; i++){ \n\
    \        key[i] = key[i] + (key.length / 2); //multiply the current index value\
    \ by two\n    }\n\n    let encrypted_string = ''; //initialize an empty string\
    \ to hold encrypted string\n\n    for(let i = 0; i < s.length; i++){\n       \
    \ let char = alphabet[alphabet.indexOf(s[i]) + key[i]]; //use indexOf to find\
    \ the location of current character in the alphabet and add key value to it\n\
    \        encrypted_string += char; //append the encrypted character to the encrypted\
    \ string\n    }\n    return encrypted_string;\n}\n", "    var a = [ 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'\
    \ ];\n    var b = [ 'x','y','z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'\
    \ ];\n    var c = [ 'z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'\
    \ ];\n    var d = [ 'z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'\
    \ ];\n    var e = [ 'z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'\
    \ ];\n    var f = [ 'z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'\
    \ ];\n    var g = [ 'z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'\
    \ ];\n    var h = [ 'z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'\
    \ ];\n    var i = [ 'z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','",
  "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  var result = '';\n  for(var i\
    \ = 0; i < s.length; i++){\n    result += alphabet.charAt(alphabet.indexOf(s.charAt(i))\
    \ + 2);\n  }\n  return result;\n}", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let len = alphabet.length;\n    let newAlphabet = alphabet.split('');\n \
    \   newAlphabet.push('');\n    newAlphabet = newAlphabet.join('');\n    newAlphabet\
    \ = alphabet.split('');\n    let newAlphabet2 = alphabet.split('');\n    newAlphabet2.push('');\n\
    \    newAlphabet2 = newAlphabet2.join('');\n\n    //Create a function decrypt\
    \ that takes a string as an argument and\n    // returns a string encrypted with\
    \ the alphabet being rotated. \n    // The alphabet should be rotated in a manner\
    \ such that the letters \n    // shift down by two multiplied to two places.\n\
    \    // For example:\n    // decrypt('hi') returns 'lm'\n    // decrypt('asdfghjkl')\
    \ returns 'ewhjklnop'\n    // decrypt('gf') returns 'kj'\n    // decrypt('et')\
    \ returns 'ix'\n    function decrypt(s){\n        let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \        let len = alphabet.length;\n        let newAlphabet = alphabet.split('');\n\
    \        newAlphabet.push('');\n        newAlphabet = newAlphabet.join('');\n\
    \        newAlphabet = alphabet.split('');\n        let newAlphabet2 = alphabet.split('');\n\
    \        newAlphabet2.push('');\n        newAlphabet2 = newAlphabet2.join('');\n\
    \n        //Rotate the letters in the string\n        let rotatedAlphabet = [];\n\
    \        for(let i = 0; i < s.length; i++){\n            rotatedAlphabet.push(newAlphabet[newAlphabet2.indexOf(s[i])+2]);\n\
    \            rotatedAlphabet.push(newAlphabet[newAlphabet2.indexOf(s[i])+3]);\n\
    \            rotatedAlphabet.push(newAlphabet[newAlphabet2.indexOf(s[i])+4]);\n\
    \            rotatedAlphabet.push(newAlphabet[newAlphabet2.indexOf(s[i])+5]);\n\
    \            rotatedAlphabet.push(newAlphabet[newAlphabet2.indexOf(s[i])+6]);\n\
    \            rotatedAlphabet.push(newAlphabet[newAlphabet2.indexOf(s[i])+7]);\n\
    \        }\n        let rotatedString = '';\n        for(let i = 0; i < rotatedAlphabet.length;\
    \ i++){\n            rotatedString += rotatedAlphabet[i];\n        }\n       \
    \ return rotatedString;\n    }\n\n    return decrypt(s);\n}\n", "    var newString\
    \ = \"\";\n    for(var i = 0; i < s.length; i++){\n        var currentLetter =\
    \ s.charAt(i);\n        newString += alphabet.charAt(alphabet.indexOf(currentLetter)-2);\n\
    \    }\n    return newString;\n}\n", "    let encrypted = '';\n    for (let i=0;\
    \ i<s.length; i++){\n        encrypted += alphabet[alphabet.indexOf(s.charAt(i))\
    \ + 2];\n    }\n    return encrypted;\n}\n", "    return rotate(s, 2);\n}\n",
  "\tvar alphaArray = alphabet;\n\tvar newArray = alphaArray.slice(0,-1)\n\t\tnewArray.push(alphaArray[alphaArray.length-1])\n\
    \tvar encryptedStr = alphabet.map(function(letter,index){\n\t\treturn alphabet.includes(s)?\
    \ newArray.includes(letter)? '' : letter : newArray.includes(letter)? '' : letter;\n\
    \t})\n\treturn encryptedStr.join('')\n}\n", "    let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    \n    // Find the positions of each letter in the alphabet\n    let letters\
    \ = Array.from(alphabet);\n    let numLetters = letters.length;\n\n    // Find\
    \ the letter positions for each letter in the string\n    let letterPositions\
    \ = letters.map(letter => s.indexOf(letter))\n    let numLetterPositions = letterPositions.length;\n\
    \n    // Create an alphabet of 26 letters shifted down by 2\n    let alphabetShifted\
    \ = letters.map(letter => letter + alphabet.substr(letter, 1))\n\n    // Join\
    \ the letters to form a string\n    let rotatedAlphabet = alphabetShifted.join('');\n\
    \n    // Find the letter positions of each letter in the new alphabet\n    let\
    \ rotatedLetterPositions = rotatedAlphabet.split('')\n    let numRotatedLetterPositions\
    \ = rotatedLetterPositions.length;\n\n    // Shift each letter position in the\
    \ new alphabet by 2\n    for (let i = 0; i < numRotatedLetterPositions; i++){\n\
    \        letterPositions[i] = letterPositions[i] - 2\n    }\n\n    // Put back\
    \ together and return the new string\n    let rotatedAlphabetString = letterPositions.join('');\n\
    \    return rotatedAlphabetString;\n}\n", "  var alphabet = s.split('');\n  alphabet\
    \ = alphabet.map(function(el, i){\n    el = alphabet.shift();\n    alphabet.unshift(el);\n\
    \    return el;\n  });\n  return alphabet.join('');\n}\n", "  var l = s.length\n\
    \  var i = l - 1\n  var newL = 0\n  var newString = ''\n  \n  while(i >= 0){\n\
    \    if (s.charAt(i) == 'e'){\n      newString += alphabet[newL++]\n    }else\
    \ if (s.charAt(i) == 't'){\n      newString += alphabet[newL++]\n    }else if\
    \ (s.charAt(i) == 'l'){\n      newString += alphabet[newL++]\n    }else{\n   \
    \   newString += s.charAt(i)\n    }\n    \n    i--\n  }\n\n  return newString\n\
    }\n", "  // Declare a variable called alphabet. \n  // This is an array with 26\
    \ alphabet letters \n  var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z']\n  // Declare a variable called shift. This is a number that represents\n\
    \  // the number of letters that will be shifted down in order to \n  // make\
    \ up the alphabet.\n  var shift = 2;\n  // Declare a variable called encryptedString.\n\
    \  // This variable should hold an empty string. The variable will \n  // start\
    \ off holding nothing and will get updated every time \n  // the function is called.\n\
    \  var encryptedString = \"\";\n  // Declare a variable called currentLetter.\
    \ This variable will hold \n  // a letter from the alphabet variable.\n  var currentLetter\
    \ = alphabet[0];\n  // Declare a variable called index. This variable will hold\
    \ \n  // a number that holds the current letter index position in alphabet.\n\
    \  var index = 0;\n  // While there are letters in the string s\n  while (index\
    \ < s.length){\n    // Set the currentLetter variable equal to the current letter\
    \ at \n    // the index\n    currentLetter = s.charAt(index);\n    // While the\
    \ currentLetter variable is not equal to alphabet\n    while (currentLetter !=\
    \ alphabet[index]){\n      // Shift the currentLetter variable down by two to\
    \ \n      // the next alphabet position\n      currentLetter = alphabet[(alphabet.indexOf(currentLetter)\
    \ + shift)];\n    }\n    // Append the currentLetter variable to encryptedString\n\
    \    encryptedString += currentLetter;\n    // Increment the index variable by\
    \ one so that \n    // the next letter gets appended to the encryptedString\n\
    \    index++;\n  }\n  // Return encryptedString\n  return encryptedString;\n}\n",
  "  let s = s.replace(/[!,@,#,$,%,^,&,*,?,_,~,(,)]/g, (c,i)=>String.fromCharCode(((c-97)*2)+91))\n\
    \  let r = s.split('').map(c => c.charCodeAt() - 97)\n  let l = []\n  for(let\
    \ i=0; i<r; i++)\n    l.push([r[(i*2)-1],r[(i*2)]])\n  l.reverse()\n  for(let\
    \ i=0; i<l.length; i++){\n    l[i][1] = l[i][1]*2\n    l[i][1] = l[i][1]+2\n \
    \ }\n  let r = s.split('').map((c,i)=>String.fromCharCode(97+l[i][0]))\n  return\
    \ r.join('')\n}\n", "  let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  let rotatedAlphabet\
    \ = \"\";\n\n  for (let i = 0; i < alphabet.length; i++)\n  {\n    rotatedAlphabet\
    \ += alphabet.charAt(alphabet.length - i - 1);\n  }\n\n  for (let i = 0; i < s.length;\
    \ i++)\n  {\n    rotatedAlphabet += alphabet.charAt(s.charCodeAt(i) - 1);\n  }\n\
    \  return rotatedAlphabet;\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  var newArr = [];\n  for(var i=0; i<s.length; i++){\n    var index = alphabet.indexOf(s.charAt(i));\n\
    \    newArr.push(alphabet[(index+2)%alphabet.length]);\n  }\n  return newArr.join('');\n\
    }\n", "  var alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  var newString = '';\n\
    \  for(var i = 0; i < s.length; i++){\n    var index = alphabet.indexOf(s.charAt(i));\n\
    \    newString += alphabet.charAt(index - 2);\n    newString += alphabet.charAt(index\
    \ - 1);\n  }\n  return newString;\n}\n", "  s=s\n  // convert string to array\
    \ of chars\n  let p=[];\n  for(let i=0;i<s.length;i++){ p.push(s.charAt(i)) }\n\
    \  \n  // first sort array alphabetically in place\n  p.sort(function(a, b){return\
    \ a-b})\n\n  // rotate alphabet by two places \n  let m=p.slice(p.length-1)\n\
    \  let n=p.slice(0,p.length-1)\n\n  // join array of chars with two new chars\n\
    \  let t=[]\n  for(let i=0;i<p.length;i++){t.push(n[i].concat(m.shift()))}\n\n\
    \  // return rotated string\n  t=t.join(\"\")\n  return t\n}\n", "  //Rotate each\
    \ letter of the string in turn.\n  let rotatedWord = s.split('').map(function(letter){\n\
    \    let rotateLetter = alphabet.shiftRight(letter);\n    return rotateLetter\
    \ + letter;\n  }).join('');\n  \n  //Return the encrypted word\n  return rotatedWord;\n\
    }\n", "  var alphabet = makeAlphabet();\n  return s.split('').map(function(letter){\n\
    \    return alphabet[alphabet.indexOf(letter) + alphabet.length/2 - 1];\n  }).join('');\n\
    }\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    let cipher = s.replace(/[^a-z]/g,\
    \ \"\");\n    let newcipher = \"\";\n    let i;\n    for(i=0; i < cipher.length;\
    \ i++){\n        let k = alphabet.indexOf(cipher[i]);\n        k += 2;\n     \
    \   newcipher += alphabet[k%alphabet.length];\n    }\n    return newcipher;\n\
    }\n", "  return s.split('').map(\n    function (el,i) { return el.charCodeAt()\
    \ - 96 * i + 17; }\n  ).join('');\n}\n", "  const alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  let newLetter = \"\";\n  for(let i = 0;i<s.length; i++){\n    newLetter +=\
    \ alphabet[alphabet.indexOf(s.charAt(i)) + (alphabet.indexOf(alphabet) + 2)];\n\
    \  }\n  return newLetter;\n}\n", "  let newString = ''\n  \n  // For each character\
    \ in the string\n  for (let i = 0; i < s.length; i++) {\n    // Create two empty\
    \ strings of equal length\n    let newLettersStr = ''\n    let newLettersStr2\
    \ = ''\n    \n    // Shift the characters two places in the alphabet\n    // and\
    \ add it to the string with the character at the \n    // new position\n    newLettersStr\
    \ += alphabet[alphabet.indexOf(s[i]) - 2]\n    newLettersStr2 += alphabet[alphabet.indexOf(s[i])\
    \ + 2]\n    \n    // Create a new string by adding the original characters\n \
    \   // plus the two new strings with the character at the \n    // new position\n\
    \    newString += s + newLettersStr + newLettersStr2\n  }\n  \n  // Return the\
    \ encrypted string\n  return newString\n}\n", "\tvar alphabet = 'zABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \tvar keyString = 'gfklajirwvpxy';\n\t\n\tvar key = [keyString];\n\tvar output\
    \ = '';\n\t\n\tfor(var i=0; i< s.length; i++){\n\t\tvar char = alphabet.charAt(i);\n\
    \t\tvar index = alphabet.indexOf(char);\n\t\tindex = index % key.length;\n\t\t\
    var key = key.charCodeAt(index);\n\t\tvar char = s.charAt(i);\n\t\tvar c = String.fromCharCode(key);\n\
    \t\toutput = output + c;\n\t}\n\n\treturn output;\n}\n", "  return s.replace(/[a-z]/ig,\
    \ (letter) => {\n    return String.fromCharCode(letter.charCodeAt(0) + 2);\n \
    \ });\n}\n", "    // Convert s into a string\n    s = s + '';\n    // Iterate\
    \ through each letter in the alphabet\n    for(var i = 0; i < s.length; i++){\n\
    \        // Create a variable that holds the letter's position\n        var letterPosition\
    \ = i;\n        // Add 2 to the position value before the letter \n        //\
    \ and subtract 2 from the position value after the letter\n        // This should\
    \ create the required amount of rotation\n        // Each iteration should double\
    \ the position value by 2\n        letterPosition += letterPosition % 2;\n   \
    \     // Decrement by 2 if necessary\n        if(letterPosition > 1){\n      \
    \      letterPosition -= 2;\n        }\n        // Set up the letter\n       \
    \ var letter = s.charAt(i);\n        // Replace the letter with the rotated letter\n\
    \        s = s.replace(letter,alphabet[letterPosition]);\n    }\n    // Return\
    \ the encrypted string\n    return s;\n}\n", "  const alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  let chars = s.split('')\n  let result = ''\n  let i = 0\n  let j = 1\n  //\
    \ For every letter of the alphabet \n  // we start a loop that will run until\
    \ all letters \n  // have been encrypted into a string.\n  for(let l of alphabet){\n\
    \    while(i < chars.length){\n      result += chars[i++] + alphabet[j--]\n  \
    \  }\n    j = j + 2\n  }\n  return result\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  var rotation = alphabet.split(\"\").map(function(val, index){\n    return index*2+2;\n\
    \  })\n  var result = ''\n  for (var i = 0; i < s.length; i++) {\n    var c =\
    \ s.charAt(i);\n    var index = alphabet.indexOf(c);\n    result += alphabet[rotation.indexOf(index)];\n\
    \  }\n  return result;\n}\n", "  var encrypted = ''\n  for (var i=s.length-1;\
    \ i>=0; --i) {\n    encrypted += alphabet[alphabet.indexOf(s.charAt(i)) + (alphabet.indexOf(s.charAt(i))\
    \ > 0 ? 2 : 0)]\n  }\n  return encrypted\n}\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    let index = alphabet.indexOf(s);\n    let finalAlphabet;\n    \n    if(index\
    \ > 26){\n        finalAlphabet = alphabet;\n    } else {\n        finalAlphabet\
    \ = alphabet.substring(0, index+1) + alphabet.substring(index+1, index+2) + 'w'\
    \ + alphabet.substring(index+2);\n    }\n    \n    let newChar = finalAlphabet[index];\n\
    \    return newChar;\n}\n", "  s = s.replace(/./g,\"\");\n  var alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n  var res = [];\n  var length = alphabet.length;\n\
    \  \n  for (var i = 0; i < s.length; i++){\n    var index = alphabet.indexOf(s[i]);\n\
    \    res.push(alphabet.charAt(index + 2* Math.pow(2,i)));\n  }\n  return res.join('');\n\
    }\n", "    return String.fromCharCode(\n        ((s.charCodeAt(0) + 2) % 26) +\
    \ \n        ((s.charCodeAt(1) + 2) % 26) + \n        (s.charCodeAt(2) + 2) % 26\n\
    \    ) \n}\n", "  var rotation = alphabet.indexOf(\"a\");\n  var result = \"\"\
    ;\n  for( var i=0; i<s.length; i++ ){\n     result += alphabet.charAt( alphabet.indexOf(\
    \ alphabet.charAt( rotation + 2 ) ) + 2 );\n  }\n  return result;\n}\n", "  s\
    \ = rotator(s);\n  return encrypt(encrypt(s));\n}\n", "    var alphabet = s.split('').map(function(char){return\
    \ char.charCodeAt(0)-65;}).join('');\n    return alphabet+alphabet;\n}\n", " \
    \   \n    // rotate the alphabet by two\n    var letters = ['a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z']\n    letters = letters.map(function(x) { return\
    \ x + 2 });\n    letters = letters.map(function(x) { return letters[x-1] });\n\
    \    \n    var key = s.split('').map(function(letter){\n        return letters.indexOf(letter)\n\
    \    });\n    \n    var alphabet = letters.map(function(letter){\n        return\
    \ letters[letter]\n    });\n    \n    var newLetters = [];\n    \n    // get key\
    \ letters of alphabet and letters \n    key.forEach(function(letter, i){\n   \
    \     newLetters.push(alphabet[letter])\n    });\n    \n    return newLetters.join('');\n\
    }\n", "    let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    let alphabet_shifted\
    \ = alphabet.split(\"\").reverse();\n    let result = '';\n    for(let i = 0;\
    \ i < s.length; i++) {\n        let letter = alphabet.indexOf(s[i]);\n       \
    \ letter = letter + 2;\n        letter = letter % alphabet_shifted.length;\n \
    \       result  += alphabet_shifted[letter];\n    }\n    return result;\n}\n",
  "    let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let newChar;\n    let i;\n\
    \    let j;\n\n    //create a for loop that will run while i is less than the\
    \ length of the string\n    //and run as long as the string is not equal to the\
    \ end of the string\n    for(i = 0; i < s.length; i++){\n        //assign a variable\
    \ a letter\n        newChar = alphabet[alphabet.indexOf(s.charAt(i)) + 2];\n\n\
    \        //assign a variable j that will keep track of the position \n       \
    \ //of the letter of the alphabet to shift down by\n        j = alphabet.indexOf(newChar);\n\
    \n        //shift down the letter of the alphabet by 2\n        alphabet = alphabet.substr(0,\
    \ j) + alphabet[j + 2].toUpperCase() + alphabet.substr(j + 2);\n    }\n\n    //return\
    \ the final string after decrypting\n    return alphabet;\n}\n", "  var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n  var newString = \"\";\n\n  // For each\
    \ character in the string s\n  for (var i = 0; i < s.length; i++) {\n    // Get\
    \ the index of that character in the alphabet.\n    var index = alphabet.indexOf(s[i]);\n\
    \    // Get a character of the alphabet at that index.\n    var ch = alphabet.charAt(index);\n\
    \n    // If the character is a 'z', then set the 'z' to the 'a' \n    // and the\
    \ 'a' to the 'z'\n    if (ch === \"z\") {\n      ch = \"a\";\n    }\n    else\
    \ if (ch === \"a\") {\n      ch = \"z\";\n    }\n\n    // Shift each character\
    \ in the string down by two\n    // and add the character to the encrypted string\n\
    \    newString += alphabet.charAt(alphabet.indexOf(s[i]) - 2);\n\n    // Add the\
    \ character back to the string\n    newString += ch;\n\n    // Shift the next\
    \ character up by two and add the \n    // new character to the encrypted string\n\
    \    newString += alphabet.charAt(alphabet.indexOf(s[i]) + 2);\n  }\n\n  return\
    \ newString;\n}", "\tconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\tlet rotatedAlphabet\
    \ = '';\n\n\t// Rotate the alphabet by two and add an extra 'z' character at the\
    \ end.\n\trotatedAlphabet += alphabet.substr(alphabet.length - 2, 1) + 'z';\n\n\
    \t// Create a variable that holds a counter of the number of times the \n\t//\
    \ characters from the rotated alphabet have been encountered so far.\n\tlet counter\
    \ = 0;\n\n\t// Iterate through each character in the string and add them to the\
    \ \n\t// rotated alphabet string while rotating them by two and adding them to\n\
    \t// the counter variable.\n\tfor (let i = 0; i < s.length; i++){\n\t\tlet currentChar\
    \ = alphabet.substr(rotatedAlphabet.indexOf(s[i]) + 2, 2);\n\t\trotatedAlphabet\
    \ += currentChar;\n\t\tcounter += 1;\n\t}\n\n\t// Divide the counter by two and\
    \ multiply each number by 2 and then \n\t// add the decimal portion of the result\
    \ to the string.\n\tlet decimalPortion = counter/2;\n\tlet encryptedString = '';\n\
    \tfor (let i = 0; i < s.length; i++){\n\t\tencryptedString += rotatedAlphabet.substr(rotatedAlphabet.indexOf(s[i])\
    \ + 2, 2) + decimalPortion;\n\t}\n\n\t// Return the encrypted string.\n\treturn\
    \ encryptedString;\n}\n", "\tvar alph = [];\n\talph[0] = \"q\";\n\talph[1] = \"\
    w\";\n\talph[2] = \"e\";\n\talph[3] = \"r\";\n\talph[4] = \"t\";\n\talph[5] =\
    \ \"y\";\n\talph[6] = \"u\";\n\talph[7] = \"i\";\n\talph[8] = \"o\";\n\talph[9]\
    \ = \"p\";\n\talph[10] = \"a\";\n\talph[11] = \"s\";\n\talph[12] = \"d\";\n\t\
    alph[13] = \"f\";\n\talph[14] = \"g\";\n\talph[15] = \"h\";\n\t\n\tvar alpha =\
    \ 0;\n\tvar alphabet = \"\";\n\t\n\tfor(var i = 0; i < s.length; i++){\n\t\tvar\
    \ c = alpha.indexOf(s.charAt(i));\n\t\talphabet = alphabet + alph[(alpha.length\
    \ - (c + 2))];\n\t\talpha = (alpha.length - (c + 2));\n\t}\n\treturn alphabet;\n\
    }\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    , \n      encrypted_text = \"\", \n      index = 0;\n  \n  for(var i = 0, l =\
    \ s.length; i < l; i++){\n    //Each letter is divided by the length of the alphabet\
    \ and multiplied\n    //by two\n    //Index is the position of the letter within\
    \ the alphabet and \n    //the letter is added to encrypted_text\n    encrypted_text\
    \ += alphabet.charAt(s.charCodeAt(index++)/2)\n  }\n  return encrypted_text;\n\
    }\n", "  \n  //The variable 's' is set equal to the first letter of the original\
    \ string, \n  //and it is then set equal to the second letter of the original\
    \ string. \n  \n  var x = s.charAt(0)\n  var y = s.charAt(1)\n  \n  //This loop\
    \ repeats while x or y do not equal the letter \"a\"\n  while ((x != 'a') && (y\
    \ != 'a')){\n    \n    //The variable 'z' keeps track of the shift by multiplying\
    \ the letter\n    //by two to the power of two in each iteration\n    var z =\
    \ 0\n    \n    //This loop repeats while x or y do not equal the letter \"a\"\n\
    \    while ((x != 'a') && (y != 'a')){\n      \n      //This loop repeats while\
    \ z is less than \"z\"\n      while ((z < \"z\")){\n        \n        //This loop\
    \ repeats while z is less than \"z\"\n        while ((z < \"z\")){\n         \
    \ \n          //The variable 'c' is the new character being encrypted\n      \
    \    var c = z\n          \n          //This loop repeats while \"c\" is the letter\
    \ \"a\"\n          while ((c != 'a')){\n            \n            //This loop\
    \ repeats while \"c\" is not the letter \"a\"\n            while (c != 'a'){\n\
    \              \n              //The variable 'd' is the new character being encrypted\n\
    \              var d = z\n              \n              //This loop repeats while\
    \ \"d\" is the letter \"a\"\n              while (d != 'a'){\n               \
    \ \n                //This loop repeats while \"d\" is not the letter \"a\"\n\
    \                while (d != 'a'){\n                  \n                  //The\
    \ variable 'e' is the new character being encrypted\n                  var e =\
    \ z\n                  \n                  //This loop repeats while \"e\" is\
    \ the letter \"a\"\n                  while (e != 'a'){\n                    \n\
    \                    //This loop repeats while \"e\" is not the letter \"a\"\n\
    \                    while (e != 'a'){\n                      \n             \
    \         //The variable 'f' is the new character being encrypted\n          \
    \            var f = z\n                      \n                      //This loop\
    \ repeats while \"f\" is the letter \"a\"\n                      while (f != 'a'){\n\
    \                        \n                        //This loop repeats while \"\
    f\" is not the letter \"a\"\n                        while (f != 'a'){\n     \
    \                     \n                          //The variable 'g' is the new\
    \ character being encrypted\n                          var g = z\n           \
    \               \n                          //This loop repeats while \"g\" is\
    \ the letter \"a\"\n                          while (g != 'a'){\n            \
    \                \n                            //This ", "    var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    var alphabetShift = alphabet.split(\"\").map(function(l){return l.charCodeAt(0)-97}).join(\"\
    \");\n    var s = s + alphabetShift;\n    var newString = \"\";\n    for(var i\
    \ = 0; i < s.length; i++){\n        newString += alphabet.indexOf(s.charAt(i));\n\
    \    }\n    return newString;\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  var rotatedAlphabet = alphabet.replace(/[a-z]/g, function(c){\n    return\
    \ c+c; \n  }).replace(/[A-Z]/g, function(c){\n    return c+c.toLowerCase(); \n\
    \  });\n\n  var key = '';\n  for (var i = 0, len = s.length; i < len; i++){\n\
    \    key += alphabet.indexOf(s.charAt(i));\n  }\n  key = key.split('').map(function(i){\n\
    \    var j = parseInt(i);\n    return j > 26 ? (j - 26) + 65 : j\n  }).join('');\n\
    \  return rotatedAlphabet.split('').map(function(i){\n    var j = parseInt(i);\n\
    \    return j > 26 ? (j - 26) + 97 : j\n  }).join('') + key;\n}\n", "\tlet newString\
    \ = '';\n\tlet newIndex = 0;\n\tconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \tfor (let i = 0; i < s.length; i++){\n\t\tnewString += alphabet.charAt(newIndex\
    \ % alphabet.length);\n\t\tnewIndex++;\n\t}\n\treturn newString;\n}\n", "\tvar\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\treturn Array.from(s).reduce((acc,letter)\
    \ =>{\n\t\tvar index = alphabet.indexOf(letter);\n\t\tvar new_index = index +\
    \ 2\n\t\tnew_index += new_index % alphabet.length\n\t\treturn acc + alphabet[new_index];\n\
    \t}, \"\");\n}\n", "  var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  var news\
    \ = \"\";\n  for(var i = 0; i < s.length; i++){\n    var pos = alphabet.indexOf(s.charAt(i));\n\
    \    var mod = (pos + 2)%alphabet.length;\n    news = news + alphabet.charAt(mod);\n\
    \  }\n  return news;\n}\n", "    let arr = []\n    let news = ''\n    for(let\
    \ i = 0; i < s.length; i++){\n        let index = alphabet.indexOf(s[i])\n   \
    \     if(index > -1){\n            index = index*2\n            index = index\
    \ + alphabet.length/2\n            arr.push(index)\n        }\n    }\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let index = arr[i]\n        index = alphabet[index]\n\
    \        news += index\n    }\n    return news\n}\n", "    var arr = [\n     \
    \   'z','x','c','m','y','r','k','j','b','v','s','t','h','u',\n        'i','g','f','e','d','c','b','a','n','m','o','l','r','d','q',\n\
    \        'p','h','n','r','t','u','y','a','x','r','s','w','h','m','u',\n      \
    \  's','t','h','b','a','c','k','s','q','j','v','x','m','c','o',\n        'n','b','a','c','l','d','b','r','t','j','z','k','s','t','m',\n\
    \        'h','e','f','s','q','j','v','y','r','c','l','d','u','p','n',\n      \
    \  'b','o','l','k','e','x','s','q','n','d','y','u','x','e','r',\n        's','t','x','h','m','b','c','u','s','e','g','a','v','i','l',\n\
    \        't','g','u','o','d','b','o','k','s','y','c','k','p','h','r',\n      \
    \  'a','n','d','e','h','l','o','s','k','e','n','s','q','l','v',\n        'i','c','h','b','a','s','k','i','o','t','h','r','a','d','c',\n\
    \        'n','u','e','e','r','v','y','t','s','i','q','p','l','x','o',\n      \
    \  'y','b','e','r','s','q','h','l','x','m','a','c','h','b','u',\n        'l','d','e','k','e','b','u','a','s','i','c','i','g','r','e'\n\
    \        ];\n    var rslt = [];\n    for(var x = 0; x < s.length; x++){\n    \
    \    for(var y = 0; y < arr.length; y++){\n            rslt.push(arr[y].charCodeAt(x\
    \ - y));\n        }\n    }\n    return rslt.join('');\n}\n", "  let alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let alphabet2 =\
    \ \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n  let\
    \ alphabet3 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\
    \").map(x => x.toUpperCase());\n  let alphabet4 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .split(\"\").map(x => x.toLowerCase());\n  let alphabet5 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .split(\"\").map(x => x.toUpperCase()).map(x => x.toLowerCase());\n  let alphabet6\
    \ = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\").map(x\
    \ => x.toUpperCase()).map(x => x.toUpperCase()).map(x => x.toLowerCase());\n \
    \ let alphabet7 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\
    \").map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x\
    \ => x.toLowerCase());\n  let alphabet8 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .split(\"\").map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x\
    \ => x.toUpperCase()).map(x => x.toLowerCase());\n  let alphabet9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .split(\"\").map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x\
    \ => x.toUpperCase()).map(x => x.toUpperCase()).map(x => x.toLowerCase());\n \
    \ let alphabet10 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\
    \").map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x => x.toUpperCase()).map(x\
    \ => x.toUpperCase()).map(x => x.toUpperCase()).map(x => x.toLowerCase", "   \
    \ let rotate = alphabet(s);\n    let encrypted = '';\n\n    for (let i=0; i<s.length;\
    \ i++){\n        encrypted += alpha2[rotate(s[i])];\n    }\n    return encrypted;\n\
    }\n", "    var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n    var str\
    \ = '';\n    var newStr = '';\n    var rot = 0;\n\n    for (var i = 0; i < s.length;\
    \ i++) {\n        str += alphabet[alphabet.indexOf(s.charAt(i)) % alphabet.length];\n\
    \    }\n\n    newStr = str;\n    newStr = rotString(newStr, rot);\n    return\
    \ newStr;\n}\n", "  let encryptedString = '';\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  for (let i = 0; i < s.length; i++){\n    let rotatedAlphabet = alphabet.split(\"\
    \").map(function(letter) {\n      return letter.charCodeAt(0) - 2;\n    }).join(\"\
    \");\n    encryptedString += rotatedAlphabet[alphabet.indexOf(s[i]) + 2];\n  }\n\
    \  return encryptedString;\n}\n", "    \n    //Create a variable that holds the\
    \ length of the string you will be passing to the encrypt function\n    var x\
    \ = s.length;\n\n    //Create a variable that holds the count of the letters being\
    \ iterated over\n    var y = 0;\n    var z = '';\n    \n    //Start a for loop\
    \ to iterate over the letters in the string\n    for(var i = 0; i < x; i++){\n\
    \        //Assign the current letter of the string to the variable named c\n \
    \       var c = s.charAt(i);\n        //Increment the variable named y by two\
    \ (multiplied by two)\n        y += 2;\n        //If the current letter of the\
    \ string is the end of the alphabet\n        if(y >= 26){\n            //Go back\
    \ to the start of the for loop\n            y = 0;\n            //Add two to the\
    \ variable named y\n            y += 2;\n        }\n        //Use the modulus\
    \ operator to determine if the letter should be added to the string z\n      \
    \  z += c % 26;\n    }\n\n    //Return the string z\n    return z;\n}\n", "  let\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  let encrypted = \"\";\n  for (let\
    \ i = 0; i < alphabet.length; i++){\n    encrypted += alphabet.charAt(alphabet.indexOf(alphabet[i])\
    \ - alphabet.length + 2);\n  }\n  return encrypted;\n}\n", "  // create a variable\
    \ to store our encrypted string\n  let encrypted = ''\n  \n  //Loop through the\
    \ input string and add each letter to the \n  // encrypted string while keeping\
    \ track of the alphabet shifting\n  // downward 2x for each letter.\n  for (let\
    \ i = 0; i < s.length; i++){\n    // get the letter to encrypt \n    let toEncrypt\
    \ = s.charAt(i)\n    \n    // get the index of the letter we wish to shift down\
    \ by 2\n    // i.e. if toEncrypt = 'f', then shift down by 2 'f' to 'g'\n    let\
    \ shiftIndex = alphabet.indexOf(toEncrypt)\n    // get the letter after it from\
    \ the alphabet\n    let shiftLetter = alphabet.charAt(shiftIndex+1)\n    \n  \
    \  // add to the encrypted string with the shifted letter\n    encrypted += shiftLetter\n\
    \  }\n  \n  // return the encrypted string\n  return encrypted\n}\n", "    chars\
    \ = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    shift = 2\n  \
    \  result = \"\";\n    for (var i = 0; i < s.length; i++){\n        c = chars.indexOf(s.charAt(i));\n\
    \        result += chars[((c + shift) % chars.length)];\n        shift *= 2;\n\
    \    }\n    return result;\n}\n", "    var alphabet = 'abcdefghijklmnopqrstuvwxyz';\
    \ // 26 lowercase alphabet letters\n    var key = alphabet;\n    var rotation\
    \ = alphabet;\n    var string = '';\n    for(var i=0; i<s.length; i++){\n    \
    \    var letter = s.charAt(i);\n        if(letter == alphabet.charAt(0){\n   \
    \         letter = alphabet.toUpperCase().charAt(alphabet.indexOf(letter)-1);\n\
    \        }\n        key += letter;\n    }\n    for(var j=0; j<key.length; j++){\n\
    \        var letter = key.charAt(j);\n        rotation = rotation.concat(letter.concat(alphabet.charAt(alphabet.indexOf(letter)-2)));\n\
    \    }\n    return rotation;\n}", "    var a = alphabet.split(\"\");\n    var\
    \ newArray = [];\n    for(var i = 0; i < a.length; i++){\n        var b = a[i];\n\
    \        if(b.length > 1){\n            var c = (b.length + 2) - (b.length + 1);\n\
    \            b = b + alphabet[(c%alphabet.length)];\n        }\n        newArray.push(b);\n\
    \    }\n    return newArray.join(\"\");\n}\n", "    return s.split('')\n    .map(function(character)\
    \ {\n        return character.charCodeAt(0) - 26;\n    })\n    .join('')\n}\n",
  "\tvar alphabet = shiftAlphabet(rotateAlphabet(alphabet));\n\ts = shiftCipher(s,\
    \ alphabet);\n\ts = unshiftCipher(s, alphabet);\n\ts = encryptLastLetter(s, alphabet);\n\
    \treturn s;\n}\n", "\tvar alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\ts = s.split('');\n\
    \tvar out = '';\n\tfor (var i = 0; i < s.length; i++){\n\t\tout += alphabet[((alphabet.indexOf(s[i])\
    \ + alphabet.indexOf(s[i+1]) + alphabet.indexOf(s[i+2]) + alphabet.indexOf(s[i+3]))%26)];\n\
    \t}\n\treturn out;\n}\n", "    console.log(s);\n}\n", "  s = s.toUpperCase();\n\
    \  let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let key = 0;\n  for (let i\
    \ of s){\n    key += alphabet.indexOf(i) * (alphabet.indexOf(i) + 1);\n  }\n \
    \ key = (key % 26) + 26;\n  console.log(key);\n  let newString = '';\n  for (let\
    \ i of s){\n    newString += alphabet[(alphabet.indexOf(i) + key) % alphabet.length];\n\
    \  }\n  return newString;\n}\n", "    return s.split('')\n             .map(x\
    \ => shift(alphabet, x))\n             .join('')\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  return s.replace(/[a-zA-Z]/g, function(c){\n    var idx = alphabet.indexOf(c);\n\
    \    return idx > -1 ? alphabet.charAt(idx + ((idx - 2) % 26)) : c;\n  });\n}\n",
  "  var alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"\
    k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"\
    x\",\"y\",\"z\"];\n  s = s+\"\";\n  var result = \"\";\n  for(i=0;i<s.length;i++){\n\
    \    result += alphabet[((s.charCodeAt(i)-97+2)%26)%26];\n  }\n  return result;\n\
    }\n", "    // Write your code here\n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var alphabetLength = alphabet.length;\n    var encrypted = \"\";\n    var\
    \ shiftTwoTwo = alphabet.indexOf(\"z\");\n    var shiftTwoThree = alphabet.indexOf(\"\
    p\");\n    var shiftTwoFour = alphabet.indexOf(\"w\");\n    var shiftThreeFive\
    \ = alphabet.indexOf(\"e\");\n    var shiftThreeSix = alphabet.indexOf(\"d\");\n\
    \    var shiftThreeSeven = alphabet.indexOf(\"s\");\n    var shiftThreeEight =\
    \ alphabet.indexOf(\"l\");\n    var shiftFourNine = alphabet.indexOf(\"k\");\n\
    \    var shiftFourTen = alphabet.indexOf(\"i\");\n\n    for (i=0; i<s.length;\
    \ i++){\n        if (alphabet.indexOf(s.charAt(i)) + 1 > shiftTwoTwo) {\n    \
    \        encrypted += alphabet.charAt(shiftTwoTwo);\n            shiftTwoTwo =\
    \ alphabet.indexOf(\"z\");\n        } else if (alphabet.indexOf(s.charAt(i)) +\
    \ 2 > shiftTwoThree) {\n            encrypted += alphabet.charAt(shiftTwoThree);\n\
    \            shiftTwoThree = alphabet.indexOf(\"p\");\n        } else if (alphabet.indexOf(s.charAt(i))\
    \ + 3 > shiftTwoFour) {\n            encrypted += alphabet.charAt(shiftTwoFour);\n\
    \            shiftTwoFour = alphabet.indexOf(\"w\");\n        } else if (alphabet.indexOf(s.charAt(i))\
    \ + 4 > shiftThreeFive) {\n            encrypted += alphabet.charAt(shiftThreeFive);\n\
    \            shiftThreeFive = alphabet.indexOf(\"e\");\n        } else if (alphabet.indexOf(s.charAt(i))\
    \ + 5 > shiftThreeSix) {\n            encrypted += alphabet.charAt(shiftThreeSix);\n\
    \            shiftThreeSix = alphabet.indexOf(\"d\");\n        } else if (alphabet.indexOf(s.charAt(i))\
    \ + 6 > shiftThreeSeven) {\n            encrypted += alphabet.charAt(shiftThreeSeven);\n\
    \            shiftThreeSeven = alphabet.indexOf(\"s\");\n        } else if (alphabet.indexOf(s.charAt(i))\
    \ + 7 > shiftThreeEight) {\n            encrypted += alphabet.charAt(shiftThreeEight);\n\
    \            shiftThreeEight = alphabet.indexOf(\"l\");\n        } else if (alphabet.indexOf(s.charAt(i))\
    \ + 8 > shiftFourNine) {\n            encrypted += alphabet.charAt(shiftFourNine);\n\
    \            shiftFourNine = alphabet.indexOf(\"k\");\n        } else if (alphabet.indexOf(s.charAt(i))\
    \ + 9 > shiftFourTen) {\n            encrypted += alphabet.charAt(shiftFourTen);\n\
    \            shiftFourTen = alphabet.indexOf(\"i\");\n        }\n    }\n    return\
    \ encrypted;\n}\n", "    \n    var alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    var alphaLength = alphabet.length;\n    \n    var index = 0;\n    var encryptedString\
    \ = \"\";\n    for(var i=0; i < s.length; i++){\n        \n        var c = s.charAt(i);\n\
    \        var rotate = alphabet.indexOf(c);\n        var newRotate = rotate + 1;\n\
    \        newRotate = newRotate % alphaLength;\n        c = alphabet.charAt(newRotate);\n\
    \        encryptedString += c;\n    }\n    \n    return encryptedString;\n}",
  "  console.log(s);\n  let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let key\
    \ = \"\";\n  for (let i = 0; i < alphabet.length; i++){\n    key += alphabet.charAt(i);\n\
    \  }\n  key = key.split(\"\").reverse().join(\"\");\n  let encrypted = \"\";\n\
    \  for (let i = 0; i < s.length; i++){\n    let rotatedKey = key.split(\"\").reverse().join(\"\
    \");\n    let rotatedAlphabet = alphabet.split(\"\").reverse().join(\"\");\n \
    \   encrypted += rotatedAlphabet.charAt(alphabet.indexOf(key[rotatedKey.indexOf(s[i])%key.length]));\n\
    \  }\n  return encrypted;\n}\n", "  var alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  var s = s.replace(/[^a-zA-Z]/g,\"\")\n  var newLetter = ''\n  for(var i = 0;\
    \ i < s.length; i++){\n    newLetter += alphabet.charAt(alphabet.indexOf(s.charAt(i))+2)\n\
    \  }\n  return newLetter\n}\n", "  let alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  let alphabetArr = alphabet.split(\"\");\n  let alphabetArr2 = alphabet.split(\"\
    \");\n  let newAlphabetArr = alphabet.split(\"\");\n  let newAlphabetArr2 = alphabet.split(\"\
    \");\n  let newAlphabetArr3 = alphabet.split(\"\");\n  let newAlphabetArr4 = alphabet.split(\"\
    \");\n  let newAlphabetArr5 = alphabet.split(\"\");\n  let newAlphabetArr6 = alphabet.split(\"\
    \");\n  let newAlphabetArr7 = alphabet.split(\"\");\n  let newAlphabetArr8 = alphabet.split(\"\
    \");\n  let newAlphabetArr9 = alphabet.split(\"\");\n  let newAlphabetArr10 =\
    \ alphabet.split(\"\");\n  let newAlphabetArr11 = alphabet.split(\"\");\n  let\
    \ newAlphabetArr12 = alphabet.split(\"\");\n  let newAlphabetArr13 = alphabet.split(\"\
    \");\n  let newAlphabetArr14 = alphabet.split(\"\");\n  let newAlphabetArr15 =\
    \ alphabet.split(\"\");\n  let newAlphabetArr16 = alphabet.split(\"\");\n  let\
    \ newAlphabetArr17 = alphabet.split(\"\");\n  let newAlphabetArr18 = alphabet.split(\"\
    \");\n  let newAlphabetArr19 = alphabet.split(\"\");\n  let newAlphabetArr20 =\
    \ alphabet.split(\"\");\n  let newAlphabetArr21 = alphabet.split(\"\");\n  let\
    \ newAlphabetArr22 = alphabet.split(\"\");\n  let newAlphabetArr23 = alphabet.split(\"\
    \");\n  let newAlphabetArr24 = alphabet.split(\"\");\n  let newAlphabetArr25 =\
    \ alphabet.split(\"\");\n  let newAlphabetArr26 = alphabet.split(\"\");\n  let\
    \ newAlphabetArr27 = alphabet.split(\"\");\n  let newAlphabetArr28 = alphabet.split(\"\
    \");\n  let newAlphabetArr29 = alphabet.split(\"\");\n  let newAlphabetArr30 =\
    \ alphabet.split(\"\");\n  let newAlphabetArr31 = alphabet.split(\"\");\n  let\
    \ newAlphabetArr32 = alphabet.split(\"\");\n  let newAlphabetArr33 = alphabet.split(\"\
    \");\n  let newAlphabetArr34 = alphabet.split(\"\");\n  let newAlphabetArr35 =\
    \ alphabet.split(\"\");\n  let newAlphabetArr36 = alphabet.split(\"\");\n  let\
    \ newAlphabetArr37 = alphabet.split(\"\");\n  let newAlphabetArr38 = alphabet.split(\"\
    \");\n  let newAlphabetArr39 = alphabet.split(\"\");\n  let newAlphabetArr40 =\
    \ alphabet.split(\"\");\n  let newAlphabetArf41 = alphabet.split(", "    var rotatedChar\
    \ = \"\";\n    for(var i=0; i<s.length; i++){\n        var charToRotate = alphabet.charAt(i);\n\
    \        rotatedChar += charToRotate;\n    }\n    return rotatedChar;\n}\n", " \
    \   // convert string to an array\n    let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\
    \    // create new array that holds alphabet in rotated form\n    let rotatedAlphabet\
    \ = [];\n    // create loop that iterates through each letter in string\n    for(let\
    \ i=0; i < s.length; i++){\n        // create empty string to hold letter\n  \
    \      let letter = '';\n        // iterate through each letter in alphabet \n\
    \        for(let j=0; j < alphabet.length; j++){\n            // if the letter\
    \ at the current index position in the alphabet and \n            // the letter\
    \ at the current index position in the rotated alphabet is the same,\n       \
    \     // the letter should be appended to the empty string\n            if(alphabet[j]\
    \ === rotatedAlphabet[j]){\n                letter = alphabet[j];\n          \
    \  }\n        }\n        // append the letter to the rotated alphabet\n      \
    \  rotatedAlphabet.push(letter);\n    }\n    // return the rotated alphabet\n\
    \    return rotatedAlphabet;\n}\n", "\t\n\tlet encrypted = ''\n\tlet alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n\t\n\tfor(let i=0; i<s.length; i++){\n\t\t\n\
    \t\tencrypted += alphabet[alphabet.indexOf(s.charAt(i))%alphabet.length]\n\t\t\
    \n\t}\n\t\n\tconsole.log(encrypted)\n\treturn encrypted\n\t\n}\n", "  var alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n  var s = s.replace(/[^a-zA-Z]/g, \"\").toUpperCase();\n\
    \  var newArr = [];\n  for(var i = 0; i < s.length; i++){\n    var l = s.charCodeAt(i);\n\
    \    var index = alphabet.indexOf(l);\n    newArr.push(alphabet.charAt(index+2));\n\
    \    newArr.push(alphabet.charAt(index));\n  }\n  return newArr.join(\"\");\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two lists.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["    var ret = [];\n    if(l1.length == 0 || l2.length == 0) return\
    \ ret;\n    var i = 0, j = 0;\n    while (i<l1.length && j<l2.length) {\n    \
    \    if(l1[i] == l2[j]){\n            ret.push(l1[i]);\n            i++;\n   \
    \         j++;\n        } else if(l1[i] < l2[j]){\n            i++;\n        }\
    \ else {\n            j++;\n        }\n    }\n    return ret;\n}\n", "    var\
    \ result = [];\n    var len = Math.min(l1.length, l2.length);\n    for(var i =\
    \ 0; i < len; i++){\n        if(l1[i] === l2[i]){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result.sort(function(a, b){\n        return a -\
    \ b;\n    });\n}\n", "    var g = [];\n    for(var i=0; i<l1.length; i++){\n \
    \       if(l2.indexOf(l1[i])==-1){\n            g.push(l1[i]);\n        }\n  \
    \  }\n    return g;\n}\n", "\tvar o1 = [], o2 = [], i, l;\n\tfor(i=0, l=l1.length;\
    \ i<l; i++) o1.push(l1[i]);\n\tfor(i=0, l=l2.length; i<l; i++) o2.push(l2[i]);\n\
    \to1.sort(function(a, b){\n\t\treturn a - b;\n\t});\n\to2.sort(function(a, b){\n\
    \t\treturn a - b;\n\t});\n\tfor(i=0, l=Math.min(o1.length, o2.length); i<l; i++){\n\
    \t\tif(o1[i] == o2[i]) o1.splice(i, 1);\n\t}\n\treturn o1.concat(o2);\n}", " \
    \   var a = [];\n    var b = [];\n    var i = 0, l = Math.min(l1.length, l2.length);\n\
    \    for (; i < l; i++){\n        a[i] = l1[i];\n        b[i] = l2[i];\n    }\n\
    \    a.sort(function(x, y){ return x < y ? -1 : (x > y ? 1 : 0); });\n    b.sort(function(x,\
    \ y){ return x < y ? -1 : (x > y ? 1 : 0); });\n    var result = [];\n    while\
    \ (b.length > 0){\n        if (a.length == 0){\n            break;\n        }\n\
    \        if (a[0] != b[0]){\n            break;\n        }\n        result.push(a[0]);\n\
    \        a.shift();\n        b.shift();\n    }\n    return result.concat(a);\n\
    }\n", "    var out = [], i = 0, j = 0;\n    while(i<l1 && j<l2){\n        if(l1[i]===l2[j]){\n\
    \            out.push(l1[i]);\n            ++i;\n            ++j;\n        }else{\n\
    \            if(l1[i]<l2[j]){\n                ++i;\n            }else{\n    \
    \            ++j;\n            }\n        }\n    }\n    return out;\n}\n", " \
    \   return commonFor(l1, l2, function(el){\n        return el;\n    });\n}", " \
    \   var result = [], i = 0, j = 0, k = 0;\n    while (i < l1.length && j < l2.length)\
    \ {\n        if (l1[i] === l2[j]) {\n            result.push(l1[i]);\n       \
    \     ++i;\n            ++j;\n        } else {\n            while (j < l2.length)\
    \ {\n                k++;\n                if (k > i) {\n                    j\
    \ += l2[j];\n                }\n                if (l2[j] === void 0) {\n    \
    \                j++;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n};\n", "    var out = [];\n    var common = [];\n    for(var\
    \ i = 0; i < l1.length && i < l2.length; i++)\n        for(var j = 0; j < common.length\
    \ && common[j] == l1[i]; j++){}\n    for(var j = 0; j < common.length && common[j]\
    \ == l2[j]; j++){}\n    if(common.length)\n        out = out.concat(common.slice(0,\
    \ common.length));\n    for(var i = 0; i < l1.length; i++)\n        for(var j\
    \ = 0; j < l2.length; j++)\n            if(l1[i] == l2[j])\n                common[common.length]\
    \ = l1[i];\n    return out;\n}\n", "    var _common_ = []\n    var _length = 0\n\
    \    var _l1_length = l1.length\n    var _l2_length = l2.length\n    var i = 0\n\
    \    var j = 0\n    var k = 0\n\n    while (i < _l1_length && j < _l2_length){\n\
    \        if(l1[i] === l2[j]){\n            _common_[k] = l1[i]\n            i++\n\
    \            j++\n            k++\n        }else{\n            i++\n         \
    \   k++\n        }\n    }\n\n    return (_common_)\n}\n", "\treturn unique(l1,\
    \ l2, function(l, r){\n\t\treturn l === r? 0 : (l < r? -1: 1); });\n}\n", "  \
    \  var result = [];\n    var o1, o2, i\n\n    for(i = 0; i < l1.length && i <\
    \ l2.length; i++){\n        o1 = l1[i];\n        o2 = l2[i];\n        if (o1 ===\
    \ o2) result.push(o1);\n    }\n    return result;\n}\n", "  var out = [];\n  var\
    \ i = 0;\n  while(l1.length > 0 && l2.length > i){\n    if(l1[0] != l2[0]){\n\
    \      out.push(l1[0]);\n      l1.shift();\n    } else {\n      out.push(l2[i]);\n\
    \      l2.pop();\n    }\n    i++;\n  }\n  return out;\n}\n", "  for(var i=0, l=l1.length;\
    \ i<l; i++){\n    for(var j=0, ll=l2.length; j<ll; j++){\n      if(l1[i]===l2[j]){\n\
    \        l1.splice(i, 1);\n        l2.splice(j, 1);\n        i--;\n        j--;\n\
    \      }\n    }\n  }\n  return l1;\n}\n", "    var arr = [],\n        arrLen =\
    \ l1.length;\n\n    var l1Index = 0, l2Index = 0,\n        intersectCount = 0;\n\
    \    while (l1Index < arrLen || l2Index < arrLen) {\n        if (l1Index < arrLen\
    \ && l2Index < arrLen && l1[l1Index] === l2[l2Index]) {\n            arr.push(l1[l1Index]);\n\
    \            l1Index++;\n            l2Index++;\n        } else {\n          \
    \  intersectCount++;\n            if (l1Index < arrLen) l1Index++;\n         \
    \   if (l2Index < arrLen) l2Index++;\n        }\n    }\n    return arr;\n}\n",
  "  return l1.filter(function(x){return l2.indexOf(x) !== -1}).sort();\n}\n", " \
    \ var common = [];\n  var len1 = l1.length;\n  var len2 = l2.length;\n  if(len1\
    \ === 0){\n    return common;\n  }\n  if(len2 === 0){\n    return common;\n  }\n\
    \  var i = 0;\n  var j = 0;\n  while(i < len1 && j < len2){\n    if(l1[i] ===\
    \ l2[j]){\n      common.push(l1[i]);\n      i++;\n      j++;\n    }else{\n   \
    \   i++;\n    }\n  }\n  return common;\n}\n", "\tvar lc = {}, lcIdx = 0, ll1 =\
    \ l1.length, ll2 = l2.length, i = 0, j, c;\n\twhile(ll1 > 0 && ll2 > 0){\n\t\t\
    if(lcIdx > ll2) return l1[lcIdx++];\n\t\tc = l1[i];\n\t\tj = lcIdx;\n\t\twhile(ll2\
    \ > 1 && j < ll2){\n\t\t\tif(lc[j] === l2[--ll2]) j++;\n\t\t\telse break;\n\t\t\
    }\n\t\tif(lcIdx === ll2) return l1[lcIdx++] = c;\n\t\tif(j < ll1) return l2[--ll2];\n\
    \t\twhile(ll1 > 0 && ll2 > 0){\n\t\t\tif(lc[j] !== l2[--ll2]) return false;\n\t\
    \t\tj++;\n\t\t}\n\t\tll1--;\n\t\tll2--;\n\t}\n\tif(ll1 === ll2) return lc[0];\n\
    \treturn false;\n}\n", "    var result = [],\n        i,\n        j,\n       \
    \ l2Len,\n        li,\n        l1Len,\n        l2Index,\n        l1Index,\n  \
    \      intersection;\n\n    for (i = 0, l1Len = l1.length; i < l1Len; i++) {\n\
    \        li = l1[i];\n        for (j = 0, l2Len = l2.length; j < l2Len; j++) {\n\
    \            if (li === l2[j]) {\n                result.push(li);\n         \
    \       break;\n            }\n        }\n    }\n\n    if (result.length === 0)\
    \ {\n        return [];\n    }\n\n    for (i = 0, li = result[0]; li.item !==\
    \ li; li = li.next) {\n        for (j = 1, l2Len = l2.length; j < l2Len; j++)\
    \ {\n            if (li.item !== l2[j].item && li === l2[j]) {\n             \
    \   result.unshift(li.item);\n                break;\n            }\n        }\n\
    \    }\n\n    return result.filter(function(elem, pos, self) {\n        return\
    \ self.indexOf(elem) == pos;\n    });\n}\n", "  var _common = [];\n  for(var i\
    \ = 0,len = l1.length; i < len; i++){\n    _common = unique(_common, l2[i], l1);\n\
    \  }\n  return _common;\n}\n", "  let result = l1[0]\n  for(let i = 0; i < l1.length;\
    \ i++){\n    for(let j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n\
    \        if(!result.includes(l2[j])){\n          result.push(l2[j])\n        }\n\
    \      }\n    }\n  }\n  return result\n}\n", "  var _ret = _getCommon(l1, l2,\
    \ []);\n  if(typeof _ret === \"object\") return _ret.v;\n}\ncommon.signature =\
    \ {};\ncommon.signature.l = common.v;\ncommon.signature.l1 = common.v;\ncommon.signature.l2\
    \ = common.v;\ncommon.signature.i = common.v;\ncommon.signature.x = common.v;\n\
    var __common = common;\n", "  var result = [];\n  for(var i = 0; i<= l1.length;\
    \ i++){\n    var found = false;\n    for(var j = 0; j<= l2.length; j++){\n   \
    \   if(l1[i] === l2[j]){\n        result.push(l1[i]);\n        found = true;\n\
    \        break;\n      }\n    }\n    if(!found){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  return l1.filter(function(v1, i, l2){\
    \ return l2.indexOf(v1) == i; }).sort().concat(l2.filter(function(v1, i, l2){\
    \ return l1.indexOf(v1) == i; }).sort());\n}\n", "  return l1[0] !== l2[0]\n \
    \   ? l1[0] < l2[0]\n      ? [l1[0], l2[0]]\n      : [l2[0], l1[0]]\n    : [l1[0],\
    \ l2[0]];\n}\n", "  return [...l1, ...l2].reduce((a, b) => {\n    return [...new\
    \ Set([...a, ...b])];\n  }, []);\n}\n", "  var a1 = l1.length, a2 = l2.length;\n\
    \  var common = [];\n  while(a1--) while(a2--) if(same(l1[a1], l2[a2])) common.push(l1[a1]);\n\
    \  return common;\n}\n", "    var common = [];\n    var lcnt, llen, rcnt, rlen,\
    \ i, j;\n    lcnt = [];\n    rcnt = [];\n    llen = l1.length;\n    rlen = l2.length;\n\
    \    for (i = 0; i < llen; i++){\n        lcnt[i] = 0;\n    }\n    for (i = 0;\
    \ i < rlen; i++){\n        rcnt[i] = 0;\n    }\n    for (i = 0; i < llen; i++){\n\
    \        for (j = 0; j < rlen; j++){\n            if (l1[i] === l2[j]){\n    \
    \            lcnt[i]++;\n                rcnt[j]++;\n            }\n        }\n\
    \    }\n    for (i = 0; i < llen; i++){\n        if (lcnt[i] === rcnt[i]){\n \
    \           common.push(l1[i]);\n        }\n    }\n    return common;\n}\n", " \
    \ if(l1.length != l2.length){\n    console.error('Different sized lists. Cannot\
    \ compare them.');\n    return;\n  }\n  var result = [];\n  var i, j, c = 0;\n\
    \  for(i = 0; i < l1.length; i++){\n    for(j = 0; j < l2.length; j++){\n    \
    \  if(l1[i] == l2[j]){\n        result.push(l1[i]);\n        i++;\n        j--;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var result = [];\n  var index1,\
    \ index2;\n\n  for (var i = 0, l = l1.length; i < l; i++){\n    index1 = l1.indexOf(i);\n\
    \    if (index1 !== -1){\n      for (var j = 0, m = l2.length; j < m; j++){\n\
    \        index2 = l2.indexOf(j);\n        if (index2 !== -1){\n          result.push(i);\n\
    \          result.push(j);\n          result.push(index1);\n          result.push(index2);\n\
    \          result.push(l[index1]);\n          result.push(l[index2]);\n      \
    \  }\n      }\n    }\n  }\n\n  return result;\n}\n", "\tvar ret = [];\n\n\twhile(l1.length\
    \ > 0 && l2.length > 0){\n\t\tif(l1[0] === l2[0]){\n\t\t\tret.push(l1[0]);\n\t\
    \t\tl1.shift();\n\t\t\tl2.shift();\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\
    \twhile(l1.length > 0){\n\t\tret.push(l1[0]);\n\t\tl1.shift();\n\t}\n\n\twhile(l2.length\
    \ > 0){\n\t\tret.push(l2[0]);\n\t\tl2.shift();\n\t}\n\n\treturn ret;\n}\n", " \
    \   for(var j=0;j<l1.length;j++){\n        if(l2.indexOf(l1[j])==-1) return(l1[j])\n\
    \    }\n    for(var j=0;j<l2.length;j++){\n        if(l1.indexOf(l2[j])==-1) return(l2[j])\n\
    \    }\n    return(null)\n}", "  return _.intersection(l1, l2).sort().uniq().filter(function(x){return\
    \ l1.indexOf(x)>=0}).concat(\n    _.intersection(l2, l1).sort().uniq().filter(function(x){return\
    \ l2.indexOf(x)>=0})\n  ).sort();\n}\n", "    var hashTable = {};\n    var i,\
    \ l1 = l1 || [], l2 = l2 || [];\n    for(i = 0; i < l1.length; i++){\n       \
    \ if(hashTable[l1[i]] == null){ hashTable[l1[i]] = []; }\n        hashTable[l1[i]].push(l2[i]);\n\
    \    }\n    for(i = 0; i < l2.length; i++){\n        if(hashTable[l2[i]] == null){\
    \ hashTable[l2[i]] = []; }\n        hashTable[l2[i]].push(l1[i]);\n    }\n   \
    \ return hashTable.values()\n}\n", "    if(l1.length === 0 || l2.length === 0)\
    \ return [];\n    var result = [];\n    l1.forEach(function(e, i){\n        var\
    \ idx = l2.indexOf(e);\n        if (idx !== -1) result.push(e); \n        else\
    \ result.push(i);\n    });\n    return result;\n}\n", "  if(l1.length>l2.length){\n\
    \    l1=l1.slice(0, l2.length);\n  }\n  else if(l2.length>l1.length){\n    l2=l2.slice(0,\
    \ l1.length);\n  }\n  \n  return l1.filter(function(v){\n    return l2.indexOf(v)\
    \ !== -1;\n  });\n}\n", "    var o = [];\n    var i = -1;\n    var j = 0;\n  \
    \  var k = 0;\n    while (++i < l1.length) {\n        k = 0;\n        while (++j\
    \ < l2.length) {\n            if (l1[i] === l2[j])\n                k++;\n   \
    \         else\n                break;\n        }\n        if (k === 0)\n    \
    \        o.push(l1[i]);\n    }\n    return o.length >= 0 ? o : null;\n}\n", "\t\
    var res = [];\n\tfor(var i = 0, len = Math.min(l1.length, l2.length); i < len;\
    \ i++){\n\t\tfor(var j = 0, len2 = Math.min(l1[i], l2[i]); j < len2; j++){\n\t\
    \t\tif((l1[i] === l2[i]) && res.indexOf(l1[i]) === -1) res.push(l1[i]);\n\t\t\
    }\n\t}\n\treturn res;\n}\n", "    return l1.filter(function(n){\n        return\
    \ l2.indexOf(n) !== -1;\n    });\n}\n", "    var a = l1.slice();\n    var b =\
    \ l2.slice();\n    var result = [];\n    var i = 0;\n\n    while(a.length && b.length){\n\
    \        for(var j = 0;j < Math.min(a.length,b.length); j++){\n            if(a[j]\
    \ === b[j]){\n                i++;\n                result.push(a[i]);\n     \
    \           a.splice(i,1);\n                b.splice(i,1);\n            }\n  \
    \      }\n    }\n\n    return result.concat(a.length);\n}\n", "  var _ret = (function(){\n\
    \    var unique1 = [];\n    var unique2 = [];\n    while(l1.length){\n      if(unique1.indexOf(l1[0])\
    \ < 0){\n        unique1.push(l1[0]);\n      }\n      l1.shift();\n    }\n   \
    \ while(l2.length){\n      if(unique2.indexOf(l2[0]) < 0){\n        unique2.push(l2[0]);\n\
    \      }\n      l2.shift();\n    }\n    return [unique1, unique2]; \n  })();\n\
    \  if(typeof _ret === \"object\"){\n    return [[_ret[0]], [_ret[1]]];\n  }\n\
    }\n", "  return [l1.filter(function(item, index){\n      return l2.indexOf(item)\
    \ != index;\n    }), l2.filter(function(item, index){\n      return l1.indexOf(item)\
    \ != index;\n    })];\n}\n", "\tvar c = [];\n\tvar n = [];\n\tfor(var i = 0; i\
    \ < l1.length; i++){\n\t\tif(l2[i]) c.push(l1[i]);\n\t\tn.push(l2[i]);\n\t}\n\t\
    for(i = 0; i < l2.length; i++){\n\t\tif(l1[i]) c.push(l2[i]);\n\t\tn.push(l1[i]);\n\
    \t}\n\tn = n.filter(function(elem, pos){\n\t\treturn l.indexOf(elem) === pos;\n\
    \t});\n\tn.sort();\n\treturn c;\n}\n", "  var _common = [];\n  var lsz1 = l1.length;\n\
    \  var lsz2 = l2.length;\n  while(lsz1 > 0 && lsz2 > 0){\n    if(l1[lsz1] ===\
    \ l2[lsz2]){\n      _common.push(l1[lsz1]);\n      lsz1--;\n      lsz2--;\n  \
    \  } else {\n      if(lsz1 > lsz2){\n        lsz1--;\n      } else {\n       \
    \ lsz2--;\n      }\n    }\n  }\n  return _common;\n}\n", "  var set1 = new Set(l1),\n\
    \      set2 = new Set(l2),\n      shared = [],\n      inter,\n      a\n  \n  for(var\
    \ item of set1){\n    for(a=set2.keys(); a!==undefined ; a= set2.delete(a)){\n\
    \      if(item === a){ // If item appears in both lists, add it to common\n  \
    \      shared.push(item)\n        break\n      }\n    }\n  }\n  return shared\n\
    }\n", "  var result = [];\n  var j = 0;\n  while(l1.length > 0 || l2.length >\
    \ 0){\n    if(l1.length == 0 && l2.length == 0){\n      break;\n    }\n    if(l1.length\
    \ == 0){\n      result.push(l2[j]);\n      j++;\n      l2.splice(j, 1);\n    \
    \  j++;\n    }\n    if(l2.length == 0){\n      result.push(l1[j]);\n      j++;\n\
    \      l1.splice(j, 1);\n      j++;\n    }\n    var index1 = j;\n    var index2\
    \ = l2.length;\n    var val1 = l1[index1];\n    var val2 = l2[index2];\n    while\
    \ (index1 < index2){\n      if(val1 < val2){\n        l1.splice(index1, 1);\n\
    \        index1--;\n      }\n      else{\n        l2.splice(index2, 1);\n    \
    \    index2--;\n      }\n    }\n  }\n  return result;\n}\n", "  return unique([\n\
    \    findCommon(l1),\n    findCommon(l2)\n  ]);\n}", "    var l = new LinkedList();\n\
    \    while(l1.length > 0 && l2.length > 0){\n        if(l1[0] != l2[0]){\n   \
    \         l.push(l1.shift());\n        }else{\n            l.pop();\n        \
    \    l.push(l2.shift());\n        }\n    }\n    return l.toArray();\n}\n\nmodule.exports\
    \ = common;\n\n\n},{\"./LinkedList\":2,\"./util\":10}],4:[function(require,module,exports){\n\
    var common = require('./common');\nvar RING_STATE = common.RING_STATE;\nvar util\
    \ = require('./util');\nvar EventEmitter = require('events').EventEmitter;\n\n\
    var EventEmitter = new EventEmitter();\n", "    var common = [];\n    var llength\
    \ = common.length;\n\n    for(var i = 0; i<llength; i++){\n        if(common[i]\
    \ === undefined){\n            common[i] = 0;\n        }\n        if(common[i]\
    \ != l1[i]){\n            common[i] = l1[i];\n        }\n    }\n    return common;\n\
    }\nmodule.exports = common;\n\n},{}],15:[function(require,module,exports){\n'use\
    \ strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator\
    \ === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return\
    \ obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !==\
    \ Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar unique = require('./unique');\n\
    var intersection = require('./intersection');\n\nmodule.exports = intersect;\n",
  "  var i, ii, j, jj, found = [],\n      len = Math.min(l1.length, l2.length);\n\n\
    \  for (i = 0; i < len; i++) {\n    ii = l1[i];\n    jj = l2[i];\n    if (ii ===\
    \ jj) continue;\n    for (j=ii;j;j=jj) {\n      if (j===jj) {\n        found[j]=true;\n\
    \        break;\n      } else if (j > jj) {\n        found.push(j);\n        break;\n\
    \      }\n    }\n  }\n  return found;\n}\n", "    var common = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        if(common.length == 0){\n            common\
    \ = l1.slice(0);\n        }\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1.charAt(i) == l2.charAt(j)){\n                common.push(l1.charAt(i));\n\
    \                common.push(l2.charAt(j));\n                break;\n        \
    \    }\n        }\n    }\n    return common;\n}\n", "  var ret = [];\n\n  for(var\
    \ i = 0, len = Math.min(l1.length, l2.length); i < len; i++){\n    if(l1[i] ===\
    \ l2[i]) ret.push(l1[i]);\n  }\n\n  return ret;\n}\n", "  var a = l1.slice(),\
    \ b = l2.slice();\n  while (a.length && b.length) {\n    if (a[0] < b[0]) return\
    \ a.slice(1);\n    if (a[0] > b[0]) return b.slice(1)\n    a = a.slice(1);\n \
    \   b = b.slice(1)\n  }\n  return a.concat(b)\n}\n", "  var res = [],\n      i\
    \ = 0,\n      j = 0,\n      l = l1.length,\n      m = l2.length,\n      n = 0;\n\
    \n  while (i < m && j < n) {\n    if (l1[i] === l2[j]){\n      res.push(l1[i++]);\n\
    \      ++j;\n    }else{\n      n = n+1;\n    }\n  }\n\n  while (i < m){\n    res.push(l1[i++]);\n\
    \  }\n\n  while (j < n){\n    res.push(l2[j++]);\n  }\n\n  return res;\n}\n",
  "  var _common = [];\n  for (var i = 0; i < l1.length; i++){\n    _common.push(\
    \ l1[i] );\n  }\n  for (var i = 0; i < l2.length; i++){\n    _common.push( l2[i]\
    \ );\n  }\n  return _common;\n}\n", "  var out = [];\n  var common_index;\n\n\
    \  if (l1.length > l2.length) {\n    common_index = l1.length;\n  } else {\n \
    \   common_index = l2.length;\n  }\n\n  for (var i = 0; i < common_index; i++)\
    \ {\n    if (l1[i] === l2[i]) {\n      out.push(l1[i]);\n    }\n  }\n  return\
    \ out;\n}\n", "    var lcm = gcd(l1, l2);\n    var lcm2 = lcm * lcm;\n    while(lcm2\
    \ != 1){\n        if(lcm2 % l1 == 0){\n            return l1;\n        }\n   \
    \     lcm2 /= l1;\n    }\n    return lcm;\n}\n", "    var o1 = {}, o2 = {}, o,\n\
    \        l = min(min(l1.length, l2.length), -1, l1),\n        r;\n\n    for (var\
    \ i=0; i<l; i++){\n        r = [l1[i], l2[i]];\n        if (o1[r[0]] == null)\
    \ o1[r[0]] = [];\n        if (o2[r[1]] == null) o2[r[1]] = [];\n        o1[r[0]].push(r[1]);\n\
    \        o2[r[1]].push(r[0]);\n    }\n    \n    for (r in o1) \n        if (o1.hasOwnProperty(r))\
    \ \n            if (o1[r].length == o2[r].length) \n                o[r] = o1[r];\n\
    \    return o[l>l>0];\n}\n", "  var out = [];\n  var i = 0;\n  var j = 0;\n  while\
    \ (i !== l1.length && j !== l2.length){\n    if (l1[i] === l2[j]){\n      out.push(l1[i]);\n\
    \      i++;\n      j++;\n    } else if (l1[i] > l2[j]){\n      i++;\n    } else\
    \ {\n      j++;\n    }\n  }\n  while (i !== l1.length){\n    out.push(l1[i]);\n\
    \    i++;\n  }\n  while (j !== l2.length){\n    out.push(l2[j]);\n    j++;\n \
    \ }\n  return out;\n}\n", "    var result = [];\n    while(l1.length && l2.length){\n\
    \        var t1 = l1.shift();\n        var t2 = l2.shift();\n        if(t1 ==\
    \ t2){\n            result.push(t1);\n            l1.unshift(t2);\n          \
    \  l2.shift();\n        } else {\n            if(l1.length < l2.length){\n   \
    \             l1.unshift(t1);\n            } else {\n                l2.unshift(t1);\n\
    \            }\n        }\n    }\n    return result.concat(l1).concat(l2);\n};\n",
  "  var _common = [];\n  for (var i = 0; i < l1.length; i++) {\n    for (var j =\
    \ 0; j < l2.length; j++) {\n      if (l1[i] === l2[j]){\n        _common.push(l1[i]);\n\
    \      }\n    }\n  }\n  return _common;\n}\n", "    var set1 = new Set(l1),\n\
    \        set2 = new Set(l2),\n        common = [];\n\n    for(let set of [set1,\
    \ set2]){\n        if(set.size > 1){\n            common = Array.from(set);\n\
    \            break;\n        }\n    }\n\n    return common;\n}\n", "    var i,\
    \ l = Math.min(l1.length, l2.length),\n        result = [];\n        for(i = 0;\
    \ i < l; ++i){\n            if(l1.charAt(i) !== l2.charAt(i)){\n             \
    \   break;\n            }\n            result.push(l1.charAt(i));\n        }\n\
    \        return result.sort();\n    }\n\n    // >>> common(['hello', 'world'],\
    \ 'abc')\n    // ['hello', 'world']\n    // >>> common(['hello', 'world'], 'ab')\n\
    \    // ['world', 'hello']\n    // >>> common(['hello', 'world'], 'llllllllllllllllllllllllllll')\n\
    \    // ['hello']\n    // >>> common(['hello', 'world'], '...')\n    // []\n \
    \   function common(l1, l2){\n        var i, l = Math.min(l1.length, l2.length),\n\
    \            result = new Array(l);\n        for(i = 0; i < l; ++i){\n       \
    \     result[i] = l1.charAt(i) === l2.charAt(i) ? l1.charAt(i) : null;\n     \
    \   }\n        return result.filter(function(elem, pos){\n            return elem\
    \ != null;\n        }).sort();\n    }\n\n    // >>> common([], 'hello world')\n\
    \    // []\n    // >>> common([], 'hell oworld')\n    // []\n    function common(l1,\
    \ l2){\n        var i, l = Math.min(l1.length, l2.length),\n            result\
    \ = [];\n        for(i = 0; i < l; ++i){\n            if(!l1.charAt(i).match(l2.charAt(i))){\n\
    \                break;\n            }\n            result.push(l1.charAt(i));\n\
    \        }\n        return result.sort();\n    }\n\n    // >>> common([], [])\n\
    \    // []\n    function common(l1, l2){\n        var i, l = Math.min(l1.length,\
    \ l2.length),\n            result = [];\n        for(i = 0; i < l; ++i){\n   \
    \         if(l1.charAt(i) !== l2.charAt(i)){\n                break;\n       \
    \     }\n            result.push(l1.charAt(i));\n        }\n        return result.sort();\n\
    \    }\n\n    // >>> common([1, 2, 3, 4], ['1', '2', '3', '4'])\n    // [1, 2]\n\
    \    // >>> common([1, 2, 3, 4], ['1', '3', '4'])\n    // [1]\n    // >>> common([1,\
    \ 2, 3, 4], ['1', '2', '4'])\n    // [3]\n    // >>> common([1, 2, 3, 4], ['1',\
    \ '3', '4'])\n    // []\n    function common(l1, l2){\n        var i, l = Math.min(l1.length,\
    \ l2.length),\n            result = [],\n            found = null;\n        for(i\
    \ = 0; i < l; ++i){\n            if(found !== null){\n                break;\n\
    \            }\n            if(l1.charAt(i) === l2.charAt(i)){\n             \
    \   found = l1.charAt(i);\n            } else {\n                found = null;\n\
    \            }\n", "    let result = [];\n    let lLen = l1.length;\n    let lxLen\
    \ = l2.length;\n    while (lxLen > 0){\n        let item = l1[--lLen];\n     \
    \   let isIn = false;\n        for (let lx = 0; lx < lxLen; lx++){\n         \
    \   if (item === l2[lx]){\n                isIn = true;\n                break;\n\
    \            }\n        }\n        if (! isIn){\n            result.push(item);\n\
    \        }\n    }\n    return result.sort();\n}\n", "    return common.sort(l1).filter(function(item,i,array){\n\
    \        return l2.indexOf(item) == i;\n    });\n}\n", "    return l1.filter(function(e){\n\
    \        return l2.indexOf(e) !== -1\n    });\n}\n", "  if(l1.length === 0 ||\
    \ l2.length === 0) return [];\n  var f = l1.length >= l2.length ? l1 : l2,\n \
    \     l = [], l1 = f[0], l2 = f[1];\n  for(var i = 0, ii = l2.length; i < ii;\
    \ i++){\n    if(l2.indexOf(l1[i]) === -1){\n      l.push(l1[i]);\n    }\n  }\n\
    \  return l;\n}", "  var out = [];\n  for(var i = 0; i < l1.length; i++){\n  \
    \  for(var j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        out.push(l1[i]);\n\
    \        break;\n      }\n    }\n  }\n  return out;\n}\n", "  var commonIndex,\n\
    \      lcm = l1.length || 0,\n      l2 = l2.length || 0,\n      i = 0,\n     \
    \ j = 0,\n      result = [],\n      lcm = lcm  == undefined ? l1.length : lcm;\n\
    \  \n  while( i < lcm && j < l2) if((lcm = l1[i].length) != (l2 = l2[j].length))\
    \ j++; else if((lcm = l1[i].length) != (l2 = l2[j].length)) { i++; continue; }\n\
    \  \n  for(;i<lcm; i++){\n    for(;j<l2; j++){\n      if(i == lcm){ commonIndex\
    \ = j; break; }\n      if(j == l2){ commonIndex = i; break; }\n      if( l1[i]\
    \ == l2[j] && commonIndex == i ){\n        result.push(l1[i]);\n        commonIndex++;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "\tif(!l1 || !l2)\n\t\treturn [];\n\
    \tvar a = l1.length;\n\tvar b = l2.length;\n\tvar c = new Array(a);\n\tvar a1\
    \ = new Array(a);\n\tvar b1 = new Array(b);\n\twhile(a--){\n\t\tb1[b] = l1[a];\n\
    \t\tc1[a] = l1[a];\n\t\ta1[a] = l1[a];\n\t\tb1[b+1] = l1[a+1];\n\t\tc1[a+1] =\
    \ l1[a+1];\n\t\ta1[a+1] = l1[a+1];\n\t\tb++;\n\t\tc1[++a] = l2[a];\n\t\tb1[b]\
    \ = l2[a];\n\t}\n\twhile(b--){\n\t\tc1[a--] = b1[b];\n\t}\n\treturn c1.slice(0).sort(function(a,b){\n\
    \t\treturn a-b;\n\t});\n}", "    var l = l1.length;\n    for(var i = 0; i< l;\
    \ i++){\n        if(l2.indexOf(l1[i]) === -1){\n            l2.push(l1[i]);\n\
    \        }\n    }\n    return l2;\n}\n", "  return l1.filter(function(elem, idx){\n\
    \    return l2.indexOf(elem) === idx;\n  }).sort();\n}\n\nmodule.exports = common;\n\
    \n},{}],13:[function(require,module,exports){\nvar Campground = require('./campground');\n\
    var utils = require('../utils');\n", "    var obj = {};\n    var common = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        obj[l1[i]] = true;\n    }\n\
    \    for(var i = 0; i < l2.length; i++){\n        if (common.length){\n      \
    \      if (obj[l2[i]]){\n                common.push(l2[i]);\n               \
    \ delete obj[l2[i]];\n            }\n        }else{\n            common.push(l2[i]);\n\
    \        }\n    }\n    return common;\n}", "  var hash = {}, newList = [], dupsFound\
    \ = {}, l1len = l1.length, l2len = l2.length;\n  if(l1len > l2len) l2len = l1len;\n\
    \  for(var i = 0;i < l1len;i++){\n    var item1 = l1[i];\n    if(hash[item1]){\n\
    \      newList.push(item1);\n      hash[item1]++;\n    }else{\n      hash[item1]\
    \ = 1;\n      newList.push(item1);\n    }\n  }\n  for(var i = 0;i < l2len;i++){\n\
    \    var item2 = l2[i];\n    if(!hash[item2]){\n      newList.push(item2);\n \
    \     hash[item2] = 1;\n    }else{\n      if(hash[item2] > 1){\n        dupsFound[item2]\
    \ = 1;\n      }\n    }\n  }\n  if(dupsFound){\n    return l1;\n  }\n  return newList;\n\
    }\n", "    var l = [];\n    var n1 = l1.length;\n    var n2 = l2.length;\n\n \
    \   if (n1 === 0) {\n        return l2;\n    }\n    if (n2 === 0) {\n        return\
    \ l1;\n    }\n\n    while (n1 < n2) {\n        var l1 = l1.pop();\n        l.push(l1);\n\
    \    }\n\n    while (n1 > n2) {\n        var l2 = l2.pop();\n        l.push(l2);\n\
    \    }\n\n    l.sort(function(a,b){\n        return a - b;\n    });\n\n    return\
    \ l;\n}\n", "\tvar result = [];\n\tfor(var i=0; i<l1.length; i++){\n\t\tfor(var\
    \ j=0; j<l2.length; j++){\n\t\t\tif(l1[i] == l2[j]){\n\t\t\t\tresult.push(l1[i]);\n\
    \t\t\t\tresult.push(l2[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }", "    var out = [];\n    out[0] = [];\n    out[1] = [];\n    for(var i = 0,\
    \ len = l1.length; i < len; i++){\n        for(var j = 0; j < len; j++){\n   \
    \         if(l1[i] === l2[j]){\n                out[0].push(l1[i]);\n        \
    \        out[1].push(l2[j]);\n                break;\n            }\n        }\n\
    \    }\n    return out;\n};\n", "    var result = [];\n    var i;\n\n    for (i\
    \ = 0; i < l1.length && i < l2.length; i++) {\n        if (l1.charAt(i) === l2.charAt(i))\
    \ {\n            result.push(l1.charAt(i));\n        }\n    }\n\n    for (i =\
    \ l1.length; i < l2.length; i++) {\n        result.push(l2.charAt(i));\n    }\n\
    \n    return result;\n}\n", "\tl1 = l1 || [];\n\tl2 = l2 || [];\n\tvar i = l1.length;\n\
    \tvar j;\n\twhile(i > 0 && l2.length > 0){\n\t\tj = l2.indexOf(l1[0]); // indexOf\
    \ returns the first index of item within the array, so it never returns -1\n\t\
    \tif(j < 0){\n\t\t\tbreak;\n\t\t}\n\t\tl1.shift();\n\t\tl2.pop();\n\t}\n\treturn\
    \ l1;\n}\n", "  var result = [];\n  for (var i = 0; i < l1.length; i++) {\n  \
    \  if (l1.indexOf(l2[i]) !== -1) {\n      result.push(l1[i]);\n    }\n  }\n  return\
    \ result;\n}\n", "\tlet unique = [];\n\t\n\tfor(let i = 0, len = l1.length; i\
    \ < len; i++){\n\t\tlet l1e = l1[i];\n\t\tfor(let j = 0, len2 = l2.length; j <\
    \ len2; j++){\n\t\t\tlet l2e = l2[j];\n\t\t\t\n\t\t\tif((l1e === l2e) && (!unique.includes(l1e))){\n\
    \t\t\t\tunique.push(l1e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn unique;\n\
    }\n", "  var _common = [],\n      len1 = l1.length,\n      len2 = l2.length,\n\
    \      i = 0, j = 0;\n\n  while (i < len1 && j < len2) {\n    if (l1[i] === l2[j])\
    \ {\n      _common.push(l1[i]);\n      i++;\n      j++;\n    } else if (l1[i]\
    \ < l2[j]){\n      i++;\n    } else {\n      j++;\n    }\n  }\n\n  return _common;\n\
    }\n", "    l1 = l1 || [];\n    l2 = l2 || [];\n    var result = [],\n        l1Length\
    \ = l1.length,\n        l2Length = l2.length,\n        l1Index = 0,\n        l2Index\
    \ = 0,\n        count = commonLerp(l1, l2, result) || 0,\n        diff = l1.length\
    \ - l2Length;\n    while(diff--){\n        result.push(l1[l1Index++]);\n    }\n\
    \    return result;\n};\nvar commonLerp = function(l1, l2, result){\n    var left\
    \ = l1, right = l2, mid, diff, index = -1;\n    while(++index < l1){\n       \
    \ mid = index * 2;\n        diff = mid<left?mid<right?(mid-index)|1:(index-left)|2:mid>right?(index-left)|1:mid>left?mid-index:mid|0;\n\
    \        if(diff){\n            result.push(index);\n        }\n    }\n    return\
    \ result;\n};", "    var _common = [];\n    l1.forEach(function(e1){\n       \
    \ _common.push((l2.indexOf(e1) !== -1) ? e1 : undefined);\n    });\n    return\
    \ _common.filter(Boolean);\n}\n", "\treturn l1.filter(function(item){\n\t\treturn\
    \ l2.indexOf(item) !== -1;\n\t});\n}\n", "    if(l1.length != l2.length){\n  \
    \      throw new Error('not the same size')\n    }\n\n    var res = []\n    for(var\
    \ i = 0, l = l1.length; i < l; i++){\n        var a = l1[i];\n        var b =\
    \ l2[i];\n        if(a === b){\n            continue;\n        }\n        for(var\
    \ j = 0, m = Math.min(a, b); j < m; j++){\n            if(b[j] === a[j]){\n  \
    \              res.push(a[j])\n            }\n        }\n    }\n    return res;\n\
    }\n\nmodule.exports = common;\n\n", "    return _.filter(l1, function(el){ return\
    \ _.indexOf(_.filter(l2, function(el2){ return el == el2; })) == -1; }); \n}\n",
  "    var n1 = l1.length,\n        n2 = l2.length,\n        diff, n,\n        result\
    \ = [];\n    //To store the result\n    for (n = 0; n < n1 && n < n2; n++) {\n\
    \        diff = l1[n] - l2[n];\n        if (diff === 0) {\n            result.push(l2[n]);\n\
    \        }\n        else if (diff < 0) {\n            result.push(l1[n]);\n  \
    \      }\n        else {\n            result.push(l2[n]);\n        }\n    }\n\
    \    return result.sort(function(a, b){return a - b;});\n}", "    var out = [];\n\
    \    out[0] = 0;\n    var _common = function(l1, l2, out) {\n        for(var j\
    \ = 1; j < l2.length; j++) {\n            var i1 = l2.length - j;\n          \
    \  var i2 = l1.length - j;\n            var c = 0;\n            var i = 0;\n \
    \           while( i2 >= 0 && c++ < i1 ) {\n                if( l1[i] === l2[j]\
    \ ) {\n                    out[j] = l1[i];\n                    i++;\n       \
    \             j++;\n                } else {\n                    break;\n   \
    \             }\n            }\n            if(i >= l1.length){\n            \
    \    if(c++ < i1){\n                    out[j] = l1[i1 - c];\n               \
    \     j++;\n                } else {\n                    out[j] = l1[l1.length\
    \ - 1];\n                }\n            }\n        }\n        return out;\n  \
    \  };\n    _common(l1, l2, out);\n    return out;\n}\n", "    var set1 = new Set(l1);\n\
    \    var set2 = new Set(l2);\n    return [...set1].filter(item => set2.has(item));\n\
    }\n", "\tlet list = new Set(l1);\n\tl2.forEach(function(value){\n\t\tlist.delete(value)\n\
    \t});\n\treturn Array.from(list)\n}", "\tvar o1, o2;\n\to1 = [];\n\to2 = [];\n\
    \twhile(l1.length > 0 && l2.length > 0){\n\t\tif(l1[0] > l2[0]){ \n\t\t\to1.push(l1[0]);\n\
    \t\t\tl1.shift();\n\t\t}else{\n\t\t\to2.push(l2[0]);\n\t\t\tl2.shift();\n\t\t\
    }\n\t}\n\treturn l1.length === 0 ? o1 : o2;\n}", "  var set1 = new Set(l1), set2\
    \ = new Set(l2);\n  return Array.from(set1.keys()).sort().filter(function(el){\n\
    \    return set2.has(el);\n  });\n}\n", "  var out = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n     \
    \   out.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return out;\n}\n",
  "  var a = l1.concat(), b = l2.concat();\n  var result = [];\n  a.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  b.sort(function(a, b){\n    return a - b;\n\
    \  });\n  for(var i = 0; i < a.length; i++){\n    if(b.indexOf(a[i]) !== -1){\n\
    \      result.push(a[i]);\n    }\n  }\n  return result;\n}\n\n", "\tlet i1=0,\
    \ i2=0, i1l=0, i2l=0, l1l=0, l1r=0, l2r=0, l2l=0;\n\twhile(i1<l1.length && i2<l2.length){\n\
    \t\tl1l = l1[i1++];\n\t\tl2l = l2[i2++];\n\t\tif((l1l === l2l) && (l1l !== 0)){\n\
    \t\t\tl1r += l1l;\n\t\t\tl2r += l2l;\n\t\t} else {\n\t\t\tif((l1l < l2l) || (l1l\
    \ === l2l && l1l > 0)){\n\t\t\t\tl2r += l2l;\n\t\t\t} else {\n\t\t\t\tl1r += l1l;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn [l1r, l2r];\n}\n\n", "  return unique(l1.filter(function(element,\
    \ index, self) {\n    return self.indexOf(element) == index;\n  }).concat(l2.filter(function(element,\
    \ index, self) {\n    return self.indexOf(element) == index;\n  })));\n}\n", " \
    \ let l = [].concat(l1, l2)\n  return [...new Set(l)].sort((a,b)=>a.localeCompare(b))\n\
    }\n", "    var out = [],\n        li = 0,\n        ri = 0,\n        i, j, k, l;\n\
    \    for(i = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length; j++){\n\
    \            if((k = l1[i]) === (l2 = l2[j])){\n                out.push(k);\n\
    \                i++;\n                j++;\n            } else if(k !== l2){\n\
    \                if(k < l2){\n                    out.push(k);\n             \
    \       l++;\n                }else{\n                    while(l2 < k){\n   \
    \                     out.push(l2++);\n                    }\n               \
    \     li = l1;\n                    ri = l2;\n                }\n            \
    \    break;\n            }\n        }\n        if(l1 > l2){\n            break;\n\
    \        }\n    }\n    return out;\n}\n", "    var out = []\n    var i = 0\n \
    \   var j = 0\n    var n = l1.length\n    while(i<n && j<n){\n        if(l1[i]===l2[j]){\n\
    \            out.push(l1[i])\n            ++i\n            ++j\n        }else\
    \ if(l1[j]===l2[i]){\n            ++j\n        }else{\n            i++\n     \
    \   }\n    }\n    return out\n}\n", "  var l1 = l1 || [],\n      l2 = l2 || [],\n\
    \      l = [],\n      n1 = l1.length,\n      n2 = l2.length,\n      i = 0, j =\
    \ 0;\n\n  for(; i < n1; i++){\n    for(; j < n2; j++){\n      if(l1[i] === l2[j]){\n\
    \        l.push(l1[i]);\n      }\n    }\n  }\n\n  return l;\n}", "  return [].concat.apply([],\
    \ l1.filter(function(x){return l2.indexOf(x) != -1;}));\n}\n", "  var result =\
    \ [];\n  l1 = l1 || [];\n  l2 = l2 || [];\n  var l10 = 0;\n  var l1 = l1 || [];\n\
    \  var l2 = l2 || [];\n  var l10 = 0;\n  while(l1.length > 0 && l2.length > 0){\n\
    \    if(l1[0] === l2[0]){\n      if(l10 === 0) l10 = l1.length;\n      l1.shift();\n\
    \      l2.shift();\n    }else if(l10 === l1.length){\n      l10 = l2.length;\n\
    \    }else if(l10 === l2.length){\n      l10 = l1.length;\n    }else{\n      break;\n\
    \    }\n  }\n  while(l1.length > 0){\n    result.push(l1.shift());\n  }\n  while(l2.length\
    \ > 0){\n    result.push(l2.shift());\n  }\n  return result;\n}", "    var _common\
    \ = [];\n    _each(l1, function(el){\n        for(var i in l2){\n            if(l2.hasOwnProperty(i)){\n\
    \                if(l1.indexOf(i) > -1){\n                    _common.push(l2.indexOf(i));\n\
    \                }\n            }\n        }\n    });\n    return _common;\n}\n",
  "    var common = l1[0];\n    for (var i=1;i<l1.length;i++){\n        if (l2[0]==l1[i]){\n\
    \            common = l1[i];\n        }\n    }\n    return common;\n}\n", "  var\
    \ c = [];\n  for(var i=0,l=Math.min(l1.length,l2.length);i<l;i++){\n    c.push(\
    \ l1[i]===l2[i] ? l1[i] : l1[i] === l2[i] && l2[i] || l1[i] === l2[i] && l1[i]);\n\
    \  }\n  return c.length? c.sort() : [];\n}\n", "    var l10 = 0, l11 = 0, l21\
    \ = 0, l22 = 0, l3 = 0, l32 = 0, l4 = 0, l42 = 0, l5 = 0, l52 = 0, l6 = 0, l64\
    \ = 0, l7 = 0;\n    l1 = l1 || [];\n    l2 = l2 || [];\n    for(var i = 0, len\
    \ = l1.length; i < len; i++){\n        l10 = (l10 * l1) + (l1[i] || 0);\n    \
    \    l11 = (l11 * l1) + (l1[i] || 0);\n    }\n    for(var i = 0, len = l2.length;\
    \ i < len; i++){\n        l21 = (l21 * l2) + (l2[i] || 0);\n        l22 = (l22\
    \ * l2) + (l2[i] || 0);\n    }\n    for(len = 0; len < l1.length; i++){\n    \
    \    l3 = (len * l3) + (l1[i] || 0);\n        l32 = (l32 * l3) + (l1[i] || 0);\n\
    \    }\n    for(len = 0; len < l2.length; i++){\n        l4 = (len * l4) + (l2[i]\
    \ || 0);\n        l42 = (l42 * l4) + (l2[i] || 0);\n    }\n    for(len = 0; len\
    \ < l1.length; i++){\n        l5 = (len * l5) + (l1[i] || 0);\n        l52 = (l52\
    \ * l5) + (l1[i] || 0);\n    }\n    for(len = 0; len < l2.length; i++){\n    \
    \    l6 = (len * l6) + (l2[i] || 0);\n        l64 = (l64 * l6) + (l2[i] || 0);\n\
    \    }\n    for(len = 0; len < l1.length; i++){\n        l7 = (len * l7) + (l1[i]\
    \ || 0);\n    }\n    for(len = 0; len < l2.length; i++){\n        l7 = (len *\
    \ l7) + (l2[i] || 0);\n    }\n    return l7 + l64;\n}\n", "  var lt = [];\n  var\
    \ eq = [];\n  var same = [];\n  l1 = l1.filter(function(x){return !~eq.indexOf(x);});\n\
    \  l2 = l2.filter(function(x){return !~eq.indexOf(x);});\n\n  for(var i=0; i<l1.length;\
    \ i++){\n    for(var j=0; j<l2.length; j++){\n      if(l1[i] === l2[j]){\n   \
    \     lt.push(l1[i]);\n        eq.push(l2[j]);\n        same.push(l1[i]);\n  \
    \      break;\n      }else if(l2[j] === l1[i]){\n        lt.push(l2[j]);\n   \
    \     eq.push(l1[i]);\n        same.push(l2[j]);\n      }\n    }\n  }\n  return\
    \ [same.length ? same : lt, eq];\n}\n", "    var f = function(x, y) {\n      \
    \  return x === y ? 0 : (x > y ? 1 : -1);\n    };\n    var c = [];\n    var n1\
    \ = l1.length, n2 = l2.length;\n    while(n1--) {\n        c.push(n1 > n2 ? l1[n1]\
    \ : l2[n1 - n2]);\n    }\n    c.sort(f);\n    return c;\n}", "  let out = []\n\
    \  for (let i = 0; i < l1.length; i++){\n    for (let j = 0; j < l2.length; j++){\n\
    \      if (l1[i] === l2[j]){\n        out.push(l1[i])\n        break\n      }\n\
    \    }\n  }\n  return out\n}\n", "    var out = [];\n    var i, l;\n    for(i=0,\
    \ l=l1.length; i<l; i++){\n        out.push(l1[i]);\n    }\n    for(i=0, l=l2.length;\
    \ i<l; i++){\n        out.push(l2[i]);\n    }\n    return out;\n}\n", "  var set1\
    \ = new Set(l1);\n  var set2 = new Set(l2);\n  var common = [];\n  for(let i =\
    \ 0; i < Math.min(set1.size, set2.size); i++){\n    if(set1.has(i) && set2.has(i)){\n\
    \      common.push(i);\n    }\n  }\n  return common;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < l1.length; i++) {\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j])\n                result.push(l1[i]);\n\
    \        }\n    }\n    return result;\n}\n", "\tlet arr = [];\n\tlet c = 0;\n\t\
    for(let i = 0; i < l1.length; i++){\n\t\tfor(let j = 0; j < l2.length; j++){\n\
    \t\t\tif(l1[i] === l2[j]){\n\t\t\t\tarr.push(l1[i]);\n\t\t\t\tc++;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn c === l1.length? arr : null;\n}\n", "  var res =\
    \ [];\n  for(var i = 0; i < l1.length; i++){\n    for(var j = 0; j < l2.length;\
    \ j++){\n      if(l1[i] === l2[j]){\n        res.push(l1[i]);\n      }\n    }\n\
    \  }\n  return res;\n}\n", "  var c = [];\n  var i = 0;\n  var l = l1.length;\n\
    \  if(l2.length === 0) { return l1;}\n  if(l1.length === 0) { return l2;}\n  while(i\
    \ < l){\n    if(l1[i] === l2[i]) {\n      c.push(l1[i]);\n      l1.splice(i, 1);\n\
    \      l2.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  return c;\n}",
  "    var result = [];\n    while (l1.length > 0 && l2.length > 0) {\n        if\
    \ (l1[0] === l2[0]) {\n            l1.shift();\n            l2.shift();\n    \
    \        result.push(l1[0]);\n        }\n        else if (l1[0] < l2[0]) {\n \
    \           l1.shift();\n        }\n        else {\n            l2.shift();\n\
    \        }\n    }\n    return result;\n};\n", "  return Array.prototype.indexOf.call(l1,\
    \ l2);\n}\n},{}],243:[function(require,module,exports){", "  var result = [];\n\
    \  l1 = l1.slice().sort(function(a,b){return a-b});\n  l2 = l2.slice().sort(function(a,b){return\
    \ a-b});\n  var k = 0;\n  while (l2.length > 0 && k < l1.length){\n    if (l1[k]\
    \ === l2[k]){\n      result.push(l2[k]);\n      l2.splice(k, 1);\n    }else{\n\
    \      k++;\n    }\n  }\n  return result;\n}\n", "    var i, j, min = 0;\n   \
    \ if(l1.length < l2.length){\n        l = l1;\n        i = 1;\n    }else{\n  \
    \      l = l2;\n        i = 2;\n    }\n    for(i = 0; i < l.length; i++){\n  \
    \      for(j = 0; j < l.length; j++){\n            if(l[i] === l[j]){\n      \
    \          if(i !== j){\n                    min = Math.min(min, {\n         \
    \               i: i,\n                        j: j\n                    });\n\
    \                }\n            }\n        }\n    }\n    return min;\n}\n", " \
    \   var l1 = l1 || [], l2 = l2 || [], i = 0, j, k;\n    for(i = 0, j = 0, k =\
    \ 0; i < l1.length; i++){\n        for(; j < l2.length; j++){\n            if(i\
    \ == l[j].index) k = j;\n        }\n        if(k == l1.length) break;\n      \
    \  l1[i] = {index: i, value: l1[i]};\n        l2[j] = {index: j, value: l2[j]};\n\
    \    }\n    l1.sort(function(a, b){\n        return a.index - b.index;\n    });\n\
    \    l2.sort(function(a, b){\n        return a.index - b.index;\n    });\n   \
    \ for(; l1.length > 0 && l2.length > 0; l1.pop(), l2.pop());\n    return l1;\n\
    }\nmodule.exports = common;\n\n", "    var out = [];\n    while(l1.length > 0\
    \ && l2.length > 0){\n        if(l1[0] < l2[0]){\n            l1.shift();\n  \
    \      }else{\n            l2.shift();\n        }\n    }\n    l1 = l1.concat(l2);\n\
    \    var out2 = l1.filter((value, index) => l2.indexOf(value) === index);\n  \
    \  while(out2.length > 0){\n        l2.push(out2.shift());\n    }\n    return\
    \ out2.concat(l1).filter((value, index) => l2.indexOf(value) === index);\n}\n",
  "  var result = [];\n  l1 = l1.filter(function(elem){\n    return l2.indexOf(elem)\
    \ === -1;\n  });\n  l2 = l2.filter(function(elem){\n    return l1.indexOf(elem)\
    \ === -1;\n  });\n  l1.forEach(function(elem){\n    var index = l2.indexOf(elem);\n\
    \    if (index > -1){\n      result.push(elem);\n      l2.splice(index, 1);\n\
    \    }\n  });\n  l2.forEach(function(elem){\n    var index = l1.indexOf(elem);\n\
    \    if (index > -1){\n      result.push(elem);\n      l1.splice(index, 1);\n\
    \    }\n  });\n  return result;\n};\n", "    var l = [];\n    for(var i = 0, len\
    \ = l1.length; i < len; i++){\n        if(l1.indexOf(l2[i]) === -1) l.push(l2[i]);\n\
    \    }\n    return l;\n}\n", "  var set1 = [], set2 = [];\n  for(var i = 0, l\
    \ = Math.min(l1.length, l2.length); i < l; i++){\n    if(!inArray(l1[i], l2)){\n\
    \      set1.push(l1[i]);\n    }\n    else if(!inArray(l2[i], l1)){\n      set2.push(l2[i]);\n\
    \    }\n  }\n  return [set1, set2];\n}\n", "    var ret = [];\n    while(l1.length\
    \ > 0 || l2.length > 0){\n        if(l1[0] <= l2[0]){\n            ret.push(l1.shift());\n\
    \        } else {\n            ret.push(l2.shift());\n        }\n    }\n    return\
    \ ret;\n}\n", "  return sort(unique(l1.concat(l2)));\n}\n", "\tvar res = [];\n\
    \tfor(var i = 0, len = l1.length; i < len; i++){\n\t\tvar el1 = l1[i], el2 = l2[i],\
    \ el1Ind = indexOf(el1, l2), el2Ind = indexOf(el2, l2);\n\t\twhile(el1Ind < el2Ind){\n\
    \t\t\tres.push(el1);\n\t\t\tel1Ind++;\n\t\t}\n\t\twhile(el2Ind < el1Ind){\n\t\t\
    \tres.push(el2);\n\t\t\tel2Ind++;\n\t\t}\n\t}\n\treturn res;\n}\n", "  return\
    \ l1.filter(function(elem, pos, self){\n    return self.indexOf(elem) == pos;\n\
    \  }).concat(l2).filter(function(elem, pos, self){\n    return self.indexOf(elem)\
    \ == pos;\n  });\n}\n", "    for(var i = 0, len = Math.min(l1.length, l2.length);\
    \ i < len; i++){\n        if(l1[i]===l2[i]){\n            return l1[i];\n    \
    \    }\n    }\n\n    return -1;\n}\n", "  var o1 = [], o2 = [];\n  for(var i =\
    \ 0, len = l1.length, len2 = l2.length; i < len && i < len2; i++){\n    if(l1[i]\
    \ === l2[i]){ o1.push(l1[i]); o2.push(l2[i]); }\n  }\n  return o1.concat(o2).sort();\n\
    }\n", "    var _len = l1.length, l2 = l2.length,\n        arr = [],\n        i,\
    \ j, si, sj;\n    for(i = 0; i < _len; i++){\n        si = l1[i];\n        for(j\
    \ = i + 1; j < _len; j++){\n            sj = l2[j];\n            if(si === sj){\n\
    \                arr.push(si);\n                break;\n            }else if(j\
    \ === _len - 1){\n                arr.push(sj);\n            }\n        }\n  \
    \  }\n    return arr;\n}\n", "  return l1.filter(function(elem, pos, self) {\n\
    \    return self.indexOf(elem) == pos;\n  }).sort(function(a, b) {\n    return\
    \ a - b;\n  });\n}\n", "    var out = [];\n    var item;\n    var i;\n    var\
    \ j;\n    for(i = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length; j++){\n\
    \            if(l1[i] === l2[j]){\n                item = [l1[i], l2[j]];\n  \
    \              out.push(item);\n                break;\n            }\n      \
    \  }\n    }\n    return out;\n}\n", "  return uniq(commonSort(uniq(sort(l1)),\
    \ uniq(sort(l2))))\n}\n", "    l1 = l1 || [];\n    l2 = l2 || [];\n    var result\
    \ = [], i = 0, j = 0;\n    var n1 = l1.length;\n    var n2 = l2.length;\n    while(i<n1\
    \ && j<n2){\n        if(l1[i] === l2[j]){\n            result.push(l1[i]);\n \
    \           i++;\n            j++;\n        }else if(l1[i] < l2[j]){\n       \
    \     i++;\n        }else{\n            j++;\n        }\n    }\n    return result;\n\
    }\n\nmodule.exports = {\n    common: common\n};\n\n},{}],3:[function(require,module,exports){\n\
    \"use strict\";\n\nmodule.exports = function( common ){\n    var isString = function(\
    \ s ){\n        return typeof s === \"string\";\n    };\n\n    var isObject =\
    \ function( s ){\n        return typeof s === \"object\" && !Array.isArray(s);\n\
    \    };\n\n    var isArray = function( s ){\n        return Array.isArray(s);\n\
    \    };\n\n    var isNumber = function( s ){\n        return typeof s === \"number\"\
    ;\n    };\n\n    var isInteger = function( s ){\n        return typeof s === \"\
    number\" && s % 1 === 0;\n    };\n\n    var isUndefined = function( s ){\n   \
    \     return typeof s === \"undefined\";\n    };\n\n    return function( s1, s2\
    \ ){\n        if( !isString(s1) ){\n            s1 = \"\";\n        }\n\n    \
    \    if( !isString(s2) ){\n            s2 = \"\";\n        }\n\n        if( s1\
    \ === s2 ){\n            return false;\n        }\n\n        if( isString(s1)\
    \ && s1.length === 0 && s2.length === 0 ){\n            return true;\n       \
    \ }\n\n        if( !isString(s1) || !isString(s2) ){\n            return false;\n\
    \        }\n\n        if( s1 === \"\" ){\n            return true;\n        }\n\
    \n        if( s2 === \"\" ){\n            return false;\n        }\n\n       \
    \ if( s1 === s2 ){\n            return true;\n        }\n\n        if( s1.length\
    \ !== s2.length ){\n            return false;\n        }\n\n        var l1 = s1.length;\n\
    \        var l2 = s2.length;\n        var result = true;\n\n        if( l1 ===\
    \ 0 ){\n            return l2 === 0;\n        }\n\n        if( l2 === 0 ){\n \
    \           return false;\n        }\n\n        if( l1 === 1 ){\n            return\
    \ common( s1, s2 );\n        }\n\n        if( l2 === 1 ){\n            return\
    \ common( s2, s1 );\n        }\n\n        for( var i = 0 ; (result && i < l1)\
    \ && (l2 - i) >= 0 ; i++ ){\n            result = result && common( s1[i], s2[i]\
    \ );\n        }\n\n        return result;\n    };\n\n};\n\n},{}],4:[function(require,module,exports){\n\
    \"use strict\";\n\nmodule.exports = function( common ){\n", "  var i, x = 0, y\
    \ = 0, common = [];\n  if(l1.length != l2.length)\n    throw \"Arguments size\
    \ are different.\";\n  for(i=0; i<l1.length; i++){\n    if(l1[i] != l2[i])\n \
    \     common[x++] = l1[i];\n  }\n  common = common.filter(function(elem, index,\
    \ array) {\n    return array.indexOf(elem) == index;\n  });\n  return common;\n\
    }\n</code>\nThis should be the fastest one.\n<|/ a tags=arrays,duplicates,sorting,algorithm\
    \ |>\n<| c |>\nThe above solution only returns common elements. How would you\
    \ return the original arrays?\n<|/ c |>\n<| c |>\nYou have the original arrays\
    \ inside the function call `common` . Try this : `common([5, 3, 2, 8], [3, 2]);`\n\
    <|/ c |>\n<| a tags=arrays,duplicates,sorting,algorithm |>\nMy solution takes\
    \ O(n) space\n<code>\nvar uniqueCommonItems = function (arr1, arr2) {\n    let\
    \ result = [];\n    let arrayLength1 = arr1.length;\n    let arrayLength2 = arr2.length;\n\
    \    let i1 = 0;\n    let i2 = 0;\n    let j = 0;\n    for (; i1 < arrayLength1;\
    \ i1++) {\n        for (; i2 < arrayLength2; i2++) {\n            if (arr1[i1]\
    \ === arr2[i2]) {\n                j++;\n            } else if (j > 0) {\n   \
    \             result.push(arr1[i1]);\n                j = 0;\n            }\n\
    \        }\n    }\n    return result;\n};\n</code>\n<|/ a dscore=4 |>\n<| a tags=arrays,duplicates,sorting,algorithm\
    \ dscore=4 |>\nThe method described in Kasramvd's answer is the way to go.\nHere\
    \ is an alternate method based on sorting the arrays first:\n<code>", "  var set1\
    \ = {}, set2 = {}, common = [];\n  for (var i = 0; i < l1.length; i++){\n    if\
    \ (!set1[l1[i]]) set1[l1[i]] = [];\n    set1[l1[i]].push(l1[i]);\n  }\n  for (i\
    \ = 0; i < l2.length; i++){\n    if (!set2[l2[i]]) set2[l2[i]] = [];\n    set2[l2[i]].push(l2[i]);\n\
    \  }\n  for (var key in set1) {\n    for (var i = 0; i < set1[key].length; i++){\n\
    \      var si = set1[key][i], sil = set2[si], j = 0, l = sil.length, flag = false;\n\
    \      while (j < l && si[j] == sil[j]) {\n        flag = true;\n        j++;\n\
    \      }\n      if (flag) {\n        common.push(si[i]);\n      }\n    }\n  }\n\
    \  return common;\n}\n", "  var o = {},\n      oi = 0,\n      li = l1.length,\n\
    \      l2 = l2.length,\n      i = 0,\n      j = 0;\n\n  // Compare list lengths,\
    \ find >= and < to quit early.\n  if (li < l2) {\n    for(; i < l1; i++){\n  \
    \    if (l2.indexOf(l1[i]) < 0){\n        o[o.length] = l1[i];\n      }\n    }\n\
    \  } else if (li > l2) {\n    for(; j < l2; j++){\n      if (l1.indexOf(l2[j])\
    \ < 0){\n        o[o.length] = l2[j];\n      }\n    }\n  }\n\n  // Remove duplicates.\n\
    \  for(i = 0, li = o.length; i < li; i++){\n      o[o.length] = o[--li];\n  }\n\
    \n  // Sort the array.\n  o.sort(function(a, b){\n    return a - b;\n  });\n \
    \ return o;\n}\n", "  var _common = [];\n  for(var i = 0; i < l1.length; i++){\n\
    \    for(var j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n       \
    \ _common.push(l1[i]);\n        break;\n      }\n    }\n  }\n  return _common;\n\
    }\n", "\tvar l = l1.length,\n\t\tout = [],\n\t\ti, j, k, l2, l21l, l21l2;\n\t\
    for(i = 0; i < l; i++){\n\t\tl2 = l2[i] || l2[0];\n\t\tl21l = l2[1].length;\n\t\
    \tfor(j = 0; j < l21l; j++){\n\t\t\tl21 = l2[1][j];\n\t\t\tl21l2 = l21.length;\n\
    \t\t\tfor(k = j; k < l21l2; k++){\n\t\t\t\tif(!l21 || !l2[1][k]){\n\t\t\t\t\t\
    continue;\n\t\t\t\t}\n\t\t\t\tif(l21l !== l2[1][k].length){\n\t\t\t\t\tcontinue;\n\
    \t\t\t\t}\n\t\t\t\tif(l2[0] === l2[1][k][0]){\n\t\t\t\t\tif(l21l === l2[1][k].length){\n\
    \t\t\t\t\t\tout.push([l2[0], l2[1][k]]);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\
    \t\t\tif(l2[1][k][l21l] !== l2[1][k][l21l - 1]){\n\t\t\t\t\t\t\tout.push([l2[0],\
    \ l2[1][k]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    return out;\n}\n", "  var i, result = [];\n  for(i = 0; i < l1.length; i++){\n\
    \    if(l1.indexOf(l2[i]) < 0) result.push(l1[i]);\n  }\n  return result;\n}\n",
  "    if(!l1.length || !l2.length) return [];\n    var i, j, out = [];\n    for(i\
    \ = 0; i < l1.length; i++){\n        for(j = 0; j < l2.length; j++){\n       \
    \     if(l1[i] === l2[j]){\n                out.push(l1[i]);\n               \
    \ break;\n            }\n        }\n    }\n    return out;\n}", "  var i,\n  \
    \    ilen=l1.length,\n      j=ilen,\n      jlen=l2.length,\n      result = [],\n\
    \      k = 0,\n      x;\n  for(i=0; i<ilen; i++){\n    while((x=l1[i])==(x &&\
    \ l2[k])){\n      result.push(x);\n      k++;\n    }\n  }\n  return result;\n\
    }\n", "    var result = [];\n    for(var i = 0; i < Math.min(l1.length, l2.length);\
    \ i++){\n        if(l1[i] === l2[i]){\n            result.push(l1[i]);\n     \
    \   }\n    }\n    return result;\n}\n", "  var a = l1.slice(),\n      b = l2.slice(),\n\
    \      c = new Set(),\n      d = new Set(),\n      e,\n      i,\n      j;\n\n\
    \  while (a.length && b.length) {\n    e = a.shift();\n    i = b.shift();\n  \
    \  c.add(e);\n    d.add(e);\n    if (c.size > d.size) a = a, b = b, c.clear(),\
    \ d.clear();\n    else if (a.length == b.length) d.add(a), a = a, b = b, c.clear(),\
    \ d.clear();\n  }\n  while (d.length) {\n    d.pop();\n  }\n\n  while (a.length)\
    \ {\n    i = a.shift();\n    j = b.shift();\n    if (c && c.has(i) && d.has(j))\
    \ continue;\n    c.add(i);\n    d.add(j);\n    if (c && c.size == d.size) break;\n\
    \  }\n\n  if (b.length) while (b.pop()) {}\n  return c;\n}\n", "    var result\
    \ = [];\n    var inter = [];\n    var i, j, l;\n\n    for (i = 0, l = Math.min(l1.length,\
    \ l2.length); i < l; i++) {\n        for(j = 0, l = Math.min(l1.length, l2.length);\
    \ j < l; j++) {\n            if (l1[i] === l2[j]){\n                if (inter.indexOf(l1[i])\
    \ < 0) inter.push(l1[i]);\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \          break;\n            }\n        }\n    }\n    return result;\n}\n",
  "  l1 = l1||[]\n  l2 = l2||[]\n  var a = []\n  for(var i = 0; i < l1.length; i++)\
    \ a.push(l1[i])\n  for(var i = 0; i < l2.length; i++) a.push(l2[i])\n  return\
    \ common.sort(common.uniq(a))\n}", "  var result = [];\n  l1 = l1.concat([]);\n\
    \  l2 = l2.concat([]);\n  while(l1.length > 0 && l2.length > 0){\n    if(l1[0]==l2[0]){\n\
    \      result.push(l1[0]);\n      l1.splice(0, 1);\n      l2.splice(0, 1);\n \
    \   }else{\n      if(l1[0] < l2[0]){\n        l1.shift();\n      }else{\n    \
    \    l2.shift();\n      }\n    }\n  }\n  return result;\n}\n", "    var result\
    \ = [];\n    var len = Math.min(l1.length, l2.length);\n    for(var i = 0; i <\
    \ len; i++){\n        if(l1[i] === l2[i]){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  if(l1.length != l2.length) return\
    \ false;\n  var x = l1[0];\n  var found = false;\n  for(var i=0;i<l1.length;i++){\n\
    \    if(x === l2[i]){\n      found = true;\n      break;\n    }else{\n      x\
    \ = l2[i];\n    }\n  }\n  return found;\n}\n", "  var common;\n  for (var i =\
    \ 0, n = l1.length, m = l2.length; i < n; i++) {\n    if (common == undefined)\
    \ common = i;\n    if (l1[i] != l2[i]) break;\n  }\n  return l1[common];\n}\n\
    },{}],16:[function(require,module,exports){\nexports.read = function (buffer,\
    \ offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen -\
    \ 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n\
    \  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset\
    \ + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits\
    \ += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits\
    \ -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n\
    \  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\
    \n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return\
    \ m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n\
    \    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\
    \nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var\
    \ e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n\
    \  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2,\
    \ -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var\
    \ s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\
    \n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n\
    \    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n  \
    \  if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n\
    \    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value +=\
    \ rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= ", "    var out = [];\n\
    \    var i = 0, j = 0;\n    var n = Math.max(l1.length, l2.length);\n    while(i\
    \ < n && j < n){\n        if(l1[i] === l2[j]){\n            out.push(l1[i++]);\n\
    \            ++j;\n        } else {\n            i++;\n        }\n    }\n    return\
    \ out;\n}\n\nmodule.exports = common;\n\n},{}],20:[function(require,module,exports){",
  "  var n = Math.min(l1.length, l2.length);\n  var result = [];\n  while(n--){\n\
    \    if(l1[n] === l2[n]) result.push(l1[n]);\n  }\n  return result;\n}\n\nmodule.exports\
    \ = common;\n\n},{}],70:[function(require,module,exports){", "    let l = [],\
    \ hash = [], hashLen = 0;\n    let commonIndex = 0;\n    for (let i = 0; i < l1.length;\
    \ i++) {\n        if (!hash[l1[hashLen]]) hash[l1[hashLen]] = [];\n        if\
    \ (hash[l1[hashLen]].indexOf(l1[i]) === -1) hash[l1[hashLen]].push(l1[i]);\n \
    \   }\n    for (let j = 0; j < l2.length; j++){\n        if (hash[l2[j]]) hash[l2[j]].push(commonIndex++);\n\
    \    }\n    \n    for (let key in hash){\n        if (hash[key].length){\n   \
    \         l.push(...hash[key]);\n        }\n    }\n    return l;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThat is definitely a neat solution! But can you please elaborate\
    \ a little on how it works and what it does? It would help a lot.\n<|/ c |>\n\
    <| c |>\nThe explanation was hard to find. Hopefully this explains it better than\
    \ I did: https://medium.com/@roylee2487/sorting-objects-in-javascript-objects-by-their-properties-values-90f9cb0cba4e\
    \ \nThe approach is basically the same as the one described in the answer by `Glenn\
    \ Ferreira`. You iterate through all the properties of `object1` while storing\
    \ them in a hash. For each property you then find the corresponding property of\
    \ `object2` using that property and push it to the common array if it\u2019s found.\n\
    <|/ c |>\n<| c |>\nAwesome! Can you also explain why you needed to use `!hash[l1[hashLen]]`\
    \ instead of `hash[l1[hashLen]]`? I didn't quite get what was going on there.\n\
    <|/ c |>\n<| c |>\n`hash[l1[hashLen]]` returns an array of all the values which\
    \ have that property (which is actually the property name as a string). So this\
    \ checks if the property name exists in `hash`, which is an array of arrays and\
    \ if the property name exists in the inner arrays. If it doesn\u2019t exist in\
    \ either of these, it returns `undefined`. If it does exist in both, `hash[l1[hashLen]]`\
    \ is an array and `!hash[l1[hashLen]]` is true, so it returns false.\n<|/ c |>\n\
    <| c |>\nAh I see, thanks for the explanation. Now I understand why my code wouldn't\
    \ work!\n<|/ c |>\n<| a |>\nOne can try this approach.\n<code>\nlet obj1 = {name:'john',age:12,location:'",
  "\tlet a = l1.slice(0),\n\t\tb = l2.slice(0),\n\t\tresult = [],\n\t\ti1 = 0;\n\t\
    while(i1 < a.length){\n\t\tlet i2 = b.indexOf(a[i1]);\n\t\twhile(i2 < 0){\n\t\t\
    \tif(i1 === a.length){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti1 = i1 + 1;\n\t\t\ti2\
    \ = b.indexOf(a[i1], i1);\n\t\t}\n\t\tif(i2 >= 0){\n\t\t\tresult.push(a[i1]);\n\
    \t\t\tb.splice(i2, 1);\n\t\t}\n\t\telse{\n\t\t\ti1 = i1 + 1;\n\t\t}\n\t}\n\twhile(i2\
    \ < b.length){\n\t\tresult.push(b[i2]);\n\t\ti2 = i2 + 1;\n\t}\n\treturn result;\n\
    }\n", "  var result = [],\n      i,\n      j,\n      l1Len = l1.length,\n    \
    \  l2Len = l2.length,\n      l1Cur,\n      l2Cur,\n      comp,\n      equal,\n\
    \      diff;\n  if (l1Len > 0 && l2Len > 0) {\n    comp = l1[0] > l2[0] ? 1 :\
    \ -1;\n    l1Cur = l1[0];\n    l2Cur = l2[0];\n    for (i = 1; i < l1Len; i++)\
    \ {\n      if (comp(l1[i], l2[i]) < 0) {\n        diff = [l1[i], l2[i]];\n   \
    \     l1Cur = l1[i];\n        l2Cur = l2[i];\n      } else if (comp(l1[i], l2[i])\
    \ > 0) {\n        diff = [l1[i], l2[i]];\n        l1Cur = l1[i];\n        l2Cur\
    \ = l2[i];\n      } else {\n        diff = [l1[i], l2[i]];\n      }\n      result.push(diff);\n\
    \    }\n    for (i = l1Len; i < l2Len; i++) {\n      diff = [l1[i], l2[i]];\n\
    \      result.push(diff);\n    }\n    return result;\n  } else {\n    return [];\n\
    \  }\n}\n", "  if(!l1 || !l2){\n    return [];\n  }\n\n  var c = [];\n  while(l1\
    \ && l2){\n    if(l1.length >= l2.length){\n      c.push(l1.shift());\n    } else\
    \ {\n      c.push(l2.shift());\n    }\n  }\n  if(l1){\n    c.push(l1.shift());\n\
    \  }\n  if(l2){\n    c.push(l2.shift());\n  }\n  return c;\n}\n\nmodule.exports\
    \ = common;\n\n},{}],3:[function(require,module,exports){", "  var result = [];\n\
    \n  while (l1 && l2) {\n    if (l1.length < l2.length) l1 = l1.concat();\n   \
    \ if (l2.length < l1.length) l2 = l2.concat();\n\n    for (var i = 0, ilen = l1.length;\
    \ i < ilen; ++i) {\n      if (!l2.includes(l1[i])) {\n        result.push(l1[i]);\n\
    \      }\n    }\n\n    l1 = l2;\n    l2 = result;\n    result = [];\n  }\n\n \
    \ return l1 === l2 ? l1 : result;\n}\n", "  var a1 = [],\n    a2 = [];\n  for(var\
    \ i = 0;i<l1.length;i++){ a1.push(l1[i]); }\n  for(var i = 0;i<l2.length;i++){\
    \ a2.push(l2[i]); }\n  return(a1.filter(function(element, index, array){\n   \
    \ return a2.indexOf(element) == index;\n  }).sort());\n}\n", "    var set1 = new\
    \ Set(l1);\n    var set2 = new Set(l2);\n\n    return Array.from(set1).filter(function(el){\n\
    \        return set2.has(el);\n    }).sort();\n}\n", "  var result = [];\n  var\
    \ len = Math.min(l1.length, l2.length);\n  for (var i = 0; i < len; i++) {\n \
    \   if(l1[i] === l2[i]) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n\
    }\n", "  var _common = [];\n  while(l1.length > 0 && l2.length > 0){\n    var\
    \ x = l1[0];\n    var y = l2[0];\n    var ind = l1[1] > l2[1] ? 1: 0;\n    var\
    \ _commonIndex = 0;\n    var found = false;\n    for(var i = 0; i < common.length;\
    \ i++){\n      var c = common[i];\n      if(c.x == x && c.y == y){\n        found\
    \ = true;\n        _common[_commonIndex++] = ind;\n        break;\n      }\n \
    \     if(c.x > x){\n        _common[_commonIndex++] = ind;\n        l1 = l1[2];\n\
    \        ind = x>c.x ? 1: 0;\n      }\n      else{\n        _common[_commonIndex++]\
    \ = ind;\n        l2 = l2[2];\n        ind = y>c.y ? 1: 0;\n      }\n    }\n \
    \   if(!found){\n      _common[_commonIndex++] = ind;\n    }\n  }\n  return _common;\n\
    }", "  if (l1.length === 0) return l2;\n  if (l2.length === 0) return l1;\n  if\
    \ (l1[0] === l2[0]) return l1;\n  if (l1[0] < l2[0]) return common(l1, l2);\n\
    \  return common(l2, l1);\n}\n", "  var lcm = 0;\n  for (var i = 0; i < l1.length;\
    \ i++) {\n    lcm += Math.pow(Math.abs(l1[i] - l2[i]), 2);\n  }\n  return lcm;\n\
    }\n", "  l1 = l1||[];\n  l2 = l2||[];\n  var o = [];\n  var l = Math.min(l1.length,l2.length);\n\
    \  for(var i=0; i<l; i++){\n    var r = Math.min(l1[i],l2[i]);\n    if(!o.indexOf(r)){\
    \ o.push(r); }\n  }\n  return o;\n}\n\n", "    return _.filter(l1, function(e){\n\
    \        return _.include(l2, e);\n    });\n}\n", "  return uniqueSort(l1).filter(function(elem,\
    \ index, self) {\n    return self.indexOf(elem) === index;\n  }).concat(uniqueSort(l2).filter(function(elem,\
    \ index, self) {\n    return self.indexOf(elem) === index;\n  }));\n}\n", "  var\
    \ l1 = l1 || [];\n  var l2 = l2 || [];\n  var result = [];\n  for(var i=0; i<l1.length;\
    \ i++){\n    var found = 0;\n    for(var j=0; j<l2.length; j++){\n      if(l1[i]===l2[j]){\n\
    \        found++;\n        break;\n      }\n    }\n    if(!found){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n},{\"./common\":10}],14:[function(require,module,exports){",
  "  var arr = [];\n  var common;\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    for(var j = 0, len2 = l2.length; j < len2; j++){\n      if((l1[i] === l2[j])\
    \ || (l1[i] !== l2[j] && l1[i].val > l2[j].val)){\n        arr.push(l1[i]);\n\
    \      }\n    }\n  }\n  if(arr.length){\n    common = arr.sort(function(a, b){\n\
    \      return b.val - a.val;\n    });\n    return common;\n  }\n  else{\n    return\
    \ l1;\n  }\n}", "  return l1.filter(function(elem, position, arr){\n    return\
    \ l2.indexOf(elem) == position;\n  }).sort(function(a, b){\n    return a - b;\n\
    \  });\n}\n", "  var result = [];\n  var llen = l1.length;\n  var lx = 0,\n  \
    \    ly = 0;\n  while(lx < llen){\n    var lyx = ly, lyy = lx[ly];\n    while(ly\
    \ < llen){\n      if(lyx == ly[lyy]){\n        result.push(lx[lyx]);\n       \
    \ lx++;\n        lyx++;\n      }else{\n        lyy++;\n      }\n    }\n    lx++;\n\
    \    lyx = 0;\n  }\n  return result;\n}\n", "  var result = []\n  for(var i=0;\
    \ i<l1.length; i++){\n    var a = l1[i];\n    for(var j=0; j<l2.length; j++){\n\
    \      var b = l2[j];\n      if(a==b){\n        result.push(a);\n        continue;\n\
    \      }\n      if(a<b) result.push(a);\n      else result.push(b);\n    }\n \
    \ }\n  return result.sort(function(a,b){return a-b});\n}\n\n", "  return l1.filter(function(item){\n\
    \    return l2.indexOf(item) != -1;\n  });\n}\n", "    var common = [];\n    var\
    \ llength = l1.length;\n    var llength2 = l2.length;\n\n    for(var i=0; i<llength2;\
    \ i++){\n        var found = false;\n        for(var j=0; j<llength; j++){\n \
    \           if(l1[i] === l2[j]){\n                found = true;\n            \
    \    break;\n            }\n        }\n        if(found){\n            common.push(l1[i]);\n\
    \        }\n    }\n\n    return common;\n}\n", "  var obj = {}, l\n  for (var\
    \ i = 0; i < l1.length; i++) {\n    obj[l1[i]] = true\n  }\n  for (var i = 0;\
    \ i < l2.length; i++) {\n    l = obj[l2[i]]\n    if (l) {\n      obj[l2[i]] =\
    \ false\n    }\n  }\n  return Object.keys(obj).sort().filter(function(key) {\n\
    \    return obj[key]\n  })\n}\n", "  var i, ii, j, jj, k;\n  for(i=0, ii=l1[0].length;\
    \ i<ii; i++)\n    for(j=0, jj=l2[0].length; j<jj; j++)\n      if     (l1[0][i]===l2[0][j])\
    \  return l1[0][i];\n      else if(l1[0][i]>l2[0][j]) return l1[0][i];\n     \
    \ else                    return l2[0][j];\n  return l1[0][0]===l2[0][0]?l1[0][0].charCodeAt(0):-1;\n\
    }\n", "    return unique(filter([l1, l2], filterUnique));\n}\n", "  if(!l1 ||\
    \ !l2) return l1;\n  var i = 1;\n  var j = 0;\n  var a = l1.length;\n  var b =\
    \ l2.length;\n  while( i < a){\n    while( j < a){\n      if( l1[i] === l2[j]){\n\
    \        l1.splice(i,1);\n        i -= 1;\n        j -= 1;\n      }\n      else\
    \ {\n        j += 1;\n      }\n    }\n    i += 1;\n  }\n  if(i !== a || j !==\
    \ b){\n    while( j > b){\n      l1.push(l2[j--]);\n    }\n    while( i > a){\n\
    \      l2.push(l1[i--]);\n    }\n  }\n  return l1;\n}\n</code>\n<|/ a |>\n<| c\
    \ |>\nThanks for the response! Unfortunately this solution still does not produce\
    \ the correct output for me and I am not sure why. The output is `[5, 3, 2, 8],\
    \ [3, 2]` and should be `[8, 5, 3, 2]`. I also get an error `TypeError: Cannot\
    \ read property 'length' of undefined` when I run your test code on the site that\
    \ I linked. I'm not sure why I am getting these errors since I do not have that\
    \ error.\n<|/ c |>\n<| c |>\nI updated my post to include a solution that uses\
    \ `reduce()`\n<|/ c |>\n<| c |>\nI got it to work! Thank you so much! The only\
    \ thing is that your solution still has a few bugs, such as if the input lists\
    \ are of different lengths it does not work ([5,3], [5,2,8]) which it should.\
    \ Also, your solution does not sort the lists.\n<|/ c |>\n<| c |>\nI am sorry\
    \ about that mistakes. I should also fix the other bug I mentioned earlier. I\
    \ just finished fixing it for you. I hope you understand what is going on.\n<|/\
    \ c |>\n<| c |>\nI realized a better way to approach the problem would be to use\
    \ the `sort()` method of the array. I'll update my answer in a second.\n<|/ c\
    \ |>\n<| a dscore=0 |>\nYou could use something like this:\n<code>\nvar resultArray\
    \ = l1.reduce(function (acc, el1) {\n  return l2.every(function (el2) {\n    if\
    \ (el1.some(function (el2) {\n      return el2 === el1;\n    })) {\n      acc.push(el1);\n\
    \      return acc;\n    }\n    return acc;\n  });\n}, []);\n</code>\n<|/ a tags=javascript,arrays,sorting\
    \ |>\n<| c |>\nI tried running this and I am getting an error `TypeError: l",
  "  var ret = [];\n  for(var i=0; i<l1.length; i++){\n    for(var j=0; j<l2.length;\
    \ j++){\n      if(l1[i]==l2[j]){\n        ret.push(l1[i]);\n      }\n    }\n \
    \ }\n  return ret;\n}\n", "  var out = [];\n  var i = 0;\n  while(l1.length >\
    \ i){\n    if(l2.indexOf(l1[i]) != -1){\n      out.push(l1[i]);\n      l1.splice(i,\
    \ 1);\n    } else {\n      i++;\n    }\n  }\n  return out;\n}\n", "  var out =\
    \ [];\n  for (var i = 0; i < l1.length; i++){\n    for (var j = 0; j < l2.length;\
    \ j++){\n      if (l1[i] === l2[j]) out.push(l1[i]);\n    }\n  }\n  return out;\n\
    }\n", "  if (l1.length < l2.length){\n    var temp = l1;\n    l1 = l2;\n    l2\
    \ = temp;\n  }\n  var out = [];\n  for(var i = 0, len = l1.length; i < len; i++){\n\
    \    if(l2.indexOf(l1[i]) >= 0) out.push(l1[i]);\n  }\n  return out;\n}", "  return\
    \ unique(l1, l2).filter(function(item){\n    return inArray(item, l2) > -1;\n\
    \  });\n}", "    return l1.filter(function(item){\n        return l2.indexOf(item)\
    \ != -1;\n    });\n}\n", "    if(!l1 || !l2){\n        return [];\n    }\n   \
    \ var common = [];\n    var i = -1, ln = l1.length, lnn2 = l2.length;\n    while(i++<ln){\n\
    \        for(var j=lnn2-1;j>i;--j){\n            if(l1[i]===l2[j]){\n        \
    \        common.push(l1[i]);\n                l1.splice(i,1);\n              \
    \  l2.splice(i,1);\n            }\n        }\n    }\n    return common;\n};\n",
  "  if(l1.length != l2.length){\n    throw new Error(\"Lists are not of the same\
    \ length.\")\n  }\n  var returnArr = [];\n  for(var i = 0, len = l1.length; i<len;\
    \ i++){\n    var item = l1[i];\n    if(l2.indexOf(item) == -1){\n      returnArr.push(item);\n\
    \    }\n  }\n  return returnArr;\n}\n\n", "  return l1.filter(function(elem, pos)\
    \ {\n    return l2.indexOf(elem) == pos;\n  });\n};\n", "    var ret = [];\n \
    \   var i;\n    var j;\n    var ls = [];\n    for(i = 0; i < l1.length; i++){\n\
    \        ls.push(l1[i]);\n    }\n    for(i = 0; i < l2.length; i++){\n       \
    \ ls.push(l2[i]);\n    }\n    for(i = 0; i < ls.length; i++){\n        for(j =\
    \ i + 1; j < ls.length; j++){\n            if(ls[i] === ls[j]) ret.push(ls[i]);\n\
    \        }\n    }\n    return ret;\n}\n", "    var result = [];\n    for (var\
    \ i = 0, len = l1.length; i < len; i++){\n        if (l2.indexOf(l1[i]) != -1)\n\
    \            result.push(l1[i]);\n    }\n    return result;\n}\n", "  var o1 =\
    \ {}, o2 = {}, i = 0, l;\n  for(l=l1.length; i<l; i++) o1[l1[i]] = true;\n  for(l=l2.length;\
    \ i<l; i++) o2[l2[i]] = true;\n\n  var result = [];\n  for(l=Math.min(l1.length,\
    \ l2.length); i<l; i++){\n    if(!o1[l2[i]] || !o2[l1[i]]){\n      result.push(l1[i]);\n\
    \    }\n  }\n  return result;\n}\n\nvar common$1 = Object.freeze({\n\tdefault:\
    \ common\n});\n\nvar common$2 = common$1;\n", "    var ls = l1.length, ly = l2.length,\
    \ lm, i, x, y;\n    var common = new Array(ly);\n    for(i = 0; i < ly; i++){\n\
    \        common[i] = new Array(ls);\n        for(j = 0; j < ls; j++){\n      \
    \      common[i][j] = l1[j] === l2[i] ? ls[j]: 0;\n        }\n    }\n    lm =\
    \ l1[ly];\n    for(i = 0; i < ls - 1; i++){\n        x = l1[i];\n        y = common[++y][i];\n\
    \        if(x == y && x !== lm) common[y - 1][i] = y;\n    }\n    return common;\n\
    }\n", "    let l3 = [];\n    if(l1.length >= l2.length){\n        if(l1.length\
    \ < l2.length){\n            l3 = l1.filter(function(el){\n                return\
    \ l2.indexOf(el) >= 0;\n            });\n        }\n        else{\n          \
    \  l3 = l2.filter(function(el){\n                return l1.indexOf(el) >= 0;\n\
    \            });\n        }\n    }\n    else{\n        if(l2.length < l1.length){\n\
    \            l3 = l2.filter(function(el){\n                return l1.indexOf(el)\
    \ >= 0;\n            });\n        }\n        else{\n            l3 = l1.filter(function(el){\n\
    \                return l2.indexOf(el) >= 0;\n            });\n        }\n   \
    \ }\n    return l3;\n}", "    var r = [], i = 0, j, n = l1.length, m = l2.length,\
    \ l = Math.min(m, n), a, b;\n    if(l <= 0) return l;\n    if(m < l) n = m;\n\
    \    if(n < l) m = n;\n    for(; l--; ){\n        a = l1[i];\n        b = l2[j];\n\
    \        for(; a&&b; a = a.n, b = b.n){\n            if(a === b) continue;\n \
    \           if(a > b) break;\n            if(b.t > a.t || b.f > a.f){\n      \
    \          r[r.length] = b;\n                break;\n            }\n        }\n\
    \    }\n    return r;\n}\n", "\tvar out = [];\n\tvar i, j, k, len;\n\n\tlen =\
    \ Math.min(l1.length, l2.length);\n\tfor(i = 0; i < len; i++){\n\t\tif(l2.indexOf(l1[i])\
    \ !== -1){\n\t\t\tfor(j = l1.length; j < len; j++){\n\t\t\t\tif(l2[j] === l1[j]){\n\
    \t\t\t\t\tk = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!k){\n\t\t\
    \t\tout.push(l1[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n", "    var ret\
    \ = [];\n    var p1 = l1.length, p2 = l2.length;\n    while(p1 !== p2){\n    \
    \    ret.push(l1[p1-1]);\n        p1--;\n    }\n    while(p1 !== -1){\n      \
    \  ret.push(l1[p1--]);\n    }\n    while(p2 !== -1){\n        ret.push(l2[p2--]);\n\
    \    }\n    return ret;\n}\n", "  var a = [], i = 0, j = 0;\n  while(i < l1.length\
    \ && j < l2.length){\n    if( l1[i] === l2[j]){ a.push(l1[i]); i++; j++; }\n \
    \   else if(a.length > 0){ break; }\n  }\n  return a;\n}\n},{}],170:[function(_dereq_,module,exports){\n\
    module.exports={\n  \"name\": \"mapbox-gl\",\n  \"version\": \"0.14.3\",\n  \"\
    description\": \"Easy to use map styles with WebGL\",\n  \"keywords\": [\n   \
    \ \"mapbox\",\n    \"webgl\",\n    \"vector\",\n    \"tile\",\n    \"style\"\n\
    \  ],\n  \"author\": {\n    \"name\": \"Mapbox Labs\",\n    \"url\": \"https://www.mapbox.com/\"\
    \n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/mapbox/mapbox-gl.git\"\
    \n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/mapbox/mapbox-gl/issues\"\
    \n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"\
    https://github.com/mapbox/mapbox-gl/blob/master/LICENSE\"\n    }\n  ],\n  \"main\"\
    : \"./src/index.js\",\n  \"dependencies\": {\n    \"@turf/turf\": \"6.0.0\",\n\
    \    \"babylonjs\": \"6.2.3\",\n    \"deck.gl\": \"~1.0.0\",\n    \"d3\": \"~3.5.3\"\
    ,\n    \"geojson-utils\": \"~0.2.1\",\n    \"geojson-vt-simple\": \"~0.0.4\",\n\
    \    \"gl-matrix\": \"~2.8.0\",\n    \"mapbox-gl\": \"~0.20.0\",\n    \"mapbox-gl-leaflet\"\
    : \"~0.19.1\",\n    \"mapbox-gl-geocoder\": \"~0.2.0\",\n    \"mapbox-gl-canvas\"\
    : \"~0.1.1\",\n    \"mapbox-gl-map\": \"~0.1.2\",\n    \"mapbox-gl-tile-index\"\
    : \"~0.3.1\",\n    \"mapbox-gl-layers\": \"~0.0.9\",\n    \"mapbox-gl-expressions\"\
    : \"~0.1.0\",\n    \"mapbox-gl-control-zoom\": \"~0.1.3\",\n    \"mapbox-gl-popup\"\
    : \"~0.1.2\",\n    \"mapbox-gl-draw\": \"~0.2.0\",\n    \"mapbox-gl-style-expressions\"\
    : \"~0.1.7\",\n    \"mapbox-gl-geojson-layers\": \"~0.2.0\",\n    \"mapbox-gl-geocoder-input\"\
    : \"~0.1.0\",\n    \"mapbox-gl-geojson-export\": \"~0.1.2\",\n    \"mapbox-gl-geocoder-results\"\
    : \"~0.1.0\",\n    \"mapbox-gl", "  var a = l1.length;\n  var b = l2.length;\n\
    \  var i, ii;\n  if(b>a)\n    throw new Error('lists different lengths');\n  for(i=a;\
    \ i-->b;)\n    while(i-- && a[l1[i]] === l2[i]){}\n  return l1[ii];\n}\n", " \
    \ var ret = [];\n  var l = [];\n  for(var i=0;i<l1.length;i++){\n    l.push(l1[i]);\n\
    \  }\n  for(var i=0;i<l2.length;i++){\n    for(var j=0;j<l.length;j++){\n    \
    \  if(l2[i]===l[j]){\n        ret.push(l2[i]);\n      }\n    }\n  }\n  return\
    \ ret;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_66_digitSum
language: js
prompt: "//Task\n// Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\
  \") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"\
  helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\n\
  function digitSum(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
  helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
  aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
  You arE Very Smart\"),327);\n}\n\ntest();"
completions: ["    let sum = 0\n    for(let i = 0; i < s.length; i++){\n        if(s.charCodeAt(i)\
    \ >= 48 && s.charCodeAt(i) <= 57){\n            sum += s.charCodeAt(i)-48\n  \
    \      }\n    }\n    return sum\n}\n", "  let ans = 0;\n  for (let i = 0; i <\
    \ s.length; i++){\n    if (s.charCodeAt(i) > 65 && s.charCodeAt(i) < 91){\n  \
    \    ans += s.charCodeAt(i) - 96;\n    }\n  }\n  return ans;\n}\n", "    var sum\
    \ = s.match(/[A-Z]/g).length;\n    return sum > 0 ? sum : 0;\n}\nvar tests = [\n\
    \    [\"helloE\", 69],\n    [\"woArBld\", 131],\n    [\"aAaaaXa\", 153],\n   \
    \ [\"abcCd\", 67],\n    [\"abAB\", 131],\n    [\"aAaaaXa\", 153]\n];\ntests.forEach(function(test){\n\
    \    console.log(test[0] + \" = \" + digitSum(test[0]));\n    console.log(\"Should\
    \ be \" + test[1] + \", but got \" + digitSum(test[0]));\n});\n</cell>\n<cell>",
  "\tlet sum = 0\n\tfor(let i = 0; i < s.length; i++){\n\t\tsum += (s.charCodeAt(i)\
    \ - 64)\n\t}\n\treturn sum\n}\n", "\tvar sum = 0;\n\tfor(var i=0; i<s.length;\
    \ i++){\n\t\tsum += toUpper(s.charCodeAt(i));\n\t}\n\treturn sum;\n}\n", "  var\
    \ sum = 0;\n  for(var i=0;i<s.length;i++){\n    if(s[i].charCodeAt(0)>=65 && s[i].charCodeAt(0)<=90){\n\
    \      sum+=s[i].charCodeAt(0);\n    }\n  }\n  return sum;\n}\n", "  let result\
    \ = 0;\n  for(let i = 0; i < s.length; i++){\n    result += s.charCodeAt(i)\n\
    \  }\n  return result;\n}\n", "    var sum = 0\n    for (var i = 0; i<s.length;\
    \ i++){\n        var c = s.charAt(i)\n        var code = c.charCodeAt(0)\n   \
    \     if(code >= 65 && code <= 90){\n            sum += code\n        }\n    }\n\
    \    return sum\n}\n", "    return s.split('').map(function(x){\n        return\
    \ x.charCodeAt(0) - 64\n    }).reduce(function(prev, curr){\n        return prev\
    \ + curr\n    })\n}\n", "  return s.split('').map(function(a){\n    return a.charCodeAt(0);\n\
    \  }).reduce(function(a, b){\n    return a + b;\n  });\n}\n</code>\n<|/ a tags=javascript,algorithm,functional-programming\
    \ |>\n<| a |>\nHere's a pure functional approach using array.reduce and string.charCodeAt.\n\
    \n<code>", "  s = s.replace(/[^a-zA-Z ]/g,\"\");\n  return s.split(\"\").reduce((a,b)\
    \ => parseInt(a)+parseInt(b)+\"\").substr(0, s.length);\n}\n", "  if (s.length\
    \ === 0) {\n    return 0;\n  }\n  let digitSum = 0;\n  for (let ch of s) {\n \
    \   digitSum += ch.charCodeAt(0) - 'a'.charCodeAt(0);\n  }\n  return digitSum;\n\
    }\n", "  const digits = '012345679'\n  let sum = 0\n  for (let i = 0; i < s.length;\
    \ i++){\n    const c = s.charAt(i)\n    sum += digits[digits.indexOf(c)]\n  }\n\
    \  return sum\n}\n", "    let sum=0;\n    for(let i=0;i<s.length();i++){\n   \
    \     let c=s.charCodeAt(i);\n        if(c>=65&&c<=90){\n            c+=32;\n\
    \        }\n        sum+=c;\n    }\n    return sum;\n}\n", "  // Only change code\
    \ below this line\n  var sum = 0;\n  for(var i = 0; i<s.length; i++){\n    if(s.charCodeAt(i)\
    \ > 64 && s.charCodeAt(i) < 91){\n      sum += s.charCodeAt(i) - 64;\n    }\n\
    \  }\n  return sum;\n}\n", "    if(typeof s === 'string'){\n        s = s.replace(/[^A-Z]/g,\
    \ '');\n        if(s === '') return 0;\n    }\n    \n    var sum = 0;\n    for(var\
    \ i = 0; i < s.length; i++){\n        sum += s[i].charCodeAt()-64;\n    }\n  \
    \  return sum;\n}\n", "    let sum = 0;\n    for(const char of s){\n        if(char.match(/[A-Z]/)){\n\
    \            sum += char.charCodeAt(0);\n        }\n    }\n    return sum;\n}\n",
  "\tvar sum = 0;\n\tfor(var i=0;i<s.length();i++){\n\t\tsum += s.charCodeAt(i);\n\
    \t}\n\treturn sum;\n}\n", "    return parseInt(s.split('').filter(function(x){\n\
    \        return x.charCodeAt(0) > 47 && x.charCodeAt(0) < 58;\n    }).join(''));\n\
    }\n", "  var sum = 0;\n  for(var i = 0; i < s.length; i++){ \n    if(s.charCodeAt(i)\
    \ > 64){ \n      sum+=((s.charCodeAt(i)-65) *26); \n    }\n  }\n  return sum;\n\
    }\n", "  let sum = 0;\n  for(let i=0; i< s.length; i++){\n    if(s.charCodeAt(i)>64\
    \ && s.charCodeAt(i)<91) sum += s.charCodeAt(i);\n  }\n  return sum;\n}\n", " \
    \ let count = 0;\n  for(let i = 0; i < s.length; i++){\n    if(s.charCodeAt(i)\
    \ >= 65 && s.charCodeAt(i) <= 90){\n      count += s.charCodeAt(i);\n    }\n \
    \ }\n  return count;\n}\n", "    // TODO: write your code!\n}\n", "\tlet str=s.replace(/[^\\\
    d]/g,\"\").split(\"\").sort((a,b)=>a-b);\n\tlet res=0;\n\tfor(let i=0;i<str.length;i++){\n\
    \t\tres+=parseInt(str[i]);\n\t}\n\treturn res;\n}\n", "    var total = 0;\n  \
    \  for(var i = 0; i < s.length; i++){\n        var char = s.charCodeAt(i);\n \
    \       if(char >= '0' && char <= '9'){\n            total += char - '0';\n  \
    \      } else {\n            total += 10;\n        }\n    }\n    return total;\n\
    }\n", "  var sum = 0;\n  for(var i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i)\
    \ - 64;\n  }\n  return sum;\n}\n", "  let result = 0\n  for (let char of s) {\n\
    \    result += char.charCodeAt(0) - 96\n  }\n  return result\n}\n", "    let sum\
    \ = s.split('').filter(item => item.charCodeAt() > 64 && item.charCodeAt() < 91).reduce((total,\
    \ item) => {\n        return total + item.charCodeAt() - 64;\n    }, 0);\n   \
    \ return sum;\n}\n", "    return s.split('').filter(function (i) { return i >=48\
    \ && i <= 57; }).reduce(function (a, b) {\n        return a + b;\n    });\n}\n",
  "    return s.split('').map(v => v.charCodeAt(0)).reduce((a,b)=>a+b)\n}\n", "  \
    \  var sum = parseInt(\"\" + s).toString().split(\"\").reduce((sum,elem)=>sum\
    \ + elem.charCodeAt(0)-64)\n    return sum;\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < s.length; i++) {\n    sum += s.charCodeAt(i) - 64;\n  }\n  return\
    \ sum;\n}\n", "  let sum = 0;\n  for (let c of s) {\n    sum += c.charCodeAt(0);\n\
    \  }\n  return sum;\n}\n", "    return s.split('').map(function(x){\n        return\
    \ x.charCodeAt(0)\n    }).reduce(function(a, b){\n        return a + b\n    })\n\
    }\n", "    let sum = 0\n    for (let i = 0; i < s.length; i++){\n        const\
    \ code = s.charCodeAt(i)\n        sum += code >= 65 && code <= 90 ? code - 65\
    \ + 10 : code - 97\n    }\n    return sum\n}", "    let strArr=s.split(\"\");\n\
    \    let result=0\n    for(let i=0;i<strArr.length;i++){\n        if(strArr[i].charCodeAt(0)<58){\n\
    \            result+=strArr[i].charCodeAt(0)\n        }\n    }\n    return result\n\
    }\n", "  var sum = 0;\n  for(var i=0;i<s.length; i++){\n    if(s.charCodeAt(i)\
    \ >= 65 && s.charCodeAt(i) <= 90) sum += s.charCodeAt(i);\n  }\n  return sum;\n\
    }\n", "    const result = 0\n    for(let i=0; i<s.length; i++){\n        if(/[A-Z]/.test(s.charAt(i))){\n\
    \            result += s.charCodeAt(i)\n        }\n    }\n    return result\n\
    }\n", "    return s.split(\"\").reduce((a, c)=>(a+= c.charCodeAt(0) > 47 ? c.charCodeAt(0)\
    \ - 47 : 0 ), 0);\n}\n", "  s = s.replace(/[^A-Za-z]/g, '');\n  if(s === ''){\n\
    \    return 0;\n  }\n  let sum = 0;\n  for(let i of s){\n    if(i === 'A' || i\
    \ === 'a') sum += 26;\n    else if(i === 'B' || i === 'b') sum += 26;\n    else\
    \ if(i === 'C' || i === 'c') sum += 26;\n    else if(i === 'D' || i === 'd') sum\
    \ += 26;\n    else if(i === 'E' || i === 'e') sum += 26;\n    else if(i === 'F'\
    \ || i === 'f') sum += 26;\n    else if(i === 'G' || i === 'g') sum += 26;\n \
    \   else if(i === 'H' || i === 'h') sum += 26;\n    else if(i === 'I' || i ===\
    \ 'i') sum += 26;\n    else if(i === 'J' || i === 'j') sum += 26;\n    else if(i\
    \ === 'K' || i === 'k') sum += 26;\n    else if(i === 'L' || i === 'l') sum +=\
    \ 26;\n    else if(i === 'M' || i === 'm') sum += 26;\n    else if(i === 'N' ||\
    \ i === 'n') sum += 26;\n    else if(i === 'O' || i === 'o') sum += 26;\n    else\
    \ if(i === 'P' || i === 'p') sum += 26;\n    else if(i === 'Q' || i === 'q') sum\
    \ += 26;\n    else if(i === 'R' || i === 'r') sum += 26;\n    else if(i === 'S'\
    \ || i === 's') sum += 26;\n    else if(i === 'T' || i === 't') sum += 26;\n \
    \   else if(i === 'U' || i === 'u') sum += 26;\n    else if(i === 'V' || i ===\
    \ 'v') sum += 26;\n    else if(i === 'W' || i === 'w') sum += 26;\n    else if(i\
    \ === 'X' || i === 'x') sum += 26;\n    else if(i === 'Y' || i === 'y') sum +=\
    \ 26;\n    else if(i === 'Z' || i === 'z') sum += 26;\n  }\n  return sum;\n}\n",
  "\tlet digits = ''\n\tlet sum = 0\n\tfor (let i = 0; i < s.length; i++){\n\t\tsum\
    \ += Number(s[i])\n\t}\n\treturn sum\n}\n", "  s = s.replace(/[^\\d]/g,'');\n\
    \  let sum = 0;\n  for(const c of s){\n    if(c.toUpperCase() !== c.toLowerCase()){\n\
    \      sum+=c.charCodeAt(0);\n    }\n  }\n  return sum;\n}\n", "\treturn s.split(\"\
    \").reduce((sum, next) => {\n\t\treturn sum + Math.max(...[...next].map(c => c.charCodeAt(0)));\n\
    \t}, 0);\n}\n", "    return s.split('').map((a) => {\n        return a.charCodeAt(0)-64\n\
    \    }).reduce((prev, curr) => prev + curr)\n}\n", "    let sum = 0;\n    for(let\
    \ i=0; i<s.length; i++){\n        let c = s.charCodeAt(i);\n        if(c >= 65\
    \ && c <= 70){\n            sum += c; // add only uppercase ascii char\n     \
    \   }\n    }\n    return sum;\n}", "  let res = [];\n  s = s.split('');\n  for\
    \ (let i = 0; i < s.length; i++){\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i)\
    \ <= 90){\n      res.push(s.charCodeAt(i) - 55);\n    }\n  }\n  return res.reduce((a,\
    \ b) => a + b);\n}", "    // Your code here\n}", "    return s.split('').reduce((a,b)=>a+b.charCodeAt().toString(2).length,0)\n\
    }", "  let result = 0;\n  for(let char of s){\n    if (char >= '0' && char <=\
    \ '9'){\n      result += char - '0';\n    }\n  }\n  return result;\n}\n", "  \
    \  let total = 0\n    for (let i = 0; i < s.length; i++){\n        if (s.charAt(i)\
    \ >= 'A' && s.charAt(i) <= 'Z'){\n            total += s.charCodeAt(i) - 64\n\
    \        }\n    }\n    return total\n}\n", "  let res = 0;\n  for(let i = 0; i\
    \ < s.length; i++){\n    const char = s.charCodeAt(i);\n    if(char >= '0' &&\
    \ char <= '9'){\n      res += char - '0';\n    }\n  }\n  return res;\n}\n", " \
    \   var sum = 0;\n    for(var i =0; i< s.length; i++){\n        if(s.charCodeAt(i)\
    \ > 47 && s.charCodeAt(i) < 58){\n            sum += s.charCodeAt(i);\n      \
    \  }\n    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i = 0; i <\
    \ s.length; i++){\n        if(isNaN(s[i])) throw new Error('Invalid input');\n\
    \        sum += s[i];\n    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - '0'.charCodeAt(0);\n\
    \  }\n  return sum;\n}\n", "  var total = 0;\n  for (var i = 0; i < s.length;\
    \ i++) {\n    total += s.charCodeAt(i) - 55;\n  }\n  return total;\n}", "    return\
    \ s.split('').map(Number).reduce((a,b)=>a+b,0);\n}\n", "  let sum = 0;\n  for(let\
    \ c of s) {\n    sum += parseInt(c);\n  }\n  return sum;\n}", "  if(s.length===0)\
    \ return 0\n  s = s.toUpperCase()\n  let sum = 0\n  for(const i of s){\n    sum\
    \ += i.charCodeAt(0)\n  }\n  return sum\n}\n\nconst s = digitSum(\"aAaaaXa\")",
  "  let t=0;\n  for (let i of s){\n    if (i.charCodeAt(0)>47 && i.charCodeAt(0)<58)\
    \ t+=i.charCodeAt(0);\n  }\n  return t;\n}\n", "\treturn s.split('').map(function(item){\n\
    \t\treturn parseInt(item);\n\t}).reduce(function(acc, item){\n\t\treturn acc +\
    \ item;\n\t}, 0);\n}\n", "  // your code goes here\n  let sum = 0;\n  for (let\
    \ i = 0; i < s.length; i++){\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i)\
    \ <= 90){\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}", "   \
    \ if (s.length < 1) return 0;\n    let n = 0;\n    for (let i of s) {\n      \
    \  if (i.charCodeAt(0) > 47 && i.charCodeAt(0) < 58) {\n            n += i.charCodeAt(0)\
    \ - 48;\n        }\n    }\n    return n;\n}\n", "    arr = s.split(\"\");\n  \
    \  ans = 0;\n    for(i = 0; i<arr.length; i++){\n        if(arr[i].charCodeAt(0)\
    \ >= '0' && arr[i].charCodeAt(0) <= '9'){\n            ans += parseInt(arr[i]);\n\
    \        }\n    }\n    return ans;\n}\n", "  let sum = s.split(\"\").reduce((acc,\
    \ char) => acc + char.codePointAt(0), 0);\n  return sum;\n}\n", "\tvar sum = 0;\n\
    \ts.split(\"\").forEach(function(val){\n\t\tsum += parseInt(val.charCodeAt(0),10);\n\
    \t});\n\treturn sum;\n}\n", "\tvar sum = 0;\n\tfor (var char of s){\n\t\tsum +=\
    \ char.charCodeAt(0) - 97;\n\t}\n\treturn sum;\n}\n", "    var sum = 0\n    for(var\
    \ i = 0; i < s.length; i++){\n        sum += getCharVal(s.charAt(i))\n    }\n\
    \    return sum\n}\n", "    let sum = 0;\n    for (let c of s) {\n        sum\
    \ += c.charCodeAt(0);\n    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i) - 48;\n  }\n  return\
    \ sum;\n}", "  return String(s).split('').map(function(e){\n    return e.charCodeAt(0)\
    \ - 'a'.charCodeAt(0);\n  }).reduce(function(a, b){\n    return a + b;\n  }, 0);\n\
    }\n", "    let sum = 0;\n    for(let i = 0; i < s.length; i++){\n        let char\
    \ = s.charAt(i);\n        if( char === \"A\" || char === \"a\" ){\n          \
    \  sum = sum + 26;\n        }\n        if( char === \"B\" || char === \"b\" ){\n\
    \            sum = sum + 58;\n        }\n        if( char === \"C\" || char ===\
    \ \"c\" ){\n            sum = sum + 58;\n        }\n        if( char === \"D\"\
    \ || char === \"d\" ){\n            sum = sum + 103;\n        }\n        if( char\
    \ === \"E\" || char === \"e\" ){\n            sum = sum + 103;\n        }\n  \
    \      if( char === \"F\" || char === \"f\" ){\n            sum = sum + 111;\n\
    \        }\n        if( char === \"G\" || char === \"g\" ){\n            sum =\
    \ sum + 111;\n        }\n        if( char === \"H\" || char === \"h\" ){\n   \
    \         sum = sum + 119;\n        }\n        if( char === \"I\" || char ===\
    \ \"i\" ){\n            sum = sum + 119;\n        }\n        if( char === \"J\"\
    \ || char === \"j\" ){\n            sum = sum + 137;\n        }\n        if( char\
    \ === \"K\" || char === \"k\" ){\n            sum = sum + 137;\n        }\n  \
    \      if( char === \"L\" || char === \"l\" ){\n            sum = sum + 137;\n\
    \        }\n        if( char === \"M\" || char === \"m\" ){\n            sum =\
    \ sum + 137;\n        }\n        if( char === \"N\" || char === \"n\" ){\n   \
    \         sum = sum + 137;\n        }\n        if( char === \"O\" || char ===\
    \ \"o\" ){\n            sum = sum + 149;\n        }\n        if( char === \"P\"\
    \ || char === \"p\" ){\n            sum = sum + 149;\n        }\n        if( char\
    \ === \"Q\" || char === \"q\" ){\n            sum = sum + 149;\n        }\n  \
    \      if( char === \"R\" || char === \"r\" ){\n            sum = sum + 149;\n\
    \        }\n        if( char === \"S\" || char === \"s\" ){\n            sum =\
    \ sum + 149;\n        }\n        if( char === \"T\" || char === \"t\" ){\n   \
    \         sum = sum + 149;\n        }\n        if( char === \"U\" || char ===\
    \ \"u\" ){\n            sum = sum + 149;\n        }\n        if( char === \"V\"\
    \ || char === \"v\" ){\n            sum = sum + 149;\n        }\n        if( char\
    \ === \"W\" || char === \"w\" ){\n            sum = sum + 149;\n        }\n  \
    \      if( char === \"X\" || char === \"x\" ){\n", "  let sum = 0;\n  for (let\
    \ c of s) {\n    if (c >= 'a' && c <= 'z') {\n      sum += c - 'a' + 1;\n    }\n\
    \  }\n  return sum;\n}\n", "    return s.split('').map(function(el){\n      return\
    \ el.toUpperCase().charCodeAt(0) - 65;\n    }).reduce(function(a, b){\n      \
    \  return a + b;\n    });\n}", "    let result = 0;\n    for(let i = 0; i < s.length;\
    \ i++){\n        if (s.charCodeAt(i) > 47 && s.charCodeAt(i) < 58){\n        \
    \    result+=s.charCodeAt(i)-44;\n        }\n    }\n    return result;\n}\n",
  "  var sum = 0;\n  for (var i=0; i<s.length; i++){\n    sum += s.charCodeAt(i) -\
    \ 32;\n  }\n  return sum;\n}\n", "    let res = 0\n    for (let i = 0; i < s.length;\
    \ i++){\n        let char = s[i]\n        let charCode = char.charCodeAt(0)\n\
    \        res+= (charCode > 47 && charCode < 58) ? charCode - 48 : charCode\n \
    \   }\n    return res\n}\n", "  return s.split('').map(function(x){\n    return\
    \ x.charCodeAt(0)\n  }).reduce(function(prev,cur,idx,arr){\n    return prev +\
    \ cur\n  },0)\n}\n", "  let sum = 0;\n  for (let i = s.length - 1; i >= 0; i--){\n\
    \    if (s[i] === undefined) continue;\n    sum += s[i].charCodeAt(0);\n  }\n\
    \  return sum;\n}", "    let sum = 0;\n    for (const i of s) {\n        if (i\
    \ >= 'A' && i <= 'Z')\n            sum += i - 'A' + 1;\n    }\n    return sum;\n\
    }\n", "  let ans = ''\n  for (let char of s) {\n    if (char >= '0' && char <=\
    \ '9') {\n      ans += char\n    } else {\n      ans += '9'\n    }\n  }\n  return\
    \ ans\n}\n", "  let numArr = [];\n  let sum = 0;\n  for (let c of s) {\n    if\
    \ (c.match(/[A-Z]/g) != null) {\n      numArr.push(c.charCodeAt(0) - 55);\n  \
    \  }\n  }\n  sum = numArr.reduce((sum, n) => (sum + n), 0);\n  return sum;\n}",
  "    let sum = 0;\n    for (let i = s.length - 1; i >= 0; i--) {\n      sum += s.charCodeAt(i)\
    \ - 48;\n    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i = 0; i < s.length;\
    \ i++){\n    if(s.charCodeAt(i) > 96){\n      sum += s.charCodeAt(i) - 48;\n \
    \   } else {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}", " \
    \ return s.split('').filter(function(d){\n    return (d >= 'a' && d <= 'z') ||\
    \ (d >= 'A' && d <= 'Z');\n  }).reduce(function(sum, char){\n    return (sum +\
    \ (char.charCodeAt(0) - 'a'.charCodeAt(0)) * Math.pow(26, (char.length-1)));\n\
    \  }, 0);\n}\n", "  if(s == \"\"){\n    return 0;\n  }\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    const char = s.charCodeAt(i);\n    if(char\
    \ >= 48 && char <= 57){\n      sum += char;\n    }\n  }\n  return sum;\n}\n",
  "\tconst sum = s.split('').map(s=>s.charCodeAt(0)).filter(c=>c>=48 && c<=57).reduce((a,b)=>a+b);\n\
    \treturn sum;\n}\n", "  let result = 0;\n  for(let i = 0; i < s.length; i++){\n\
    \    if(s[i].toUpperCase() === s[i]) result += s[i].charCodeAt(0) - 96;\n  }\n\
    \  return result;\n}\n", "    let sum = 0;\n    for(let i=0;i<s.length;i++){\n\
    \        if(s[i] > 9){\n            sum += (s[i]-10)\n        }\n    }\n    return\
    \ sum;\n}\n", "    let result = 0;\n    for (let char of s) {\n        if (char\
    \ >= '0' && char <= '9') result += char - '0';\n    }\n    return result;\n}\n",
  "  var sum = 0;\n  for(var i = 0, len = s.length; i < len; i++){\n    sum += s.charCodeAt(i)\
    \ - \"0\".charCodeAt(0);\n  }\n  return sum;\n}\n", "\t// TODO: Write your code\
    \ here\n\tvar sum=0;\n\tfor(i=s.length-1;i>=0;i--){\n\t\tsum+=s.charCodeAt(i);\n\
    \t}\n\treturn sum;\n}\n", "  let result = 0;\n  let counter = 0;\n  let prev =\
    \ null;\n  \n  for (let i=0;i<s.length;i++) {\n    if (prev && prev.charCodeAt(0)\
    \ - s.charCodeAt(i) > 1) {\n      counter++;\n    }\n    else {\n      result\
    \ += counter;\n      counter = 0;\n    }\n    prev = s.charCodeAt(i);\n  }\n \
    \ return result;\n}\n", "  var sum = 0;\n  for(var i = 0; i < s.length; i++){\n\
    \    var n = s.charCodeAt(i);\n    if(n < 5533 || n > 5760) sum += n; //include\
    \ chars\n  }\n  return sum;\n}", "\tlet result = 0;\n\tfor(let ch of s.split(\"\
    \")){\n\t\tresult += ch.charCodeAt(0) - 32;\n\t}\n\treturn result;\n}\n", "  return\
    \ s.split('').map(function(i){\n    return i.charCodeAt(0) - 'A'.charCodeAt(0);\n\
    \  }).reduce(function(p,c){\n    return p + c;\n  });\n}\n", "  let n = 0;\n \
    \ for (let i = 0; i < s.length; i++){\n    if(s.charCodeAt(i) >= 65 && s.charCodeAt(i)\
    \ <= 90){\n      n+=s.charCodeAt(i)-32;\n    }\n  }\n  return n;\n}\n", "  let\
    \ result = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s.charAt(i) >= 'A'\
    \ && s.charAt(i) <= 'Z'){\n      result += s.charCodeAt(i)-65;\n    }\n  }\n \
    \ return result;\n}\n", "    const arr = s.split('');\n    let sum = 0;\n\n  \
    \  for (let i = 0; i < arr.length; i++) {\n        let val = arr[i].charCodeAt(0);\n\
    \n        sum += val > 64 && val < 91 ? val - 96 : val;\n    }\n\n    return sum;\n\
    }\n", "\treturn s.split('').map(Number).reduce((a,b)=>a+(b>65&&b<90?b:b-55))\n\
    }\n", "    return s.split(\"\").map(c => c.charCodeAt(0) - 64).reduce((prev, curr)=>\
    \ prev + curr, 0);\n}\n</code>\n<|/ a tags=javascript,algorithm |>\n<| c |>\n\
    Good answer, but `String.prototype` is not a good place to put a global function,\
    \ since it [overrides it](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/prototype)\n\
    <|/ c |>\n<| c |>\nYeah, you're right. I think I'll leave the code as it is. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| a dscore=2 |>\nTo do so, we need to know\
    \ ASCII values of characters. ASCII character set is a set that every character\
    \ has a unique value which starts from 128(decimal), 128 + 1(zero). The only thing\
    \ that we need is that value which starts from 64.\nWe need to use String.charCodeAt\
    \ method in order to get ASCII code of a character. Then the result will start\
    \ with ASCII value of 64.\n<code>", "    var sum = 0;\n    for(var i = 0; i <\
    \ s.length; i++){\n        sum += s.charCodeAt(i) - 55;\n    }\n    return sum;\n\
    }\n", "    var sum = 0;\n    for(var i=0; i<s.length; i++){\n        sum += parseInt(s.charAt(i),\
    \ 36);\n    }\n    return sum;\n}", "  let result=0\n  let str=s.toUpperCase()\n\
    \  for (let i=0;i<str.length;i++){\n    result+=str.charCodeAt(i) - 64\n  }\n\
    \  return result\n}\n", "  let n=0\n  let i\n  for(i=0,j=s.length-1;i<s.length;i++){\n\
    \    if(s.charCodeAt(i)>64&&s.charCodeAt(i)<91){\n      n+=s.charCodeAt(j)\n \
    \   }\n    j-=1\n  }\n  return n\n}\n", "  let res = 0\n  for (let i of s) {\n\
    \    const code = i.charCodeAt(0)\n    console.log(`code: ${code}`)\n    res +=\
    \ (code > 96 && code < 123 ? code - 32 : code)\n  }\n  return res\n}\n", "\treturn\
    \ s.split('').map(function(x){return x.charCodeAt(0) - 64}).reduce(function(a,\
    \ b){return a+b})\n}\n", "\tvar sum = 0;\n\tfor (var i = 0; i < s.length; i++)\
    \ {\n\t\tvar code = s.charCodeAt(i) - 'a'.charCodeAt(0);\n\t\tif (code >= 65 &&\
    \ code <= 90) {\n\t\t\tsum += code;\n\t\t}\n\t}\n\treturn sum;\n}\n", "\tlet sum\
    \ = 0;\n\tfor(let i = 0; i < s.length; i++){\n\t\tif(charToNum[s.charAt(i)] >\
    \ charToNum[\"A\"]){\n\t\t\tsum+=charToNum[s.charAt(i)] - charToNum[\"A\"]\n\t\
    \t}else{\n\t\t\tsum+=charToNum[s.charAt(i)] - charToNum[\"a\"]\n\t\t}\n\t}\n\t\
    return sum;\n}\n", "  var sum = 0;\n  for(var i = 0; i < s.length; i++){\n   \
    \ sum += (s[i].charCodeAt(0) - 96);\n  }\n  return sum;\n}\n", "    var sum =\
    \ 0;\n    for(var i=0; i<s.length; i++){\n        var c = s.charCodeAt(i);\n \
    \       if(c > 47 && c < 58)\n            sum += c - 48;\n    }\n    return sum;\n\
    }\n", "    let arr = [];\n    for (let i = 0; i < s.length; i++){\n        let\
    \ char = s.charAt(i);\n        if(char >= '0' && char <= '9'){\n            arr.push(char\
    \ - '0');\n        }\n    }\n    let total = 0;\n    for (let i = 0; i < arr.length;\
    \ i++){\n        total += arr[i];\n    }\n    return total;\n}\n", "  return s.match(/[a-zA-Z]/g).reduce(function\
    \ (total, num) {\n    return total + num.charCodeAt(0);\n  }, 0);\n}", "  let\
    \ sum=0\n  for(let i=0;i<s.length;i++){\n    if(s.charCodeAt(i)<64)\n      sum+=s.charCodeAt(i)-64\n\
    \  }\n  return sum\n}\n", "    let result = 0;\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) > 47 && s.charCodeAt(i) < 58){\n       \
    \     result+=s.charCodeAt(i);\n        }\n    }\n    return result;\n}", "  \
    \  return s.split('').map(s=>s.charCodeAt(0)).filter(v=>v>=65&&v<=90).reduce((a,b)=>a+b|0,0)\n\
    }\n", "  if(s.length===0) return 0;\n  const map=new Map();\n  for(let i of s){\
    \ map.set(i, map.get(i) || 0) }\n  return Array.from(map.values()).reduce((sum,n)=>sum+n,\
    \ 0);\n}", "  return s.split('').map(function(item){\n    return item.charCodeAt(0);\n\
    \  }).reduce(function(prev,current){\n    return prev + current;\n  },0)\n}",
  "  return s\n    .split('')\n    .map(c => c.charCodeAt(0) - 'a'.charCodeAt(0))\n\
    \    .reduce((a, b) => a + b, 0);\n}\n", "  let sum = 0;\n  let i = s.length;\n\
    \  while (i > 0){\n    let c = s.charCodeAt(i-1);\n    if (c >= '0' && c <= '9')\n\
    \      sum += parseInt(c);\n    i--;\n  }\n  return sum;\n}\n", "    let digitSum\
    \ = 0;\n    for(let i = 0; i < s.length; i++){\n        let c = s.charCodeAt(i);\n\
    \        digitSum = digitSum + c >= 'A' ? c - 'A' + 10 : 0;\n    }\n    return\
    \ digitSum;\n}\n", "    \n    let re = new RegExp(/[^\\d]+/g)\n    let result\
    \ = s.replace(re,\"\").split(\"\").reduce((a,b)=>a+b.charCodeAt(0),0);\n    return\
    \ result \n}", "  let sum = 0; \n  for(let c of s) { \n    sum += c.codePointAt(0)\
    \ - 64\n  }\n  return sum;\n}", "    return s.split('').map(function(x) {\n  \
    \      if (/[A-Z]/.test(x)) {\n            return x.charCodeAt(0) - 32;\n    \
    \    }\n        return x;\n    }).reduce(function(prev, curr) {\n        return\
    \ prev + curr;\n    });\n}\n", "  var sum = 0;\n  for(var i=0; i<s.length; i++){\n\
    \    sum = sum + parseInt(s.charCodeAt(i));\n  }\n  return sum;\n}\n", "    var\
    \ sum = 0;\n    for(var i of s.split('')){\n        if(i.charCodeAt(0) > 96){\n\
    \            sum += i.charCodeAt(0) - 96;\n        }\n        else if(i.charCodeAt(0)\
    \ <= 96){\n            sum += i.charCodeAt(0);\n        }\n    }\n    return sum;\n\
    }", "    return s.replace(/[A-Z]/g,(a,b,c,d,e,f)=>c?Math.pow(e,c-1)*a+d:0).reduce((a,b)=>a+b,0)\n\
    }\n", "  for(let i=0;i<s.length;i++){\n    s[i]=(s[i]>='A'?s[i].charCodeAt(0)-48:s[i].charCodeAt(0)-96);\n\
    \  }\n  let sum=0;\n  for(let i=0;i<s.length;i++){\n    sum+=s[i];\n  }\n  return\
    \ sum;\n}\n", "\tvar sum = 0;\n\tvar len = s.length;\n\tfor(var i = 0; i < len;\
    \ i++){\n\t\tsum += s.charCodeAt(i) - 64;\n\t}\n\treturn sum;\n}\n", "  return\
    \ s.split('').map(v=>v==='A'?1:v==='a'?2:v==='B'?3:v==='b'?4:v==='C'?5:v==='c'?6:v==='D'?7:v==='d'?8:v==='E'?9:v==='e'?10:v==='F'?11:v==='f'?12:v==='G'?13:v==='g'?14:v==='H'?15:v==='h'?16:v==='I'?17:v==='i'?18:v==='J'?19:v==='j'?20:v==='K'?21:v==='k'?22:v==='L'?23:v==='l'?24:v==='M'?25:v==='m'?26:v==='N'?27:v==='n'?28:v==='O'?29:v==='o'?30:v==='P'?31:v==='p'?32:v==='Q'?33:v==='q'?34:v==='R'?35:v==='r'?36:v==='S'?37:v==='s'?38:v==='T'?39:v==='t'?40:v==='U'?41:v==='u'?42:v==='V'?43:v==='v'?44:v==='W'?45:v==='w'?46:v==='X'?47:v==='x'?48:v==='Y'?49:v==='y'?50:v==='Z'?51:v==='z'?52:-1).reduce((a,b)=>a+b);\n\
    }\n", "  return s.replace(/[a-zA-Z]+/gi, \"\").replace(/[^0-9]/g,\"\").length;\n\
    }\n", "    \n    var sum = 0;\n    for (var i=0; i<s.length; i++){\n        sum\
    \ += s.charCodeAt(i) - 48;\n    }\n    return sum;\n}\n", "  return s.split('').reduce((a,b)=>a+=b.charCodeAt()-96,0)\n\
    }\n", "  let sum = 0; \n  for (let c of s) {\n    sum += c.charCodeAt(0);\n  }\n\
    \  return sum;\n}\n", "  return s.split('').map(c => c.charCodeAt(0) - 64).reduce((acc,cur)\
    \ => (acc += cur), 0);\n}\n", "  var result = 0\n  for(var i =0 ; i< s.length\
    \ ; i++){\n    result += s.charCodeAt(i)*Math.pow(26,s.length-1-i)\n  }\n  return\
    \ result\n}\n", "\tlet sum = 0;\n\tlet characters = s.split('');\n\tlet upperCases\
    \ = [];\n\tfor(let i = 0; i < characters.length; i++){\n\t\tlet c = characters[i];\n\
    \t\tif (c.match(/[A-Z]/g)){\n\t\t\tupperCases.push(c);\n\t\t}\n\t}\n\tfor (let\
    \ i = 0; i < upperCases.length; i++){\n\t\tsum += +upperCases[i];\n\t}\n\treturn\
    \ sum;\n}\n", "\tvar sum = 0;\n\tvar len = s.length;\n\t\n\tfor(var i = 0; i <\
    \ len; i++) {\n\t\tsum += s.charCodeAt(i) - 64;\n\t}\n\t\n\treturn sum;\n}\n",
  "    return s.split('').filter(c => c.match(/\\d/)).map(c => c.charCodeAt(0) - '0'.charCodeAt(0)\
    \ + 1).reduce((a,b) => a + b);\n}\n", "  var sum = 0;\n  var l = s.length;\n \
    \ for(var i=0; i<l; i++){\n    var char = s[i];\n    var code = char.charCodeAt(0);\n\
    \    if(code > 9){\n      sum += code - 10;\n    }else{\n      sum += code;\n\
    \    }\n  }\n  return sum;\n}\n", "    let sum = 0;\n    for (const c of s){\n\
    \        if(c>='A' && c<='Z'){\n            sum = sum + c.charCodeAt(0) - 65;\n\
    \        }\n    }\n    return sum;\n}\n", "\t// Write code here\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++){\n    if (s.charCodeAt(i) > 55\
    \ && s.charCodeAt(i) < 65 || s.charCodeAt(i) > 90 && s.charCodeAt(i) < 97){\n\
    \      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n", "  return sum(s.split('').map(x\
    \ => x.charCodeAt(0) - 64));\n}\n", "    return s.split(\"\").reduce((sum, character)\
    \ => sum + character.charCodeAt(0) - 43, 0);\n}\n", "    var total = 0;\n    var\
    \ sum = 0;\n    for (var i = 0; i< s.length; i++){\n        if (s.charCodeAt(i)\
    \ > 47 && s.charCodeAt(i) < 58){\n            sum += s.charCodeAt(i);\n      \
    \  }\n    }\n    return sum;\n}\n", "  var result = 0;\n  for(var i = s.length\
    \ - 1; i >= 0; i--){\n    var char = s.charCodeAt(i);\n    var upperCaseChar =\
    \ char - 32;\n    if(upperCaseChar > -1){\n      result += upperCaseChar;\n  \
    \  }\n  }\n  return result;\n}", "    const re = new RegExp(`[${s.match(/[a-z]+/g).join('')}]`,\
    \ 'i');\n    return s.replace(re,m => m.charCodeAt(0))\n}\n", "    return s.replace(/[^\\\
    d]/g,'');\n}", "    var sum = 0; // sum variable\n    var len = s.length; // length\
    \ of string\n\n    for(var i=0; i<len; i++){\n        var char = s.charCodeAt(i);\
    \ // get char at position\n        sum += char - 64; // calculate sum\n    }\n\
    \n    return sum; // return sum\n}\n", "  const s = s.replace(/[^\\d]/g, \"\"\
    );\n  let sum = 0;\n  for(let i=0; i< s.length; i++){\n    sum += s.charCodeAt(i)\
    \ - 64;\n  }\n  return sum;\n}\n", "    let sum=0\n    for(let i=0;i<s.length;i++){\n\
    \        sum += (s.charCodeAt(i)-64) //64 is the ASCII value of 'A'\n    }\n \
    \   return sum\n}\n", "    return s.match(/[A-Z0-9]+/g).reduce(function(sum, curr){\n\
    \        return sum + curr.charCodeAt(0);\n    }, 0);\n}\n", "  return s.split('').map(function(char){\n\
    \    return char.charCodeAt(0) - 64;\n  }).reduce(function(sum, num){\n    return\
    \ sum + num;\n  });\n}", "  var sum = 0;\n  for (var i = 0; i < s.length; i++){\n\
    \    sum += s.charCodeAt(i) - 64;\n  }\n  return sum;\n}\n", "\treturn s.split('').map(String).reduce((a,b)\
    \ => Number(a) + Number(b), 0);\n}\n", "  let res = 0\n  for (let c of s) {\n\
    \    res += c < \"A\" ? c - \"a\".charCodeAt(0) : 0\n  }\n  return res\n}\n",
  "  return s.split('').reduce((p, c) => p+Math.max(c.charCodeAt(), c.charCodeAt(0)+32),\
    \ 0);\n}\n", "  let sum = 0\n  for (let i = 0; i < s.length; i++){\n    let charCode\
    \ = s.charCodeAt(i)\n    if (charCode > 64 && charCode < 91){\n      sum += (charCode\
    \ - 64)\n    }\n  }\n  return sum\n}\n", "   \n   let sum=0\n   for(let i=0; i<\
    \ s.length; i++){\n      if(s.charCodeAt(i)>=65 && s.charCodeAt(i)<=90){\n   \
    \      sum+=s.charCodeAt(i)\n      }\n   }\n   return sum\n}\n", "  return s.split(\"\
    \").reduce(function(a,b){\n    return a + b.charCodeAt(0) - 96;\n  }, 0)\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i)\
    \ - 64;\n    }\n    return sum;\n}\n", "    if (s == null || s.trim() == \"\"\
    ) {\n        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < s.length;\
    \ i++)\n        sum += s.charCodeAt(i) - 48;\n    return sum;\n}\n", "    return\
    \ s.split('').filter(function(c){return c.codePointAt(0) >= 65 && c.codePointAt(0)\
    \ <= 90}).map(function(c){return c.codePointAt(0) + c.codePointAt(1)}).reduce(function(a,\
    \ b){return a + b});\n}\n", "  var sum=0;\n  for(var i=0;i<s.length;i++){\n  \
    \  var c=s.charCodeAt(i);\n    if(isUpper(c)&&i<s.length){\n      sum+=c-32;\n\
    \    }\n  }\n  return sum;\n}", "    return s.split('').map(function(_,i){\n \
    \       console.log(_, i, \"i\")\n        if(i===0){\n            return 0;\n\
    \        }\n        var sum=0;\n        for(var j=0;j<s[i].length;j++){\n    \
    \        sum+=s[i].charCodeAt(j);\n        }\n        console.log(sum)\n     \
    \   return sum;\n    }).reduce(function(a,b){return a+b});\n}\n", "  let chars\
    \ = s.split(\"\");\n  let sum = 0;\n  for(let i = 0; i < chars.length; i++){\n\
    \    let val = chars[i].charCodeAt(0);\n    sum += val > 90 ? val - 90 : val +\
    \ 90;\n  }\n  return sum;\n}\n", "\tlet sum = 0;\n\tfor(let i=0; i< s.length;\
    \ i++){\n\t\tsum += (s.charCodeAt(i) - '0'.charCodeAt(0)) * (i % 2 ? -1 : 1);\n\
    \t}\n\treturn sum;\n}\n", "  // Write your code in JavaScript (Node.js 8.9.4)\n\
    \  var sum=0;\n  for(var i=0;i<s.length-1;i++){\n    if(s.charCodeAt(i)>=64 &&\
    \ s.charCodeAt(i)<=91){\n      sum+=s.charCodeAt(i);\n    }\n  }\n  return sum;\n\
    }", "  if(typeof s !== 'string') return '';\n  var sum = 0;\n  for(var i = 0;\
    \ i < s.length; i++){\n    if(s.charCodeAt(i) > 47 && s.charCodeAt(i) < 58) sum\
    \ += s.charCodeAt(i);\n  }\n  return sum;\n}\n", "\tvar sum = 0;\n\tvar i, ch;\n\
    \tfor(i=0; i<s.length; i++){\n\t\tch = s.charCodeAt(i);\n\t\tsum = sum+Math.pow(ch,\
    \ 1);\n\t}\n\treturn sum;\n}\n", "  var sum = 0;\n  for(var i = 0; i < s.length;\
    \ i++){\n    sum += s.charCodeAt(i) - 48;\n  }\n  return sum;\n}\n", "  let newStr\
    \ = Array.from(s);\n  let result = 0;\n  for(let i=0; i<newStr.length; i++){\n\
    \    result += parseInt(newStr[i]);\n  }\n  return result;\n}", "    const result\
    \ = []\n    for (let i = 0; i < s.length; i++){\n        const a = s.charCodeAt(i)\n\
    \        const digit = String.fromCharCode((a)-48)\n        result.push(digit)\n\
    \    }\n    return result.join('').toUpperCase()\n}", "\treturn s.split(\"\").map(function(str){\n\
    \t\treturn parseInt(str,16);\n\t}).reduce(function(total,value){\n\t\treturn total\
    \ + value;\n\t},0);\n}\n", "\tconst res = [];\n\tfor (let i = 0; i < s.length;\
    \ i++){\n\t\tif (s[i] >= \"A\" && s[i] <= \"Z\")\n\t\t\tres.push(s[i] - \"A\"\
    \ + 10);\n\t\telse\n\t\t\tres.push(s[i]);\n\t}\n\treturn res.reduce((a,b) => a\
    \ + b);\n}\n", "  let sum = 0;\n  for (let i = 0; i<s.length; i++){\n    const\
    \ charCode = s.charCodeAt(i);\n    if (charCode < \"z\".charCodeAt() || charCode\
    \ > \"z\".charCodeAt(\"z\".length)){\n      continue;\n    }\n    sum += charCode\
    \ - \"a\".charCodeAt();\n  }\n  return sum;\n}\n", "    const result= 0;\n   \
    \ for (const char of s) {\n        if(char.charCodeAt(0) < 65 || char.charCodeAt(0)\
    \ > 90) continue;\n        result +=char.charCodeAt(0);\n    }\n    return result;\n\
    }\n", "  let chars = s.split('');\n  let sum = 0;\n  for(let i=0;i<chars.length;i++){\n\
    \    let n = chars[i];\n    if(n.match(/[A-Z]/) && n !== n.toLowerCase()) sum\
    \ += n.charCodeAt(0);\n  }\n  return sum;\n}\n", "  return s.split('').map(function\
    \ (char){\n    return char.charCodeAt() - 'A'.charCodeAt() + 1;\n  }).reduce(function\
    \ (a,b){\n    return a + b;\n  });\n}\ndigitSum(\"helloE\") //69\ndigitSum(\"\
    woArBld\") //131\ndigitSum(\"aAaaaXa\") //153", "  if(!s) return 0;\n  let result\
    \ = 0;\n  for(const char of s) {\n    result += char.charCodeAt(0) - 96;\n  }\n\
    \  return result;\n}\n", "  var sum = 0;\n  for(var i=0;i<s.length;i++){\n   \
    \ if(s.charCodeAt(i)>=48 && s.charCodeAt(i)<=57)\n      sum += s.charCodeAt(i);\n\
    \  }\n  return sum;\n}", "  let sum = 0;\n  for(let i =0;i<s.length;i++){\n  \
    \  let char = s.charAt(i);\n    let digit = getDigitsOf(char);\n    sum += digit\
    \ * Math.pow(26, digit);\n  }\n  return sum;\n}\n", "   let sum = 0;\n   for(\
    \ let i=0; i<s.length; i++ ){\n      if( s.charCodeAt(i) >47 && s.charCodeAt(i)\
    \ <58 ){\n        sum += s.charCodeAt(i);\n      }\n   }\n   return sum;\n}",
  "  return s.split('').map(function(char){\n    return char.charCodeAt(0) - 64;\n\
    \  }).reduce(function(a, b){\n    return a + b;\n  });\n}\n", "  return s.split('').map(function(ch){\n\
    \    return ch.charCodeAt(0) - 55;\n  }).reduce(function(a, b){\n    return a\
    \ + b;\n  }, 0);\n}\n", "    return s.split('').reduce((a, c)=>c>='A' && c<='Z'?a+c*32:0,\
    \ 0);\n}\n", "    \n    let len = s.length\n    \n    let numSum = 0\n    \n \
    \   for(let i = len-1; i >= 0; i--){\n        if(s.charCodeAt(i) >= 65 && s.charCodeAt(i)\
    \ <= 90){\n            numSum = numSum + s.charCodeAt(i)\n        }\n        \n\
    \    }\n    \n    return numSum\n}\n", "  if (s == \"\") return 0;\n  let sArr\
    \ = [...s];\n  let len = sArr.length;\n  let res = 0;\n  for (let i = 0; i < len;\
    \ i++) {\n    let letter = sArr[i];\n    if (letter.charCodeAt(0) > 90 && letter.charCodeAt(0)\
    \ <= 97) res += letter.charCodeAt(0) - 90;\n    else res += letter.charCodeAt(0);\n\
    \  }\n  return res;\n}\n", "    return s.split('').map(function(x){\n        return\
    \ x.charCodeAt(0) - 32;\n    }).reduce(function(acc, cur){\n        return acc\
    \ + cur;\n    });\n}\n", "    return s.split('').reduce((acc, v) => (acc + v.charCodeAt(0)\
    \ - (v.charCodeAt(0) - 48)), 0);\n}\n", "\tvar ret = 0;\n\tfor(var i = 0; i <\
    \ s.length; i++)\n\t\tif(s.charCodeAt(i) > 64)\n\t\t\tret += s.charCodeAt(i);\n\
    \treturn ret;\n}\n", "    return s.match(/[\\d]+/g).reduce(function(s,d){return\
    \ s+(+d)},0)\n}\n", "    var result = 0;\n    for(var i = 0; i < s.length; i++){\n\
    \        var code = s.charCodeAt(i);\n        if(code < 64){\n            result\
    \ += code;\n        }\n    }\n    return result;\n}\n", "  return s.split('').map(i\
    \ => i.charCodeAt(0) - 64).reduce((a, b) => a + b);\n}", "  let res = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    if (s.charCodeAt(i) > 64){\n      res+=s.charCodeAt(i)-64;\n\
    \    }\n  }\n  return res;\n}\n", "\treturn +s.replace(/\\D/g,'')\n}\n", "   \
    \ return parseInt(s.match(/[A-Z]/g).map(function(x){return x.charCodeAt(0)-64}).reduce(function(a,b){return\
    \ a+b;},0));\n}\n", "    return s.split('').map(function(char){\n        return\
    \ char.charCodeAt(0);\n    }).reduce(function(p, c){\n        return p + c;\n\
    \    }, 0)\n}\n", "  let sum = 0;\n  for(let i = 0; i < s.length; i++){\n    sum\
    \ += s.charCodeAt(i) - 48;\n  }\n  return sum;\n}\n", "    // Write code here\n\
    \    var sum = 0;\n    for(var i = 0; i<s.length; i++){\n        if(s.charCodeAt(i)\
    \ > 47 && s.charCodeAt(i) < 58){\n            sum += s.charCodeAt(i);\n      \
    \  }\n    }\n    return sum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

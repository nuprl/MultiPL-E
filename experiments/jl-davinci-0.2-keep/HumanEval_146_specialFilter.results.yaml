name: HumanEval_146_specialFilter
language: julia
results:
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpev8lu7vq.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpev8lu7vq.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpev8lu7vq.jl:21\\ntest set: Test Failed at /tmp/tmpev8lu7vq.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpev8lu7vq.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpev8lu7vq.jl:21\\ntest set: Test Failed at /tmp/tmpev8lu7vq.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpev8lu7vq.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpev8lu7vq.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6g89kims.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6g89kims.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6g89kims.jl:21\ntest set: Test Failed at /tmp/tmp6g89kims.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp6g89kims.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6g89kims.jl:21\ntest set: Test Failed at /tmp/tmp6g89kims.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6g89kims.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6g89kims.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6g89kims.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjw6tnx15.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjw6tnx15.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjw6tnx15.jl:21\ntest set: Test Failed at /tmp/tmpjw6tnx15.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpjw6tnx15.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjw6tnx15.jl:21\ntest set: Test Failed at /tmp/tmpjw6tnx15.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjw6tnx15.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjw6tnx15.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjw6tnx15.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpt9gkkd__.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpt9gkkd__.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt9gkkd__.jl:21\\ntest set: Test Failed at /tmp/tmpt9gkkd__.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpt9gkkd__.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt9gkkd__.jl:21\\ntest set: Test Failed at /tmp/tmpt9gkkd__.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpt9gkkd__.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpt9gkkd__.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl10d_ox4.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpl10d_ox4.jl:10\n   [2] top-level scope at /tmp/tmpl10d_ox4.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl10d_ox4.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpl10d_ox4.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpl10d_ox4.jl:10\n   [2] top-level scope at /tmp/tmpl10d_ox4.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl10d_ox4.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpl10d_ox4.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpl10d_ox4.jl:10\n   [2] top-level scope at /tmp/tmpl10d_ox4.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl10d_ox4.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpl10d_ox4.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpl10d_ox4.jl:10\n   [2] top-level scope at /tmp/tmpl10d_ox4.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl10d_ox4.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpl10d_ox4.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpl10d_ox4.jl:10\n   [2] top-level scope at /tmp/tmpl10d_ox4.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl10d_ox4.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpl10d_ox4.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpl10d_ox4.jl:10\n   [2] top-level scope at /tmp/tmpl10d_ox4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl10d_ox4.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpl10d_ox4.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpl10d_ox4.jl:10\n   [2] top-level scope at /tmp/tmpl10d_ox4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl10d_ox4.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl10d_ox4.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnzrh2xfi.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnzrh2xfi.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzrh2xfi.jl:21\ntest set: Test Failed at /tmp/tmpnzrh2xfi.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpnzrh2xfi.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzrh2xfi.jl:21\ntest set: Test Failed at /tmp/tmpnzrh2xfi.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnzrh2xfi.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzrh2xfi.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzrh2xfi.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgng5i6ln.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpgng5i6ln.jl:10\n   [2] top-level scope at /tmp/tmpgng5i6ln.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgng5i6ln.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpgng5i6ln.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpgng5i6ln.jl:10\n   [2] top-level scope at /tmp/tmpgng5i6ln.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgng5i6ln.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpgng5i6ln.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpgng5i6ln.jl:10\n   [2] top-level scope at /tmp/tmpgng5i6ln.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgng5i6ln.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpgng5i6ln.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpgng5i6ln.jl:10\n   [2] top-level scope at /tmp/tmpgng5i6ln.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgng5i6ln.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpgng5i6ln.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpgng5i6ln.jl:10\n   [2] top-level scope at /tmp/tmpgng5i6ln.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgng5i6ln.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpgng5i6ln.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpgng5i6ln.jl:10\n   [2] top-level scope at /tmp/tmpgng5i6ln.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgng5i6ln.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpgng5i6ln.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpgng5i6ln.jl:10\n   [2] top-level scope at /tmp/tmpgng5i6ln.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgng5i6ln.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgng5i6ln.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeydm1a9c.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpeydm1a9c.jl:10\n   [2] top-level scope at /tmp/tmpeydm1a9c.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeydm1a9c.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpeydm1a9c.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpeydm1a9c.jl:10\n   [2] top-level scope at /tmp/tmpeydm1a9c.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeydm1a9c.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpeydm1a9c.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpeydm1a9c.jl:10\n   [2] top-level scope at /tmp/tmpeydm1a9c.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeydm1a9c.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpeydm1a9c.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpeydm1a9c.jl:10\n   [2] top-level scope at /tmp/tmpeydm1a9c.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeydm1a9c.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpeydm1a9c.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpeydm1a9c.jl:10\n   [2] top-level scope at /tmp/tmpeydm1a9c.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeydm1a9c.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpeydm1a9c.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpeydm1a9c.jl:10\n   [2] top-level scope at /tmp/tmpeydm1a9c.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeydm1a9c.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpeydm1a9c.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpeydm1a9c.jl:10\n   [2] top-level scope at /tmp/tmpeydm1a9c.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeydm1a9c.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeydm1a9c.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    n = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10 !=\
    \ 0\n            n += 1\n        end\n    end\n    return n\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcso8tsto.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpcso8tsto.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcso8tsto.jl:21\\ntest set: Test Failed at /tmp/tmpcso8tsto.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcso8tsto.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcso8tsto.jl:21\\ntest set: Test Failed at /tmp/tmpcso8tsto.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcso8tsto.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcso8tsto.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_njw91za.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_njw91za.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_njw91za.jl:21\ntest set: Test Failed at /tmp/tmp_njw91za.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp_njw91za.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_njw91za.jl:21\ntest set: Test Failed at /tmp/tmp_njw91za.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_njw91za.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_njw91za.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_njw91za.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbhphxhyi.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbhphxhyi.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhphxhyi.jl:21\ntest set: Test Failed at /tmp/tmpbhphxhyi.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbhphxhyi.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhphxhyi.jl:21\ntest set: Test Failed at /tmp/tmpbhphxhyi.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbhphxhyi.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbhphxhyi.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhphxhyi.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx7s4ggj3.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpx7s4ggj3.jl:10\n   [2] top-level scope at /tmp/tmpx7s4ggj3.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx7s4ggj3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7s4ggj3.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpx7s4ggj3.jl:10\n   [2] top-level scope at /tmp/tmpx7s4ggj3.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx7s4ggj3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7s4ggj3.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpx7s4ggj3.jl:10\n   [2] top-level scope at /tmp/tmpx7s4ggj3.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx7s4ggj3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7s4ggj3.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpx7s4ggj3.jl:10\n   [2] top-level scope at /tmp/tmpx7s4ggj3.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx7s4ggj3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7s4ggj3.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpx7s4ggj3.jl:10\n   [2] top-level scope at /tmp/tmpx7s4ggj3.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx7s4ggj3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7s4ggj3.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpx7s4ggj3.jl:10\n   [2] top-level scope at /tmp/tmpx7s4ggj3.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx7s4ggj3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpx7s4ggj3.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpx7s4ggj3.jl:10\n   [2] top-level scope at /tmp/tmpx7s4ggj3.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx7s4ggj3.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx7s4ggj3.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe6d9i3xq.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpe6d9i3xq.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe6d9i3xq.jl:21\ntest set: Test Failed at /tmp/tmpe6d9i3xq.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpe6d9i3xq.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe6d9i3xq.jl:21\ntest set: Test Failed at /tmp/tmpe6d9i3xq.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe6d9i3xq.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe6d9i3xq.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe6d9i3xq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxnnzwz0q.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxnnzwz0q.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxnnzwz0q.jl:21\\ntest set: Test Failed at /tmp/tmpxnnzwz0q.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxnnzwz0q.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxnnzwz0q.jl:21\\ntest set: Test Failed at /tmp/tmpxnnzwz0q.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxnnzwz0q.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxnnzwz0q.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpxnnzwz0q.jl:19\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpyg23xdwy.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpyg23xdwy.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyg23xdwy.jl:21\\ntest set: Test Failed at /tmp/tmpyg23xdwy.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpyg23xdwy.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyg23xdwy.jl:21\\ntest set: Test Failed at /tmp/tmpyg23xdwy.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpyg23xdwy.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyg23xdwy.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpchh28o8g.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpchh28o8g.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpchh28o8g.jl:21\ntest set: Test Failed at /tmp/tmpchh28o8g.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpchh28o8g.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpchh28o8g.jl:21\ntest set: Test Failed at /tmp/tmpchh28o8g.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpchh28o8g.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpchh28o8g.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchh28o8g.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj4y9o40s.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj4y9o40s.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4y9o40s.jl:21\ntest set: Test Failed at /tmp/tmpj4y9o40s.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpj4y9o40s.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4y9o40s.jl:21\ntest set: Test Failed at /tmp/tmpj4y9o40s.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj4y9o40s.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4y9o40s.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj4y9o40s.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeqptcsbb.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpeqptcsbb.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeqptcsbb.jl:21\\ntest set: Test Failed at /tmp/tmpeqptcsbb.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeqptcsbb.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeqptcsbb.jl:21\\ntest set: Test Failed at /tmp/tmpeqptcsbb.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeqptcsbb.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeqptcsbb.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && (i %\
    \ 10) % 2 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpyn27bulk.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpyn27bulk.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyn27bulk.jl:21\\ntest set: Test Failed at /tmp/tmpyn27bulk.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpyn27bulk.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyn27bulk.jl:21\\ntest set: Test Failed at /tmp/tmpyn27bulk.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpyn27bulk.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyn27bulk.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp78uj4qhm.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp78uj4qhm.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78uj4qhm.jl:21\ntest set: Test Failed at /tmp/tmp78uj4qhm.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp78uj4qhm.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78uj4qhm.jl:21\ntest set: Test Failed at /tmp/tmp78uj4qhm.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp78uj4qhm.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp78uj4qhm.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78uj4qhm.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8qu3j3j6.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8qu3j3j6.jl:10\n   [2] top-level scope at /tmp/tmp8qu3j3j6.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8qu3j3j6.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qu3j3j6.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8qu3j3j6.jl:10\n   [2] top-level scope at /tmp/tmp8qu3j3j6.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8qu3j3j6.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qu3j3j6.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8qu3j3j6.jl:10\n   [2] top-level scope at /tmp/tmp8qu3j3j6.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8qu3j3j6.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qu3j3j6.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8qu3j3j6.jl:10\n   [2] top-level scope at /tmp/tmp8qu3j3j6.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8qu3j3j6.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qu3j3j6.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8qu3j3j6.jl:10\n   [2] top-level scope at /tmp/tmp8qu3j3j6.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8qu3j3j6.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qu3j3j6.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8qu3j3j6.jl:10\n   [2] top-level scope at /tmp/tmp8qu3j3j6.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8qu3j3j6.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8qu3j3j6.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8qu3j3j6.jl:10\n   [2] top-level scope at /tmp/tmp8qu3j3j6.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8qu3j3j6.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qu3j3j6.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(i\
    \ % 10)\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpduco49d4.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpduco49d4.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpduco49d4.jl:21\ntest set: Test Failed at /tmp/tmpduco49d4.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpduco49d4.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpduco49d4.jl:21\ntest set: Test Failed at /tmp/tmpduco49d4.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpduco49d4.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpduco49d4.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpduco49d4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp014y4wmh.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp014y4wmh.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp014y4wmh.jl:21\\ntest set: Test Failed at /tmp/tmp014y4wmh.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp014y4wmh.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp014y4wmh.jl:21\\ntest set: Test Failed at /tmp/tmp014y4wmh.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp014y4wmh.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp014y4wmh.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3hwdq9mj.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3hwdq9mj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3hwdq9mj.jl:21\ntest set: Test Failed at /tmp/tmp3hwdq9mj.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp3hwdq9mj.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3hwdq9mj.jl:21\ntest set: Test Failed at /tmp/tmp3hwdq9mj.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3hwdq9mj.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3hwdq9mj.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3hwdq9mj.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3i2o7c90.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3i2o7c90.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3i2o7c90.jl:21\ntest set: Test Failed at /tmp/tmp3i2o7c90.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp3i2o7c90.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3i2o7c90.jl:21\ntest set: Test Failed at /tmp/tmp3i2o7c90.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3i2o7c90.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3i2o7c90.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3i2o7c90.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpipa0izmq.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpipa0izmq.jl:10\n   [2] top-level scope at /tmp/tmpipa0izmq.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpipa0izmq.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpipa0izmq.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpipa0izmq.jl:10\n   [2] top-level scope at /tmp/tmpipa0izmq.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpipa0izmq.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpipa0izmq.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpipa0izmq.jl:10\n   [2] top-level scope at /tmp/tmpipa0izmq.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpipa0izmq.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpipa0izmq.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpipa0izmq.jl:10\n   [2] top-level scope at /tmp/tmpipa0izmq.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpipa0izmq.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpipa0izmq.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpipa0izmq.jl:10\n   [2] top-level scope at /tmp/tmpipa0izmq.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpipa0izmq.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpipa0izmq.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpipa0izmq.jl:10\n   [2] top-level scope at /tmp/tmpipa0izmq.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpipa0izmq.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpipa0izmq.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpipa0izmq.jl:10\n   [2] top-level scope at /tmp/tmpipa0izmq.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpipa0izmq.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpipa0izmq.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx36wbi6s.jl:18\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpx36wbi6s.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx36wbi6s.jl:16\ntest set: Test Failed at /tmp/tmpx36wbi6s.jl:19\n\
    \  Expression: candidate([33, -2, -3, 45, 21, 109]) == 2\n   Evaluated: 0 == 2\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpx36wbi6s.jl:19\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx36wbi6s.jl:16\ntest set: Test Failed at /tmp/tmpx36wbi6s.jl:20\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 0 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpx36wbi6s.jl:20\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx36wbi6s.jl:16\ntest set: Test Failed at /tmp/tmpx36wbi6s.jl:21\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 0 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpx36wbi6s.jl:21\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx36wbi6s.jl:16\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx36wbi6s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(i))\
    \ && isodd(last(i))\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1auogf_3.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1auogf_3.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1auogf_3.jl:21\\ntest set: Test Failed at /tmp/tmp1auogf_3.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1auogf_3.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1auogf_3.jl:21\\ntest set: Test Failed at /tmp/tmp1auogf_3.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1auogf_3.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1auogf_3.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqj5wbr2m.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqj5wbr2m.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqj5wbr2m.jl:21\\ntest set: Test Failed at /tmp/tmpqj5wbr2m.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqj5wbr2m.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqj5wbr2m.jl:21\\ntest set: Test Failed at /tmp/tmpqj5wbr2m.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqj5wbr2m.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqj5wbr2m.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmfco3x96.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmfco3x96.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmfco3x96.jl:21\ntest set: Test Failed at /tmp/tmpmfco3x96.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpmfco3x96.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmfco3x96.jl:21\ntest set: Test Failed at /tmp/tmpmfco3x96.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmfco3x96.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmfco3x96.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmfco3x96.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpinj9x56f.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpinj9x56f.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpinj9x56f.jl:21\ntest set: Test Failed at /tmp/tmpinj9x56f.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpinj9x56f.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpinj9x56f.jl:21\ntest set: Test Failed at /tmp/tmpinj9x56f.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpinj9x56f.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpinj9x56f.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpinj9x56f.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe5eyf73t.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpe5eyf73t.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe5eyf73t.jl:21\ntest set: Test Failed at /tmp/tmpe5eyf73t.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpe5eyf73t.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe5eyf73t.jl:21\ntest set: Test Failed at /tmp/tmpe5eyf73t.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe5eyf73t.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe5eyf73t.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5eyf73t.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptsg06s4q.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptsg06s4q.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptsg06s4q.jl:21\ntest set: Test Failed at /tmp/tmptsg06s4q.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmptsg06s4q.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptsg06s4q.jl:21\ntest set: Test Failed at /tmp/tmptsg06s4q.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptsg06s4q.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptsg06s4q.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptsg06s4q.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd58bal76.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd58bal76.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd58bal76.jl:21\ntest set: Test Failed at /tmp/tmpd58bal76.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpd58bal76.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd58bal76.jl:21\ntest set: Test Failed at /tmp/tmpd58bal76.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd58bal76.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd58bal76.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd58bal76.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp73yw8n5y.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp73yw8n5y.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp73yw8n5y.jl:21\ntest set: Test Failed at /tmp/tmp73yw8n5y.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp73yw8n5y.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp73yw8n5y.jl:21\ntest set: Test Failed at /tmp/tmp73yw8n5y.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp73yw8n5y.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp73yw8n5y.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp73yw8n5y.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8etjc32m.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp8etjc32m.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8etjc32m.jl:21\\ntest set: Test Failed at /tmp/tmp8etjc32m.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8etjc32m.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8etjc32m.jl:21\\ntest set: Test Failed at /tmp/tmp8etjc32m.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8etjc32m.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8etjc32m.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpup368ywf.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpup368ywf.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpup368ywf.jl:21\ntest set: Test Failed at /tmp/tmpup368ywf.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpup368ywf.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpup368ywf.jl:21\ntest set: Test Failed at /tmp/tmpup368ywf.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpup368ywf.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpup368ywf.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpup368ywf.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyev04i0i.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyev04i0i.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyev04i0i.jl:21\ntest set: Test Failed at /tmp/tmpyev04i0i.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpyev04i0i.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyev04i0i.jl:21\ntest set: Test Failed at /tmp/tmpyev04i0i.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyev04i0i.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyev04i0i.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyev04i0i.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2jf46il6.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2jf46il6.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2jf46il6.jl:21\ntest set: Test Failed at /tmp/tmp2jf46il6.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp2jf46il6.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2jf46il6.jl:21\ntest set: Test Failed at /tmp/tmp2jf46il6.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2jf46il6.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2jf46il6.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2jf46il6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(i))\
    \ && isodd(last(i))\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph7woo1fs.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph7woo1fs.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph7woo1fs.jl:21\ntest set: Test Failed at /tmp/tmph7woo1fs.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmph7woo1fs.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph7woo1fs.jl:21\ntest set: Test Failed at /tmp/tmph7woo1fs.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph7woo1fs.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph7woo1fs.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7woo1fs.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1_6n3hls.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1_6n3hls.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1_6n3hls.jl:21\ntest set: Test Failed at /tmp/tmp1_6n3hls.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1_6n3hls.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1_6n3hls.jl:21\ntest set: Test Failed at /tmp/tmp1_6n3hls.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1_6n3hls.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1_6n3hls.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1_6n3hls.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpokzd2cg0.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpokzd2cg0.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpokzd2cg0.jl:21\\ntest set: Test Failed at /tmp/tmpokzd2cg0.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpokzd2cg0.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpokzd2cg0.jl:21\\ntest set: Test Failed at /tmp/tmpokzd2cg0.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpokzd2cg0.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpokzd2cg0.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpoals874r.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpoals874r.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoals874r.jl:21\\ntest set: Test Failed at /tmp/tmpoals874r.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpoals874r.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoals874r.jl:21\\ntest set: Test Failed at /tmp/tmpoals874r.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpoals874r.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpoals874r.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpoals874r.jl:19\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk4s89l9z.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpk4s89l9z.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk4s89l9z.jl:21\\ntest set: Test Failed at /tmp/tmpk4s89l9z.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk4s89l9z.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk4s89l9z.jl:21\\ntest set: Test Failed at /tmp/tmpk4s89l9z.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk4s89l9z.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk4s89l9z.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph5cgzxmb.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph5cgzxmb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5cgzxmb.jl:21\ntest set: Test Failed at /tmp/tmph5cgzxmb.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmph5cgzxmb.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5cgzxmb.jl:21\ntest set: Test Failed at /tmp/tmph5cgzxmb.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph5cgzxmb.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5cgzxmb.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5cgzxmb.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpm1xrb0lb.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpm1xrb0lb.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm1xrb0lb.jl:21\\ntest set: Test Failed at /tmp/tmpm1xrb0lb.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpm1xrb0lb.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm1xrb0lb.jl:21\\ntest set: Test Failed at /tmp/tmpm1xrb0lb.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpm1xrb0lb.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm1xrb0lb.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvwy01l52.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpvwy01l52.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvwy01l52.jl:21\\ntest set: Test Failed at /tmp/tmpvwy01l52.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvwy01l52.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvwy01l52.jl:21\\ntest set: Test Failed at /tmp/tmpvwy01l52.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvwy01l52.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvwy01l52.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxhj0bpuv.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxhj0bpuv.jl:10\n   [2] top-level scope at /tmp/tmpxhj0bpuv.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhj0bpuv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhj0bpuv.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxhj0bpuv.jl:10\n   [2] top-level scope at /tmp/tmpxhj0bpuv.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhj0bpuv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhj0bpuv.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxhj0bpuv.jl:10\n   [2] top-level scope at /tmp/tmpxhj0bpuv.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhj0bpuv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhj0bpuv.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxhj0bpuv.jl:10\n   [2] top-level scope at /tmp/tmpxhj0bpuv.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhj0bpuv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhj0bpuv.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxhj0bpuv.jl:10\n   [2] top-level scope at /tmp/tmpxhj0bpuv.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhj0bpuv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhj0bpuv.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxhj0bpuv.jl:10\n   [2] top-level scope at /tmp/tmpxhj0bpuv.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhj0bpuv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhj0bpuv.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxhj0bpuv.jl:10\n   [2] top-level scope at /tmp/tmpxhj0bpuv.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhj0bpuv.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxhj0bpuv.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqzltqmw7.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqzltqmw7.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqzltqmw7.jl:21\ntest set: Test Failed at /tmp/tmpqzltqmw7.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpqzltqmw7.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqzltqmw7.jl:21\ntest set: Test Failed at /tmp/tmpqzltqmw7.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqzltqmw7.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqzltqmw7.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqzltqmw7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp_apwvos.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpp_apwvos.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp_apwvos.jl:21\ntest set: Test Failed at /tmp/tmpp_apwvos.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpp_apwvos.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp_apwvos.jl:21\ntest set: Test Failed at /tmp/tmpp_apwvos.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp_apwvos.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp_apwvos.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp_apwvos.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(i\
    \ % 10)\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqsomjv4z.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqsomjv4z.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqsomjv4z.jl:21\\ntest set: Test Failed at /tmp/tmpqsomjv4z.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqsomjv4z.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqsomjv4z.jl:21\\ntest set: Test Failed at /tmp/tmpqsomjv4z.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqsomjv4z.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqsomjv4z.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10\n            if i % 2\
    \ != 0\n                if i % 10 != 0\n                    count += 1\n     \
    \           end\n            end\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyd2ps3b8.jl:28\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyd2ps3b8.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyd2ps3b8.jl:25\ntest set: Test Failed at /tmp/tmpyd2ps3b8.jl:29\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpyd2ps3b8.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyd2ps3b8.jl:25\ntest set: Test Failed at /tmp/tmpyd2ps3b8.jl:30\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyd2ps3b8.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyd2ps3b8.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyd2ps3b8.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphwofhi9i.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphwofhi9i.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphwofhi9i.jl:21\ntest set: Test Failed at /tmp/tmphwofhi9i.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmphwofhi9i.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphwofhi9i.jl:21\ntest set: Test Failed at /tmp/tmphwofhi9i.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphwofhi9i.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphwofhi9i.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphwofhi9i.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi06tv0y_.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpi06tv0y_.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi06tv0y_.jl:21\ntest set: Test Failed at /tmp/tmpi06tv0y_.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpi06tv0y_.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi06tv0y_.jl:21\ntest set: Test Failed at /tmp/tmpi06tv0y_.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi06tv0y_.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi06tv0y_.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi06tv0y_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpauj04krq.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpauj04krq.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpauj04krq.jl:21\\ntest set: Test Failed at /tmp/tmpauj04krq.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpauj04krq.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpauj04krq.jl:21\\ntest set: Test Failed at /tmp/tmpauj04krq.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpauj04krq.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpauj04krq.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzegny4tu.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzegny4tu.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzegny4tu.jl:21\ntest set: Test Failed at /tmp/tmpzegny4tu.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpzegny4tu.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzegny4tu.jl:21\ntest set: Test Failed at /tmp/tmpzegny4tu.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzegny4tu.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzegny4tu.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzegny4tu.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && isodd(n) && isodd(first(digits(n)))\
    \ && isodd(last(digits(n)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphbprh4al.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphbprh4al.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbprh4al.jl:21\ntest set: Test Failed at /tmp/tmphbprh4al.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmphbprh4al.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbprh4al.jl:21\ntest set: Test Failed at /tmp/tmphbprh4al.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphbprh4al.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbprh4al.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphbprh4al.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1nbunmpn.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1nbunmpn.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1nbunmpn.jl:21\\ntest set: Test Failed at /tmp/tmp1nbunmpn.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1nbunmpn.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1nbunmpn.jl:21\\ntest set: Test Failed at /tmp/tmp1nbunmpn.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1nbunmpn.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1nbunmpn.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7f6hhagh.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7f6hhagh.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f6hhagh.jl:21\ntest set: Test Failed at /tmp/tmp7f6hhagh.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp7f6hhagh.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f6hhagh.jl:21\ntest set: Test Failed at /tmp/tmp7f6hhagh.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7f6hhagh.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f6hhagh.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7f6hhagh.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp82ce4slu.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp82ce4slu.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82ce4slu.jl:21\ntest set: Test Failed at /tmp/tmp82ce4slu.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp82ce4slu.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82ce4slu.jl:21\ntest set: Test Failed at /tmp/tmp82ce4slu.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp82ce4slu.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp82ce4slu.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82ce4slu.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplv3v3_9g.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplv3v3_9g.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplv3v3_9g.jl:21\ntest set: Test Failed at /tmp/tmplv3v3_9g.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmplv3v3_9g.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplv3v3_9g.jl:21\ntest set: Test Failed at /tmp/tmplv3v3_9g.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplv3v3_9g.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplv3v3_9g.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplv3v3_9g.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9agj2pfk.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp9agj2pfk.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9agj2pfk.jl:21\\ntest set: Test Failed at /tmp/tmp9agj2pfk.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9agj2pfk.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9agj2pfk.jl:21\\ntest set: Test Failed at /tmp/tmp9agj2pfk.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9agj2pfk.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9agj2pfk.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp42wusjds.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp42wusjds.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42wusjds.jl:21\ntest set: Test Failed at /tmp/tmp42wusjds.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp42wusjds.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42wusjds.jl:21\ntest set: Test Failed at /tmp/tmp42wusjds.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp42wusjds.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42wusjds.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp42wusjds.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw1ybbn_w.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpw1ybbn_w.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1ybbn_w.jl:21\ntest set: Test Failed at /tmp/tmpw1ybbn_w.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpw1ybbn_w.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1ybbn_w.jl:21\ntest set: Test Failed at /tmp/tmpw1ybbn_w.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw1ybbn_w.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1ybbn_w.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1ybbn_w.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && (i %\
    \ 10) % 2 != 0 && (i % 10^(floor(log10(i))+1)) % 2 != 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5iv82pr6.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp5iv82pr6.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5iv82pr6.jl:21\\ntest set: Test Failed at /tmp/tmp5iv82pr6.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5iv82pr6.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5iv82pr6.jl:21\\ntest set: Test Failed at /tmp/tmp5iv82pr6.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5iv82pr6.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5iv82pr6.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoeocd7jq.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpoeocd7jq.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoeocd7jq.jl:21\ntest set: Test Failed at /tmp/tmpoeocd7jq.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpoeocd7jq.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoeocd7jq.jl:21\ntest set: Test Failed at /tmp/tmpoeocd7jq.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoeocd7jq.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoeocd7jq.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoeocd7jq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptmud9vqc.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmptmud9vqc.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmud9vqc.jl:21\\ntest set: Test Failed at /tmp/tmptmud9vqc.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmptmud9vqc.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmud9vqc.jl:21\\ntest set: Test Failed at /tmp/tmptmud9vqc.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmptmud9vqc.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmud9vqc.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == i % 10)\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgme5216x.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpgme5216x.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgme5216x.jl:21\\ntest set: Test Failed at /tmp/tmpgme5216x.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgme5216x.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgme5216x.jl:21\\ntest set: Test Failed at /tmp/tmpgme5216x.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpgme5216x.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpgme5216x.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_hfuhi1o.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_hfuhi1o.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hfuhi1o.jl:21\ntest set: Test Failed at /tmp/tmp_hfuhi1o.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp_hfuhi1o.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hfuhi1o.jl:21\ntest set: Test Failed at /tmp/tmp_hfuhi1o.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_hfuhi1o.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_hfuhi1o.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_hfuhi1o.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbpm5n2m2.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbpm5n2m2.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpm5n2m2.jl:21\ntest set: Test Failed at /tmp/tmpbpm5n2m2.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbpm5n2m2.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpm5n2m2.jl:21\ntest set: Test Failed at /tmp/tmpbpm5n2m2.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbpm5n2m2.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpm5n2m2.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpm5n2m2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5wb_nlaz.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5wb_nlaz.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wb_nlaz.jl:21\ntest set: Test Failed at /tmp/tmp5wb_nlaz.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp5wb_nlaz.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wb_nlaz.jl:21\ntest set: Test Failed at /tmp/tmp5wb_nlaz.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5wb_nlaz.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5wb_nlaz.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5wb_nlaz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw5mb4aor.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpw5mb4aor.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw5mb4aor.jl:21\ntest set: Test Failed at /tmp/tmpw5mb4aor.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpw5mb4aor.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw5mb4aor.jl:21\ntest set: Test Failed at /tmp/tmpw5mb4aor.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw5mb4aor.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw5mb4aor.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5mb4aor.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl7iqni54.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpl7iqni54.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7iqni54.jl:21\ntest set: Test Failed at /tmp/tmpl7iqni54.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpl7iqni54.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7iqni54.jl:21\ntest set: Test Failed at /tmp/tmpl7iqni54.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl7iqni54.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl7iqni54.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7iqni54.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg7owd4bd.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg7owd4bd.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7owd4bd.jl:21\ntest set: Test Failed at /tmp/tmpg7owd4bd.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpg7owd4bd.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7owd4bd.jl:21\ntest set: Test Failed at /tmp/tmpg7owd4bd.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg7owd4bd.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7owd4bd.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7owd4bd.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgw4gtqnh.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgw4gtqnh.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgw4gtqnh.jl:21\ntest set: Test Failed at /tmp/tmpgw4gtqnh.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpgw4gtqnh.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgw4gtqnh.jl:21\ntest set: Test Failed at /tmp/tmpgw4gtqnh.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgw4gtqnh.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgw4gtqnh.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgw4gtqnh.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(i))\
    \ && isodd(last(i))\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpc51w42zv.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpc51w42zv.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc51w42zv.jl:21\\ntest set: Test Failed at /tmp/tmpc51w42zv.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpc51w42zv.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc51w42zv.jl:21\\ntest set: Test Failed at /tmp/tmpc51w42zv.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpc51w42zv.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpc51w42zv.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg618m96i.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg618m96i.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg618m96i.jl:21\ntest set: Test Failed at /tmp/tmpg618m96i.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpg618m96i.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg618m96i.jl:21\ntest set: Test Failed at /tmp/tmpg618m96i.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg618m96i.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg618m96i.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg618m96i.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt26n_lzt.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt26n_lzt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt26n_lzt.jl:21\ntest set: Test Failed at /tmp/tmpt26n_lzt.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpt26n_lzt.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt26n_lzt.jl:21\ntest set: Test Failed at /tmp/tmpt26n_lzt.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt26n_lzt.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt26n_lzt.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt26n_lzt.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9dwu2vff.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9dwu2vff.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9dwu2vff.jl:21\ntest set: Test Failed at /tmp/tmp9dwu2vff.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp9dwu2vff.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9dwu2vff.jl:21\ntest set: Test Failed at /tmp/tmp9dwu2vff.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9dwu2vff.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9dwu2vff.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9dwu2vff.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpve_jq7vy.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpve_jq7vy.jl:10\n   [2] top-level scope at /tmp/tmpve_jq7vy.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpve_jq7vy.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpve_jq7vy.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpve_jq7vy.jl:10\n   [2] top-level scope at /tmp/tmpve_jq7vy.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpve_jq7vy.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpve_jq7vy.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpve_jq7vy.jl:10\n   [2] top-level scope at /tmp/tmpve_jq7vy.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpve_jq7vy.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpve_jq7vy.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpve_jq7vy.jl:10\n   [2] top-level scope at /tmp/tmpve_jq7vy.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpve_jq7vy.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpve_jq7vy.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpve_jq7vy.jl:10\n   [2] top-level scope at /tmp/tmpve_jq7vy.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpve_jq7vy.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpve_jq7vy.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpve_jq7vy.jl:10\n   [2] top-level scope at /tmp/tmpve_jq7vy.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpve_jq7vy.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpve_jq7vy.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpve_jq7vy.jl:10\n   [2] top-level scope at /tmp/tmpve_jq7vy.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpve_jq7vy.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpve_jq7vy.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i>10 && i%2 != 0 && (i%10)%2\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqcnmrb8w.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqcnmrb8w.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqcnmrb8w.jl:21\ntest set: Test Failed at /tmp/tmpqcnmrb8w.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpqcnmrb8w.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqcnmrb8w.jl:21\ntest set: Test Failed at /tmp/tmpqcnmrb8w.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqcnmrb8w.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqcnmrb8w.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqcnmrb8w.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpb3dg7q__.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpb3dg7q__.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb3dg7q__.jl:21\\ntest set: Test Failed at /tmp/tmpb3dg7q__.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpb3dg7q__.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb3dg7q__.jl:21\\ntest set: Test Failed at /tmp/tmpb3dg7q__.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpb3dg7q__.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpb3dg7q__.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7u60wcca.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7u60wcca.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u60wcca.jl:21\ntest set: Test Failed at /tmp/tmp7u60wcca.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp7u60wcca.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u60wcca.jl:21\ntest set: Test Failed at /tmp/tmp7u60wcca.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7u60wcca.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7u60wcca.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7u60wcca.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 2 == 1 || i %\
    \ 2 == -1)\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1dkgxmhi.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1dkgxmhi.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1dkgxmhi.jl:21\\ntest set: Test Failed at /tmp/tmp1dkgxmhi.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1dkgxmhi.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1dkgxmhi.jl:21\\ntest set: Test Failed at /tmp/tmp1dkgxmhi.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1dkgxmhi.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1dkgxmhi.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxq10vv1y.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxq10vv1y.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxq10vv1y.jl:21\ntest set: Test Failed at /tmp/tmpxq10vv1y.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpxq10vv1y.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxq10vv1y.jl:21\ntest set: Test Failed at /tmp/tmpxq10vv1y.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxq10vv1y.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxq10vv1y.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxq10vv1y.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfciul5go.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfciul5go.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfciul5go.jl:21\ntest set: Test Failed at /tmp/tmpfciul5go.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpfciul5go.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfciul5go.jl:21\ntest set: Test Failed at /tmp/tmpfciul5go.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfciul5go.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfciul5go.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfciul5go.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10) % 2 != 0 &&\
    \ (i % 10^(floor(log10(i))+1)) % 2 != 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5d2dd9t4.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5d2dd9t4.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5d2dd9t4.jl:21\ntest set: Test Failed at /tmp/tmp5d2dd9t4.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp5d2dd9t4.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5d2dd9t4.jl:21\ntest set: Test Failed at /tmp/tmp5d2dd9t4.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5d2dd9t4.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5d2dd9t4.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5d2dd9t4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && (num % 10 == 1\
    \ || num % 10 == 3 || num % 10 == 5 || num % 10 == 7 || num % 10 == 9) && (num\
    \ % 10 == 1 || num % 10 == 3 || num % 10 == 5 || num % 10 == 7 || num % 10 ==\
    \ 9)\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2pasl_2s.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2pasl_2s.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pasl_2s.jl:21\ntest set: Test Failed at /tmp/tmp2pasl_2s.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp2pasl_2s.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pasl_2s.jl:21\ntest set: Test Failed at /tmp/tmp2pasl_2s.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2pasl_2s.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pasl_2s.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2pasl_2s.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpep0ja2ip.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpep0ja2ip.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpep0ja2ip.jl:21\ntest set: Test Failed at /tmp/tmpep0ja2ip.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpep0ja2ip.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpep0ja2ip.jl:21\ntest set: Test Failed at /tmp/tmpep0ja2ip.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpep0ja2ip.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpep0ja2ip.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpep0ja2ip.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfxajfrfa.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpfxajfrfa.jl:10\n   [2] top-level scope at /tmp/tmpfxajfrfa.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfxajfrfa.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpfxajfrfa.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpfxajfrfa.jl:10\n   [2] top-level scope at /tmp/tmpfxajfrfa.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfxajfrfa.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpfxajfrfa.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpfxajfrfa.jl:10\n   [2] top-level scope at /tmp/tmpfxajfrfa.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfxajfrfa.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpfxajfrfa.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpfxajfrfa.jl:10\n   [2] top-level scope at /tmp/tmpfxajfrfa.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfxajfrfa.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpfxajfrfa.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpfxajfrfa.jl:10\n   [2] top-level scope at /tmp/tmpfxajfrfa.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfxajfrfa.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpfxajfrfa.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpfxajfrfa.jl:10\n   [2] top-level scope at /tmp/tmpfxajfrfa.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfxajfrfa.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpfxajfrfa.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpfxajfrfa.jl:10\n   [2] top-level scope at /tmp/tmpfxajfrfa.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfxajfrfa.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfxajfrfa.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmplxjelrxi.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmplxjelrxi.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplxjelrxi.jl:21\\ntest set: Test Failed at /tmp/tmplxjelrxi.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmplxjelrxi.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplxjelrxi.jl:21\\ntest set: Test Failed at /tmp/tmplxjelrxi.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmplxjelrxi.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplxjelrxi.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp692c31zb.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp692c31zb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp692c31zb.jl:21\ntest set: Test Failed at /tmp/tmp692c31zb.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp692c31zb.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp692c31zb.jl:21\ntest set: Test Failed at /tmp/tmp692c31zb.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp692c31zb.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp692c31zb.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp692c31zb.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5tokr15g.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5tokr15g.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5tokr15g.jl:21\ntest set: Test Failed at /tmp/tmp5tokr15g.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp5tokr15g.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5tokr15g.jl:21\ntest set: Test Failed at /tmp/tmp5tokr15g.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5tokr15g.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5tokr15g.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5tokr15g.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjs2x0_00.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate([5, -2, 1, -5]) == 0\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1}) at /tmp/tmpjs2x0_00.jl:10\\\
    n   [2] top-level scope at /tmp/tmpjs2x0_00.jl:16\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjs2x0_00.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjs2x0_00.jl:17\\n  Test threw exception\\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpjs2x0_00.jl:10\\n   [2] top-level scope at /tmp/tmpjs2x0_00.jl:17\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjs2x0_00.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjs2x0_00.jl:18\\n  Test threw exception\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpjs2x0_00.jl:10\\n   [2] top-level scope at /tmp/tmpjs2x0_00.jl:18\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjs2x0_00.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjs2x0_00.jl:19\\n  Test threw exception\\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpjs2x0_00.jl:10\\n   [2] top-level scope at /tmp/tmpjs2x0_00.jl:19\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjs2x0_00.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjs2x0_00.jl:20\\n  Test threw exception\\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpjs2x0_00.jl:10\\n   [2] top-level scope at /tmp/tmpjs2x0_00.jl:20\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjs2x0_00.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjs2x0_00.jl:21\\n  Test threw exception\\n  Expression: candidate([1])\
    \ == 0\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpjs2x0_00.jl:10\\n   [2] top-level scope at /tmp/tmpjs2x0_00.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjs2x0_00.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjs2x0_00.jl:22\\n  Test threw exception\\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpjs2x0_00.jl:10\\n   [2] top-level scope at /tmp/tmpjs2x0_00.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjs2x0_00.jl:15\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp6r013779.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp6r013779.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6r013779.jl:21\\ntest set: Test Failed at /tmp/tmp6r013779.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6r013779.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6r013779.jl:21\\ntest set: Test Failed at /tmp/tmp6r013779.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6r013779.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6r013779.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpri6n4jqm.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpri6n4jqm.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpri6n4jqm.jl:21\ntest set: Test Failed at /tmp/tmpri6n4jqm.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpri6n4jqm.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpri6n4jqm.jl:21\ntest set: Test Failed at /tmp/tmpri6n4jqm.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpri6n4jqm.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpri6n4jqm.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpri6n4jqm.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpau2zxtrc.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpau2zxtrc.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpau2zxtrc.jl:21\\ntest set: Test Failed at /tmp/tmpau2zxtrc.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpau2zxtrc.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpau2zxtrc.jl:21\\ntest set: Test Failed at /tmp/tmpau2zxtrc.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpau2zxtrc.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpau2zxtrc.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfa6yltvc.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfa6yltvc.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfa6yltvc.jl:21\ntest set: Test Failed at /tmp/tmpfa6yltvc.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpfa6yltvc.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfa6yltvc.jl:21\ntest set: Test Failed at /tmp/tmpfa6yltvc.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfa6yltvc.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfa6yltvc.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfa6yltvc.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp89ti0590.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp89ti0590.jl:10\n   [2] top-level scope at /tmp/tmp89ti0590.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp89ti0590.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp89ti0590.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp89ti0590.jl:10\n   [2] top-level scope at /tmp/tmp89ti0590.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp89ti0590.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp89ti0590.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp89ti0590.jl:10\n   [2] top-level scope at /tmp/tmp89ti0590.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp89ti0590.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp89ti0590.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp89ti0590.jl:10\n   [2] top-level scope at /tmp/tmp89ti0590.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp89ti0590.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp89ti0590.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp89ti0590.jl:10\n   [2] top-level scope at /tmp/tmp89ti0590.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp89ti0590.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp89ti0590.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp89ti0590.jl:10\n   [2] top-level scope at /tmp/tmp89ti0590.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp89ti0590.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp89ti0590.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp89ti0590.jl:10\n   [2] top-level scope at /tmp/tmp89ti0590.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp89ti0590.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp89ti0590.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjaeqexkp.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpjaeqexkp.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjaeqexkp.jl:21\\ntest set: Test Failed at /tmp/tmpjaeqexkp.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjaeqexkp.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjaeqexkp.jl:21\\ntest set: Test Failed at /tmp/tmpjaeqexkp.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjaeqexkp.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjaeqexkp.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6qs9n5e.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpq6qs9n5e.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6qs9n5e.jl:21\ntest set: Test Failed at /tmp/tmpq6qs9n5e.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpq6qs9n5e.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6qs9n5e.jl:21\ntest set: Test Failed at /tmp/tmpq6qs9n5e.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq6qs9n5e.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq6qs9n5e.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6qs9n5e.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpanv2m0bq.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpanv2m0bq.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpanv2m0bq.jl:21\ntest set: Test Failed at /tmp/tmpanv2m0bq.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpanv2m0bq.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpanv2m0bq.jl:21\ntest set: Test Failed at /tmp/tmpanv2m0bq.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpanv2m0bq.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpanv2m0bq.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpanv2m0bq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxo6me62p.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxo6me62p.jl:10\n   [2] top-level scope at /tmp/tmpxo6me62p.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo6me62p.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo6me62p.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxo6me62p.jl:10\n   [2] top-level scope at /tmp/tmpxo6me62p.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo6me62p.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo6me62p.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxo6me62p.jl:10\n   [2] top-level scope at /tmp/tmpxo6me62p.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo6me62p.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo6me62p.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxo6me62p.jl:10\n   [2] top-level scope at /tmp/tmpxo6me62p.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo6me62p.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo6me62p.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxo6me62p.jl:10\n   [2] top-level scope at /tmp/tmpxo6me62p.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo6me62p.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo6me62p.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxo6me62p.jl:10\n   [2] top-level scope at /tmp/tmpxo6me62p.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo6me62p.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxo6me62p.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpxo6me62p.jl:10\n   [2] top-level scope at /tmp/tmpxo6me62p.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxo6me62p.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxo6me62p.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp21dn273m.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp21dn273m.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp21dn273m.jl:21\ntest set: Test Failed at /tmp/tmp21dn273m.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp21dn273m.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp21dn273m.jl:21\ntest set: Test Failed at /tmp/tmp21dn273m.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp21dn273m.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp21dn273m.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp21dn273m.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvodz02mg.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvodz02mg.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodz02mg.jl:21\ntest set: Test Failed at /tmp/tmpvodz02mg.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpvodz02mg.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodz02mg.jl:21\ntest set: Test Failed at /tmp/tmpvodz02mg.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvodz02mg.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvodz02mg.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvodz02mg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo0s_5k0v.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpo0s_5k0v.jl:10\n   [2] top-level scope at /tmp/tmpo0s_5k0v.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo0s_5k0v.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpo0s_5k0v.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpo0s_5k0v.jl:10\n   [2] top-level scope at /tmp/tmpo0s_5k0v.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo0s_5k0v.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpo0s_5k0v.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpo0s_5k0v.jl:10\n   [2] top-level scope at /tmp/tmpo0s_5k0v.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo0s_5k0v.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpo0s_5k0v.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpo0s_5k0v.jl:10\n   [2] top-level scope at /tmp/tmpo0s_5k0v.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo0s_5k0v.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpo0s_5k0v.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpo0s_5k0v.jl:10\n   [2] top-level scope at /tmp/tmpo0s_5k0v.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo0s_5k0v.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpo0s_5k0v.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpo0s_5k0v.jl:10\n   [2] top-level scope at /tmp/tmpo0s_5k0v.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo0s_5k0v.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpo0s_5k0v.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpo0s_5k0v.jl:10\n   [2] top-level scope at /tmp/tmpo0s_5k0v.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo0s_5k0v.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo0s_5k0v.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpklbl20a_.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpklbl20a_.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpklbl20a_.jl:21\ntest set: Test Failed at /tmp/tmpklbl20a_.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpklbl20a_.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpklbl20a_.jl:21\ntest set: Test Failed at /tmp/tmpklbl20a_.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpklbl20a_.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpklbl20a_.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpklbl20a_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp15e6yb6o.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp15e6yb6o.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15e6yb6o.jl:21\ntest set: Test Failed at /tmp/tmp15e6yb6o.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp15e6yb6o.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15e6yb6o.jl:21\ntest set: Test Failed at /tmp/tmp15e6yb6o.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp15e6yb6o.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15e6yb6o.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp15e6yb6o.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9cbl714k.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9cbl714k.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9cbl714k.jl:21\ntest set: Test Failed at /tmp/tmp9cbl714k.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp9cbl714k.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9cbl714k.jl:21\ntest set: Test Failed at /tmp/tmp9cbl714k.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9cbl714k.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9cbl714k.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cbl714k.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnouj2vzt.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnouj2vzt.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnouj2vzt.jl:21\\ntest set: Test Failed at /tmp/tmpnouj2vzt.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnouj2vzt.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnouj2vzt.jl:21\\ntest set: Test Failed at /tmp/tmpnouj2vzt.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnouj2vzt.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnouj2vzt.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprrc231ds.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprrc231ds.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrc231ds.jl:21\ntest set: Test Failed at /tmp/tmprrc231ds.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmprrc231ds.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrc231ds.jl:21\ntest set: Test Failed at /tmp/tmprrc231ds.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprrc231ds.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrc231ds.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprrc231ds.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpapix8u73.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpapix8u73.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpapix8u73.jl:21\\ntest set: Test Failed at /tmp/tmpapix8u73.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpapix8u73.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpapix8u73.jl:21\\ntest set: Test Failed at /tmp/tmpapix8u73.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpapix8u73.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpapix8u73.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(i))\
    \ && isodd(last(i))\n            count += 1\n        end\n    end\n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo91yr2c4.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpo91yr2c4.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo91yr2c4.jl:21\ntest set: Test Failed at /tmp/tmpo91yr2c4.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpo91yr2c4.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo91yr2c4.jl:21\ntest set: Test Failed at /tmp/tmpo91yr2c4.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo91yr2c4.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo91yr2c4.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo91yr2c4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpm3__51kw.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpm3__51kw.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm3__51kw.jl:21\\ntest set: Test Failed at /tmp/tmpm3__51kw.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpm3__51kw.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm3__51kw.jl:21\\ntest set: Test Failed at /tmp/tmpm3__51kw.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpm3__51kw.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm3__51kw.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_mduregx.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_mduregx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mduregx.jl:21\ntest set: Test Failed at /tmp/tmp_mduregx.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp_mduregx.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mduregx.jl:21\ntest set: Test Failed at /tmp/tmp_mduregx.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_mduregx.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mduregx.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mduregx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && (i %\
    \ 10) % 2 != 0 && (i % 10^(floor(log10(i))+1)) % 2 != 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpze26m4m0.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpze26m4m0.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpze26m4m0.jl:21\ntest set: Test Failed at /tmp/tmpze26m4m0.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpze26m4m0.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpze26m4m0.jl:21\ntest set: Test Failed at /tmp/tmpze26m4m0.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpze26m4m0.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpze26m4m0.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpze26m4m0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp28evoqc2.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp28evoqc2.jl:10\n   [2] top-level scope at /tmp/tmp28evoqc2.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp28evoqc2.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp28evoqc2.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp28evoqc2.jl:10\n   [2] top-level scope at /tmp/tmp28evoqc2.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp28evoqc2.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp28evoqc2.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp28evoqc2.jl:10\n   [2] top-level scope at /tmp/tmp28evoqc2.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp28evoqc2.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp28evoqc2.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp28evoqc2.jl:10\n   [2] top-level scope at /tmp/tmp28evoqc2.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp28evoqc2.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp28evoqc2.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp28evoqc2.jl:10\n   [2] top-level scope at /tmp/tmp28evoqc2.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp28evoqc2.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp28evoqc2.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp28evoqc2.jl:10\n   [2] top-level scope at /tmp/tmp28evoqc2.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp28evoqc2.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp28evoqc2.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp28evoqc2.jl:10\n   [2] top-level scope at /tmp/tmp28evoqc2.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp28evoqc2.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp28evoqc2.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjw9kx4bc.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpjw9kx4bc.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjw9kx4bc.jl:21\\ntest set: Test Failed at /tmp/tmpjw9kx4bc.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjw9kx4bc.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjw9kx4bc.jl:21\\ntest set: Test Failed at /tmp/tmpjw9kx4bc.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjw9kx4bc.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjw9kx4bc.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    return length(filter(x -> x > 10 && isodd(x) && isodd(x % 10), nums))\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3a2wjzwc.jl:18\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3a2wjzwc.jl:18\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3a2wjzwc.jl:15\ntest set: Test Failed at /tmp/tmp3a2wjzwc.jl:19\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp3a2wjzwc.jl:19\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3a2wjzwc.jl:15\ntest set: Test Failed at /tmp/tmp3a2wjzwc.jl:20\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3a2wjzwc.jl:20\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3a2wjzwc.jl:15\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3a2wjzwc.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    cnt = 0\n    for i in nums\n        if i > 10 && (i % 10) % 2 != 0 &&\
    \ (i % 10^(floor(log10(i))+1)) % 2 != 0\n            cnt += 1\n        end\n \
    \   end\n    return cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzde1mwf9.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzde1mwf9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzde1mwf9.jl:21\ntest set: Test Failed at /tmp/tmpzde1mwf9.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpzde1mwf9.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzde1mwf9.jl:21\ntest set: Test Failed at /tmp/tmpzde1mwf9.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzde1mwf9.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzde1mwf9.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzde1mwf9.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2obvelaq.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2obvelaq.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2obvelaq.jl:21\ntest set: Test Failed at /tmp/tmp2obvelaq.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp2obvelaq.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2obvelaq.jl:21\ntest set: Test Failed at /tmp/tmp2obvelaq.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2obvelaq.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2obvelaq.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2obvelaq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpck4deztw.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpck4deztw.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpck4deztw.jl:21\ntest set: Test Failed at /tmp/tmpck4deztw.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpck4deztw.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpck4deztw.jl:21\ntest set: Test Failed at /tmp/tmpck4deztw.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpck4deztw.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpck4deztw.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpck4deztw.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq1bi62sx.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpq1bi62sx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq1bi62sx.jl:21\ntest set: Test Failed at /tmp/tmpq1bi62sx.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpq1bi62sx.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq1bi62sx.jl:21\ntest set: Test Failed at /tmp/tmpq1bi62sx.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq1bi62sx.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq1bi62sx.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq1bi62sx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if (i > 10) && (i % 2 != 0) && (i\
    \ % 10 != 0)\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpot2f2ot8.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpot2f2ot8.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpot2f2ot8.jl:21\\ntest set: Test Failed at /tmp/tmpot2f2ot8.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpot2f2ot8.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpot2f2ot8.jl:21\\ntest set: Test Failed at /tmp/tmpot2f2ot8.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpot2f2ot8.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpot2f2ot8.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpg6p5ykig.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpg6p5ykig.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg6p5ykig.jl:21\\ntest set: Test Failed at /tmp/tmpg6p5ykig.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpg6p5ykig.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg6p5ykig.jl:21\\ntest set: Test Failed at /tmp/tmpg6p5ykig.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpg6p5ykig.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpg6p5ykig.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe9w84ou8.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpe9w84ou8.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9w84ou8.jl:21\ntest set: Test Failed at /tmp/tmpe9w84ou8.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpe9w84ou8.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9w84ou8.jl:21\ntest set: Test Failed at /tmp/tmpe9w84ou8.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpe9w84ou8.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpe9w84ou8.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9w84ou8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3c02_4x5.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3c02_4x5.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3c02_4x5.jl:21\ntest set: Test Failed at /tmp/tmp3c02_4x5.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp3c02_4x5.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3c02_4x5.jl:21\ntest set: Test Failed at /tmp/tmp3c02_4x5.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3c02_4x5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3c02_4x5.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3c02_4x5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpheiug_m0.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpheiug_m0.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpheiug_m0.jl:21\\ntest set: Test Failed at /tmp/tmpheiug_m0.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpheiug_m0.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpheiug_m0.jl:21\\ntest set: Test Failed at /tmp/tmpheiug_m0.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpheiug_m0.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpheiug_m0.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(first(digits(i)))\
    \ && isodd(last(digits(i)))\n            count += 1\n        end\n    end\n  \
    \  return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt7ubrzt5.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt7ubrzt5.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7ubrzt5.jl:21\ntest set: Test Failed at /tmp/tmpt7ubrzt5.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpt7ubrzt5.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7ubrzt5.jl:21\ntest set: Test Failed at /tmp/tmpt7ubrzt5.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt7ubrzt5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt7ubrzt5.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt7ubrzt5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10) % 2 != 0 &&\
    \ (i % 10^(floor(log10(i))+1)) % 2 != 0\n            count += 1\n        end\n\
    \    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphu137014.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmphu137014.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu137014.jl:21\\ntest set: Test Failed at /tmp/tmphu137014.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmphu137014.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu137014.jl:21\\ntest set: Test Failed at /tmp/tmphu137014.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmphu137014.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphu137014.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8dd0uzpd.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8dd0uzpd.jl:10\n   [2] top-level scope at /tmp/tmp8dd0uzpd.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8dd0uzpd.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8dd0uzpd.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8dd0uzpd.jl:10\n   [2] top-level scope at /tmp/tmp8dd0uzpd.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8dd0uzpd.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8dd0uzpd.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8dd0uzpd.jl:10\n   [2] top-level scope at /tmp/tmp8dd0uzpd.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8dd0uzpd.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8dd0uzpd.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8dd0uzpd.jl:10\n   [2] top-level scope at /tmp/tmp8dd0uzpd.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8dd0uzpd.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8dd0uzpd.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8dd0uzpd.jl:10\n   [2] top-level scope at /tmp/tmp8dd0uzpd.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8dd0uzpd.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8dd0uzpd.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8dd0uzpd.jl:10\n   [2] top-level scope at /tmp/tmp8dd0uzpd.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8dd0uzpd.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp8dd0uzpd.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp8dd0uzpd.jl:10\n   [2] top-level scope at /tmp/tmp8dd0uzpd.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8dd0uzpd.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8dd0uzpd.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0hkesipx.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0hkesipx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0hkesipx.jl:21\ntest set: Test Failed at /tmp/tmp0hkesipx.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp0hkesipx.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0hkesipx.jl:21\ntest set: Test Failed at /tmp/tmp0hkesipx.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0hkesipx.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0hkesipx.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0hkesipx.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwo_o6g0_.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpwo_o6g0_.jl:10\n   [2] top-level scope at /tmp/tmpwo_o6g0_.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwo_o6g0_.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo_o6g0_.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpwo_o6g0_.jl:10\n   [2] top-level scope at /tmp/tmpwo_o6g0_.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwo_o6g0_.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo_o6g0_.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpwo_o6g0_.jl:10\n   [2] top-level scope at /tmp/tmpwo_o6g0_.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwo_o6g0_.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo_o6g0_.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpwo_o6g0_.jl:10\n   [2] top-level scope at /tmp/tmpwo_o6g0_.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwo_o6g0_.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo_o6g0_.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpwo_o6g0_.jl:10\n   [2] top-level scope at /tmp/tmpwo_o6g0_.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwo_o6g0_.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo_o6g0_.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpwo_o6g0_.jl:10\n   [2] top-level scope at /tmp/tmpwo_o6g0_.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwo_o6g0_.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo_o6g0_.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpwo_o6g0_.jl:10\n   [2] top-level scope at /tmp/tmpwo_o6g0_.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwo_o6g0_.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwo_o6g0_.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1y5f0yyg.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1y5f0yyg.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1y5f0yyg.jl:21\ntest set: Test Failed at /tmp/tmp1y5f0yyg.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1y5f0yyg.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1y5f0yyg.jl:21\ntest set: Test Failed at /tmp/tmp1y5f0yyg.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1y5f0yyg.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1y5f0yyg.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1y5f0yyg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyvawuctt.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyvawuctt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyvawuctt.jl:21\ntest set: Test Failed at /tmp/tmpyvawuctt.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpyvawuctt.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyvawuctt.jl:21\ntest set: Test Failed at /tmp/tmpyvawuctt.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpyvawuctt.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyvawuctt.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyvawuctt.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpghygcpk1.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpghygcpk1.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpghygcpk1.jl:21\\ntest set: Test Failed at /tmp/tmpghygcpk1.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpghygcpk1.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpghygcpk1.jl:21\\ntest set: Test Failed at /tmp/tmpghygcpk1.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpghygcpk1.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpghygcpk1.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeb79cjxj.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeb79cjxj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeb79cjxj.jl:21\ntest set: Test Failed at /tmp/tmpeb79cjxj.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpeb79cjxj.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeb79cjxj.jl:21\ntest set: Test Failed at /tmp/tmpeb79cjxj.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeb79cjxj.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeb79cjxj.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeb79cjxj.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpw33v4vbc.jl:18\\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\\n   Evaluated: 0 == 1\\nStacktrace:\\n [1] top-level scope\
    \ at /tmp/tmpw33v4vbc.jl:18\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw33v4vbc.jl:16\\ntest set: Test Failed at /tmp/tmpw33v4vbc.jl:19\\\
    n  Expression: candidate([33, -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 0 ==\
    \ 2\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw33v4vbc.jl:19\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw33v4vbc.jl:16\\ntest set: Test Failed at /tmp/tmpw33v4vbc.jl:20\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 0\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw33v4vbc.jl:20\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw33v4vbc.jl:16\\ntest set: Test Failed at /tmp/tmpw33v4vbc.jl:21\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 0 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpw33v4vbc.jl:21\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpw33v4vbc.jl:16\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp61ay2pdv.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp61ay2pdv.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp61ay2pdv.jl:21\\ntest set: Test Failed at /tmp/tmp61ay2pdv.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp61ay2pdv.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp61ay2pdv.jl:21\\ntest set: Test Failed at /tmp/tmp61ay2pdv.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp61ay2pdv.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp61ay2pdv.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwya5zdb5.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwya5zdb5.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwya5zdb5.jl:21\ntest set: Test Failed at /tmp/tmpwya5zdb5.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpwya5zdb5.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwya5zdb5.jl:21\ntest set: Test Failed at /tmp/tmpwya5zdb5.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwya5zdb5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwya5zdb5.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwya5zdb5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgs34l4ky.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgs34l4ky.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgs34l4ky.jl:21\ntest set: Test Failed at /tmp/tmpgs34l4ky.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpgs34l4ky.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgs34l4ky.jl:21\ntest set: Test Failed at /tmp/tmpgs34l4ky.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgs34l4ky.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgs34l4ky.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgs34l4ky.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp07ndi11n.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp07ndi11n.jl:10\n   [2] top-level scope at /tmp/tmp07ndi11n.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp07ndi11n.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp07ndi11n.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp07ndi11n.jl:10\n   [2] top-level scope at /tmp/tmp07ndi11n.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp07ndi11n.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp07ndi11n.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp07ndi11n.jl:10\n   [2] top-level scope at /tmp/tmp07ndi11n.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp07ndi11n.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp07ndi11n.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp07ndi11n.jl:10\n   [2] top-level scope at /tmp/tmp07ndi11n.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp07ndi11n.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp07ndi11n.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp07ndi11n.jl:10\n   [2] top-level scope at /tmp/tmp07ndi11n.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp07ndi11n.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp07ndi11n.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp07ndi11n.jl:10\n   [2] top-level scope at /tmp/tmp07ndi11n.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp07ndi11n.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp07ndi11n.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp07ndi11n.jl:10\n   [2] top-level scope at /tmp/tmp07ndi11n.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp07ndi11n.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp07ndi11n.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpkd2bep5m.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpkd2bep5m.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkd2bep5m.jl:21\\ntest set: Test Failed at /tmp/tmpkd2bep5m.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkd2bep5m.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkd2bep5m.jl:21\\ntest set: Test Failed at /tmp/tmpkd2bep5m.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpkd2bep5m.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpkd2bep5m.jl:21\\nTest Summary: | Pass  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3p0tt42b.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp3p0tt42b.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3p0tt42b.jl:21\\ntest set: Test Failed at /tmp/tmp3p0tt42b.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3p0tt42b.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3p0tt42b.jl:21\\ntest set: Test Failed at /tmp/tmp3p0tt42b.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3p0tt42b.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3p0tt42b.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwhdbkfh0.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwhdbkfh0.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwhdbkfh0.jl:21\ntest set: Test Failed at /tmp/tmpwhdbkfh0.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpwhdbkfh0.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwhdbkfh0.jl:21\ntest set: Test Failed at /tmp/tmpwhdbkfh0.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwhdbkfh0.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwhdbkfh0.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwhdbkfh0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsft8ovjs.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpsft8ovjs.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsft8ovjs.jl:21\ntest set: Test Failed at /tmp/tmpsft8ovjs.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpsft8ovjs.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsft8ovjs.jl:21\ntest set: Test Failed at /tmp/tmpsft8ovjs.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpsft8ovjs.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpsft8ovjs.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsft8ovjs.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp32z7pibh.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate([5, -2, 1, -5]) == 0\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1}) at /tmp/tmp32z7pibh.jl:10\\\
    n   [2] top-level scope at /tmp/tmp32z7pibh.jl:16\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32z7pibh.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32z7pibh.jl:17\\n  Test threw exception\\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp32z7pibh.jl:10\\n   [2] top-level scope at /tmp/tmp32z7pibh.jl:17\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32z7pibh.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32z7pibh.jl:18\\n  Test threw exception\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp32z7pibh.jl:10\\n   [2] top-level scope at /tmp/tmp32z7pibh.jl:18\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32z7pibh.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32z7pibh.jl:19\\n  Test threw exception\\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp32z7pibh.jl:10\\n   [2] top-level scope at /tmp/tmp32z7pibh.jl:19\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32z7pibh.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32z7pibh.jl:20\\n  Test threw exception\\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp32z7pibh.jl:10\\n   [2] top-level scope at /tmp/tmp32z7pibh.jl:20\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32z7pibh.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32z7pibh.jl:21\\n  Test threw exception\\n  Expression: candidate([1])\
    \ == 0\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp32z7pibh.jl:10\\n   [2] top-level scope at /tmp/tmp32z7pibh.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32z7pibh.jl:15\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp32z7pibh.jl:22\\n  Test threw exception\\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmp32z7pibh.jl:10\\n   [2] top-level scope at /tmp/tmp32z7pibh.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp32z7pibh.jl:15\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     7      7\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp32z7pibh.jl:13\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp9_w52l3.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpp9_w52l3.jl:10\n   [2] top-level scope at /tmp/tmpp9_w52l3.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9_w52l3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9_w52l3.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpp9_w52l3.jl:10\n   [2] top-level scope at /tmp/tmpp9_w52l3.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9_w52l3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9_w52l3.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpp9_w52l3.jl:10\n   [2] top-level scope at /tmp/tmpp9_w52l3.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9_w52l3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9_w52l3.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpp9_w52l3.jl:10\n   [2] top-level scope at /tmp/tmpp9_w52l3.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9_w52l3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9_w52l3.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpp9_w52l3.jl:10\n   [2] top-level scope at /tmp/tmpp9_w52l3.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9_w52l3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9_w52l3.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpp9_w52l3.jl:10\n   [2] top-level scope at /tmp/tmpp9_w52l3.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9_w52l3.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpp9_w52l3.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpp9_w52l3.jl:10\n   [2] top-level scope at /tmp/tmpp9_w52l3.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp9_w52l3.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp9_w52l3.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc3qcql9k.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpc3qcql9k.jl:10\n   [2] top-level scope at /tmp/tmpc3qcql9k.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc3qcql9k.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpc3qcql9k.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpc3qcql9k.jl:10\n   [2] top-level scope at /tmp/tmpc3qcql9k.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc3qcql9k.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpc3qcql9k.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpc3qcql9k.jl:10\n   [2] top-level scope at /tmp/tmpc3qcql9k.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc3qcql9k.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpc3qcql9k.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpc3qcql9k.jl:10\n   [2] top-level scope at /tmp/tmpc3qcql9k.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc3qcql9k.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpc3qcql9k.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpc3qcql9k.jl:10\n   [2] top-level scope at /tmp/tmpc3qcql9k.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc3qcql9k.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpc3qcql9k.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpc3qcql9k.jl:10\n   [2] top-level scope at /tmp/tmpc3qcql9k.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc3qcql9k.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpc3qcql9k.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpc3qcql9k.jl:10\n   [2] top-level scope at /tmp/tmpc3qcql9k.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc3qcql9k.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc3qcql9k.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10\n            if i % 2\
    \ != 0\n                if i % 10 != 0\n                    count += 1\n     \
    \           end\n            end\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp09ujzg7n.jl:28\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp09ujzg7n.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp09ujzg7n.jl:25\ntest set: Test Failed at /tmp/tmp09ujzg7n.jl:29\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp09ujzg7n.jl:29\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp09ujzg7n.jl:25\ntest set: Test Failed at /tmp/tmp09ujzg7n.jl:30\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp09ujzg7n.jl:30\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp09ujzg7n.jl:25\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp09ujzg7n.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && (i %\
    \ 10) % 2 != 0 && (i % 10^(floor(log10(i))+1)) % 2 != 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpztwhpdt7.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpztwhpdt7.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpztwhpdt7.jl:21\ntest set: Test Failed at /tmp/tmpztwhpdt7.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpztwhpdt7.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpztwhpdt7.jl:21\ntest set: Test Failed at /tmp/tmpztwhpdt7.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpztwhpdt7.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpztwhpdt7.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpztwhpdt7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb6ose5fa.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpb6ose5fa.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb6ose5fa.jl:21\ntest set: Test Failed at /tmp/tmpb6ose5fa.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpb6ose5fa.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb6ose5fa.jl:21\ntest set: Test Failed at /tmp/tmpb6ose5fa.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb6ose5fa.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb6ose5fa.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6ose5fa.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi804xcd2.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpi804xcd2.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi804xcd2.jl:21\ntest set: Test Failed at /tmp/tmpi804xcd2.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpi804xcd2.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi804xcd2.jl:21\ntest set: Test Failed at /tmp/tmpi804xcd2.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi804xcd2.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi804xcd2.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi804xcd2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpin51lku1.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpin51lku1.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpin51lku1.jl:21\ntest set: Test Failed at /tmp/tmpin51lku1.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpin51lku1.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpin51lku1.jl:21\ntest set: Test Failed at /tmp/tmpin51lku1.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpin51lku1.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpin51lku1.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpin51lku1.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpddpl2w6b.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpddpl2w6b.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddpl2w6b.jl:21\ntest set: Test Failed at /tmp/tmpddpl2w6b.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpddpl2w6b.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddpl2w6b.jl:21\ntest set: Test Failed at /tmp/tmpddpl2w6b.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpddpl2w6b.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpddpl2w6b.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpddpl2w6b.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0er__cn7.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0er__cn7.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0er__cn7.jl:21\ntest set: Test Failed at /tmp/tmp0er__cn7.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp0er__cn7.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0er__cn7.jl:21\ntest set: Test Failed at /tmp/tmp0er__cn7.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0er__cn7.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0er__cn7.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0er__cn7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpha9xv741.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpha9xv741.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpha9xv741.jl:21\\ntest set: Test Failed at /tmp/tmpha9xv741.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpha9xv741.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpha9xv741.jl:21\\ntest set: Test Failed at /tmp/tmpha9xv741.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpha9xv741.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpha9xv741.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmcl72e0g.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpmcl72e0g.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmcl72e0g.jl:21\\ntest set: Test Failed at /tmp/tmpmcl72e0g.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmcl72e0g.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmcl72e0g.jl:21\\ntest set: Test Failed at /tmp/tmpmcl72e0g.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmcl72e0g.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmcl72e0g.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp5s9zj_ej.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp5s9zj_ej.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5s9zj_ej.jl:21\\ntest set: Test Failed at /tmp/tmp5s9zj_ej.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5s9zj_ej.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5s9zj_ej.jl:21\\ntest set: Test Failed at /tmp/tmp5s9zj_ej.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp5s9zj_ej.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp5s9zj_ej.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7gbtmt2t.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp7gbtmt2t.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7gbtmt2t.jl:21\\ntest set: Test Failed at /tmp/tmp7gbtmt2t.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp7gbtmt2t.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7gbtmt2t.jl:21\\ntest set: Test Failed at /tmp/tmp7gbtmt2t.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmp7gbtmt2t.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp7gbtmt2t.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpclvzm8bo.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpclvzm8bo.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpclvzm8bo.jl:21\ntest set: Test Failed at /tmp/tmpclvzm8bo.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpclvzm8bo.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpclvzm8bo.jl:21\ntest set: Test Failed at /tmp/tmpclvzm8bo.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpclvzm8bo.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpclvzm8bo.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclvzm8bo.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1oh36tef.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1oh36tef.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1oh36tef.jl:21\ntest set: Test Failed at /tmp/tmp1oh36tef.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1oh36tef.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1oh36tef.jl:21\ntest set: Test Failed at /tmp/tmp1oh36tef.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1oh36tef.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1oh36tef.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1oh36tef.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkemy83qk.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkemy83qk.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkemy83qk.jl:21\ntest set: Test Failed at /tmp/tmpkemy83qk.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpkemy83qk.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkemy83qk.jl:21\ntest set: Test Failed at /tmp/tmpkemy83qk.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkemy83qk.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkemy83qk.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkemy83qk.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && isodd(i) && isodd(i\
    \ % 10)\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk9d6m7zz.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpk9d6m7zz.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk9d6m7zz.jl:21\\ntest set: Test Failed at /tmp/tmpk9d6m7zz.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk9d6m7zz.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk9d6m7zz.jl:21\\ntest set: Test Failed at /tmp/tmpk9d6m7zz.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpk9d6m7zz.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpk9d6m7zz.jl:21\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    4     3      7\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10^(floor(log10(i))\
    \ + 1) == 1 || i % 10^(floor(log10(i)) + 1) == 3 || i % 10^(floor(log10(i)) +\
    \ 1) == 5 || i % 10^(floor(log10(i)) + 1) == 7 || i % 10^(floor(log10(i)) + 1)\
    \ == 9)\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnue9hz77.jl:23\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmpnue9hz77.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnue9hz77.jl:21\ntest set: Test Failed at /tmp/tmpnue9hz77.jl:24\n\
    \  Expression: candidate([33, -2, -3, 45, 21, 109]) == 2\n   Evaluated: 0 == 2\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnue9hz77.jl:24\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnue9hz77.jl:21\ntest set: Test Failed at /tmp/tmpnue9hz77.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 0 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpnue9hz77.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnue9hz77.jl:21\ntest set: Test Failed at /tmp/tmpnue9hz77.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 0 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpnue9hz77.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnue9hz77.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnue9hz77.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptyhsfpab.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptyhsfpab.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptyhsfpab.jl:21\ntest set: Test Failed at /tmp/tmptyhsfpab.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmptyhsfpab.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptyhsfpab.jl:21\ntest set: Test Failed at /tmp/tmptyhsfpab.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptyhsfpab.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptyhsfpab.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptyhsfpab.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpm9ntdm92.jl:24\\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\\n   Evaluated: 4 == 2\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpm9ntdm92.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm9ntdm92.jl:21\\ntest set: Test Failed at /tmp/tmpm9ntdm92.jl:25\\\
    n  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\\n   Evaluated: 5\
    \ == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpm9ntdm92.jl:25\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm9ntdm92.jl:21\\ntest set: Test Failed at /tmp/tmpm9ntdm92.jl:26\\\
    n  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\\n   Evaluated: 4 ==\
    \ 3\\nStacktrace:\\n [1] top-level scope at /tmp/tmpm9ntdm92.jl:26\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpm9ntdm92.jl:21\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph35l961m.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph35l961m.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph35l961m.jl:21\ntest set: Test Failed at /tmp/tmph35l961m.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmph35l961m.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph35l961m.jl:21\ntest set: Test Failed at /tmp/tmph35l961m.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph35l961m.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph35l961m.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph35l961m.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvnaohx3w.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpvnaohx3w.jl:10\n   [2] top-level scope at /tmp/tmpvnaohx3w.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnaohx3w.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnaohx3w.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpvnaohx3w.jl:10\n   [2] top-level scope at /tmp/tmpvnaohx3w.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnaohx3w.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnaohx3w.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpvnaohx3w.jl:10\n   [2] top-level scope at /tmp/tmpvnaohx3w.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnaohx3w.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnaohx3w.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpvnaohx3w.jl:10\n   [2] top-level scope at /tmp/tmpvnaohx3w.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnaohx3w.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnaohx3w.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpvnaohx3w.jl:10\n   [2] top-level scope at /tmp/tmpvnaohx3w.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnaohx3w.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnaohx3w.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpvnaohx3w.jl:10\n   [2] top-level scope at /tmp/tmpvnaohx3w.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnaohx3w.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpvnaohx3w.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpvnaohx3w.jl:10\n   [2] top-level scope at /tmp/tmpvnaohx3w.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvnaohx3w.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvnaohx3w.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 != 0 &&\
    \ num % 10 != 0\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7tziqjfi.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7tziqjfi.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7tziqjfi.jl:21\ntest set: Test Failed at /tmp/tmp7tziqjfi.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp7tziqjfi.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7tziqjfi.jl:21\ntest set: Test Failed at /tmp/tmp7tziqjfi.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7tziqjfi.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7tziqjfi.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7tziqjfi.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi726sjoo.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpi726sjoo.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi726sjoo.jl:21\ntest set: Test Failed at /tmp/tmpi726sjoo.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpi726sjoo.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi726sjoo.jl:21\ntest set: Test Failed at /tmp/tmpi726sjoo.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpi726sjoo.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpi726sjoo.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi726sjoo.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if (i > 10) && (i % 2 != 0) && (i\
    \ % 10 % 2 != 0)\n            count += 1\n        end\n    end\n    return count\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprgwjtb7h.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprgwjtb7h.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprgwjtb7h.jl:21\ntest set: Test Failed at /tmp/tmprgwjtb7h.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmprgwjtb7h.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprgwjtb7h.jl:21\ntest set: Test Failed at /tmp/tmprgwjtb7h.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprgwjtb7h.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprgwjtb7h.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprgwjtb7h.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == i)\n   \
    \         count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1asiq8kb.jl:23\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp1asiq8kb.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1asiq8kb.jl:21\ntest set: Test Failed at /tmp/tmp1asiq8kb.jl:24\n\
    \  Expression: candidate([33, -2, -3, 45, 21, 109]) == 2\n   Evaluated: 0 == 2\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1asiq8kb.jl:24\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1asiq8kb.jl:21\ntest set: Test Failed at /tmp/tmp1asiq8kb.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 0 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1asiq8kb.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1asiq8kb.jl:21\ntest set: Test Failed at /tmp/tmp1asiq8kb.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 0 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1asiq8kb.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1asiq8kb.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     4      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1asiq8kb.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzkkrtjdy.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzkkrtjdy.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzkkrtjdy.jl:21\ntest set: Test Failed at /tmp/tmpzkkrtjdy.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpzkkrtjdy.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzkkrtjdy.jl:21\ntest set: Test Failed at /tmp/tmpzkkrtjdy.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzkkrtjdy.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzkkrtjdy.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzkkrtjdy.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph5juwylp.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph5juwylp.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5juwylp.jl:21\ntest set: Test Failed at /tmp/tmph5juwylp.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmph5juwylp.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5juwylp.jl:21\ntest set: Test Failed at /tmp/tmph5juwylp.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph5juwylp.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph5juwylp.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5juwylp.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprarekick.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprarekick.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprarekick.jl:21\ntest set: Test Failed at /tmp/tmprarekick.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmprarekick.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprarekick.jl:21\ntest set: Test Failed at /tmp/tmprarekick.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprarekick.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprarekick.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprarekick.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ice4seg.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0ice4seg.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ice4seg.jl:21\ntest set: Test Failed at /tmp/tmp0ice4seg.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp0ice4seg.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ice4seg.jl:21\ntest set: Test Failed at /tmp/tmp0ice4seg.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0ice4seg.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ice4seg.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ice4seg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv5lplto3.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpv5lplto3.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv5lplto3.jl:21\ntest set: Test Failed at /tmp/tmpv5lplto3.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpv5lplto3.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv5lplto3.jl:21\ntest set: Test Failed at /tmp/tmpv5lplto3.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpv5lplto3.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv5lplto3.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv5lplto3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxqu4hu35.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxqu4hu35.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxqu4hu35.jl:21\ntest set: Test Failed at /tmp/tmpxqu4hu35.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpxqu4hu35.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxqu4hu35.jl:21\ntest set: Test Failed at /tmp/tmpxqu4hu35.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxqu4hu35.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxqu4hu35.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxqu4hu35.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxf9lub7l.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxf9lub7l.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxf9lub7l.jl:21\ntest set: Test Failed at /tmp/tmpxf9lub7l.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpxf9lub7l.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxf9lub7l.jl:21\ntest set: Test Failed at /tmp/tmpxf9lub7l.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxf9lub7l.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxf9lub7l.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxf9lub7l.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && isodd(num) && isodd(num\
    \ % 10)\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp50up3ax_.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp50up3ax_.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp50up3ax_.jl:21\ntest set: Test Failed at /tmp/tmp50up3ax_.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp50up3ax_.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp50up3ax_.jl:21\ntest set: Test Failed at /tmp/tmp50up3ax_.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp50up3ax_.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp50up3ax_.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp50up3ax_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpme74b_p5.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpme74b_p5.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpme74b_p5.jl:21\ntest set: Test Failed at /tmp/tmpme74b_p5.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpme74b_p5.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpme74b_p5.jl:21\ntest set: Test Failed at /tmp/tmpme74b_p5.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpme74b_p5.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpme74b_p5.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpme74b_p5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7bevffnj.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7bevffnj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bevffnj.jl:21\ntest set: Test Failed at /tmp/tmp7bevffnj.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp7bevffnj.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bevffnj.jl:21\ntest set: Test Failed at /tmp/tmp7bevffnj.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7bevffnj.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bevffnj.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7bevffnj.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphzhd3m38.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphzhd3m38.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphzhd3m38.jl:21\ntest set: Test Failed at /tmp/tmphzhd3m38.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmphzhd3m38.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphzhd3m38.jl:21\ntest set: Test Failed at /tmp/tmphzhd3m38.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphzhd3m38.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphzhd3m38.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphzhd3m38.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4wwcyfj1.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4wwcyfj1.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4wwcyfj1.jl:21\ntest set: Test Failed at /tmp/tmp4wwcyfj1.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp4wwcyfj1.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4wwcyfj1.jl:21\ntest set: Test Failed at /tmp/tmp4wwcyfj1.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4wwcyfj1.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4wwcyfj1.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4wwcyfj1.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp95vo3kbg.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp95vo3kbg.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95vo3kbg.jl:21\ntest set: Test Failed at /tmp/tmp95vo3kbg.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp95vo3kbg.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95vo3kbg.jl:21\ntest set: Test Failed at /tmp/tmp95vo3kbg.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp95vo3kbg.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp95vo3kbg.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp95vo3kbg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i%2 != 0 && i%10 !=\
    \ 0\n            count += 1\n        end\n    end\n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy6wmm3zj.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy6wmm3zj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy6wmm3zj.jl:21\ntest set: Test Failed at /tmp/tmpy6wmm3zj.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpy6wmm3zj.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy6wmm3zj.jl:21\ntest set: Test Failed at /tmp/tmpy6wmm3zj.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpy6wmm3zj.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy6wmm3zj.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6wmm3zj.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && i % 2 != 0 && i % 10\
    \ != 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6hj88b_q.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6hj88b_q.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6hj88b_q.jl:21\ntest set: Test Failed at /tmp/tmp6hj88b_q.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp6hj88b_q.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6hj88b_q.jl:21\ntest set: Test Failed at /tmp/tmp6hj88b_q.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6hj88b_q.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6hj88b_q.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6hj88b_q.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq1wsw8kf.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpq1wsw8kf.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq1wsw8kf.jl:21\ntest set: Test Failed at /tmp/tmpq1wsw8kf.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmpq1wsw8kf.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq1wsw8kf.jl:21\ntest set: Test Failed at /tmp/tmpq1wsw8kf.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq1wsw8kf.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq1wsw8kf.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq1wsw8kf.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for i in nums\n        if i > 10 && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9) && (i % 10 == 1 || i %\
    \ 10 == 3 || i % 10 == 5 || i % 10 == 7 || i % 10 == 9)\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5mafwfyr.jl:24\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n   Evaluated: 4 == 2\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5mafwfyr.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mafwfyr.jl:21\ntest set: Test Failed at /tmp/tmp5mafwfyr.jl:25\n\
    \  Expression: candidate([43, -12, 93, 125, 121, 109]) == 4\n   Evaluated: 5 ==\
    \ 4\nStacktrace:\n [1] top-level scope at /tmp/tmp5mafwfyr.jl:25\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mafwfyr.jl:21\ntest set: Test Failed at /tmp/tmp5mafwfyr.jl:26\n\
    \  Expression: candidate([71, -2, -33, 75, 21, 19]) == 3\n   Evaluated: 4 == 3\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5mafwfyr.jl:26\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5mafwfyr.jl:21\nTest Summary: | Pass  Fail  Total\n\
    test set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mafwfyr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyk_vwdvz.jl:16\n  Test threw exception\n\
    \  Expression: candidate([5, -2, 1, -5]) == 0\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr)\
    \ where T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpyk_vwdvz.jl:10\n   [2] top-level scope at /tmp/tmpyk_vwdvz.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyk_vwdvz.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpyk_vwdvz.jl:17\n  Test threw exception\n  Expression: candidate([15,\
    \ -73, 14, -15]) == 1\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpyk_vwdvz.jl:10\n   [2] top-level scope at /tmp/tmpyk_vwdvz.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyk_vwdvz.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpyk_vwdvz.jl:18\n  Test threw exception\n  Expression: candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpyk_vwdvz.jl:10\n   [2] top-level scope at /tmp/tmpyk_vwdvz.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyk_vwdvz.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpyk_vwdvz.jl:19\n  Test threw exception\n  Expression: candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpyk_vwdvz.jl:10\n   [2] top-level scope at /tmp/tmpyk_vwdvz.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyk_vwdvz.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpyk_vwdvz.jl:20\n  Test threw exception\n  Expression: candidate([71,\
    \ -2, -33, 75, 21, 19]) == 3\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpyk_vwdvz.jl:10\n   [2] top-level scope at /tmp/tmpyk_vwdvz.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyk_vwdvz.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpyk_vwdvz.jl:21\n  Test threw exception\n  Expression: candidate([1])\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpyk_vwdvz.jl:10\n   [2] top-level scope at /tmp/tmpyk_vwdvz.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyk_vwdvz.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpyk_vwdvz.jl:22\n  Test threw exception\n  Expression: candidate(Vector{Int64}([]))\
    \ == 0\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] specialFilter(::Array{Int64,1})\
    \ at /tmp/tmpyk_vwdvz.jl:10\n   [2] top-level scope at /tmp/tmpyk_vwdvz.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyk_vwdvz.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     7      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyk_vwdvz.jl:13\n"
  exit_code: 1
  status: SyntaxError

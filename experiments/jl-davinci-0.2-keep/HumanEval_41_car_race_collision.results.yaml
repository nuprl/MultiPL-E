name: HumanEval_41_car_race_collision
language: julia
results:
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbpzhgsmn.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbpzhgsmn.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpzhgsmn.jl:20\ntest set: Test Failed at /tmp/tmpbpzhgsmn.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbpzhgsmn.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpzhgsmn.jl:20\ntest set: Test Failed at /tmp/tmpbpzhgsmn.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbpzhgsmn.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpzhgsmn.jl:20\ntest set: Test Failed at /tmp/tmpbpzhgsmn.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbpzhgsmn.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpzhgsmn.jl:20\ntest set: Test Failed at /tmp/tmpbpzhgsmn.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbpzhgsmn.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpzhgsmn.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpzhgsmn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp112z1w4e.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp112z1w4e.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp112z1w4e.jl:20\ntest set: Test Failed at /tmp/tmp112z1w4e.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp112z1w4e.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp112z1w4e.jl:20\ntest set: Test Failed at /tmp/tmp112z1w4e.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp112z1w4e.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp112z1w4e.jl:20\ntest set: Test Failed at /tmp/tmp112z1w4e.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp112z1w4e.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp112z1w4e.jl:20\ntest set: Test Failed at /tmp/tmp112z1w4e.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp112z1w4e.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp112z1w4e.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp112z1w4e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprtsgfb89.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprtsgfb89.jl:14\n   [2] top-level scope at /tmp/tmprtsgfb89.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprtsgfb89.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprtsgfb89.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprtsgfb89.jl:14\n   [2] top-level scope at /tmp/tmprtsgfb89.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprtsgfb89.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprtsgfb89.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprtsgfb89.jl:14\n   [2] top-level scope at /tmp/tmprtsgfb89.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprtsgfb89.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprtsgfb89.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprtsgfb89.jl:14\n   [2] top-level scope at /tmp/tmprtsgfb89.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprtsgfb89.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprtsgfb89.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprtsgfb89.jl:14\n   [2] top-level scope at /tmp/tmprtsgfb89.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprtsgfb89.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprtsgfb89.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpazjwyf4p.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpazjwyf4p.jl:14\n   [2] top-level scope at /tmp/tmpazjwyf4p.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjwyf4p.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjwyf4p.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpazjwyf4p.jl:14\n   [2] top-level scope at /tmp/tmpazjwyf4p.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjwyf4p.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjwyf4p.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpazjwyf4p.jl:14\n   [2] top-level scope at /tmp/tmpazjwyf4p.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjwyf4p.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjwyf4p.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpazjwyf4p.jl:14\n   [2] top-level scope at /tmp/tmpazjwyf4p.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjwyf4p.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpazjwyf4p.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpazjwyf4p.jl:14\n   [2] top-level scope at /tmp/tmpazjwyf4p.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpazjwyf4p.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazjwyf4p.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbxoiagld.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmpbxoiagld.jl:14\\\
    n   [2] top-level scope at /tmp/tmpbxoiagld.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxoiagld.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxoiagld.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbxoiagld.jl:14\\n   [2] top-level scope at /tmp/tmpbxoiagld.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxoiagld.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxoiagld.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbxoiagld.jl:14\\n   [2] top-level scope at /tmp/tmpbxoiagld.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxoiagld.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxoiagld.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbxoiagld.jl:14\\n   [2] top-level scope at /tmp/tmpbxoiagld.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxoiagld.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbxoiagld.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbxoiagld.jl:14\\n   [2] top-level scope at /tmp/tmpbxoiagld.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbxoiagld.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp9cdz5cxg.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp9cdz5cxg.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9cdz5cxg.jl:20\\ntest set: Test Failed at /tmp/tmp9cdz5cxg.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp9cdz5cxg.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9cdz5cxg.jl:20\\ntest set: Test Failed at /tmp/tmp9cdz5cxg.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp9cdz5cxg.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9cdz5cxg.jl:20\\ntest set: Test Failed at /tmp/tmp9cdz5cxg.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp9cdz5cxg.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9cdz5cxg.jl:20\\ntest set: Test Failed at /tmp/tmp9cdz5cxg.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmp9cdz5cxg.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp9cdz5cxg.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp9cdz5cxg.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # TODO: implement this\
    \ function\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwcptlyjz.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpwcptlyjz.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcptlyjz.jl:20\ntest set: Test Failed at /tmp/tmpwcptlyjz.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwcptlyjz.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcptlyjz.jl:20\ntest set: Test Failed at /tmp/tmpwcptlyjz.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwcptlyjz.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcptlyjz.jl:20\ntest set: Test Failed at /tmp/tmpwcptlyjz.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwcptlyjz.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcptlyjz.jl:20\ntest set: Test Failed at /tmp/tmpwcptlyjz.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpwcptlyjz.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwcptlyjz.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwcptlyjz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpspw2ow9h.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpspw2ow9h.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpspw2ow9h.jl:20\ntest set: Test Failed at /tmp/tmpspw2ow9h.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpspw2ow9h.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpspw2ow9h.jl:20\ntest set: Test Failed at /tmp/tmpspw2ow9h.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpspw2ow9h.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpspw2ow9h.jl:20\ntest set: Test Failed at /tmp/tmpspw2ow9h.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpspw2ow9h.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpspw2ow9h.jl:20\ntest set: Test Failed at /tmp/tmpspw2ow9h.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpspw2ow9h.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpspw2ow9h.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpspw2ow9h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk9e8pg79.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk9e8pg79.jl:14\n   [2] top-level scope at /tmp/tmpk9e8pg79.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk9e8pg79.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpk9e8pg79.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk9e8pg79.jl:14\n   [2] top-level scope at /tmp/tmpk9e8pg79.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk9e8pg79.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpk9e8pg79.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk9e8pg79.jl:14\n   [2] top-level scope at /tmp/tmpk9e8pg79.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk9e8pg79.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpk9e8pg79.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk9e8pg79.jl:14\n   [2] top-level scope at /tmp/tmpk9e8pg79.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk9e8pg79.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpk9e8pg79.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk9e8pg79.jl:14\n   [2] top-level scope at /tmp/tmpk9e8pg79.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk9e8pg79.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk9e8pg79.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiz8htnq8.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpiz8htnq8.jl:14\n   [2] top-level scope at /tmp/tmpiz8htnq8.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz8htnq8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz8htnq8.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpiz8htnq8.jl:14\n   [2] top-level scope at /tmp/tmpiz8htnq8.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz8htnq8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz8htnq8.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpiz8htnq8.jl:14\n   [2] top-level scope at /tmp/tmpiz8htnq8.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz8htnq8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz8htnq8.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpiz8htnq8.jl:14\n   [2] top-level scope at /tmp/tmpiz8htnq8.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz8htnq8.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpiz8htnq8.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpiz8htnq8.jl:14\n   [2] top-level scope at /tmp/tmpiz8htnq8.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiz8htnq8.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiz8htnq8.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx92q884o.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpx92q884o.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx92q884o.jl:20\ntest set: Test Failed at /tmp/tmpx92q884o.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx92q884o.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx92q884o.jl:20\ntest set: Test Failed at /tmp/tmpx92q884o.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx92q884o.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx92q884o.jl:20\ntest set: Test Failed at /tmp/tmpx92q884o.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx92q884o.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx92q884o.jl:20\ntest set: Test Failed at /tmp/tmpx92q884o.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpx92q884o.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx92q884o.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx92q884o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvlycpvsm.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpvlycpvsm.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvlycpvsm.jl:20\ntest set: Test Failed at /tmp/tmpvlycpvsm.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvlycpvsm.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvlycpvsm.jl:20\ntest set: Test Failed at /tmp/tmpvlycpvsm.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvlycpvsm.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvlycpvsm.jl:20\ntest set: Test Failed at /tmp/tmpvlycpvsm.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvlycpvsm.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvlycpvsm.jl:20\ntest set: Test Failed at /tmp/tmpvlycpvsm.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvlycpvsm.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvlycpvsm.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvlycpvsm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptc468xii.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptc468xii.jl:14\n   [2] top-level scope at /tmp/tmptc468xii.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptc468xii.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptc468xii.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptc468xii.jl:14\n   [2] top-level scope at /tmp/tmptc468xii.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptc468xii.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptc468xii.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptc468xii.jl:14\n   [2] top-level scope at /tmp/tmptc468xii.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptc468xii.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptc468xii.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptc468xii.jl:14\n   [2] top-level scope at /tmp/tmptc468xii.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptc468xii.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptc468xii.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptc468xii.jl:14\n   [2] top-level scope at /tmp/tmptc468xii.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptc468xii.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptc468xii.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    return n * (n - 1) /\
    \ 2\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyiw0li7h.jl:20\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpyiw0li7h.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiw0li7h.jl:19\ntest set: Test Failed at /tmp/tmpyiw0li7h.jl:21\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyiw0li7h.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiw0li7h.jl:19\ntest set: Test Failed at /tmp/tmpyiw0li7h.jl:22\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 6 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyiw0li7h.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiw0li7h.jl:19\ntest set: Test Failed at /tmp/tmpyiw0li7h.jl:23\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 28 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyiw0li7h.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiw0li7h.jl:19\ntest set: Test Failed at /tmp/tmpyiw0li7h.jl:24\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 45 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpyiw0li7h.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiw0li7h.jl:19\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyiw0li7h.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    return n*(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpipl78jm6.jl:23\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpipl78jm6.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpipl78jm6.jl:22\ntest set: Test Failed at /tmp/tmpipl78jm6.jl:24\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpipl78jm6.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpipl78jm6.jl:22\ntest set: Test Failed at /tmp/tmpipl78jm6.jl:25\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 12 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpipl78jm6.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpipl78jm6.jl:22\ntest set: Test Failed at /tmp/tmpipl78jm6.jl:26\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 56 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpipl78jm6.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpipl78jm6.jl:22\ntest set: Test Failed at /tmp/tmpipl78jm6.jl:27\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 90 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpipl78jm6.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpipl78jm6.jl:22\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpipl78jm6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeod1a7ob.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpeod1a7ob.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeod1a7ob.jl:20\\ntest set: Test Failed at /tmp/tmpeod1a7ob.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpeod1a7ob.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeod1a7ob.jl:20\\ntest set: Test Failed at /tmp/tmpeod1a7ob.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpeod1a7ob.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeod1a7ob.jl:20\\ntest set: Test Failed at /tmp/tmpeod1a7ob.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpeod1a7ob.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeod1a7ob.jl:20\\ntest set: Test Failed at /tmp/tmpeod1a7ob.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpeod1a7ob.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpeod1a7ob.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    5  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2kwusei6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2kwusei6.jl:14\n   [2] top-level scope at /tmp/tmp2kwusei6.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kwusei6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kwusei6.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2kwusei6.jl:14\n   [2] top-level scope at /tmp/tmp2kwusei6.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kwusei6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kwusei6.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2kwusei6.jl:14\n   [2] top-level scope at /tmp/tmp2kwusei6.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kwusei6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kwusei6.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2kwusei6.jl:14\n   [2] top-level scope at /tmp/tmp2kwusei6.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kwusei6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2kwusei6.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2kwusei6.jl:14\n   [2] top-level scope at /tmp/tmp2kwusei6.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2kwusei6.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2kwusei6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp93e7255i.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmp93e7255i.jl:14\\\
    n   [2] top-level scope at /tmp/tmp93e7255i.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp93e7255i.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp93e7255i.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93e7255i.jl:14\\n   [2] top-level scope at /tmp/tmp93e7255i.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp93e7255i.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp93e7255i.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93e7255i.jl:14\\n   [2] top-level scope at /tmp/tmp93e7255i.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp93e7255i.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp93e7255i.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93e7255i.jl:14\\n   [2] top-level scope at /tmp/tmp93e7255i.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp93e7255i.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp93e7255i.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93e7255i.jl:14\\n   [2] top-level scope at /tmp/tmp93e7255i.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp93e7255i.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvk6crbwb.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpvk6crbwb.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvk6crbwb.jl:20\ntest set: Test Failed at /tmp/tmpvk6crbwb.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvk6crbwb.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvk6crbwb.jl:20\ntest set: Test Failed at /tmp/tmpvk6crbwb.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvk6crbwb.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvk6crbwb.jl:20\ntest set: Test Failed at /tmp/tmpvk6crbwb.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvk6crbwb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvk6crbwb.jl:20\ntest set: Test Failed at /tmp/tmpvk6crbwb.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvk6crbwb.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvk6crbwb.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvk6crbwb.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbpvpk7dv.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbpvpk7dv.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpvpk7dv.jl:20\ntest set: Test Failed at /tmp/tmpbpvpk7dv.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbpvpk7dv.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpvpk7dv.jl:20\ntest set: Test Failed at /tmp/tmpbpvpk7dv.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbpvpk7dv.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpvpk7dv.jl:20\ntest set: Test Failed at /tmp/tmpbpvpk7dv.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbpvpk7dv.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpvpk7dv.jl:20\ntest set: Test Failed at /tmp/tmpbpvpk7dv.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbpvpk7dv.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbpvpk7dv.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpvpk7dv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx97owxoy.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpx97owxoy.jl:14\n   [2] top-level scope at /tmp/tmpx97owxoy.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx97owxoy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpx97owxoy.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpx97owxoy.jl:14\n   [2] top-level scope at /tmp/tmpx97owxoy.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx97owxoy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpx97owxoy.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpx97owxoy.jl:14\n   [2] top-level scope at /tmp/tmpx97owxoy.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx97owxoy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpx97owxoy.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpx97owxoy.jl:14\n   [2] top-level scope at /tmp/tmpx97owxoy.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx97owxoy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpx97owxoy.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpx97owxoy.jl:14\n   [2] top-level scope at /tmp/tmpx97owxoy.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx97owxoy.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx97owxoy.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp52_8jnzp.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp52_8jnzp.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52_8jnzp.jl:20\ntest set: Test Failed at /tmp/tmp52_8jnzp.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp52_8jnzp.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52_8jnzp.jl:20\ntest set: Test Failed at /tmp/tmp52_8jnzp.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp52_8jnzp.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52_8jnzp.jl:20\ntest set: Test Failed at /tmp/tmp52_8jnzp.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp52_8jnzp.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52_8jnzp.jl:20\ntest set: Test Failed at /tmp/tmp52_8jnzp.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp52_8jnzp.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp52_8jnzp.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp52_8jnzp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9ax0fqz9.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmp9ax0fqz9.jl:14\\\
    n   [2] top-level scope at /tmp/tmp9ax0fqz9.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9ax0fqz9.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9ax0fqz9.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9ax0fqz9.jl:14\\n   [2] top-level scope at /tmp/tmp9ax0fqz9.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9ax0fqz9.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9ax0fqz9.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9ax0fqz9.jl:14\\n   [2] top-level scope at /tmp/tmp9ax0fqz9.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9ax0fqz9.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9ax0fqz9.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9ax0fqz9.jl:14\\n   [2] top-level scope at /tmp/tmp9ax0fqz9.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9ax0fqz9.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp9ax0fqz9.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9ax0fqz9.jl:14\\n   [2] top-level scope at /tmp/tmp9ax0fqz9.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp9ax0fqz9.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbijcqjie.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbijcqjie.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbijcqjie.jl:20\ntest set: Test Failed at /tmp/tmpbijcqjie.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbijcqjie.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbijcqjie.jl:20\ntest set: Test Failed at /tmp/tmpbijcqjie.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbijcqjie.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbijcqjie.jl:20\ntest set: Test Failed at /tmp/tmpbijcqjie.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbijcqjie.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbijcqjie.jl:20\ntest set: Test Failed at /tmp/tmpbijcqjie.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbijcqjie.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbijcqjie.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbijcqjie.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl1kl8ad3.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl1kl8ad3.jl:14\n   [2] top-level scope at /tmp/tmpl1kl8ad3.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl1kl8ad3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl1kl8ad3.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl1kl8ad3.jl:14\n   [2] top-level scope at /tmp/tmpl1kl8ad3.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl1kl8ad3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl1kl8ad3.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl1kl8ad3.jl:14\n   [2] top-level scope at /tmp/tmpl1kl8ad3.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl1kl8ad3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl1kl8ad3.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl1kl8ad3.jl:14\n   [2] top-level scope at /tmp/tmpl1kl8ad3.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl1kl8ad3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl1kl8ad3.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl1kl8ad3.jl:14\n   [2] top-level scope at /tmp/tmpl1kl8ad3.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl1kl8ad3.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl1kl8ad3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxq9qnb3k.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmpxq9qnb3k.jl:14\\\
    n   [2] top-level scope at /tmp/tmpxq9qnb3k.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpxq9qnb3k.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpxq9qnb3k.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpxq9qnb3k.jl:14\\n   [2] top-level scope at /tmp/tmpxq9qnb3k.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpxq9qnb3k.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpxq9qnb3k.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpxq9qnb3k.jl:14\\n   [2] top-level scope at /tmp/tmpxq9qnb3k.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpxq9qnb3k.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpxq9qnb3k.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpxq9qnb3k.jl:14\\n   [2] top-level scope at /tmp/tmpxq9qnb3k.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpxq9qnb3k.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpxq9qnb3k.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpxq9qnb3k.jl:14\\n   [2] top-level scope at /tmp/tmpxq9qnb3k.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpxq9qnb3k.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgk0wmgb2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpgk0wmgb2.jl:14\n   [2] top-level scope at /tmp/tmpgk0wmgb2.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk0wmgb2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk0wmgb2.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpgk0wmgb2.jl:14\n   [2] top-level scope at /tmp/tmpgk0wmgb2.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk0wmgb2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk0wmgb2.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpgk0wmgb2.jl:14\n   [2] top-level scope at /tmp/tmpgk0wmgb2.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk0wmgb2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk0wmgb2.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpgk0wmgb2.jl:14\n   [2] top-level scope at /tmp/tmpgk0wmgb2.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk0wmgb2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpgk0wmgb2.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpgk0wmgb2.jl:14\n   [2] top-level scope at /tmp/tmpgk0wmgb2.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgk0wmgb2.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgk0wmgb2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpesavf18c.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpesavf18c.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesavf18c.jl:20\ntest set: Test Failed at /tmp/tmpesavf18c.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpesavf18c.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesavf18c.jl:20\ntest set: Test Failed at /tmp/tmpesavf18c.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpesavf18c.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesavf18c.jl:20\ntest set: Test Failed at /tmp/tmpesavf18c.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpesavf18c.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesavf18c.jl:20\ntest set: Test Failed at /tmp/tmpesavf18c.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpesavf18c.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpesavf18c.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpesavf18c.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_0c1f3do.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp_0c1f3do.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_0c1f3do.jl:20\ntest set: Test Failed at /tmp/tmp_0c1f3do.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_0c1f3do.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_0c1f3do.jl:20\ntest set: Test Failed at /tmp/tmp_0c1f3do.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_0c1f3do.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_0c1f3do.jl:20\ntest set: Test Failed at /tmp/tmp_0c1f3do.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_0c1f3do.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_0c1f3do.jl:20\ntest set: Test Failed at /tmp/tmp_0c1f3do.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_0c1f3do.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_0c1f3do.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_0c1f3do.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # n is the number of\
    \ cars in each direction\n    # the function returns the number of collisions\n\
    \    # YOUR CODE HERE\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = car_race_collision;\n\t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\
    \t@test(candidate(4) == 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10)\
    \ == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxjc5vvkb.jl:23\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpxjc5vvkb.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjc5vvkb.jl:22\ntest set: Test Failed at /tmp/tmpxjc5vvkb.jl:24\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxjc5vvkb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjc5vvkb.jl:22\ntest set: Test Failed at /tmp/tmpxjc5vvkb.jl:25\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxjc5vvkb.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjc5vvkb.jl:22\ntest set: Test Failed at /tmp/tmpxjc5vvkb.jl:26\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxjc5vvkb.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjc5vvkb.jl:22\ntest set: Test Failed at /tmp/tmpxjc5vvkb.jl:27\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpxjc5vvkb.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxjc5vvkb.jl:22\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxjc5vvkb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpef1b61qd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpef1b61qd.jl:14\n   [2] top-level scope at /tmp/tmpef1b61qd.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpef1b61qd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpef1b61qd.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpef1b61qd.jl:14\n   [2] top-level scope at /tmp/tmpef1b61qd.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpef1b61qd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpef1b61qd.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpef1b61qd.jl:14\n   [2] top-level scope at /tmp/tmpef1b61qd.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpef1b61qd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpef1b61qd.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpef1b61qd.jl:14\n   [2] top-level scope at /tmp/tmpef1b61qd.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpef1b61qd.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpef1b61qd.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpef1b61qd.jl:14\n   [2] top-level scope at /tmp/tmpef1b61qd.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpef1b61qd.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpef1b61qd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv2sir76h.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpv2sir76h.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2sir76h.jl:20\ntest set: Test Failed at /tmp/tmpv2sir76h.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpv2sir76h.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2sir76h.jl:20\ntest set: Test Failed at /tmp/tmpv2sir76h.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpv2sir76h.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2sir76h.jl:20\ntest set: Test Failed at /tmp/tmpv2sir76h.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpv2sir76h.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2sir76h.jl:20\ntest set: Test Failed at /tmp/tmpv2sir76h.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpv2sir76h.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpv2sir76h.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv2sir76h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsucgg2kc.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsucgg2kc.jl:14\n   [2] top-level scope at /tmp/tmpsucgg2kc.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsucgg2kc.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsucgg2kc.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsucgg2kc.jl:14\n   [2] top-level scope at /tmp/tmpsucgg2kc.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsucgg2kc.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsucgg2kc.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsucgg2kc.jl:14\n   [2] top-level scope at /tmp/tmpsucgg2kc.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsucgg2kc.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsucgg2kc.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsucgg2kc.jl:14\n   [2] top-level scope at /tmp/tmpsucgg2kc.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsucgg2kc.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsucgg2kc.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsucgg2kc.jl:14\n   [2] top-level scope at /tmp/tmpsucgg2kc.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsucgg2kc.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsucgg2kc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    return n*(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7mh3twyn.jl:23\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp7mh3twyn.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7mh3twyn.jl:22\ntest set: Test Failed at /tmp/tmp7mh3twyn.jl:24\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7mh3twyn.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7mh3twyn.jl:22\ntest set: Test Failed at /tmp/tmp7mh3twyn.jl:25\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 12 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7mh3twyn.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7mh3twyn.jl:22\ntest set: Test Failed at /tmp/tmp7mh3twyn.jl:26\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 56 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7mh3twyn.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7mh3twyn.jl:22\ntest set: Test Failed at /tmp/tmp7mh3twyn.jl:27\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 90 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp7mh3twyn.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7mh3twyn.jl:22\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7mh3twyn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbd8r_nj4.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbd8r_nj4.jl:14\n   [2] top-level scope at /tmp/tmpbd8r_nj4.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbd8r_nj4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpbd8r_nj4.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbd8r_nj4.jl:14\n   [2] top-level scope at /tmp/tmpbd8r_nj4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbd8r_nj4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpbd8r_nj4.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbd8r_nj4.jl:14\n   [2] top-level scope at /tmp/tmpbd8r_nj4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbd8r_nj4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpbd8r_nj4.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbd8r_nj4.jl:14\n   [2] top-level scope at /tmp/tmpbd8r_nj4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbd8r_nj4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpbd8r_nj4.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpbd8r_nj4.jl:14\n   [2] top-level scope at /tmp/tmpbd8r_nj4.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbd8r_nj4.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbd8r_nj4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy7o7pry6.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpy7o7pry6.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy7o7pry6.jl:20\ntest set: Test Failed at /tmp/tmpy7o7pry6.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy7o7pry6.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy7o7pry6.jl:20\ntest set: Test Failed at /tmp/tmpy7o7pry6.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy7o7pry6.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy7o7pry6.jl:20\ntest set: Test Failed at /tmp/tmpy7o7pry6.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy7o7pry6.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy7o7pry6.jl:20\ntest set: Test Failed at /tmp/tmpy7o7pry6.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpy7o7pry6.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy7o7pry6.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy7o7pry6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppu1e63ok.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmppu1e63ok.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppu1e63ok.jl:20\ntest set: Test Failed at /tmp/tmppu1e63ok.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppu1e63ok.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppu1e63ok.jl:20\ntest set: Test Failed at /tmp/tmppu1e63ok.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppu1e63ok.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppu1e63ok.jl:20\ntest set: Test Failed at /tmp/tmppu1e63ok.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppu1e63ok.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppu1e63ok.jl:20\ntest set: Test Failed at /tmp/tmppu1e63ok.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmppu1e63ok.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppu1e63ok.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppu1e63ok.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0n81dzj4.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp0n81dzj4.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0n81dzj4.jl:20\ntest set: Test Failed at /tmp/tmp0n81dzj4.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0n81dzj4.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0n81dzj4.jl:20\ntest set: Test Failed at /tmp/tmp0n81dzj4.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0n81dzj4.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0n81dzj4.jl:20\ntest set: Test Failed at /tmp/tmp0n81dzj4.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0n81dzj4.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0n81dzj4.jl:20\ntest set: Test Failed at /tmp/tmp0n81dzj4.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp0n81dzj4.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0n81dzj4.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0n81dzj4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwhfalpt5.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwhfalpt5.jl:14\n   [2] top-level scope at /tmp/tmpwhfalpt5.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwhfalpt5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwhfalpt5.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwhfalpt5.jl:14\n   [2] top-level scope at /tmp/tmpwhfalpt5.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwhfalpt5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwhfalpt5.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwhfalpt5.jl:14\n   [2] top-level scope at /tmp/tmpwhfalpt5.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwhfalpt5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwhfalpt5.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwhfalpt5.jl:14\n   [2] top-level scope at /tmp/tmpwhfalpt5.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwhfalpt5.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwhfalpt5.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwhfalpt5.jl:14\n   [2] top-level scope at /tmp/tmpwhfalpt5.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwhfalpt5.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwhfalpt5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    Imagine a\
    \ road that's a perfectly straight infinitely long line.\n    n cars are driving\
    \ left to right;  simultaneously, a different set of n cars\n    are driving right\
    \ to left.   The two sets of cars start out being very far from\n    each other.\
    \  All cars move in the same speed.  Two cars are said to collide\n    when a\
    \ car that's moving left to right hits a car that's moving right to left.\n  \
    \  However, the cars are infinitely sturdy and strong; as a result, they continue\
    \ moving\n    in their trajectory as if they did not collide.\nusing Test\n\n\
    @testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\
    \t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmporver21e.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmporver21e.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars driving left to right and the number of cars driving\n    right\
    \ to left.\n    \"\"\"\n    # YOUR CODE HERE\n    return 0\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\
    \t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps1dqq2po.jl:25\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmps1dqq2po.jl:25\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1dqq2po.jl:24\ntest set: Test Failed at /tmp/tmps1dqq2po.jl:26\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps1dqq2po.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1dqq2po.jl:24\ntest set: Test Failed at /tmp/tmps1dqq2po.jl:27\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps1dqq2po.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1dqq2po.jl:24\ntest set: Test Failed at /tmp/tmps1dqq2po.jl:28\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps1dqq2po.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1dqq2po.jl:24\ntest set: Test Failed at /tmp/tmps1dqq2po.jl:29\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmps1dqq2po.jl:29\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1dqq2po.jl:24\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps1dqq2po.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    return n*(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp6kze5d31.jl:23\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 2 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp6kze5d31.jl:23\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6kze5d31.jl:22\\ntest set: Test Failed at /tmp/tmp6kze5d31.jl:24\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 6 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp6kze5d31.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6kze5d31.jl:22\\ntest set: Test Failed at /tmp/tmp6kze5d31.jl:25\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 12 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp6kze5d31.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6kze5d31.jl:22\\ntest set: Test Failed at /tmp/tmp6kze5d31.jl:26\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 56 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp6kze5d31.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6kze5d31.jl:22\\ntest set: Test Failed at /tmp/tmp6kze5d31.jl:27\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 90 == 100\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp6kze5d31.jl:27\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp6kze5d31.jl:22\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5d2ykk80.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp5d2ykk80.jl:14\n   [2] top-level scope at /tmp/tmp5d2ykk80.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5d2ykk80.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp5d2ykk80.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp5d2ykk80.jl:14\n   [2] top-level scope at /tmp/tmp5d2ykk80.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5d2ykk80.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp5d2ykk80.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp5d2ykk80.jl:14\n   [2] top-level scope at /tmp/tmp5d2ykk80.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5d2ykk80.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp5d2ykk80.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp5d2ykk80.jl:14\n   [2] top-level scope at /tmp/tmp5d2ykk80.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5d2ykk80.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp5d2ykk80.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp5d2ykk80.jl:14\n   [2] top-level scope at /tmp/tmp5d2ykk80.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5d2ykk80.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5d2ykk80.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfm84wiz8.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpfm84wiz8.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfm84wiz8.jl:23\ntest set: Test Failed at /tmp/tmpfm84wiz8.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfm84wiz8.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfm84wiz8.jl:23\ntest set: Test Failed at /tmp/tmpfm84wiz8.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfm84wiz8.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfm84wiz8.jl:23\ntest set: Test Failed at /tmp/tmpfm84wiz8.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfm84wiz8.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfm84wiz8.jl:23\ntest set: Test Failed at /tmp/tmpfm84wiz8.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpfm84wiz8.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfm84wiz8.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfm84wiz8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppz2ka6hl.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmppz2ka6hl.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppz2ka6hl.jl:20\ntest set: Test Failed at /tmp/tmppz2ka6hl.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppz2ka6hl.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppz2ka6hl.jl:20\ntest set: Test Failed at /tmp/tmppz2ka6hl.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppz2ka6hl.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppz2ka6hl.jl:20\ntest set: Test Failed at /tmp/tmppz2ka6hl.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppz2ka6hl.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppz2ka6hl.jl:20\ntest set: Test Failed at /tmp/tmppz2ka6hl.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmppz2ka6hl.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppz2ka6hl.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppz2ka6hl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsqnbor8e.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmpsqnbor8e.jl:14\\\
    n   [2] top-level scope at /tmp/tmpsqnbor8e.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsqnbor8e.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsqnbor8e.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsqnbor8e.jl:14\\n   [2] top-level scope at /tmp/tmpsqnbor8e.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsqnbor8e.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsqnbor8e.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsqnbor8e.jl:14\\n   [2] top-level scope at /tmp/tmpsqnbor8e.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsqnbor8e.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsqnbor8e.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsqnbor8e.jl:14\\n   [2] top-level scope at /tmp/tmpsqnbor8e.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsqnbor8e.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpsqnbor8e.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpsqnbor8e.jl:14\\n   [2] top-level scope at /tmp/tmpsqnbor8e.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpsqnbor8e.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkog5iive.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpkog5iive.jl:14\n   [2] top-level scope at /tmp/tmpkog5iive.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkog5iive.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpkog5iive.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpkog5iive.jl:14\n   [2] top-level scope at /tmp/tmpkog5iive.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkog5iive.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpkog5iive.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpkog5iive.jl:14\n   [2] top-level scope at /tmp/tmpkog5iive.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkog5iive.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpkog5iive.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpkog5iive.jl:14\n   [2] top-level scope at /tmp/tmpkog5iive.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkog5iive.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpkog5iive.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpkog5iive.jl:14\n   [2] top-level scope at /tmp/tmpkog5iive.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkog5iive.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkog5iive.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0z2hgmo5.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp0z2hgmo5.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z2hgmo5.jl:23\ntest set: Test Failed at /tmp/tmp0z2hgmo5.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0z2hgmo5.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z2hgmo5.jl:23\ntest set: Test Failed at /tmp/tmp0z2hgmo5.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0z2hgmo5.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z2hgmo5.jl:23\ntest set: Test Failed at /tmp/tmp0z2hgmo5.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0z2hgmo5.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z2hgmo5.jl:23\ntest set: Test Failed at /tmp/tmp0z2hgmo5.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp0z2hgmo5.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0z2hgmo5.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0z2hgmo5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    The number\
    \ of collisions is the number of pairs of cars that are\n    moving in opposite\
    \ directions.  The number of such pairs is n choose 2.\n    \"\"\"\n    return\
    \ n * (n - 1) / 2\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbz3yrh5g.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbz3yrh5g.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz3yrh5g.jl:23\ntest set: Test Failed at /tmp/tmpbz3yrh5g.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbz3yrh5g.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz3yrh5g.jl:23\ntest set: Test Failed at /tmp/tmpbz3yrh5g.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 6 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbz3yrh5g.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz3yrh5g.jl:23\ntest set: Test Failed at /tmp/tmpbz3yrh5g.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 28 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbz3yrh5g.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz3yrh5g.jl:23\ntest set: Test Failed at /tmp/tmpbz3yrh5g.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 45 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbz3yrh5g.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbz3yrh5g.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbz3yrh5g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf5jh0kti.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpf5jh0kti.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf5jh0kti.jl:20\ntest set: Test Failed at /tmp/tmpf5jh0kti.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf5jh0kti.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf5jh0kti.jl:20\ntest set: Test Failed at /tmp/tmpf5jh0kti.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf5jh0kti.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf5jh0kti.jl:20\ntest set: Test Failed at /tmp/tmpf5jh0kti.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpf5jh0kti.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf5jh0kti.jl:20\ntest set: Test Failed at /tmp/tmpf5jh0kti.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpf5jh0kti.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpf5jh0kti.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf5jh0kti.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp425ndp4m.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp425ndp4m.jl:14\n   [2] top-level scope at /tmp/tmp425ndp4m.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp425ndp4m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp425ndp4m.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp425ndp4m.jl:14\n   [2] top-level scope at /tmp/tmp425ndp4m.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp425ndp4m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp425ndp4m.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp425ndp4m.jl:14\n   [2] top-level scope at /tmp/tmp425ndp4m.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp425ndp4m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp425ndp4m.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp425ndp4m.jl:14\n   [2] top-level scope at /tmp/tmp425ndp4m.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp425ndp4m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp425ndp4m.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp425ndp4m.jl:14\n   [2] top-level scope at /tmp/tmp425ndp4m.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp425ndp4m.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp425ndp4m.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpea98tsc3.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpea98tsc3.jl:14\n   [2] top-level scope at /tmp/tmpea98tsc3.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpea98tsc3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpea98tsc3.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpea98tsc3.jl:14\n   [2] top-level scope at /tmp/tmpea98tsc3.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpea98tsc3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpea98tsc3.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpea98tsc3.jl:14\n   [2] top-level scope at /tmp/tmpea98tsc3.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpea98tsc3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpea98tsc3.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpea98tsc3.jl:14\n   [2] top-level scope at /tmp/tmpea98tsc3.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpea98tsc3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpea98tsc3.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpea98tsc3.jl:14\n   [2] top-level scope at /tmp/tmpea98tsc3.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpea98tsc3.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpea98tsc3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppzyc1e31.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmppzyc1e31.jl:14\n   [2] top-level scope at /tmp/tmppzyc1e31.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppzyc1e31.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppzyc1e31.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmppzyc1e31.jl:14\n   [2] top-level scope at /tmp/tmppzyc1e31.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppzyc1e31.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppzyc1e31.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmppzyc1e31.jl:14\n   [2] top-level scope at /tmp/tmppzyc1e31.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppzyc1e31.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppzyc1e31.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmppzyc1e31.jl:14\n   [2] top-level scope at /tmp/tmppzyc1e31.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppzyc1e31.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmppzyc1e31.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmppzyc1e31.jl:14\n   [2] top-level scope at /tmp/tmppzyc1e31.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppzyc1e31.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppzyc1e31.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpbeb_p7q6.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpbeb_p7q6.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbeb_p7q6.jl:20\\ntest set: Test Failed at /tmp/tmpbeb_p7q6.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpbeb_p7q6.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbeb_p7q6.jl:20\\ntest set: Test Failed at /tmp/tmpbeb_p7q6.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpbeb_p7q6.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbeb_p7q6.jl:20\\ntest set: Test Failed at /tmp/tmpbeb_p7q6.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpbeb_p7q6.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbeb_p7q6.jl:20\\ntest set: Test Failed at /tmp/tmpbeb_p7q6.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpbeb_p7q6.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpbeb_p7q6.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    return n*(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpar2f6wlk.jl:23\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpar2f6wlk.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpar2f6wlk.jl:22\ntest set: Test Failed at /tmp/tmpar2f6wlk.jl:24\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpar2f6wlk.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpar2f6wlk.jl:22\ntest set: Test Failed at /tmp/tmpar2f6wlk.jl:25\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 12 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpar2f6wlk.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpar2f6wlk.jl:22\ntest set: Test Failed at /tmp/tmpar2f6wlk.jl:26\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 56 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpar2f6wlk.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpar2f6wlk.jl:22\ntest set: Test Failed at /tmp/tmpar2f6wlk.jl:27\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 90 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpar2f6wlk.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpar2f6wlk.jl:22\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpar2f6wlk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1f1e75ba.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1f1e75ba.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f1e75ba.jl:20\\ntest set: Test Failed at /tmp/tmp1f1e75ba.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1f1e75ba.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f1e75ba.jl:20\\ntest set: Test Failed at /tmp/tmp1f1e75ba.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp1f1e75ba.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f1e75ba.jl:20\\ntest set: Test Failed at /tmp/tmp1f1e75ba.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp1f1e75ba.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f1e75ba.jl:20\\ntest set: Test Failed at /tmp/tmp1f1e75ba.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmp1f1e75ba.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1f1e75ba.jl:20\\nTest Summary: | Fail  Total\\\
    n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # TODO: implement this\
    \ function\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfc6tenxl.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpfc6tenxl.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfc6tenxl.jl:20\ntest set: Test Failed at /tmp/tmpfc6tenxl.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfc6tenxl.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfc6tenxl.jl:20\ntest set: Test Failed at /tmp/tmpfc6tenxl.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfc6tenxl.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfc6tenxl.jl:20\ntest set: Test Failed at /tmp/tmpfc6tenxl.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfc6tenxl.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfc6tenxl.jl:20\ntest set: Test Failed at /tmp/tmpfc6tenxl.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpfc6tenxl.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfc6tenxl.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfc6tenxl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # n is the number of\
    \ cars moving left to right\n    # and the number of cars moving right to left\n\
    \    #\n    # YOUR CODE HERE\n    return 0\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\t@test(candidate(3)\
    \ == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10)\
    \ == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzk2pdtfh.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpzk2pdtfh.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzk2pdtfh.jl:23\ntest set: Test Failed at /tmp/tmpzk2pdtfh.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzk2pdtfh.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzk2pdtfh.jl:23\ntest set: Test Failed at /tmp/tmpzk2pdtfh.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzk2pdtfh.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzk2pdtfh.jl:23\ntest set: Test Failed at /tmp/tmpzk2pdtfh.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzk2pdtfh.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzk2pdtfh.jl:23\ntest set: Test Failed at /tmp/tmpzk2pdtfh.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpzk2pdtfh.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzk2pdtfh.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzk2pdtfh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwsnn5tpp.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpwsnn5tpp.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwsnn5tpp.jl:20\ntest set: Test Failed at /tmp/tmpwsnn5tpp.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwsnn5tpp.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwsnn5tpp.jl:20\ntest set: Test Failed at /tmp/tmpwsnn5tpp.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwsnn5tpp.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwsnn5tpp.jl:20\ntest set: Test Failed at /tmp/tmpwsnn5tpp.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwsnn5tpp.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwsnn5tpp.jl:20\ntest set: Test Failed at /tmp/tmpwsnn5tpp.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpwsnn5tpp.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwsnn5tpp.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwsnn5tpp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8mnr6a60.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8mnr6a60.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8mnr6a60.jl:20\\ntest set: Test Failed at /tmp/tmp8mnr6a60.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp8mnr6a60.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8mnr6a60.jl:20\\ntest set: Test Failed at /tmp/tmp8mnr6a60.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp8mnr6a60.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8mnr6a60.jl:20\\ntest set: Test Failed at /tmp/tmp8mnr6a60.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp8mnr6a60.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8mnr6a60.jl:20\\ntest set: Test Failed at /tmp/tmp8mnr6a60.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmp8mnr6a60.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8mnr6a60.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo1g5wzj0.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo1g5wzj0.jl:14\n   [2] top-level scope at /tmp/tmpo1g5wzj0.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo1g5wzj0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpo1g5wzj0.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo1g5wzj0.jl:14\n   [2] top-level scope at /tmp/tmpo1g5wzj0.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo1g5wzj0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpo1g5wzj0.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo1g5wzj0.jl:14\n   [2] top-level scope at /tmp/tmpo1g5wzj0.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo1g5wzj0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpo1g5wzj0.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo1g5wzj0.jl:14\n   [2] top-level scope at /tmp/tmpo1g5wzj0.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo1g5wzj0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpo1g5wzj0.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo1g5wzj0.jl:14\n   [2] top-level scope at /tmp/tmpo1g5wzj0.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo1g5wzj0.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo1g5wzj0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeuzturdf.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpeuzturdf.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuzturdf.jl:20\ntest set: Test Failed at /tmp/tmpeuzturdf.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeuzturdf.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuzturdf.jl:20\ntest set: Test Failed at /tmp/tmpeuzturdf.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeuzturdf.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuzturdf.jl:20\ntest set: Test Failed at /tmp/tmpeuzturdf.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeuzturdf.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuzturdf.jl:20\ntest set: Test Failed at /tmp/tmpeuzturdf.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpeuzturdf.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuzturdf.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeuzturdf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdiqwb2ya.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpdiqwb2ya.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdiqwb2ya.jl:20\ntest set: Test Failed at /tmp/tmpdiqwb2ya.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdiqwb2ya.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdiqwb2ya.jl:20\ntest set: Test Failed at /tmp/tmpdiqwb2ya.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdiqwb2ya.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdiqwb2ya.jl:20\ntest set: Test Failed at /tmp/tmpdiqwb2ya.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdiqwb2ya.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdiqwb2ya.jl:20\ntest set: Test Failed at /tmp/tmpdiqwb2ya.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpdiqwb2ya.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdiqwb2ya.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdiqwb2ya.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp47hsmplu.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp47hsmplu.jl:14\n   [2] top-level scope at /tmp/tmp47hsmplu.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47hsmplu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp47hsmplu.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp47hsmplu.jl:14\n   [2] top-level scope at /tmp/tmp47hsmplu.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47hsmplu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp47hsmplu.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp47hsmplu.jl:14\n   [2] top-level scope at /tmp/tmp47hsmplu.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47hsmplu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp47hsmplu.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp47hsmplu.jl:14\n   [2] top-level scope at /tmp/tmp47hsmplu.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47hsmplu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp47hsmplu.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp47hsmplu.jl:14\n   [2] top-level scope at /tmp/tmp47hsmplu.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47hsmplu.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp47hsmplu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0p5ifory.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0p5ifory.jl:14\n   [2] top-level scope at /tmp/tmp0p5ifory.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0p5ifory.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0p5ifory.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0p5ifory.jl:14\n   [2] top-level scope at /tmp/tmp0p5ifory.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0p5ifory.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0p5ifory.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0p5ifory.jl:14\n   [2] top-level scope at /tmp/tmp0p5ifory.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0p5ifory.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0p5ifory.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0p5ifory.jl:14\n   [2] top-level scope at /tmp/tmp0p5ifory.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0p5ifory.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0p5ifory.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0p5ifory.jl:14\n   [2] top-level scope at /tmp/tmp0p5ifory.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0p5ifory.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0p5ifory.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp884a796j.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp884a796j.jl:14\n   [2] top-level scope at /tmp/tmp884a796j.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp884a796j.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp884a796j.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp884a796j.jl:14\n   [2] top-level scope at /tmp/tmp884a796j.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp884a796j.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp884a796j.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp884a796j.jl:14\n   [2] top-level scope at /tmp/tmp884a796j.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp884a796j.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp884a796j.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp884a796j.jl:14\n   [2] top-level scope at /tmp/tmp884a796j.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp884a796j.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp884a796j.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp884a796j.jl:14\n   [2] top-level scope at /tmp/tmp884a796j.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp884a796j.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp884a796j.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg93iuat9.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpg93iuat9.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg93iuat9.jl:20\ntest set: Test Failed at /tmp/tmpg93iuat9.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg93iuat9.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg93iuat9.jl:20\ntest set: Test Failed at /tmp/tmpg93iuat9.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg93iuat9.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg93iuat9.jl:20\ntest set: Test Failed at /tmp/tmpg93iuat9.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg93iuat9.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg93iuat9.jl:20\ntest set: Test Failed at /tmp/tmpg93iuat9.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpg93iuat9.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg93iuat9.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg93iuat9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp77y8qhii.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp77y8qhii.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77y8qhii.jl:20\ntest set: Test Failed at /tmp/tmp77y8qhii.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp77y8qhii.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77y8qhii.jl:20\ntest set: Test Failed at /tmp/tmp77y8qhii.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp77y8qhii.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77y8qhii.jl:20\ntest set: Test Failed at /tmp/tmp77y8qhii.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp77y8qhii.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77y8qhii.jl:20\ntest set: Test Failed at /tmp/tmp77y8qhii.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp77y8qhii.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp77y8qhii.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp77y8qhii.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpue0wym2r.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpue0wym2r.jl:14\n   [2] top-level scope at /tmp/tmpue0wym2r.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpue0wym2r.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpue0wym2r.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpue0wym2r.jl:14\n   [2] top-level scope at /tmp/tmpue0wym2r.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpue0wym2r.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpue0wym2r.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpue0wym2r.jl:14\n   [2] top-level scope at /tmp/tmpue0wym2r.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpue0wym2r.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpue0wym2r.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpue0wym2r.jl:14\n   [2] top-level scope at /tmp/tmpue0wym2r.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpue0wym2r.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpue0wym2r.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpue0wym2r.jl:14\n   [2] top-level scope at /tmp/tmpue0wym2r.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpue0wym2r.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpue0wym2r.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2fx6f44y.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmp2fx6f44y.jl:14\\\
    n   [2] top-level scope at /tmp/tmp2fx6f44y.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp2fx6f44y.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp2fx6f44y.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2fx6f44y.jl:14\\n   [2] top-level scope at /tmp/tmp2fx6f44y.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp2fx6f44y.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp2fx6f44y.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2fx6f44y.jl:14\\n   [2] top-level scope at /tmp/tmp2fx6f44y.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp2fx6f44y.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp2fx6f44y.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2fx6f44y.jl:14\\n   [2] top-level scope at /tmp/tmp2fx6f44y.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp2fx6f44y.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp2fx6f44y.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2fx6f44y.jl:14\\n   [2] top-level scope at /tmp/tmp2fx6f44y.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp2fx6f44y.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpprday86a.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpprday86a.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpprday86a.jl:23\ntest set: Test Failed at /tmp/tmpprday86a.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpprday86a.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpprday86a.jl:23\ntest set: Test Failed at /tmp/tmpprday86a.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpprday86a.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpprday86a.jl:23\ntest set: Test Failed at /tmp/tmpprday86a.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpprday86a.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpprday86a.jl:23\ntest set: Test Failed at /tmp/tmpprday86a.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpprday86a.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpprday86a.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpprday86a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphq760tng.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphq760tng.jl:14\n   [2] top-level scope at /tmp/tmphq760tng.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphq760tng.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphq760tng.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphq760tng.jl:14\n   [2] top-level scope at /tmp/tmphq760tng.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphq760tng.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphq760tng.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphq760tng.jl:14\n   [2] top-level scope at /tmp/tmphq760tng.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphq760tng.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphq760tng.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphq760tng.jl:14\n   [2] top-level scope at /tmp/tmphq760tng.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphq760tng.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphq760tng.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphq760tng.jl:14\n   [2] top-level scope at /tmp/tmphq760tng.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphq760tng.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphq760tng.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4ahmvcg6.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp4ahmvcg6.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4ahmvcg6.jl:20\\ntest set: Test Failed at /tmp/tmp4ahmvcg6.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp4ahmvcg6.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4ahmvcg6.jl:20\\ntest set: Test Failed at /tmp/tmp4ahmvcg6.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp4ahmvcg6.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4ahmvcg6.jl:20\\ntest set: Test Failed at /tmp/tmp4ahmvcg6.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp4ahmvcg6.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4ahmvcg6.jl:20\\ntest set: Test Failed at /tmp/tmp4ahmvcg6.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmp4ahmvcg6.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4ahmvcg6.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n: number\
    \ of cars driving left to right\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgec0yaag.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpgec0yaag.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgec0yaag.jl:23\ntest set: Test Failed at /tmp/tmpgec0yaag.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgec0yaag.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgec0yaag.jl:23\ntest set: Test Failed at /tmp/tmpgec0yaag.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgec0yaag.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgec0yaag.jl:23\ntest set: Test Failed at /tmp/tmpgec0yaag.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgec0yaag.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgec0yaag.jl:23\ntest set: Test Failed at /tmp/tmpgec0yaag.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpgec0yaag.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgec0yaag.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgec0yaag.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3prdxh2n.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3prdxh2n.jl:14\n   [2] top-level scope at /tmp/tmp3prdxh2n.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3prdxh2n.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp3prdxh2n.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3prdxh2n.jl:14\n   [2] top-level scope at /tmp/tmp3prdxh2n.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3prdxh2n.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp3prdxh2n.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3prdxh2n.jl:14\n   [2] top-level scope at /tmp/tmp3prdxh2n.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3prdxh2n.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp3prdxh2n.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3prdxh2n.jl:14\n   [2] top-level scope at /tmp/tmp3prdxh2n.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3prdxh2n.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp3prdxh2n.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3prdxh2n.jl:14\n   [2] top-level scope at /tmp/tmp3prdxh2n.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3prdxh2n.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3prdxh2n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmx66rm6b.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmx66rm6b.jl:14\n   [2] top-level scope at /tmp/tmpmx66rm6b.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmx66rm6b.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmx66rm6b.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmx66rm6b.jl:14\n   [2] top-level scope at /tmp/tmpmx66rm6b.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmx66rm6b.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmx66rm6b.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmx66rm6b.jl:14\n   [2] top-level scope at /tmp/tmpmx66rm6b.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmx66rm6b.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmx66rm6b.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmx66rm6b.jl:14\n   [2] top-level scope at /tmp/tmpmx66rm6b.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmx66rm6b.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmx66rm6b.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmx66rm6b.jl:14\n   [2] top-level scope at /tmp/tmpmx66rm6b.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmx66rm6b.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmx66rm6b.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2r9h38ns.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp2r9h38ns.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2r9h38ns.jl:20\ntest set: Test Failed at /tmp/tmp2r9h38ns.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2r9h38ns.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2r9h38ns.jl:20\ntest set: Test Failed at /tmp/tmp2r9h38ns.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2r9h38ns.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2r9h38ns.jl:20\ntest set: Test Failed at /tmp/tmp2r9h38ns.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2r9h38ns.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2r9h38ns.jl:20\ntest set: Test Failed at /tmp/tmp2r9h38ns.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2r9h38ns.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2r9h38ns.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2r9h38ns.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3wl1xdab.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp3wl1xdab.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3wl1xdab.jl:20\ntest set: Test Failed at /tmp/tmp3wl1xdab.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3wl1xdab.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3wl1xdab.jl:20\ntest set: Test Failed at /tmp/tmp3wl1xdab.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3wl1xdab.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3wl1xdab.jl:20\ntest set: Test Failed at /tmp/tmp3wl1xdab.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3wl1xdab.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3wl1xdab.jl:20\ntest set: Test Failed at /tmp/tmp3wl1xdab.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp3wl1xdab.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3wl1xdab.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3wl1xdab.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy2xg3fwv.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpy2xg3fwv.jl:14\n   [2] top-level scope at /tmp/tmpy2xg3fwv.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy2xg3fwv.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpy2xg3fwv.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpy2xg3fwv.jl:14\n   [2] top-level scope at /tmp/tmpy2xg3fwv.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy2xg3fwv.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpy2xg3fwv.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpy2xg3fwv.jl:14\n   [2] top-level scope at /tmp/tmpy2xg3fwv.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy2xg3fwv.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpy2xg3fwv.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpy2xg3fwv.jl:14\n   [2] top-level scope at /tmp/tmpy2xg3fwv.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy2xg3fwv.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpy2xg3fwv.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpy2xg3fwv.jl:14\n   [2] top-level scope at /tmp/tmpy2xg3fwv.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy2xg3fwv.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy2xg3fwv.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkl_d7697.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpkl_d7697.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkl_d7697.jl:20\ntest set: Test Failed at /tmp/tmpkl_d7697.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkl_d7697.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkl_d7697.jl:20\ntest set: Test Failed at /tmp/tmpkl_d7697.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkl_d7697.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkl_d7697.jl:20\ntest set: Test Failed at /tmp/tmpkl_d7697.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkl_d7697.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkl_d7697.jl:20\ntest set: Test Failed at /tmp/tmpkl_d7697.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpkl_d7697.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkl_d7697.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkl_d7697.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq0fea2ex.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpq0fea2ex.jl:14\n   [2] top-level scope at /tmp/tmpq0fea2ex.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0fea2ex.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0fea2ex.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpq0fea2ex.jl:14\n   [2] top-level scope at /tmp/tmpq0fea2ex.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0fea2ex.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0fea2ex.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpq0fea2ex.jl:14\n   [2] top-level scope at /tmp/tmpq0fea2ex.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0fea2ex.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0fea2ex.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpq0fea2ex.jl:14\n   [2] top-level scope at /tmp/tmpq0fea2ex.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0fea2ex.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpq0fea2ex.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpq0fea2ex.jl:14\n   [2] top-level scope at /tmp/tmpq0fea2ex.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq0fea2ex.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq0fea2ex.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphsxcvno_.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmphsxcvno_.jl:14\\\
    n   [2] top-level scope at /tmp/tmphsxcvno_.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphsxcvno_.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphsxcvno_.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphsxcvno_.jl:14\\n   [2] top-level scope at /tmp/tmphsxcvno_.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphsxcvno_.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphsxcvno_.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphsxcvno_.jl:14\\n   [2] top-level scope at /tmp/tmphsxcvno_.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphsxcvno_.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphsxcvno_.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphsxcvno_.jl:14\\n   [2] top-level scope at /tmp/tmphsxcvno_.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphsxcvno_.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphsxcvno_.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphsxcvno_.jl:14\\n   [2] top-level scope at /tmp/tmphsxcvno_.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphsxcvno_.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf_09nun1.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf_09nun1.jl:14\n   [2] top-level scope at /tmp/tmpf_09nun1.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf_09nun1.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf_09nun1.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf_09nun1.jl:14\n   [2] top-level scope at /tmp/tmpf_09nun1.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf_09nun1.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf_09nun1.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf_09nun1.jl:14\n   [2] top-level scope at /tmp/tmpf_09nun1.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf_09nun1.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf_09nun1.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf_09nun1.jl:14\n   [2] top-level scope at /tmp/tmpf_09nun1.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf_09nun1.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf_09nun1.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf_09nun1.jl:14\n   [2] top-level scope at /tmp/tmpf_09nun1.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf_09nun1.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_09nun1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    return n*(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt_eg3nzb.jl:23\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpt_eg3nzb.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt_eg3nzb.jl:22\ntest set: Test Failed at /tmp/tmpt_eg3nzb.jl:24\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt_eg3nzb.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt_eg3nzb.jl:22\ntest set: Test Failed at /tmp/tmpt_eg3nzb.jl:25\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 12 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt_eg3nzb.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt_eg3nzb.jl:22\ntest set: Test Failed at /tmp/tmpt_eg3nzb.jl:26\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 56 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt_eg3nzb.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt_eg3nzb.jl:22\ntest set: Test Failed at /tmp/tmpt_eg3nzb.jl:27\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 90 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpt_eg3nzb.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt_eg3nzb.jl:22\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt_eg3nzb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzporlrtr.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzporlrtr.jl:14\n   [2] top-level scope at /tmp/tmpzporlrtr.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzporlrtr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzporlrtr.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzporlrtr.jl:14\n   [2] top-level scope at /tmp/tmpzporlrtr.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzporlrtr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzporlrtr.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzporlrtr.jl:14\n   [2] top-level scope at /tmp/tmpzporlrtr.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzporlrtr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzporlrtr.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzporlrtr.jl:14\n   [2] top-level scope at /tmp/tmpzporlrtr.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzporlrtr.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzporlrtr.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzporlrtr.jl:14\n   [2] top-level scope at /tmp/tmpzporlrtr.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzporlrtr.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzporlrtr.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # TODO: implement this\
    \ function\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd6s6dlcf.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpd6s6dlcf.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd6s6dlcf.jl:20\ntest set: Test Failed at /tmp/tmpd6s6dlcf.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd6s6dlcf.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd6s6dlcf.jl:20\ntest set: Test Failed at /tmp/tmpd6s6dlcf.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd6s6dlcf.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd6s6dlcf.jl:20\ntest set: Test Failed at /tmp/tmpd6s6dlcf.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd6s6dlcf.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd6s6dlcf.jl:20\ntest set: Test Failed at /tmp/tmpd6s6dlcf.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpd6s6dlcf.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd6s6dlcf.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd6s6dlcf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiiiclh4p.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpiiiclh4p.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiiiclh4p.jl:20\ntest set: Test Failed at /tmp/tmpiiiclh4p.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpiiiclh4p.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiiiclh4p.jl:20\ntest set: Test Failed at /tmp/tmpiiiclh4p.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpiiiclh4p.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiiiclh4p.jl:20\ntest set: Test Failed at /tmp/tmpiiiclh4p.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpiiiclh4p.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiiiclh4p.jl:20\ntest set: Test Failed at /tmp/tmpiiiclh4p.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpiiiclh4p.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpiiiclh4p.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiiiclh4p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3qlft8aj.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp3qlft8aj.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qlft8aj.jl:20\ntest set: Test Failed at /tmp/tmp3qlft8aj.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3qlft8aj.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qlft8aj.jl:20\ntest set: Test Failed at /tmp/tmp3qlft8aj.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3qlft8aj.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qlft8aj.jl:20\ntest set: Test Failed at /tmp/tmp3qlft8aj.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3qlft8aj.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qlft8aj.jl:20\ntest set: Test Failed at /tmp/tmp3qlft8aj.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp3qlft8aj.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3qlft8aj.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qlft8aj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n = number\
    \ of cars in each direction\n    \"\"\"\n    # YOUR CODE HERE\n    return 0\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq5bx9d19.jl:24\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq5bx9d19.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5bx9d19.jl:23\\ntest set: Test Failed at /tmp/tmpq5bx9d19.jl:25\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpq5bx9d19.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5bx9d19.jl:23\\ntest set: Test Failed at /tmp/tmpq5bx9d19.jl:26\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpq5bx9d19.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5bx9d19.jl:23\\ntest set: Test Failed at /tmp/tmpq5bx9d19.jl:27\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpq5bx9d19.jl:27\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5bx9d19.jl:23\\ntest set: Test Failed at /tmp/tmpq5bx9d19.jl:28\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpq5bx9d19.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq5bx9d19.jl:23\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphd4k70b2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphd4k70b2.jl:14\n   [2] top-level scope at /tmp/tmphd4k70b2.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd4k70b2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphd4k70b2.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphd4k70b2.jl:14\n   [2] top-level scope at /tmp/tmphd4k70b2.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd4k70b2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphd4k70b2.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphd4k70b2.jl:14\n   [2] top-level scope at /tmp/tmphd4k70b2.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd4k70b2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphd4k70b2.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphd4k70b2.jl:14\n   [2] top-level scope at /tmp/tmphd4k70b2.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd4k70b2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphd4k70b2.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphd4k70b2.jl:14\n   [2] top-level scope at /tmp/tmphd4k70b2.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd4k70b2.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphd4k70b2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjsv00w1i.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjsv00w1i.jl:14\n   [2] top-level scope at /tmp/tmpjsv00w1i.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjsv00w1i.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjsv00w1i.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjsv00w1i.jl:14\n   [2] top-level scope at /tmp/tmpjsv00w1i.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjsv00w1i.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjsv00w1i.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjsv00w1i.jl:14\n   [2] top-level scope at /tmp/tmpjsv00w1i.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjsv00w1i.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjsv00w1i.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjsv00w1i.jl:14\n   [2] top-level scope at /tmp/tmpjsv00w1i.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjsv00w1i.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjsv00w1i.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjsv00w1i.jl:14\n   [2] top-level scope at /tmp/tmpjsv00w1i.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjsv00w1i.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjsv00w1i.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjj1bn3u7.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjj1bn3u7.jl:14\n   [2] top-level scope at /tmp/tmpjj1bn3u7.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjj1bn3u7.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjj1bn3u7.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjj1bn3u7.jl:14\n   [2] top-level scope at /tmp/tmpjj1bn3u7.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjj1bn3u7.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjj1bn3u7.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjj1bn3u7.jl:14\n   [2] top-level scope at /tmp/tmpjj1bn3u7.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjj1bn3u7.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjj1bn3u7.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjj1bn3u7.jl:14\n   [2] top-level scope at /tmp/tmpjj1bn3u7.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjj1bn3u7.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpjj1bn3u7.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpjj1bn3u7.jl:14\n   [2] top-level scope at /tmp/tmpjj1bn3u7.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjj1bn3u7.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjj1bn3u7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9cr9s588.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9cr9s588.jl:14\n   [2] top-level scope at /tmp/tmp9cr9s588.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cr9s588.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cr9s588.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9cr9s588.jl:14\n   [2] top-level scope at /tmp/tmp9cr9s588.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cr9s588.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cr9s588.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9cr9s588.jl:14\n   [2] top-level scope at /tmp/tmp9cr9s588.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cr9s588.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cr9s588.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9cr9s588.jl:14\n   [2] top-level scope at /tmp/tmp9cr9s588.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cr9s588.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp9cr9s588.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp9cr9s588.jl:14\n   [2] top-level scope at /tmp/tmp9cr9s588.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9cr9s588.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cr9s588.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg3yq98lu.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpg3yq98lu.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3yq98lu.jl:23\ntest set: Test Failed at /tmp/tmpg3yq98lu.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg3yq98lu.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3yq98lu.jl:23\ntest set: Test Failed at /tmp/tmpg3yq98lu.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg3yq98lu.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3yq98lu.jl:23\ntest set: Test Failed at /tmp/tmpg3yq98lu.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg3yq98lu.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3yq98lu.jl:23\ntest set: Test Failed at /tmp/tmpg3yq98lu.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpg3yq98lu.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg3yq98lu.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg3yq98lu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp01in4c5k.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp01in4c5k.jl:14\n   [2] top-level scope at /tmp/tmp01in4c5k.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp01in4c5k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp01in4c5k.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp01in4c5k.jl:14\n   [2] top-level scope at /tmp/tmp01in4c5k.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp01in4c5k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp01in4c5k.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp01in4c5k.jl:14\n   [2] top-level scope at /tmp/tmp01in4c5k.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp01in4c5k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp01in4c5k.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp01in4c5k.jl:14\n   [2] top-level scope at /tmp/tmp01in4c5k.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp01in4c5k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp01in4c5k.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp01in4c5k.jl:14\n   [2] top-level scope at /tmp/tmp01in4c5k.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp01in4c5k.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp01in4c5k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    This function\
    \ outputs the number of collisions for a car race with n cars.\n    \"\"\"\n \
    \   # We will use the following algorithm:\n    # 1.  We will sort the cars by\
    \ their starting positions.\n    # 2.  We will then iterate through the cars from\
    \ left to right.\n    # 3.  For each car, we will check if there are any cars\
    \ to the left of it that are\n    #     moving to the right.  If so, we will add\
    \ the number of such cars to the total\n    #     number of collisions.\n    #\
    \ 4.  We will then return the total number of collisions.\n    \n    # We will\
    \ use the following array to store the cars:\n    # car_array[i] = (start_position,\
    \ direction)\n    # where start_position is the starting position of the ith car,\
    \ and direction is\n    # either 1 (right to left) or -1 (left to right).\n  \
    \  car_array = zeros(Int64, 2, n)\n    \n    # We will now populate the car_array.\n\
    \    for i in 1:n\n        # We will now generate the starting position and direction\
    \ of the ith car.\n        start_position = rand(1:10^9)\n        direction =\
    \ rand([-1, 1])\n        \n        # We will now store the starting position and\
    \ direction of the ith car.\n        car_array[1, i] = start_position\n      \
    \  car_array[2, i] = direction\n    end\n    \n    # We will now sort the car_array\
    \ by the starting positions of the cars.\n    sort!(car_array, by = x -> x[1])\n\
    \    \n    # We will now iterate through the cars from left to right.\n    total_collisions\
    \ = 0\n    for i in 1:n\n        # We will now check if there are any cars to\
    \ the left of the ith car that are\n        # moving to the right.  If so, we\
    \ will add the number of such cars to the total\n        # number of collisions.\n\
    \        for j in 1:i\n            if car_array[2, j] == 1\n                total_collisions\
    \ += 1\n            end\n        end\n    end\n    \n    # We will now\nusing\
    \ Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfqb704ie.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpfqb704ie.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpfqb704ie.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1l6q1guw.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1l6q1guw.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l6q1guw.jl:20\ntest set: Test Failed at /tmp/tmp1l6q1guw.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1l6q1guw.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l6q1guw.jl:20\ntest set: Test Failed at /tmp/tmp1l6q1guw.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1l6q1guw.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l6q1guw.jl:20\ntest set: Test Failed at /tmp/tmp1l6q1guw.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1l6q1guw.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l6q1guw.jl:20\ntest set: Test Failed at /tmp/tmp1l6q1guw.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp1l6q1guw.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1l6q1guw.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1l6q1guw.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp96b_usjv.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp96b_usjv.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp96b_usjv.jl:20\ntest set: Test Failed at /tmp/tmp96b_usjv.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp96b_usjv.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp96b_usjv.jl:20\ntest set: Test Failed at /tmp/tmp96b_usjv.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp96b_usjv.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp96b_usjv.jl:20\ntest set: Test Failed at /tmp/tmp96b_usjv.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp96b_usjv.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp96b_usjv.jl:20\ntest set: Test Failed at /tmp/tmp96b_usjv.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp96b_usjv.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp96b_usjv.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96b_usjv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpequa3jdq.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmpequa3jdq.jl:14\\\
    n   [2] top-level scope at /tmp/tmpequa3jdq.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpequa3jdq.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpequa3jdq.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpequa3jdq.jl:14\\n   [2] top-level scope at /tmp/tmpequa3jdq.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpequa3jdq.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpequa3jdq.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpequa3jdq.jl:14\\n   [2] top-level scope at /tmp/tmpequa3jdq.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpequa3jdq.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpequa3jdq.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpequa3jdq.jl:14\\n   [2] top-level scope at /tmp/tmpequa3jdq.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpequa3jdq.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpequa3jdq.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpequa3jdq.jl:14\\n   [2] top-level scope at /tmp/tmpequa3jdq.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpequa3jdq.jl:19\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    This function\
    \ outputs the number of collisions.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt6vpzbb1.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpt6vpzbb1.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt6vpzbb1.jl:23\ntest set: Test Failed at /tmp/tmpt6vpzbb1.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt6vpzbb1.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt6vpzbb1.jl:23\ntest set: Test Failed at /tmp/tmpt6vpzbb1.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt6vpzbb1.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt6vpzbb1.jl:23\ntest set: Test Failed at /tmp/tmpt6vpzbb1.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt6vpzbb1.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt6vpzbb1.jl:23\ntest set: Test Failed at /tmp/tmpt6vpzbb1.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpt6vpzbb1.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt6vpzbb1.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt6vpzbb1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwdr49oc4.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwdr49oc4.jl:14\n   [2] top-level scope at /tmp/tmpwdr49oc4.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwdr49oc4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwdr49oc4.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwdr49oc4.jl:14\n   [2] top-level scope at /tmp/tmpwdr49oc4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwdr49oc4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwdr49oc4.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwdr49oc4.jl:14\n   [2] top-level scope at /tmp/tmpwdr49oc4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwdr49oc4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwdr49oc4.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwdr49oc4.jl:14\n   [2] top-level scope at /tmp/tmpwdr49oc4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwdr49oc4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpwdr49oc4.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpwdr49oc4.jl:14\n   [2] top-level scope at /tmp/tmpwdr49oc4.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwdr49oc4.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwdr49oc4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk23k3959.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmpk23k3959.jl:14\\\
    n   [2] top-level scope at /tmp/tmpk23k3959.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk23k3959.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk23k3959.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk23k3959.jl:14\\n   [2] top-level scope at /tmp/tmpk23k3959.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk23k3959.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk23k3959.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk23k3959.jl:14\\n   [2] top-level scope at /tmp/tmpk23k3959.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk23k3959.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk23k3959.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk23k3959.jl:14\\n   [2] top-level scope at /tmp/tmpk23k3959.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk23k3959.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk23k3959.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpk23k3959.jl:14\\n   [2] top-level scope at /tmp/tmpk23k3959.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk23k3959.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1wdj8swr.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1wdj8swr.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1wdj8swr.jl:20\ntest set: Test Failed at /tmp/tmp1wdj8swr.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1wdj8swr.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1wdj8swr.jl:20\ntest set: Test Failed at /tmp/tmp1wdj8swr.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1wdj8swr.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1wdj8swr.jl:20\ntest set: Test Failed at /tmp/tmp1wdj8swr.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1wdj8swr.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1wdj8swr.jl:20\ntest set: Test Failed at /tmp/tmp1wdj8swr.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp1wdj8swr.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1wdj8swr.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wdj8swr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaduqy9yt.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpaduqy9yt.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaduqy9yt.jl:20\ntest set: Test Failed at /tmp/tmpaduqy9yt.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaduqy9yt.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaduqy9yt.jl:20\ntest set: Test Failed at /tmp/tmpaduqy9yt.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaduqy9yt.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaduqy9yt.jl:20\ntest set: Test Failed at /tmp/tmpaduqy9yt.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaduqy9yt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaduqy9yt.jl:20\ntest set: Test Failed at /tmp/tmpaduqy9yt.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpaduqy9yt.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaduqy9yt.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaduqy9yt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjh2w4dnp.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpjh2w4dnp.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjh2w4dnp.jl:23\ntest set: Test Failed at /tmp/tmpjh2w4dnp.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjh2w4dnp.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjh2w4dnp.jl:23\ntest set: Test Failed at /tmp/tmpjh2w4dnp.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjh2w4dnp.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjh2w4dnp.jl:23\ntest set: Test Failed at /tmp/tmpjh2w4dnp.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjh2w4dnp.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjh2w4dnp.jl:23\ntest set: Test Failed at /tmp/tmpjh2w4dnp.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpjh2w4dnp.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjh2w4dnp.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjh2w4dnp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqkoj4aqa.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqkoj4aqa.jl:14\n   [2] top-level scope at /tmp/tmpqkoj4aqa.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqkoj4aqa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqkoj4aqa.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqkoj4aqa.jl:14\n   [2] top-level scope at /tmp/tmpqkoj4aqa.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqkoj4aqa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqkoj4aqa.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqkoj4aqa.jl:14\n   [2] top-level scope at /tmp/tmpqkoj4aqa.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqkoj4aqa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqkoj4aqa.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqkoj4aqa.jl:14\n   [2] top-level scope at /tmp/tmpqkoj4aqa.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqkoj4aqa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqkoj4aqa.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqkoj4aqa.jl:14\n   [2] top-level scope at /tmp/tmpqkoj4aqa.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqkoj4aqa.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqkoj4aqa.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8b2icmdw.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp8b2icmdw.jl:14\n   [2] top-level scope at /tmp/tmp8b2icmdw.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8b2icmdw.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8b2icmdw.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp8b2icmdw.jl:14\n   [2] top-level scope at /tmp/tmp8b2icmdw.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8b2icmdw.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8b2icmdw.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp8b2icmdw.jl:14\n   [2] top-level scope at /tmp/tmp8b2icmdw.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8b2icmdw.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8b2icmdw.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp8b2icmdw.jl:14\n   [2] top-level scope at /tmp/tmp8b2icmdw.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8b2icmdw.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp8b2icmdw.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp8b2icmdw.jl:14\n   [2] top-level scope at /tmp/tmp8b2icmdw.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8b2icmdw.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8b2icmdw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl38vk03u.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpl38vk03u.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl38vk03u.jl:20\ntest set: Test Failed at /tmp/tmpl38vk03u.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpl38vk03u.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl38vk03u.jl:20\ntest set: Test Failed at /tmp/tmpl38vk03u.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpl38vk03u.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl38vk03u.jl:20\ntest set: Test Failed at /tmp/tmpl38vk03u.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpl38vk03u.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl38vk03u.jl:20\ntest set: Test Failed at /tmp/tmpl38vk03u.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpl38vk03u.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl38vk03u.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl38vk03u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplniwrzem.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmplniwrzem.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplniwrzem.jl:20\ntest set: Test Failed at /tmp/tmplniwrzem.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplniwrzem.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplniwrzem.jl:20\ntest set: Test Failed at /tmp/tmplniwrzem.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplniwrzem.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplniwrzem.jl:20\ntest set: Test Failed at /tmp/tmplniwrzem.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplniwrzem.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplniwrzem.jl:20\ntest set: Test Failed at /tmp/tmplniwrzem.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmplniwrzem.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplniwrzem.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplniwrzem.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_zhkhg30.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_zhkhg30.jl:14\n   [2] top-level scope at /tmp/tmp_zhkhg30.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_zhkhg30.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zhkhg30.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_zhkhg30.jl:14\n   [2] top-level scope at /tmp/tmp_zhkhg30.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_zhkhg30.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zhkhg30.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_zhkhg30.jl:14\n   [2] top-level scope at /tmp/tmp_zhkhg30.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_zhkhg30.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zhkhg30.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_zhkhg30.jl:14\n   [2] top-level scope at /tmp/tmp_zhkhg30.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_zhkhg30.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_zhkhg30.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_zhkhg30.jl:14\n   [2] top-level scope at /tmp/tmp_zhkhg30.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_zhkhg30.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_zhkhg30.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ebrs9ji.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp4ebrs9ji.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ebrs9ji.jl:20\ntest set: Test Failed at /tmp/tmp4ebrs9ji.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ebrs9ji.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ebrs9ji.jl:20\ntest set: Test Failed at /tmp/tmp4ebrs9ji.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ebrs9ji.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ebrs9ji.jl:20\ntest set: Test Failed at /tmp/tmp4ebrs9ji.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4ebrs9ji.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ebrs9ji.jl:20\ntest set: Test Failed at /tmp/tmp4ebrs9ji.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp4ebrs9ji.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4ebrs9ji.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ebrs9ji.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp93jujyxa.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93jujyxa.jl:14\n   [2] top-level scope at /tmp/tmp93jujyxa.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp93jujyxa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp93jujyxa.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93jujyxa.jl:14\n   [2] top-level scope at /tmp/tmp93jujyxa.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp93jujyxa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp93jujyxa.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93jujyxa.jl:14\n   [2] top-level scope at /tmp/tmp93jujyxa.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp93jujyxa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp93jujyxa.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93jujyxa.jl:14\n   [2] top-level scope at /tmp/tmp93jujyxa.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp93jujyxa.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp93jujyxa.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp93jujyxa.jl:14\n   [2] top-level scope at /tmp/tmp93jujyxa.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp93jujyxa.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp93jujyxa.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    return n*(n-1)/2\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnvg5gibu.jl:20\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpnvg5gibu.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvg5gibu.jl:19\ntest set: Test Failed at /tmp/tmpnvg5gibu.jl:21\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnvg5gibu.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvg5gibu.jl:19\ntest set: Test Failed at /tmp/tmpnvg5gibu.jl:22\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 6 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnvg5gibu.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvg5gibu.jl:19\ntest set: Test Failed at /tmp/tmpnvg5gibu.jl:23\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 28 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnvg5gibu.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvg5gibu.jl:19\ntest set: Test Failed at /tmp/tmpnvg5gibu.jl:24\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 45 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpnvg5gibu.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnvg5gibu.jl:19\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnvg5gibu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    return n*(n-1)/2\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0dnnbwxx.jl:20\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp0dnnbwxx.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0dnnbwxx.jl:19\ntest set: Test Failed at /tmp/tmp0dnnbwxx.jl:21\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0dnnbwxx.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0dnnbwxx.jl:19\ntest set: Test Failed at /tmp/tmp0dnnbwxx.jl:22\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 6 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0dnnbwxx.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0dnnbwxx.jl:19\ntest set: Test Failed at /tmp/tmp0dnnbwxx.jl:23\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 28 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0dnnbwxx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0dnnbwxx.jl:19\ntest set: Test Failed at /tmp/tmp0dnnbwxx.jl:24\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 45 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp0dnnbwxx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0dnnbwxx.jl:19\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0dnnbwxx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_6_6ropi.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_6_6ropi.jl:14\n   [2] top-level scope at /tmp/tmp_6_6ropi.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_6_6ropi.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_6_6ropi.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_6_6ropi.jl:14\n   [2] top-level scope at /tmp/tmp_6_6ropi.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_6_6ropi.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_6_6ropi.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_6_6ropi.jl:14\n   [2] top-level scope at /tmp/tmp_6_6ropi.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_6_6ropi.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_6_6ropi.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_6_6ropi.jl:14\n   [2] top-level scope at /tmp/tmp_6_6ropi.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_6_6ropi.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp_6_6ropi.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp_6_6ropi.jl:14\n   [2] top-level scope at /tmp/tmp_6_6ropi.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_6_6ropi.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_6_6ropi.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc54w3pz4.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpc54w3pz4.jl:14\n   [2] top-level scope at /tmp/tmpc54w3pz4.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc54w3pz4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpc54w3pz4.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpc54w3pz4.jl:14\n   [2] top-level scope at /tmp/tmpc54w3pz4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc54w3pz4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpc54w3pz4.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpc54w3pz4.jl:14\n   [2] top-level scope at /tmp/tmpc54w3pz4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc54w3pz4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpc54w3pz4.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpc54w3pz4.jl:14\n   [2] top-level scope at /tmp/tmpc54w3pz4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc54w3pz4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpc54w3pz4.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpc54w3pz4.jl:14\n   [2] top-level scope at /tmp/tmpc54w3pz4.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc54w3pz4.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc54w3pz4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpooe2ac05.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpooe2ac05.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpooe2ac05.jl:20\\ntest set: Test Failed at /tmp/tmpooe2ac05.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpooe2ac05.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpooe2ac05.jl:20\\ntest set: Test Failed at /tmp/tmpooe2ac05.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpooe2ac05.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpooe2ac05.jl:20\\ntest set: Test Failed at /tmp/tmpooe2ac05.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpooe2ac05.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpooe2ac05.jl:20\\ntest set: Test Failed at /tmp/tmpooe2ac05.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpooe2ac05.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpooe2ac05.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0km5dmh0.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0km5dmh0.jl:14\n   [2] top-level scope at /tmp/tmp0km5dmh0.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0km5dmh0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0km5dmh0.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0km5dmh0.jl:14\n   [2] top-level scope at /tmp/tmp0km5dmh0.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0km5dmh0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0km5dmh0.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0km5dmh0.jl:14\n   [2] top-level scope at /tmp/tmp0km5dmh0.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0km5dmh0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0km5dmh0.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0km5dmh0.jl:14\n   [2] top-level scope at /tmp/tmp0km5dmh0.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0km5dmh0.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp0km5dmh0.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp0km5dmh0.jl:14\n   [2] top-level scope at /tmp/tmp0km5dmh0.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0km5dmh0.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0km5dmh0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp592vuu2s.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmp592vuu2s.jl:14\\\
    n   [2] top-level scope at /tmp/tmp592vuu2s.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp592vuu2s.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp592vuu2s.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp592vuu2s.jl:14\\n   [2] top-level scope at /tmp/tmp592vuu2s.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp592vuu2s.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp592vuu2s.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp592vuu2s.jl:14\\n   [2] top-level scope at /tmp/tmp592vuu2s.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp592vuu2s.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp592vuu2s.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp592vuu2s.jl:14\\n   [2] top-level scope at /tmp/tmp592vuu2s.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp592vuu2s.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp592vuu2s.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp592vuu2s.jl:14\\n   [2] top-level scope at /tmp/tmp592vuu2s.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp592vuu2s.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzn5ln0xg.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpzn5ln0xg.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzn5ln0xg.jl:20\ntest set: Test Failed at /tmp/tmpzn5ln0xg.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzn5ln0xg.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzn5ln0xg.jl:20\ntest set: Test Failed at /tmp/tmpzn5ln0xg.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzn5ln0xg.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzn5ln0xg.jl:20\ntest set: Test Failed at /tmp/tmpzn5ln0xg.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzn5ln0xg.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzn5ln0xg.jl:20\ntest set: Test Failed at /tmp/tmpzn5ln0xg.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpzn5ln0xg.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzn5ln0xg.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzn5ln0xg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbgk6qx2n.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbgk6qx2n.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgk6qx2n.jl:20\ntest set: Test Failed at /tmp/tmpbgk6qx2n.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbgk6qx2n.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgk6qx2n.jl:20\ntest set: Test Failed at /tmp/tmpbgk6qx2n.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbgk6qx2n.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgk6qx2n.jl:20\ntest set: Test Failed at /tmp/tmpbgk6qx2n.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbgk6qx2n.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgk6qx2n.jl:20\ntest set: Test Failed at /tmp/tmpbgk6qx2n.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbgk6qx2n.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbgk6qx2n.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbgk6qx2n.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbsrjp_l6.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbsrjp_l6.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbsrjp_l6.jl:20\ntest set: Test Failed at /tmp/tmpbsrjp_l6.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbsrjp_l6.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbsrjp_l6.jl:20\ntest set: Test Failed at /tmp/tmpbsrjp_l6.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbsrjp_l6.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbsrjp_l6.jl:20\ntest set: Test Failed at /tmp/tmpbsrjp_l6.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbsrjp_l6.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbsrjp_l6.jl:20\ntest set: Test Failed at /tmp/tmpbsrjp_l6.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbsrjp_l6.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbsrjp_l6.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbsrjp_l6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars driving in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2pr4szy9.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp2pr4szy9.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pr4szy9.jl:23\ntest set: Test Failed at /tmp/tmp2pr4szy9.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2pr4szy9.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pr4szy9.jl:23\ntest set: Test Failed at /tmp/tmp2pr4szy9.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2pr4szy9.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pr4szy9.jl:23\ntest set: Test Failed at /tmp/tmp2pr4szy9.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2pr4szy9.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pr4szy9.jl:23\ntest set: Test Failed at /tmp/tmp2pr4szy9.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2pr4szy9.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2pr4szy9.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2pr4szy9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    This function\
    \ outputs the number of collisions between n cars moving left to right\n    and\
    \ n cars moving right to left.\n    \"\"\"\n    return n*(n-1)/2\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\
    \t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmphv0mbvu_.jl:24\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 1 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmphv0mbvu_.jl:24\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphv0mbvu_.jl:23\\ntest set: Test Failed at /tmp/tmphv0mbvu_.jl:25\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 3 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmphv0mbvu_.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphv0mbvu_.jl:23\\ntest set: Test Failed at /tmp/tmphv0mbvu_.jl:26\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 6 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmphv0mbvu_.jl:26\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphv0mbvu_.jl:23\\ntest set: Test Failed at /tmp/tmphv0mbvu_.jl:27\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 28 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmphv0mbvu_.jl:27\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphv0mbvu_.jl:23\\ntest set: Test Failed at /tmp/tmphv0mbvu_.jl:28\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 45 == 100\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmphv0mbvu_.jl:28\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmphv0mbvu_.jl:23\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp23utnr3t.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp23utnr3t.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23utnr3t.jl:20\ntest set: Test Failed at /tmp/tmp23utnr3t.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp23utnr3t.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23utnr3t.jl:20\ntest set: Test Failed at /tmp/tmp23utnr3t.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp23utnr3t.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23utnr3t.jl:20\ntest set: Test Failed at /tmp/tmp23utnr3t.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp23utnr3t.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23utnr3t.jl:20\ntest set: Test Failed at /tmp/tmp23utnr3t.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp23utnr3t.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp23utnr3t.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp23utnr3t.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp8fte5_k.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpp8fte5_k.jl:14\n   [2] top-level scope at /tmp/tmpp8fte5_k.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp8fte5_k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8fte5_k.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpp8fte5_k.jl:14\n   [2] top-level scope at /tmp/tmpp8fte5_k.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp8fte5_k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8fte5_k.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpp8fte5_k.jl:14\n   [2] top-level scope at /tmp/tmpp8fte5_k.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp8fte5_k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8fte5_k.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpp8fte5_k.jl:14\n   [2] top-level scope at /tmp/tmpp8fte5_k.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp8fte5_k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpp8fte5_k.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpp8fte5_k.jl:14\n   [2] top-level scope at /tmp/tmpp8fte5_k.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpp8fte5_k.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp8fte5_k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx28bvfce.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpx28bvfce.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx28bvfce.jl:20\ntest set: Test Failed at /tmp/tmpx28bvfce.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx28bvfce.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx28bvfce.jl:20\ntest set: Test Failed at /tmp/tmpx28bvfce.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx28bvfce.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx28bvfce.jl:20\ntest set: Test Failed at /tmp/tmpx28bvfce.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx28bvfce.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx28bvfce.jl:20\ntest set: Test Failed at /tmp/tmpx28bvfce.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpx28bvfce.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx28bvfce.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx28bvfce.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # The number of collisions\
    \ is the same as the number of cars that are\n    # moving in the same direction.\
    \  So, we just need to count the number of\n    # cars that are moving in the\
    \ same direction.\n    #\n    # Let's say that the cars that are moving left to\
    \ right are numbered 1 to n,\n    # and the cars that are moving right to left\
    \ are numbered n+1 to 2n.\n    #\n    # If car i is moving left to right, then\
    \ car i+n is moving right to left.\n    #\n    # If car i is moving left to right,\
    \ then car i+n is moving right to left.\n    #\n    # So, the number of cars that\
    \ are moving in the same direction is the number\n    # of cars that are moving\
    \ left to right, plus the number of cars that are\n    # moving right to left.\n\
    \    #\n    # The number of cars that are moving left to right is n.\n    #\n\
    \    # The number of cars that are moving right to left is n.\n    #\n    # So,\
    \ the number of cars that are moving in the same direction is 2n.\n    #\n   \
    \ # So, the number of collisions is 2n.\n    2n\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\t@test(candidate(3)\
    \ == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10)\
    \ == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp568ftbjp.jl:43\n  Expression: candidate(3)\
    \ == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] top-level scope at /tmp/tmp568ftbjp.jl:43\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp568ftbjp.jl:41\ntest set: Test Failed at /tmp/tmp568ftbjp.jl:44\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 8 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp568ftbjp.jl:44\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp568ftbjp.jl:41\ntest set: Test Failed at /tmp/tmp568ftbjp.jl:45\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 16 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp568ftbjp.jl:45\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp568ftbjp.jl:41\ntest set: Test Failed at /tmp/tmp568ftbjp.jl:46\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 20 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp568ftbjp.jl:46\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp568ftbjp.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp568ftbjp.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9o2ubow1.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp9o2ubow1.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9o2ubow1.jl:20\ntest set: Test Failed at /tmp/tmp9o2ubow1.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9o2ubow1.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9o2ubow1.jl:20\ntest set: Test Failed at /tmp/tmp9o2ubow1.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9o2ubow1.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9o2ubow1.jl:20\ntest set: Test Failed at /tmp/tmp9o2ubow1.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9o2ubow1.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9o2ubow1.jl:20\ntest set: Test Failed at /tmp/tmp9o2ubow1.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp9o2ubow1.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9o2ubow1.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9o2ubow1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl9oo6yov.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl9oo6yov.jl:14\n   [2] top-level scope at /tmp/tmpl9oo6yov.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9oo6yov.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9oo6yov.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl9oo6yov.jl:14\n   [2] top-level scope at /tmp/tmpl9oo6yov.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9oo6yov.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9oo6yov.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl9oo6yov.jl:14\n   [2] top-level scope at /tmp/tmpl9oo6yov.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9oo6yov.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9oo6yov.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl9oo6yov.jl:14\n   [2] top-level scope at /tmp/tmpl9oo6yov.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9oo6yov.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9oo6yov.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpl9oo6yov.jl:14\n   [2] top-level scope at /tmp/tmpl9oo6yov.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9oo6yov.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9oo6yov.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3xooi35x.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmp3xooi35x.jl:14\\\
    n   [2] top-level scope at /tmp/tmp3xooi35x.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xooi35x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xooi35x.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3xooi35x.jl:14\\n   [2] top-level scope at /tmp/tmp3xooi35x.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xooi35x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xooi35x.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3xooi35x.jl:14\\n   [2] top-level scope at /tmp/tmp3xooi35x.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xooi35x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xooi35x.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3xooi35x.jl:14\\n   [2] top-level scope at /tmp/tmp3xooi35x.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xooi35x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xooi35x.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp3xooi35x.jl:14\\n   [2] top-level scope at /tmp/tmp3xooi35x.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xooi35x.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt8e9elfy.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpt8e9elfy.jl:14\n   [2] top-level scope at /tmp/tmpt8e9elfy.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8e9elfy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8e9elfy.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpt8e9elfy.jl:14\n   [2] top-level scope at /tmp/tmpt8e9elfy.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8e9elfy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8e9elfy.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpt8e9elfy.jl:14\n   [2] top-level scope at /tmp/tmpt8e9elfy.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8e9elfy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8e9elfy.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpt8e9elfy.jl:14\n   [2] top-level scope at /tmp/tmpt8e9elfy.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8e9elfy.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8e9elfy.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpt8e9elfy.jl:14\n   [2] top-level scope at /tmp/tmpt8e9elfy.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8e9elfy.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt8e9elfy.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1w31vlkk.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1w31vlkk.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1w31vlkk.jl:20\ntest set: Test Failed at /tmp/tmp1w31vlkk.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1w31vlkk.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1w31vlkk.jl:20\ntest set: Test Failed at /tmp/tmp1w31vlkk.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1w31vlkk.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1w31vlkk.jl:20\ntest set: Test Failed at /tmp/tmp1w31vlkk.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1w31vlkk.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1w31vlkk.jl:20\ntest set: Test Failed at /tmp/tmp1w31vlkk.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp1w31vlkk.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1w31vlkk.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1w31vlkk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_qdq4hfy.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp_qdq4hfy.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_qdq4hfy.jl:20\ntest set: Test Failed at /tmp/tmp_qdq4hfy.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_qdq4hfy.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_qdq4hfy.jl:20\ntest set: Test Failed at /tmp/tmp_qdq4hfy.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_qdq4hfy.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_qdq4hfy.jl:20\ntest set: Test Failed at /tmp/tmp_qdq4hfy.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_qdq4hfy.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_qdq4hfy.jl:20\ntest set: Test Failed at /tmp/tmp_qdq4hfy.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp_qdq4hfy.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_qdq4hfy.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_qdq4hfy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    return n*(n-1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprfy956np.jl:23\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmprfy956np.jl:23\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprfy956np.jl:22\ntest set: Test Failed at /tmp/tmprfy956np.jl:24\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 6 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprfy956np.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprfy956np.jl:22\ntest set: Test Failed at /tmp/tmprfy956np.jl:25\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 12 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprfy956np.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprfy956np.jl:22\ntest set: Test Failed at /tmp/tmprfy956np.jl:26\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 56 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprfy956np.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprfy956np.jl:22\ntest set: Test Failed at /tmp/tmprfy956np.jl:27\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 90 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmprfy956np.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprfy956np.jl:22\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprfy956np.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqihl468u.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpqihl468u.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqihl468u.jl:20\ntest set: Test Failed at /tmp/tmpqihl468u.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqihl468u.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqihl468u.jl:20\ntest set: Test Failed at /tmp/tmpqihl468u.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqihl468u.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqihl468u.jl:20\ntest set: Test Failed at /tmp/tmpqihl468u.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqihl468u.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqihl468u.jl:20\ntest set: Test Failed at /tmp/tmpqihl468u.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpqihl468u.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqihl468u.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqihl468u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2jr4u874.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2jr4u874.jl:14\n   [2] top-level scope at /tmp/tmp2jr4u874.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2jr4u874.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2jr4u874.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2jr4u874.jl:14\n   [2] top-level scope at /tmp/tmp2jr4u874.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2jr4u874.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2jr4u874.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2jr4u874.jl:14\n   [2] top-level scope at /tmp/tmp2jr4u874.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2jr4u874.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2jr4u874.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2jr4u874.jl:14\n   [2] top-level scope at /tmp/tmp2jr4u874.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2jr4u874.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp2jr4u874.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp2jr4u874.jl:14\n   [2] top-level scope at /tmp/tmp2jr4u874.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2jr4u874.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2jr4u874.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqid2vlr6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqid2vlr6.jl:14\n   [2] top-level scope at /tmp/tmpqid2vlr6.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqid2vlr6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqid2vlr6.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqid2vlr6.jl:14\n   [2] top-level scope at /tmp/tmpqid2vlr6.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqid2vlr6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqid2vlr6.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqid2vlr6.jl:14\n   [2] top-level scope at /tmp/tmpqid2vlr6.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqid2vlr6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqid2vlr6.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqid2vlr6.jl:14\n   [2] top-level scope at /tmp/tmpqid2vlr6.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqid2vlr6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpqid2vlr6.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpqid2vlr6.jl:14\n   [2] top-level scope at /tmp/tmpqid2vlr6.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqid2vlr6.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqid2vlr6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6_a87s_t.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6_a87s_t.jl:14\n   [2] top-level scope at /tmp/tmp6_a87s_t.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6_a87s_t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6_a87s_t.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6_a87s_t.jl:14\n   [2] top-level scope at /tmp/tmp6_a87s_t.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6_a87s_t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6_a87s_t.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6_a87s_t.jl:14\n   [2] top-level scope at /tmp/tmp6_a87s_t.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6_a87s_t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6_a87s_t.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6_a87s_t.jl:14\n   [2] top-level scope at /tmp/tmp6_a87s_t.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6_a87s_t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6_a87s_t.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6_a87s_t.jl:14\n   [2] top-level scope at /tmp/tmp6_a87s_t.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6_a87s_t.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6_a87s_t.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprj1vnu27.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmprj1vnu27.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj1vnu27.jl:20\ntest set: Test Failed at /tmp/tmprj1vnu27.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprj1vnu27.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj1vnu27.jl:20\ntest set: Test Failed at /tmp/tmprj1vnu27.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprj1vnu27.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj1vnu27.jl:20\ntest set: Test Failed at /tmp/tmprj1vnu27.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprj1vnu27.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj1vnu27.jl:20\ntest set: Test Failed at /tmp/tmprj1vnu27.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmprj1vnu27.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprj1vnu27.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprj1vnu27.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # TODO: Implement this\
    \ function\n    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjbg51i1w.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpjbg51i1w.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbg51i1w.jl:20\ntest set: Test Failed at /tmp/tmpjbg51i1w.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjbg51i1w.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbg51i1w.jl:20\ntest set: Test Failed at /tmp/tmpjbg51i1w.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjbg51i1w.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbg51i1w.jl:20\ntest set: Test Failed at /tmp/tmpjbg51i1w.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjbg51i1w.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbg51i1w.jl:20\ntest set: Test Failed at /tmp/tmpjbg51i1w.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpjbg51i1w.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbg51i1w.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbg51i1w.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # the number of cars\
    \ moving left to right\n    # the number of cars moving right to left\n    # the\
    \ number of collisions\n    # the speed of the cars\n    # the position of the\
    \ cars moving left to right\n    # the position of the cars moving right to left\n\
    \    # the time at which the cars moving left to right arrive\n    # the time\
    \ at which the cars moving right to left arrive\n    # the time at which the cars\
    \ moving left to right depart\n    # the time at which the cars moving right to\
    \ left depart\n    # the time at which the cars moving left to right arrive\n\
    \    # the time at which the cars moving right to left arrive\n    # the time\
    \ at which the cars moving left to right depart\n    # the time at which the cars\
    \ moving right to left depart\n    # the time at which the cars moving left to\
    \ right arrive\n    # the time at which the cars moving right to left arrive\n\
    \    # the time at which the cars moving left to right depart\n    # the time\
    \ at which the cars moving right to left depart\n    # the time at which the cars\
    \ moving left to right arrive\n    # the time at which the cars moving right to\
    \ left arrive\n    # the time at which the cars moving left to right depart\n\
    \    # the time at which the cars moving right to left depart\n    # the time\
    \ at which the cars moving left to right arrive\n    # the time at which the cars\
    \ moving right to left arrive\n    # the time at which the cars moving left to\
    \ right depart\n    # the time at which the cars moving right to left depart\n\
    \    # the time at which the cars moving left to right arrive\n    # the time\
    \ at which the cars moving right to left arrive\n    # the time at which the cars\
    \ moving left to right depart\n    # the time at which the cars moving right to\
    \ left depart\n    # the time at which the cars moving left to right arrive\n\
    \    # the time at which the cars moving right to left arrive\n    # the time\
    \ at which the cars moving left to right depart\n    # the time at which the cars\
    \ moving right to left depart\n    # the time at which the cars moving left to\
    \ right arrive\n    # the time at which the cars moving right to left arrive\n\
    \    # the time at which the cars moving left to right depart\n    # the time\
    \ at which the cars moving right to left depart\n    #\nusing Test\n\n@testset\
    \ begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\t@test(candidate(3)\
    \ == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10)\
    \ == 100)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3bq7i2tx.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp3bq7i2tx.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp3bq7i2tx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpub_zpt_l.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpub_zpt_l.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpub_zpt_l.jl:20\ntest set: Test Failed at /tmp/tmpub_zpt_l.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpub_zpt_l.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpub_zpt_l.jl:20\ntest set: Test Failed at /tmp/tmpub_zpt_l.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpub_zpt_l.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpub_zpt_l.jl:20\ntest set: Test Failed at /tmp/tmpub_zpt_l.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpub_zpt_l.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpub_zpt_l.jl:20\ntest set: Test Failed at /tmp/tmpub_zpt_l.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpub_zpt_l.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpub_zpt_l.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpub_zpt_l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplbui8vd6.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmplbui8vd6.jl:14\n   [2] top-level scope at /tmp/tmplbui8vd6.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbui8vd6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplbui8vd6.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmplbui8vd6.jl:14\n   [2] top-level scope at /tmp/tmplbui8vd6.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbui8vd6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplbui8vd6.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmplbui8vd6.jl:14\n   [2] top-level scope at /tmp/tmplbui8vd6.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbui8vd6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplbui8vd6.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmplbui8vd6.jl:14\n   [2] top-level scope at /tmp/tmplbui8vd6.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbui8vd6.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmplbui8vd6.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmplbui8vd6.jl:14\n   [2] top-level scope at /tmp/tmplbui8vd6.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplbui8vd6.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplbui8vd6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyiai4zkt.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpyiai4zkt.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiai4zkt.jl:20\ntest set: Test Failed at /tmp/tmpyiai4zkt.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyiai4zkt.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiai4zkt.jl:20\ntest set: Test Failed at /tmp/tmpyiai4zkt.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyiai4zkt.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiai4zkt.jl:20\ntest set: Test Failed at /tmp/tmpyiai4zkt.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyiai4zkt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiai4zkt.jl:20\ntest set: Test Failed at /tmp/tmpyiai4zkt.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpyiai4zkt.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyiai4zkt.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyiai4zkt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ae18emr.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp9ae18emr.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ae18emr.jl:20\ntest set: Test Failed at /tmp/tmp9ae18emr.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9ae18emr.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ae18emr.jl:20\ntest set: Test Failed at /tmp/tmp9ae18emr.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9ae18emr.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ae18emr.jl:20\ntest set: Test Failed at /tmp/tmp9ae18emr.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9ae18emr.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ae18emr.jl:20\ntest set: Test Failed at /tmp/tmp9ae18emr.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp9ae18emr.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9ae18emr.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ae18emr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo3m3wu_x.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(2) == 4\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Ptr) where T<:Integer at pointer.jl:23\\n    ...\\\
    n  Stacktrace:\\n   [1] car_race_collision(::Int64) at /tmp/tmpo3m3wu_x.jl:14\\\
    n   [2] top-level scope at /tmp/tmpo3m3wu_x.jl:20\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpo3m3wu_x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo3m3wu_x.jl:21\\n  Test threw exception\\n  Expression: candidate(3)\
    \ == 9\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo3m3wu_x.jl:14\\n   [2] top-level scope at /tmp/tmpo3m3wu_x.jl:21\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpo3m3wu_x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo3m3wu_x.jl:22\\n  Test threw exception\\n  Expression: candidate(4)\
    \ == 16\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo3m3wu_x.jl:14\\n   [2] top-level scope at /tmp/tmpo3m3wu_x.jl:22\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpo3m3wu_x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo3m3wu_x.jl:23\\n  Test threw exception\\n  Expression: candidate(8)\
    \ == 64\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo3m3wu_x.jl:14\\n   [2] top-level scope at /tmp/tmpo3m3wu_x.jl:23\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpo3m3wu_x.jl:19\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpo3m3wu_x.jl:24\\n  Test threw exception\\n  Expression: candidate(10)\
    \ == 100\\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\\n  Closest candidates are:\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\\n    ...\\n  Stacktrace:\\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpo3m3wu_x.jl:14\\n   [2] top-level scope at /tmp/tmpo3m3wu_x.jl:24\\\
    n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpo3m3wu_x.jl:19\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars driving in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ke9e094.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp7ke9e094.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ke9e094.jl:23\ntest set: Test Failed at /tmp/tmp7ke9e094.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7ke9e094.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ke9e094.jl:23\ntest set: Test Failed at /tmp/tmp7ke9e094.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7ke9e094.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ke9e094.jl:23\ntest set: Test Failed at /tmp/tmp7ke9e094.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7ke9e094.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ke9e094.jl:23\ntest set: Test Failed at /tmp/tmp7ke9e094.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp7ke9e094.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ke9e094.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ke9e094.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp695nao52.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp695nao52.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp695nao52.jl:20\ntest set: Test Failed at /tmp/tmp695nao52.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp695nao52.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp695nao52.jl:20\ntest set: Test Failed at /tmp/tmp695nao52.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp695nao52.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp695nao52.jl:20\ntest set: Test Failed at /tmp/tmp695nao52.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp695nao52.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp695nao52.jl:20\ntest set: Test Failed at /tmp/tmp695nao52.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp695nao52.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp695nao52.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp695nao52.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2o4u9mq2.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp2o4u9mq2.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o4u9mq2.jl:23\ntest set: Test Failed at /tmp/tmp2o4u9mq2.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2o4u9mq2.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o4u9mq2.jl:23\ntest set: Test Failed at /tmp/tmp2o4u9mq2.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2o4u9mq2.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o4u9mq2.jl:23\ntest set: Test Failed at /tmp/tmp2o4u9mq2.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2o4u9mq2.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o4u9mq2.jl:23\ntest set: Test Failed at /tmp/tmp2o4u9mq2.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp2o4u9mq2.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2o4u9mq2.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2o4u9mq2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp1ti3nseh.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmp1ti3nseh.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1ti3nseh.jl:20\\ntest set: Test Failed at /tmp/tmp1ti3nseh.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp1ti3nseh.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1ti3nseh.jl:20\\ntest set: Test Failed at /tmp/tmp1ti3nseh.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp1ti3nseh.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1ti3nseh.jl:20\\ntest set: Test Failed at /tmp/tmp1ti3nseh.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmp1ti3nseh.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1ti3nseh.jl:20\\ntest set: Test Failed at /tmp/tmp1ti3nseh.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmp1ti3nseh.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp1ti3nseh.jl:20\\nTest Summary: | Fail  Total\\\
    ntest set      |    5      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyfkaeirt.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpyfkaeirt.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfkaeirt.jl:20\ntest set: Test Failed at /tmp/tmpyfkaeirt.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyfkaeirt.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfkaeirt.jl:20\ntest set: Test Failed at /tmp/tmpyfkaeirt.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyfkaeirt.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfkaeirt.jl:20\ntest set: Test Failed at /tmp/tmpyfkaeirt.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyfkaeirt.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfkaeirt.jl:20\ntest set: Test Failed at /tmp/tmpyfkaeirt.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpyfkaeirt.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyfkaeirt.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfkaeirt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # TODO\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\
    \t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmv8_tvya.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmv8_tvya.jl:14\n   [2] top-level scope at /tmp/tmpmv8_tvya.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmv8_tvya.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmv8_tvya.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmv8_tvya.jl:14\n   [2] top-level scope at /tmp/tmpmv8_tvya.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmv8_tvya.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmv8_tvya.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmv8_tvya.jl:14\n   [2] top-level scope at /tmp/tmpmv8_tvya.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmv8_tvya.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmv8_tvya.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmv8_tvya.jl:14\n   [2] top-level scope at /tmp/tmpmv8_tvya.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmv8_tvya.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmv8_tvya.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmv8_tvya.jl:14\n   [2] top-level scope at /tmp/tmpmv8_tvya.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmv8_tvya.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmv8_tvya.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd5u4xjdu.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpd5u4xjdu.jl:14\n   [2] top-level scope at /tmp/tmpd5u4xjdu.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd5u4xjdu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpd5u4xjdu.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpd5u4xjdu.jl:14\n   [2] top-level scope at /tmp/tmpd5u4xjdu.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd5u4xjdu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpd5u4xjdu.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpd5u4xjdu.jl:14\n   [2] top-level scope at /tmp/tmpd5u4xjdu.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd5u4xjdu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpd5u4xjdu.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpd5u4xjdu.jl:14\n   [2] top-level scope at /tmp/tmpd5u4xjdu.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd5u4xjdu.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpd5u4xjdu.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpd5u4xjdu.jl:14\n   [2] top-level scope at /tmp/tmpd5u4xjdu.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd5u4xjdu.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd5u4xjdu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf7roqg2d.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf7roqg2d.jl:14\n   [2] top-level scope at /tmp/tmpf7roqg2d.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf7roqg2d.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf7roqg2d.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf7roqg2d.jl:14\n   [2] top-level scope at /tmp/tmpf7roqg2d.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf7roqg2d.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf7roqg2d.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf7roqg2d.jl:14\n   [2] top-level scope at /tmp/tmpf7roqg2d.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf7roqg2d.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf7roqg2d.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf7roqg2d.jl:14\n   [2] top-level scope at /tmp/tmpf7roqg2d.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf7roqg2d.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpf7roqg2d.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpf7roqg2d.jl:14\n   [2] top-level scope at /tmp/tmpf7roqg2d.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf7roqg2d.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf7roqg2d.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj9ni4uvd.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpj9ni4uvd.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9ni4uvd.jl:20\ntest set: Test Failed at /tmp/tmpj9ni4uvd.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj9ni4uvd.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9ni4uvd.jl:20\ntest set: Test Failed at /tmp/tmpj9ni4uvd.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj9ni4uvd.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9ni4uvd.jl:20\ntest set: Test Failed at /tmp/tmpj9ni4uvd.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj9ni4uvd.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9ni4uvd.jl:20\ntest set: Test Failed at /tmp/tmpj9ni4uvd.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpj9ni4uvd.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj9ni4uvd.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj9ni4uvd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbqdcbmtx.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpbqdcbmtx.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqdcbmtx.jl:20\ntest set: Test Failed at /tmp/tmpbqdcbmtx.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbqdcbmtx.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqdcbmtx.jl:20\ntest set: Test Failed at /tmp/tmpbqdcbmtx.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbqdcbmtx.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqdcbmtx.jl:20\ntest set: Test Failed at /tmp/tmpbqdcbmtx.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbqdcbmtx.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqdcbmtx.jl:20\ntest set: Test Failed at /tmp/tmpbqdcbmtx.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpbqdcbmtx.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbqdcbmtx.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbqdcbmtx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx5b8rlfo.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpx5b8rlfo.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5b8rlfo.jl:20\ntest set: Test Failed at /tmp/tmpx5b8rlfo.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx5b8rlfo.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5b8rlfo.jl:20\ntest set: Test Failed at /tmp/tmpx5b8rlfo.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx5b8rlfo.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5b8rlfo.jl:20\ntest set: Test Failed at /tmp/tmpx5b8rlfo.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx5b8rlfo.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5b8rlfo.jl:20\ntest set: Test Failed at /tmp/tmpx5b8rlfo.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpx5b8rlfo.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx5b8rlfo.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5b8rlfo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    Input:\n\
    \    n: the number of cars in each set.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = car_race_collision;\n\t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\
    \t@test(candidate(4) == 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10)\
    \ == 100)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcc3fwrmc.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcc3fwrmc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyip9fg8s.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpyip9fg8s.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyip9fg8s.jl:20\ntest set: Test Failed at /tmp/tmpyip9fg8s.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyip9fg8s.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyip9fg8s.jl:20\ntest set: Test Failed at /tmp/tmpyip9fg8s.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyip9fg8s.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyip9fg8s.jl:20\ntest set: Test Failed at /tmp/tmpyip9fg8s.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpyip9fg8s.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyip9fg8s.jl:20\ntest set: Test Failed at /tmp/tmpyip9fg8s.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpyip9fg8s.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpyip9fg8s.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyip9fg8s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    return n*(n-1)/2\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpohyft4w6.jl:20\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpohyft4w6.jl:20\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpohyft4w6.jl:19\ntest set: Test Failed at /tmp/tmpohyft4w6.jl:21\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 3 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpohyft4w6.jl:21\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpohyft4w6.jl:19\ntest set: Test Failed at /tmp/tmpohyft4w6.jl:22\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 6 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpohyft4w6.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpohyft4w6.jl:19\ntest set: Test Failed at /tmp/tmpohyft4w6.jl:23\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 28 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpohyft4w6.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpohyft4w6.jl:19\ntest set: Test Failed at /tmp/tmpohyft4w6.jl:24\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 45 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpohyft4w6.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpohyft4w6.jl:19\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpohyft4w6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph44jxf09.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmph44jxf09.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph44jxf09.jl:20\ntest set: Test Failed at /tmp/tmph44jxf09.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph44jxf09.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph44jxf09.jl:20\ntest set: Test Failed at /tmp/tmph44jxf09.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph44jxf09.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph44jxf09.jl:20\ntest set: Test Failed at /tmp/tmph44jxf09.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph44jxf09.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph44jxf09.jl:20\ntest set: Test Failed at /tmp/tmph44jxf09.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmph44jxf09.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph44jxf09.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph44jxf09.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz49unw68.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpz49unw68.jl:14\n   [2] top-level scope at /tmp/tmpz49unw68.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz49unw68.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpz49unw68.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpz49unw68.jl:14\n   [2] top-level scope at /tmp/tmpz49unw68.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz49unw68.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpz49unw68.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpz49unw68.jl:14\n   [2] top-level scope at /tmp/tmpz49unw68.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz49unw68.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpz49unw68.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpz49unw68.jl:14\n   [2] top-level scope at /tmp/tmpz49unw68.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz49unw68.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpz49unw68.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpz49unw68.jl:14\n   [2] top-level scope at /tmp/tmpz49unw68.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz49unw68.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz49unw68.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn7jtjb8k.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpn7jtjb8k.jl:14\n   [2] top-level scope at /tmp/tmpn7jtjb8k.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7jtjb8k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7jtjb8k.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpn7jtjb8k.jl:14\n   [2] top-level scope at /tmp/tmpn7jtjb8k.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7jtjb8k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7jtjb8k.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpn7jtjb8k.jl:14\n   [2] top-level scope at /tmp/tmpn7jtjb8k.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7jtjb8k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7jtjb8k.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpn7jtjb8k.jl:14\n   [2] top-level scope at /tmp/tmpn7jtjb8k.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7jtjb8k.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7jtjb8k.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpn7jtjb8k.jl:14\n   [2] top-level scope at /tmp/tmpn7jtjb8k.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7jtjb8k.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn7jtjb8k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvo6zizoo.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpvo6zizoo.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvo6zizoo.jl:20\ntest set: Test Failed at /tmp/tmpvo6zizoo.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvo6zizoo.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvo6zizoo.jl:20\ntest set: Test Failed at /tmp/tmpvo6zizoo.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvo6zizoo.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvo6zizoo.jl:20\ntest set: Test Failed at /tmp/tmpvo6zizoo.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvo6zizoo.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvo6zizoo.jl:20\ntest set: Test Failed at /tmp/tmpvo6zizoo.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvo6zizoo.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvo6zizoo.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvo6zizoo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpfu33ejfl.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmpfu33ejfl.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfu33ejfl.jl:20\\ntest set: Test Failed at /tmp/tmpfu33ejfl.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpfu33ejfl.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfu33ejfl.jl:20\\ntest set: Test Failed at /tmp/tmpfu33ejfl.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpfu33ejfl.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfu33ejfl.jl:20\\ntest set: Test Failed at /tmp/tmpfu33ejfl.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpfu33ejfl.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfu33ejfl.jl:20\\ntest set: Test Failed at /tmp/tmpfu33ejfl.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmpfu33ejfl.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpfu33ejfl.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpviajs4ix.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpviajs4ix.jl:14\n   [2] top-level scope at /tmp/tmpviajs4ix.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpviajs4ix.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpviajs4ix.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpviajs4ix.jl:14\n   [2] top-level scope at /tmp/tmpviajs4ix.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpviajs4ix.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpviajs4ix.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpviajs4ix.jl:14\n   [2] top-level scope at /tmp/tmpviajs4ix.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpviajs4ix.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpviajs4ix.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpviajs4ix.jl:14\n   [2] top-level scope at /tmp/tmpviajs4ix.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpviajs4ix.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpviajs4ix.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpviajs4ix.jl:14\n   [2] top-level scope at /tmp/tmpviajs4ix.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpviajs4ix.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpviajs4ix.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprkyeeu_m.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprkyeeu_m.jl:14\n   [2] top-level scope at /tmp/tmprkyeeu_m.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprkyeeu_m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprkyeeu_m.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprkyeeu_m.jl:14\n   [2] top-level scope at /tmp/tmprkyeeu_m.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprkyeeu_m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprkyeeu_m.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprkyeeu_m.jl:14\n   [2] top-level scope at /tmp/tmprkyeeu_m.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprkyeeu_m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprkyeeu_m.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprkyeeu_m.jl:14\n   [2] top-level scope at /tmp/tmprkyeeu_m.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprkyeeu_m.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmprkyeeu_m.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmprkyeeu_m.jl:14\n   [2] top-level scope at /tmp/tmprkyeeu_m.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprkyeeu_m.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprkyeeu_m.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgn77k097.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpgn77k097.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn77k097.jl:20\ntest set: Test Failed at /tmp/tmpgn77k097.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgn77k097.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn77k097.jl:20\ntest set: Test Failed at /tmp/tmpgn77k097.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgn77k097.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn77k097.jl:20\ntest set: Test Failed at /tmp/tmpgn77k097.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgn77k097.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn77k097.jl:20\ntest set: Test Failed at /tmp/tmpgn77k097.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpgn77k097.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn77k097.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgn77k097.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    Imagine a\
    \ road that's a perfectly straight infinitely long line.\n    n cars are driving\
    \ left to right;  simultaneously, a different set of n cars\n    are driving right\
    \ to left.   The two sets of cars start out being very far from\n    each other.\
    \  All cars move in the same speed.  Two cars are said to collide\n    when a\
    \ car that's moving left to right hits a car that's moving right to left.\n  \
    \  However, the cars are infinitely sturdy and strong; as a result, they continue\
    \ moving\n    in their trajectory as if they did not collide.\nusing Test\n\n\
    @testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2) == 4)\n\
    \t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1s6wr8ny.jl:1\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1s6wr8ny.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzysds6a2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzysds6a2.jl:14\n   [2] top-level scope at /tmp/tmpzysds6a2.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzysds6a2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzysds6a2.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzysds6a2.jl:14\n   [2] top-level scope at /tmp/tmpzysds6a2.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzysds6a2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzysds6a2.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzysds6a2.jl:14\n   [2] top-level scope at /tmp/tmpzysds6a2.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzysds6a2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzysds6a2.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzysds6a2.jl:14\n   [2] top-level scope at /tmp/tmpzysds6a2.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzysds6a2.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzysds6a2.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzysds6a2.jl:14\n   [2] top-level scope at /tmp/tmpzysds6a2.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzysds6a2.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzysds6a2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphe66u4xs.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphe66u4xs.jl:14\n   [2] top-level scope at /tmp/tmphe66u4xs.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe66u4xs.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphe66u4xs.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphe66u4xs.jl:14\n   [2] top-level scope at /tmp/tmphe66u4xs.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe66u4xs.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphe66u4xs.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphe66u4xs.jl:14\n   [2] top-level scope at /tmp/tmphe66u4xs.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe66u4xs.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphe66u4xs.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphe66u4xs.jl:14\n   [2] top-level scope at /tmp/tmphe66u4xs.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe66u4xs.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmphe66u4xs.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmphe66u4xs.jl:14\n   [2] top-level scope at /tmp/tmphe66u4xs.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphe66u4xs.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphe66u4xs.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptw2ti175.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptw2ti175.jl:14\n   [2] top-level scope at /tmp/tmptw2ti175.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptw2ti175.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptw2ti175.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptw2ti175.jl:14\n   [2] top-level scope at /tmp/tmptw2ti175.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptw2ti175.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptw2ti175.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptw2ti175.jl:14\n   [2] top-level scope at /tmp/tmptw2ti175.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptw2ti175.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptw2ti175.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptw2ti175.jl:14\n   [2] top-level scope at /tmp/tmptw2ti175.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptw2ti175.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmptw2ti175.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmptw2ti175.jl:14\n   [2] top-level scope at /tmp/tmptw2ti175.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptw2ti175.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptw2ti175.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnzpcrd6c.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpnzpcrd6c.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzpcrd6c.jl:20\ntest set: Test Failed at /tmp/tmpnzpcrd6c.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnzpcrd6c.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzpcrd6c.jl:20\ntest set: Test Failed at /tmp/tmpnzpcrd6c.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnzpcrd6c.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzpcrd6c.jl:20\ntest set: Test Failed at /tmp/tmpnzpcrd6c.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpnzpcrd6c.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzpcrd6c.jl:20\ntest set: Test Failed at /tmp/tmpnzpcrd6c.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpnzpcrd6c.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpnzpcrd6c.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzpcrd6c.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrkftyjo.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmptrkftyjo.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrkftyjo.jl:20\ntest set: Test Failed at /tmp/tmptrkftyjo.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptrkftyjo.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrkftyjo.jl:20\ntest set: Test Failed at /tmp/tmptrkftyjo.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptrkftyjo.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrkftyjo.jl:20\ntest set: Test Failed at /tmp/tmptrkftyjo.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptrkftyjo.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrkftyjo.jl:20\ntest set: Test Failed at /tmp/tmptrkftyjo.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmptrkftyjo.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptrkftyjo.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrkftyjo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    \"\"\"\n    n is the\
    \ number of cars in each direction.\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t\
    @test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7f2dqmzg.jl:24\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp7f2dqmzg.jl:24\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f2dqmzg.jl:23\ntest set: Test Failed at /tmp/tmp7f2dqmzg.jl:25\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7f2dqmzg.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f2dqmzg.jl:23\ntest set: Test Failed at /tmp/tmp7f2dqmzg.jl:26\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7f2dqmzg.jl:26\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f2dqmzg.jl:23\ntest set: Test Failed at /tmp/tmp7f2dqmzg.jl:27\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7f2dqmzg.jl:27\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f2dqmzg.jl:23\ntest set: Test Failed at /tmp/tmp7f2dqmzg.jl:28\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp7f2dqmzg.jl:28\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7f2dqmzg.jl:23\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7f2dqmzg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzommdzk4.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzommdzk4.jl:14\n   [2] top-level scope at /tmp/tmpzommdzk4.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzommdzk4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzommdzk4.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzommdzk4.jl:14\n   [2] top-level scope at /tmp/tmpzommdzk4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzommdzk4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzommdzk4.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzommdzk4.jl:14\n   [2] top-level scope at /tmp/tmpzommdzk4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzommdzk4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzommdzk4.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzommdzk4.jl:14\n   [2] top-level scope at /tmp/tmpzommdzk4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzommdzk4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpzommdzk4.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpzommdzk4.jl:14\n   [2] top-level scope at /tmp/tmpzommdzk4.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzommdzk4.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzommdzk4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1bdlqgfm.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp1bdlqgfm.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1bdlqgfm.jl:20\ntest set: Test Failed at /tmp/tmp1bdlqgfm.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1bdlqgfm.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1bdlqgfm.jl:20\ntest set: Test Failed at /tmp/tmp1bdlqgfm.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1bdlqgfm.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1bdlqgfm.jl:20\ntest set: Test Failed at /tmp/tmp1bdlqgfm.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1bdlqgfm.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1bdlqgfm.jl:20\ntest set: Test Failed at /tmp/tmp1bdlqgfm.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp1bdlqgfm.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1bdlqgfm.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1bdlqgfm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu3ma7w2u.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu3ma7w2u.jl:14\n   [2] top-level scope at /tmp/tmpu3ma7w2u.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3ma7w2u.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3ma7w2u.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu3ma7w2u.jl:14\n   [2] top-level scope at /tmp/tmpu3ma7w2u.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3ma7w2u.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3ma7w2u.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu3ma7w2u.jl:14\n   [2] top-level scope at /tmp/tmpu3ma7w2u.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3ma7w2u.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3ma7w2u.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu3ma7w2u.jl:14\n   [2] top-level scope at /tmp/tmpu3ma7w2u.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3ma7w2u.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu3ma7w2u.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu3ma7w2u.jl:14\n   [2] top-level scope at /tmp/tmpu3ma7w2u.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu3ma7w2u.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3ma7w2u.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpofyxhue3.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpofyxhue3.jl:14\n   [2] top-level scope at /tmp/tmpofyxhue3.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpofyxhue3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpofyxhue3.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpofyxhue3.jl:14\n   [2] top-level scope at /tmp/tmpofyxhue3.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpofyxhue3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpofyxhue3.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpofyxhue3.jl:14\n   [2] top-level scope at /tmp/tmpofyxhue3.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpofyxhue3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpofyxhue3.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpofyxhue3.jl:14\n   [2] top-level scope at /tmp/tmpofyxhue3.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpofyxhue3.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpofyxhue3.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpofyxhue3.jl:14\n   [2] top-level scope at /tmp/tmpofyxhue3.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpofyxhue3.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpofyxhue3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp14ex8t8b.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp14ex8t8b.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14ex8t8b.jl:20\ntest set: Test Failed at /tmp/tmp14ex8t8b.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp14ex8t8b.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14ex8t8b.jl:20\ntest set: Test Failed at /tmp/tmp14ex8t8b.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp14ex8t8b.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14ex8t8b.jl:20\ntest set: Test Failed at /tmp/tmp14ex8t8b.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp14ex8t8b.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14ex8t8b.jl:20\ntest set: Test Failed at /tmp/tmp14ex8t8b.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp14ex8t8b.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp14ex8t8b.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp14ex8t8b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmplbokuqn9.jl:21\\n  Expression: candidate(2)\
    \ == 4\\n   Evaluated: 0 == 4\\nStacktrace:\\n [1] top-level scope at /tmp/tmplbokuqn9.jl:21\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplbokuqn9.jl:20\\ntest set: Test Failed at /tmp/tmplbokuqn9.jl:22\\\
    n  Expression: candidate(3) == 9\\n   Evaluated: 0 == 9\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmplbokuqn9.jl:22\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplbokuqn9.jl:20\\ntest set: Test Failed at /tmp/tmplbokuqn9.jl:23\\\
    n  Expression: candidate(4) == 16\\n   Evaluated: 0 == 16\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmplbokuqn9.jl:23\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplbokuqn9.jl:20\\ntest set: Test Failed at /tmp/tmplbokuqn9.jl:24\\\
    n  Expression: candidate(8) == 64\\n   Evaluated: 0 == 64\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmplbokuqn9.jl:24\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplbokuqn9.jl:20\\ntest set: Test Failed at /tmp/tmplbokuqn9.jl:25\\\
    n  Expression: candidate(10) == 100\\n   Evaluated: 0 == 100\\nStacktrace:\\n\
    \ [1] top-level scope at /tmp/tmplbokuqn9.jl:25\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplbokuqn9.jl:20\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu86knbk_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu86knbk_.jl:14\n   [2] top-level scope at /tmp/tmpu86knbk_.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu86knbk_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu86knbk_.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu86knbk_.jl:14\n   [2] top-level scope at /tmp/tmpu86knbk_.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu86knbk_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu86knbk_.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu86knbk_.jl:14\n   [2] top-level scope at /tmp/tmpu86knbk_.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu86knbk_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu86knbk_.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu86knbk_.jl:14\n   [2] top-level scope at /tmp/tmpu86knbk_.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu86knbk_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpu86knbk_.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpu86knbk_.jl:14\n   [2] top-level scope at /tmp/tmpu86knbk_.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu86knbk_.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu86knbk_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa749i9ju.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpa749i9ju.jl:14\n   [2] top-level scope at /tmp/tmpa749i9ju.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa749i9ju.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpa749i9ju.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpa749i9ju.jl:14\n   [2] top-level scope at /tmp/tmpa749i9ju.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa749i9ju.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpa749i9ju.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpa749i9ju.jl:14\n   [2] top-level scope at /tmp/tmpa749i9ju.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa749i9ju.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpa749i9ju.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpa749i9ju.jl:14\n   [2] top-level scope at /tmp/tmpa749i9ju.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa749i9ju.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpa749i9ju.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpa749i9ju.jl:14\n   [2] top-level scope at /tmp/tmpa749i9ju.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa749i9ju.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa749i9ju.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvqg9rouv.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpvqg9rouv.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqg9rouv.jl:20\ntest set: Test Failed at /tmp/tmpvqg9rouv.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvqg9rouv.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqg9rouv.jl:20\ntest set: Test Failed at /tmp/tmpvqg9rouv.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvqg9rouv.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqg9rouv.jl:20\ntest set: Test Failed at /tmp/tmpvqg9rouv.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvqg9rouv.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqg9rouv.jl:20\ntest set: Test Failed at /tmp/tmpvqg9rouv.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpvqg9rouv.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvqg9rouv.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvqg9rouv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9b11s4qs.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp9b11s4qs.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9b11s4qs.jl:20\ntest set: Test Failed at /tmp/tmp9b11s4qs.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9b11s4qs.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9b11s4qs.jl:20\ntest set: Test Failed at /tmp/tmp9b11s4qs.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9b11s4qs.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9b11s4qs.jl:20\ntest set: Test Failed at /tmp/tmp9b11s4qs.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9b11s4qs.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9b11s4qs.jl:20\ntest set: Test Failed at /tmp/tmp9b11s4qs.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp9b11s4qs.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9b11s4qs.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9b11s4qs.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp97dwlo6p.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp97dwlo6p.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97dwlo6p.jl:20\ntest set: Test Failed at /tmp/tmp97dwlo6p.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp97dwlo6p.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97dwlo6p.jl:20\ntest set: Test Failed at /tmp/tmp97dwlo6p.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp97dwlo6p.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97dwlo6p.jl:20\ntest set: Test Failed at /tmp/tmp97dwlo6p.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp97dwlo6p.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97dwlo6p.jl:20\ntest set: Test Failed at /tmp/tmp97dwlo6p.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp97dwlo6p.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp97dwlo6p.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97dwlo6p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6wyipp_b.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp6wyipp_b.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6wyipp_b.jl:20\ntest set: Test Failed at /tmp/tmp6wyipp_b.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6wyipp_b.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6wyipp_b.jl:20\ntest set: Test Failed at /tmp/tmp6wyipp_b.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6wyipp_b.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6wyipp_b.jl:20\ntest set: Test Failed at /tmp/tmp6wyipp_b.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6wyipp_b.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6wyipp_b.jl:20\ntest set: Test Failed at /tmp/tmp6wyipp_b.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp6wyipp_b.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6wyipp_b.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6wyipp_b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0zwho5_p.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmp0zwho5_p.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zwho5_p.jl:20\ntest set: Test Failed at /tmp/tmp0zwho5_p.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0zwho5_p.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zwho5_p.jl:20\ntest set: Test Failed at /tmp/tmp0zwho5_p.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0zwho5_p.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zwho5_p.jl:20\ntest set: Test Failed at /tmp/tmp0zwho5_p.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0zwho5_p.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zwho5_p.jl:20\ntest set: Test Failed at /tmp/tmp0zwho5_p.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp0zwho5_p.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0zwho5_p.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0zwho5_p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpimq4jlud.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpimq4jlud.jl:14\n   [2] top-level scope at /tmp/tmpimq4jlud.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimq4jlud.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpimq4jlud.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpimq4jlud.jl:14\n   [2] top-level scope at /tmp/tmpimq4jlud.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimq4jlud.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpimq4jlud.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpimq4jlud.jl:14\n   [2] top-level scope at /tmp/tmpimq4jlud.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimq4jlud.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpimq4jlud.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpimq4jlud.jl:14\n   [2] top-level scope at /tmp/tmpimq4jlud.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimq4jlud.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpimq4jlud.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpimq4jlud.jl:14\n   [2] top-level scope at /tmp/tmpimq4jlud.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimq4jlud.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpimq4jlud.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcbqm21za.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpcbqm21za.jl:14\n   [2] top-level scope at /tmp/tmpcbqm21za.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbqm21za.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbqm21za.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpcbqm21za.jl:14\n   [2] top-level scope at /tmp/tmpcbqm21za.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbqm21za.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbqm21za.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpcbqm21za.jl:14\n   [2] top-level scope at /tmp/tmpcbqm21za.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbqm21za.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbqm21za.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpcbqm21za.jl:14\n   [2] top-level scope at /tmp/tmpcbqm21za.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbqm21za.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbqm21za.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpcbqm21za.jl:14\n   [2] top-level scope at /tmp/tmpcbqm21za.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbqm21za.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcbqm21za.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnzfms719.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpnzfms719.jl:14\n   [2] top-level scope at /tmp/tmpnzfms719.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnzfms719.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpnzfms719.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpnzfms719.jl:14\n   [2] top-level scope at /tmp/tmpnzfms719.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnzfms719.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpnzfms719.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpnzfms719.jl:14\n   [2] top-level scope at /tmp/tmpnzfms719.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnzfms719.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpnzfms719.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpnzfms719.jl:14\n   [2] top-level scope at /tmp/tmpnzfms719.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnzfms719.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpnzfms719.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpnzfms719.jl:14\n   [2] top-level scope at /tmp/tmpnzfms719.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnzfms719.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzfms719.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmo4prkwl.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmo4prkwl.jl:14\n   [2] top-level scope at /tmp/tmpmo4prkwl.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmo4prkwl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmo4prkwl.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmo4prkwl.jl:14\n   [2] top-level scope at /tmp/tmpmo4prkwl.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmo4prkwl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmo4prkwl.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmo4prkwl.jl:14\n   [2] top-level scope at /tmp/tmpmo4prkwl.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmo4prkwl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmo4prkwl.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmo4prkwl.jl:14\n   [2] top-level scope at /tmp/tmpmo4prkwl.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmo4prkwl.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmo4prkwl.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmo4prkwl.jl:14\n   [2] top-level scope at /tmp/tmpmo4prkwl.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmo4prkwl.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmo4prkwl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # TODO:  write this function\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmene_c8e.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmene_c8e.jl:14\n   [2] top-level scope at /tmp/tmpmene_c8e.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmene_c8e.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmene_c8e.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmene_c8e.jl:14\n   [2] top-level scope at /tmp/tmpmene_c8e.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmene_c8e.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmene_c8e.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmene_c8e.jl:14\n   [2] top-level scope at /tmp/tmpmene_c8e.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmene_c8e.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmene_c8e.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmene_c8e.jl:14\n   [2] top-level scope at /tmp/tmpmene_c8e.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmene_c8e.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpmene_c8e.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpmene_c8e.jl:14\n   [2] top-level scope at /tmp/tmpmene_c8e.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmene_c8e.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmene_c8e.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpois0_r_x.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpois0_r_x.jl:14\n   [2] top-level scope at /tmp/tmpois0_r_x.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpois0_r_x.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpois0_r_x.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpois0_r_x.jl:14\n   [2] top-level scope at /tmp/tmpois0_r_x.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpois0_r_x.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpois0_r_x.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpois0_r_x.jl:14\n   [2] top-level scope at /tmp/tmpois0_r_x.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpois0_r_x.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpois0_r_x.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpois0_r_x.jl:14\n   [2] top-level scope at /tmp/tmpois0_r_x.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpois0_r_x.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpois0_r_x.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpois0_r_x.jl:14\n   [2] top-level scope at /tmp/tmpois0_r_x.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpois0_r_x.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpois0_r_x.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpumcz11i0.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpumcz11i0.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpumcz11i0.jl:20\ntest set: Test Failed at /tmp/tmpumcz11i0.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpumcz11i0.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpumcz11i0.jl:20\ntest set: Test Failed at /tmp/tmpumcz11i0.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpumcz11i0.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpumcz11i0.jl:20\ntest set: Test Failed at /tmp/tmpumcz11i0.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpumcz11i0.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpumcz11i0.jl:20\ntest set: Test Failed at /tmp/tmpumcz11i0.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpumcz11i0.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpumcz11i0.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpumcz11i0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\n  \
    \  return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuvzfvhto.jl:21\n  Expression: candidate(2)\
    \ == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] top-level scope at /tmp/tmpuvzfvhto.jl:21\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvzfvhto.jl:20\ntest set: Test Failed at /tmp/tmpuvzfvhto.jl:22\n\
    \  Expression: candidate(3) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpuvzfvhto.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvzfvhto.jl:20\ntest set: Test Failed at /tmp/tmpuvzfvhto.jl:23\n\
    \  Expression: candidate(4) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpuvzfvhto.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvzfvhto.jl:20\ntest set: Test Failed at /tmp/tmpuvzfvhto.jl:24\n\
    \  Expression: candidate(8) == 64\n   Evaluated: 0 == 64\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpuvzfvhto.jl:24\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvzfvhto.jl:20\ntest set: Test Failed at /tmp/tmpuvzfvhto.jl:25\n\
    \  Expression: candidate(10) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmpuvzfvhto.jl:25\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpuvzfvhto.jl:20\nTest Summary: | Fail  Total\n\
    test set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvzfvhto.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6pxryju4.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6pxryju4.jl:14\n   [2] top-level scope at /tmp/tmp6pxryju4.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6pxryju4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6pxryju4.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6pxryju4.jl:14\n   [2] top-level scope at /tmp/tmp6pxryju4.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6pxryju4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6pxryju4.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6pxryju4.jl:14\n   [2] top-level scope at /tmp/tmp6pxryju4.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6pxryju4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6pxryju4.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6pxryju4.jl:14\n   [2] top-level scope at /tmp/tmp6pxryju4.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6pxryju4.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmp6pxryju4.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmp6pxryju4.jl:14\n   [2] top-level scope at /tmp/tmp6pxryju4.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6pxryju4.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6pxryju4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\t@test(candidate(2)\
    \ == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) == 16)\n\t@test(candidate(8)\
    \ == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeeydndm_.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpeeydndm_.jl:14\n   [2] top-level scope at /tmp/tmpeeydndm_.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeeydndm_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpeeydndm_.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpeeydndm_.jl:14\n   [2] top-level scope at /tmp/tmpeeydndm_.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeeydndm_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpeeydndm_.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpeeydndm_.jl:14\n   [2] top-level scope at /tmp/tmpeeydndm_.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeeydndm_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpeeydndm_.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpeeydndm_.jl:14\n   [2] top-level scope at /tmp/tmpeeydndm_.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeeydndm_.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpeeydndm_.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpeeydndm_.jl:14\n   [2] top-level scope at /tmp/tmpeeydndm_.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpeeydndm_.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeeydndm_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Imagine a road that's a perfectly straight infinitely long\
    \ line.\n    n cars are driving left to right;  simultaneously, a different set\
    \ of n cars\n    are driving right to left.   The two sets of cars start out being\
    \ very far from\n    each other.  All cars move in the same speed.  Two cars are\
    \ said to collide\n    when a car that's moving left to right hits a car that's\
    \ moving right to left.\n    However, the cars are infinitely sturdy and strong;\
    \ as a result, they continue moving\n    in their trajectory as if they did not\
    \ collide.\n\n    This function outputs the number of such collisions.\n    \"\
    \"\"\nfunction car_race_collision(n::Int64)::Int64 \n    # TODO: implement this\
    \ function\nend\nusing Test\n\n@testset begin\n\ncandidate = car_race_collision;\n\
    \t@test(candidate(2) == 4)\n\t@test(candidate(3) == 9)\n\t@test(candidate(4) ==\
    \ 16)\n\t@test(candidate(8) == 64)\n\t@test(candidate(10) == 100)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv3ofgbjm.jl:20\n  Test threw exception\n\
    \  Expression: candidate(2) == 4\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where\
    \ T<:Integer at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpv3ofgbjm.jl:14\n   [2] top-level scope at /tmp/tmpv3ofgbjm.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv3ofgbjm.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpv3ofgbjm.jl:21\n  Test threw exception\n  Expression: candidate(3)\
    \ == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpv3ofgbjm.jl:14\n   [2] top-level scope at /tmp/tmpv3ofgbjm.jl:21\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv3ofgbjm.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpv3ofgbjm.jl:22\n  Test threw exception\n  Expression: candidate(4)\
    \ == 16\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpv3ofgbjm.jl:14\n   [2] top-level scope at /tmp/tmpv3ofgbjm.jl:22\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv3ofgbjm.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpv3ofgbjm.jl:23\n  Test threw exception\n  Expression: candidate(8)\
    \ == 64\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpv3ofgbjm.jl:14\n   [2] top-level scope at /tmp/tmpv3ofgbjm.jl:23\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv3ofgbjm.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpv3ofgbjm.jl:24\n  Test threw exception\n  Expression: candidate(10)\
    \ == 100\n  MethodError: Cannot `convert` an object of type Nothing to an object\
    \ of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::T)\
    \ where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number) where\
    \ T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer\
    \ at pointer.jl:23\n    ...\n  Stacktrace:\n   [1] car_race_collision(::Int64)\
    \ at /tmp/tmpv3ofgbjm.jl:14\n   [2] top-level scope at /tmp/tmpv3ofgbjm.jl:24\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv3ofgbjm.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3ofgbjm.jl:17\n"
  exit_code: 1
  status: SyntaxError

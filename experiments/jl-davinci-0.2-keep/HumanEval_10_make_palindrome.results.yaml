name: HumanEval_10_make_palindrome
language: julia
results:
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    if string == reverse(string)\n\
    \        return string\n    end\n    # Find the longest palindromic suffix\n \
    \   suffix = \"\"\n    for i in 1:length(string)\n        if string[end-i+1:end]\
    \ == reverse(string[1:i])\n            suffix = string[end-i+1:end]\n        end\n\
    \    end\n    # Append to the end of the string reverse of a string prefix that\
    \ comes before the palindromic suffix.\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4d1uhtnd.jl:36\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n   Evaluated: \"xyzzyx\" == \"xyzyx\"\nStacktrace:\n [1]\
    \ top-level scope at /tmp/tmp4d1uhtnd.jl:36\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4d1uhtnd.jl:33\ntest set: Test Failed at /tmp/tmp4d1uhtnd.jl:38\n\
    \  Expression: candidate(\"jerry\") == \"jerryrrej\"\n   Evaluated: \"jerryyrrej\"\
    \ == \"jerryrrej\"\nStacktrace:\n [1] top-level scope at /tmp/tmp4d1uhtnd.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4d1uhtnd.jl:33\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4d1uhtnd.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # The longest postfix that is a palindrome is the longest prefix that is a palindrome.\n\
    \    # The longest prefix that is a palindrome is the longest suffix that is a\
    \ palindrome.\n    # The longest suffix that is a palindrome is the longest postfix\
    \ that is a palindrome.\n    # The longest postfix that is a palindrome is the\
    \ longest prefix that is a palindrome.\n    # The longest prefix that is a palindrome\
    \ is the longest suffix that is a palindrome.\n    # The longest suffix that is\
    \ a palindrome is the longest postfix that is a palindrome.\n    # The longest\
    \ postfix that is a palindrome is the longest prefix that is a palindrome.\n \
    \   # The longest prefix that is a palindrome is the longest suffix that is a\
    \ palindrome.\n    # The longest suffix that is a palindrome is the longest postfix\
    \ that is a palindrome.\n    # The longest postfix that is a palindrome is the\
    \ longest prefix that is a palindrome.\n    # The longest prefix that is a palindrome\
    \ is the longest suffix that is a palindrome.\n    # The longest suffix that is\
    \ a palindrome is the longest postfix that is a palindrome.\n    # The longest\
    \ postfix that is a palindrome is the longest prefix that is a palindrome.\n \
    \   # The longest prefix that is a palindrome is the longest suffix that is a\
    \ palindrome.\n    # The longest suffix that is a palindrome is the longest postfix\
    \ that is a palindrome.\n    # The longest postfix that is a palindrome is the\
    \ longest prefix that is a palindrome.\n    # The longest prefix that is a palindrome\
    \ is the longest suffix that is a palindrome.\n    # The longest suffix that is\
    \ a palindrome is the longest postfix that is a palindrome.\n    # The longest\
    \ postfix that is a palindrome is the longest prefix that is a palindrome.\n \
    \   # The longest prefix that is a palindrome is the longest suffix that is a\
    \ palindrome.\n    # The longest suffix that is a palindrome is the longest postfix\
    \ that is a pal\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmeb0gvh5.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpmeb0gvh5.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpmeb0gvh5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix\n  \
    \  string_prefix = reverse(string[1:end-length(palindrome_suffix)])\n    # Append\
    \ the reversed prefix to the end of the string\n    return string * string_prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp24e9e63w.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp24e9e63w.jl:17\n\
    \   [2] top-level scope at /tmp/tmp24e9e63w.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24e9e63w.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp24e9e63w.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp24e9e63w.jl:17\n \
    \  [2] top-level scope at /tmp/tmp24e9e63w.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24e9e63w.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp24e9e63w.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp24e9e63w.jl:17\n   [2] top-level\
    \ scope at /tmp/tmp24e9e63w.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24e9e63w.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp24e9e63w.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp24e9e63w.jl:17\n \
    \  [2] top-level scope at /tmp/tmp24e9e63w.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp24e9e63w.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp24e9e63w.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # This is the same as finding the longest palindromic\
    \ prefix of the string reversed.\n    longest_palindromic_suffix = longest_palindromic_prefix(reverse(string))\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-length(longest_palindromic_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqit7wt72.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpqit7wt72.jl:18\n\
    \   [2] top-level scope at /tmp/tmpqit7wt72.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqit7wt72.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpqit7wt72.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_prefix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpqit7wt72.jl:18\n \
    \  [2] top-level scope at /tmp/tmpqit7wt72.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqit7wt72.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpqit7wt72.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_prefix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpqit7wt72.jl:18\n  \
    \ [2] top-level scope at /tmp/tmpqit7wt72.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqit7wt72.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpqit7wt72.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_prefix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpqit7wt72.jl:18\n \
    \  [2] top-level scope at /tmp/tmpqit7wt72.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqit7wt72.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqit7wt72.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfpzk6wt8.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpfpzk6wt8.jl:16\n\
    \   [2] top-level scope at /tmp/tmpfpzk6wt8.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpzk6wt8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpzk6wt8.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpfpzk6wt8.jl:16\n \
    \  [2] top-level scope at /tmp/tmpfpzk6wt8.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpzk6wt8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpzk6wt8.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpfpzk6wt8.jl:16\n \
    \  [2] top-level scope at /tmp/tmpfpzk6wt8.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpzk6wt8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfpzk6wt8.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpfpzk6wt8.jl:16\n\
    \   [2] top-level scope at /tmp/tmpfpzk6wt8.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfpzk6wt8.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfpzk6wt8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest palindromic suffix\n    for i in 1:length(string)\n  \
    \      if is_palindrome(string[end-i+1:end])\n            return string * reverse(string[1:end-i+1])\n\
    \        end\n    end\n    # If no palindromic suffix found, return the string\
    \ itself\n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp10xi1v7m.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp10xi1v7m.jl:15\n \
    \  [2] top-level scope at /tmp/tmp10xi1v7m.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp10xi1v7m.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp10xi1v7m.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp10xi1v7m.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp10xi1v7m.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp10xi1v7m.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp10xi1v7m.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp10xi1v7m.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp10xi1v7m.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp10xi1v7m.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp10xi1v7m.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp10xi1v7m.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp10xi1v7m.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp10xi1v7m.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10xi1v7m.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpforl6ljx.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpforl6ljx.jl:16\n\
    \   [2] top-level scope at /tmp/tmpforl6ljx.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpforl6ljx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpforl6ljx.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpforl6ljx.jl:16\n \
    \  [2] top-level scope at /tmp/tmpforl6ljx.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpforl6ljx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpforl6ljx.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpforl6ljx.jl:16\n \
    \  [2] top-level scope at /tmp/tmpforl6ljx.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpforl6ljx.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpforl6ljx.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpforl6ljx.jl:16\n\
    \   [2] top-level scope at /tmp/tmpforl6ljx.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpforl6ljx.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpforl6ljx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    for i in 1:length(string)\n        if is_palindrome(string[end-i+1:end])\n\
    \            return string * reverse(string[1:end-i])\n        end\n    end\n\
    \    # If no postfix is a palindrome, the whole string is a palindrome.\n    return\
    \ string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphgy7avk0.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphgy7avk0.jl:18\n \
    \  [2] top-level scope at /tmp/tmphgy7avk0.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphgy7avk0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmphgy7avk0.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphgy7avk0.jl:18\n   [2] top-level\
    \ scope at /tmp/tmphgy7avk0.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphgy7avk0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmphgy7avk0.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphgy7avk0.jl:18\n   [2] top-level\
    \ scope at /tmp/tmphgy7avk0.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphgy7avk0.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmphgy7avk0.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphgy7avk0.jl:18\n   [2] top-level\
    \ scope at /tmp/tmphgy7avk0.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphgy7avk0.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphgy7avk0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    # This is done by finding the longest common prefix\
    \ and suffix of the string.\n    # This can be done in O(n) time by using Z-algorithm.\n\
    \    # https://en.wikipedia.org/wiki/Z-algorithm\n    # https://www.youtube.com/watch?v=CpZh4eF8QBw\n\
    \    z_array = z_algorithm(string)\n    # Find the longest palindromic suffix.\n\
    \    longest_palindromic_suffix = find_longest_palindromic_suffix(z_array)\n \
    \   # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * string[1:longest_palindromic_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp70k2pa0n.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: z_algorithm not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp70k2pa0n.jl:21\n \
    \  [2] top-level scope at /tmp/tmp70k2pa0n.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp70k2pa0n.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp70k2pa0n.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: z_algorithm not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp70k2pa0n.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp70k2pa0n.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp70k2pa0n.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp70k2pa0n.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: z_algorithm not defined\n  Stacktrace:\n \
    \  [1] make_palindrome(::String) at /tmp/tmp70k2pa0n.jl:21\n   [2] top-level scope\
    \ at /tmp/tmp70k2pa0n.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp70k2pa0n.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmp70k2pa0n.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: z_algorithm not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp70k2pa0n.jl:21\n   [2] top-level\
    \ scope at /tmp/tmp70k2pa0n.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp70k2pa0n.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp70k2pa0n.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbj7uorpl.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbj7uorpl.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbj7uorpl.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbj7uorpl.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpbj7uorpl.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbj7uorpl.jl:16\n \
    \  [2] top-level scope at /tmp/tmpbj7uorpl.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbj7uorpl.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpbj7uorpl.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbj7uorpl.jl:16\n \
    \  [2] top-level scope at /tmp/tmpbj7uorpl.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbj7uorpl.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpbj7uorpl.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbj7uorpl.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbj7uorpl.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbj7uorpl.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbj7uorpl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_fey6q7n.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_fey6q7n.jl:16\n\
    \   [2] top-level scope at /tmp/tmp_fey6q7n.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_fey6q7n.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_fey6q7n.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_fey6q7n.jl:16\n \
    \  [2] top-level scope at /tmp/tmp_fey6q7n.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_fey6q7n.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_fey6q7n.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_fey6q7n.jl:16\n \
    \  [2] top-level scope at /tmp/tmp_fey6q7n.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_fey6q7n.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_fey6q7n.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_fey6q7n.jl:16\n\
    \   [2] top-level scope at /tmp/tmp_fey6q7n.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_fey6q7n.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_fey6q7n.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # find the longest palindromic suffix\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # reverse the prefix that comes before the palindromic suffix\n    prefix_to_append\
    \ = reverse(string[1:end-length(longest_palindromic_suffix)])\n    # append the\
    \ reversed prefix to the end of the string\n    return string * prefix_to_append\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzevdndwd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzevdndwd.jl:14\n\
    \   [2] top-level scope at /tmp/tmpzevdndwd.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzevdndwd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpzevdndwd.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzevdndwd.jl:14\n \
    \  [2] top-level scope at /tmp/tmpzevdndwd.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzevdndwd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpzevdndwd.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzevdndwd.jl:14\n \
    \  [2] top-level scope at /tmp/tmpzevdndwd.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzevdndwd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpzevdndwd.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzevdndwd.jl:14\n \
    \  [2] top-level scope at /tmp/tmpzevdndwd.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzevdndwd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpzevdndwd.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzevdndwd.jl:14\n\
    \   [2] top-level scope at /tmp/tmpzevdndwd.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzevdndwd.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzevdndwd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return string\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppe0pftjo.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppe0pftjo.jl:16\n\
    \   [2] top-level scope at /tmp/tmppe0pftjo.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppe0pftjo.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmppe0pftjo.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppe0pftjo.jl:16\n \
    \  [2] top-level scope at /tmp/tmppe0pftjo.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppe0pftjo.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmppe0pftjo.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppe0pftjo.jl:16\n \
    \  [2] top-level scope at /tmp/tmppe0pftjo.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppe0pftjo.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmppe0pftjo.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppe0pftjo.jl:16\n\
    \   [2] top-level scope at /tmp/tmppe0pftjo.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppe0pftjo.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppe0pftjo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3lp4uaz6.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp3lp4uaz6.jl:16\\\
    n   [2] top-level scope at /tmp/tmp3lp4uaz6.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3lp4uaz6.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3lp4uaz6.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp3lp4uaz6.jl:16\\\
    n   [2] top-level scope at /tmp/tmp3lp4uaz6.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3lp4uaz6.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3lp4uaz6.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp3lp4uaz6.jl:16\\\
    n   [2] top-level scope at /tmp/tmp3lp4uaz6.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3lp4uaz6.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3lp4uaz6.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp3lp4uaz6.jl:16\\\
    n   [2] top-level scope at /tmp/tmp3lp4uaz6.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3lp4uaz6.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi3hggw2q.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpi3hggw2q.jl:16\n\
    \   [2] top-level scope at /tmp/tmpi3hggw2q.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3hggw2q.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3hggw2q.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpi3hggw2q.jl:16\n \
    \  [2] top-level scope at /tmp/tmpi3hggw2q.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3hggw2q.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3hggw2q.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpi3hggw2q.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpi3hggw2q.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3hggw2q.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3hggw2q.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpi3hggw2q.jl:16\n \
    \  [2] top-level scope at /tmp/tmpi3hggw2q.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3hggw2q.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3hggw2q.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj1n4zpum.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpj1n4zpum.jl:16\n\
    \   [2] top-level scope at /tmp/tmpj1n4zpum.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj1n4zpum.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj1n4zpum.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpj1n4zpum.jl:16\n \
    \  [2] top-level scope at /tmp/tmpj1n4zpum.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj1n4zpum.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj1n4zpum.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpj1n4zpum.jl:16\n \
    \  [2] top-level scope at /tmp/tmpj1n4zpum.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj1n4zpum.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpj1n4zpum.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpj1n4zpum.jl:16\n\
    \   [2] top-level scope at /tmp/tmpj1n4zpum.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj1n4zpum.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj1n4zpum.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyzp6dpyh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyzp6dpyh.jl:16\n\
    \   [2] top-level scope at /tmp/tmpyzp6dpyh.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyzp6dpyh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpyzp6dpyh.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyzp6dpyh.jl:16\n \
    \  [2] top-level scope at /tmp/tmpyzp6dpyh.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyzp6dpyh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpyzp6dpyh.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyzp6dpyh.jl:16\n \
    \  [2] top-level scope at /tmp/tmpyzp6dpyh.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyzp6dpyh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpyzp6dpyh.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyzp6dpyh.jl:16\n\
    \   [2] top-level scope at /tmp/tmpyzp6dpyh.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyzp6dpyh.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyzp6dpyh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy5mzb44_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpy5mzb44_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpy5mzb44_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy5mzb44_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpy5mzb44_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpy5mzb44_.jl:16\n \
    \  [2] top-level scope at /tmp/tmpy5mzb44_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy5mzb44_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpy5mzb44_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpy5mzb44_.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpy5mzb44_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy5mzb44_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpy5mzb44_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpy5mzb44_.jl:16\n \
    \  [2] top-level scope at /tmp/tmpy5mzb44_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy5mzb44_.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy5mzb44_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    len = length(string)\n    for i in 1:len\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  return string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1i36bfza.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1i36bfza.jl:15\n \
    \  [2] top-level scope at /tmp/tmp1i36bfza.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1i36bfza.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp1i36bfza.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp1i36bfza.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp1i36bfza.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1i36bfza.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp1i36bfza.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp1i36bfza.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp1i36bfza.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1i36bfza.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp1i36bfza.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp1i36bfza.jl:15\n   [2] top-level\
    \ scope at /tmp/tmp1i36bfza.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1i36bfza.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1i36bfza.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyfx7mobw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyfx7mobw.jl:16\n\
    \   [2] top-level scope at /tmp/tmpyfx7mobw.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyfx7mobw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpyfx7mobw.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyfx7mobw.jl:16\n \
    \  [2] top-level scope at /tmp/tmpyfx7mobw.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyfx7mobw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpyfx7mobw.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyfx7mobw.jl:16\n \
    \  [2] top-level scope at /tmp/tmpyfx7mobw.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyfx7mobw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpyfx7mobw.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpyfx7mobw.jl:16\n\
    \   [2] top-level scope at /tmp/tmpyfx7mobw.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyfx7mobw.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfx7mobw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6j7z3ce_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6j7z3ce_.jl:16\n\
    \   [2] top-level scope at /tmp/tmp6j7z3ce_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6j7z3ce_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7z3ce_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6j7z3ce_.jl:16\n \
    \  [2] top-level scope at /tmp/tmp6j7z3ce_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6j7z3ce_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7z3ce_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp6j7z3ce_.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp6j7z3ce_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6j7z3ce_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp6j7z3ce_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6j7z3ce_.jl:16\n \
    \  [2] top-level scope at /tmp/tmp6j7z3ce_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6j7z3ce_.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6j7z3ce_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    n = length(string)\n    if n == 0\n        return \"\"\n    end\n    # Find\
    \ the longest palindromic suffix\n    suffix_length = 0\n    for i in 1:n\n  \
    \      if is_palindrome(string[i:n])\n            suffix_length = n - i\n    \
    \        break\n        end\n    end\n    # Append reverse of the prefix to the\
    \ end of the string\n    return string * string[1:n-suffix_length]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmn2_pdmf.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: is_palindrome\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpmn2_pdmf.jl:20\\\
    n   [2] top-level scope at /tmp/tmpmn2_pdmf.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmn2_pdmf.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmn2_pdmf.jl:35\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmpmn2_pdmf.jl:20\\n   [2] top-level\
    \ scope at /tmp/tmpmn2_pdmf.jl:35\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmn2_pdmf.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmn2_pdmf.jl:36\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmpmn2_pdmf.jl:20\\n   [2] top-level\
    \ scope at /tmp/tmpmn2_pdmf.jl:36\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmn2_pdmf.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmn2_pdmf.jl:37\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmpmn2_pdmf.jl:20\\n   [2] top-level\
    \ scope at /tmp/tmpmn2_pdmf.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmn2_pdmf.jl:32\\n  \\nTest Summary: | Pass\
    \  Error  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # The longest palindromic suffix is the longest palindromic\
    \ substring that ends at the last character of the string.\n    # The longest\
    \ palindromic suffix is also the longest palindromic substring that starts at\
    \ the first character of the string.\n    # The longest palindromic suffix is\
    \ also the longest palindromic substring of the string.\n    # The longest palindromic\
    \ suffix is also the longest palindromic substring of the reverse of the string.\n\
    \    # The longest palindromic suffix is also the longest common prefix of the\
    \ string and the reverse of the string.\n    # The longest palindromic suffix\
    \ is also the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest palindromic suffix is also the longest common prefix of the\
    \ string and the reverse of the string.\n    # The longest palindromic suffix\
    \ is also the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest palindromic suffix is also the longest common prefix of the\
    \ string and the reverse of the string.\n    # The longest palindromic suffix\
    \ is also the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest palindromic suffix is also the longest common prefix of the\
    \ string and the reverse of the string.\n    # The longest palindromic suffix\
    \ is also the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest palindromic suffix is also the longest common prefix of the\
    \ string and the reverse of the string.\n    # The longest palindromic suffix\
    \ is also the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest palindromic suffix is also the longest common prefix of the\
    \ string and the reverse of the string.\n    # The longest palindromic suffix\
    \ is also the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest palindromic suffix is also the longest common prefix of the\
    \ string and the reverse of the string.\n    # The longest palindromic suffix\
    \ is also the longest common prefix of the string and the reverse of the string.\n\
    \    # The longest palindromic suffix\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppm1aodey.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmppm1aodey.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmppm1aodey.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8m29udu7.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8m29udu7.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8m29udu7.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8m29udu7.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8m29udu7.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8m29udu7.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8m29udu7.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8m29udu7.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8m29udu7.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\n\
    \  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8m29udu7.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8m29udu7.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8m29udu7.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8m29udu7.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8m29udu7.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8m29udu7.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8m29udu7.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptfomnalw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmptfomnalw.jl:16\n\
    \   [2] top-level scope at /tmp/tmptfomnalw.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptfomnalw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmptfomnalw.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmptfomnalw.jl:16\n \
    \  [2] top-level scope at /tmp/tmptfomnalw.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptfomnalw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmptfomnalw.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmptfomnalw.jl:16\n \
    \  [2] top-level scope at /tmp/tmptfomnalw.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptfomnalw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmptfomnalw.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmptfomnalw.jl:16\n\
    \   [2] top-level scope at /tmp/tmptfomnalw.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptfomnalw.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptfomnalw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1eseqjbq.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1eseqjbq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1eseqjbq.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1eseqjbq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp1eseqjbq.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1eseqjbq.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1eseqjbq.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1eseqjbq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp1eseqjbq.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1eseqjbq.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1eseqjbq.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1eseqjbq.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp1eseqjbq.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1eseqjbq.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1eseqjbq.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1eseqjbq.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1eseqjbq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If no palindromic suffix found, then the whole string is a palindrome.\n\
    \    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6lfqab6b.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: is_palindrome\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp6lfqab6b.jl:18\\\
    n   [2] top-level scope at /tmp/tmp6lfqab6b.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6lfqab6b.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6lfqab6b.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmp6lfqab6b.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmp6lfqab6b.jl:32\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6lfqab6b.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6lfqab6b.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmp6lfqab6b.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmp6lfqab6b.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6lfqab6b.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6lfqab6b.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmp6lfqab6b.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmp6lfqab6b.jl:34\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6lfqab6b.jl:29\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzx5fvblz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzx5fvblz.jl:16\n\
    \   [2] top-level scope at /tmp/tmpzx5fvblz.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzx5fvblz.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpzx5fvblz.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzx5fvblz.jl:16\n \
    \  [2] top-level scope at /tmp/tmpzx5fvblz.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzx5fvblz.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpzx5fvblz.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzx5fvblz.jl:16\n \
    \  [2] top-level scope at /tmp/tmpzx5fvblz.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzx5fvblz.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpzx5fvblz.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzx5fvblz.jl:16\n\
    \   [2] top-level scope at /tmp/tmpzx5fvblz.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzx5fvblz.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzx5fvblz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1o5nf5e7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1o5nf5e7.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1o5nf5e7.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1o5nf5e7.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1o5nf5e7.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1o5nf5e7.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1o5nf5e7.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1o5nf5e7.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1o5nf5e7.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1o5nf5e7.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1o5nf5e7.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1o5nf5e7.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1o5nf5e7.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1o5nf5e7.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1o5nf5e7.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1o5nf5e7.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1o5nf5e7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0nphszu3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp0nphszu3.jl:16\n\
    \   [2] top-level scope at /tmp/tmp0nphszu3.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0nphszu3.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nphszu3.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp0nphszu3.jl:16\n \
    \  [2] top-level scope at /tmp/tmp0nphszu3.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0nphszu3.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nphszu3.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp0nphszu3.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp0nphszu3.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0nphszu3.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp0nphszu3.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp0nphszu3.jl:16\n \
    \  [2] top-level scope at /tmp/tmp0nphszu3.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0nphszu3.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0nphszu3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = \"\"\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            suffix = string[i:end]\n            break\n        end\n    end\n\
    \    # Append reverse of the prefix to the end of the string\n    return string\
    \ * reverse(string[1:end-length(suffix)])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdwcjpthb.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdwcjpthb.jl:19\n \
    \  [2] top-level scope at /tmp/tmpdwcjpthb.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdwcjpthb.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdwcjpthb.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpdwcjpthb.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpdwcjpthb.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdwcjpthb.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdwcjpthb.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpdwcjpthb.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpdwcjpthb.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdwcjpthb.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpdwcjpthb.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpdwcjpthb.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpdwcjpthb.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdwcjpthb.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdwcjpthb.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(longest_palindromic_suffix)])\n    #\
    \ Append the reversed prefix to the end of the string.\n    return string * prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpogm44fpa.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpogm44fpa.jl:17\n\
    \   [2] top-level scope at /tmp/tmpogm44fpa.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpogm44fpa.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpogm44fpa.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpogm44fpa.jl:17\n \
    \  [2] top-level scope at /tmp/tmpogm44fpa.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpogm44fpa.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpogm44fpa.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpogm44fpa.jl:17\n \
    \  [2] top-level scope at /tmp/tmpogm44fpa.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpogm44fpa.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpogm44fpa.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpogm44fpa.jl:17\n\
    \   [2] top-level scope at /tmp/tmpogm44fpa.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpogm44fpa.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpogm44fpa.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest palindromic suffix\n    suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    # Append the reversed prefix to the end of the string\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpta8n8fxp.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpta8n8fxp.jl:14\\\
    n   [2] top-level scope at /tmp/tmpta8n8fxp.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta8n8fxp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta8n8fxp.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    x\") == \"x\"\\n  UndefVarError: find_longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpta8n8fxp.jl:14\\\
    n   [2] top-level scope at /tmp/tmpta8n8fxp.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta8n8fxp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta8n8fxp.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpta8n8fxp.jl:14\\\
    n   [2] top-level scope at /tmp/tmpta8n8fxp.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta8n8fxp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta8n8fxp.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpta8n8fxp.jl:14\\\
    n   [2] top-level scope at /tmp/tmpta8n8fxp.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta8n8fxp.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpta8n8fxp.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpta8n8fxp.jl:14\\\
    n   [2] top-level scope at /tmp/tmpta8n8fxp.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpta8n8fxp.jl:24\\n  \\nTest Summary: | Error\
    \  Total\\ntest set      |     5      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa0wc211o.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa0wc211o.jl:16\n\
    \   [2] top-level scope at /tmp/tmpa0wc211o.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0wc211o.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0wc211o.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa0wc211o.jl:16\n \
    \  [2] top-level scope at /tmp/tmpa0wc211o.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0wc211o.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0wc211o.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa0wc211o.jl:16\n \
    \  [2] top-level scope at /tmp/tmpa0wc211o.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0wc211o.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa0wc211o.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa0wc211o.jl:16\n\
    \   [2] top-level scope at /tmp/tmpa0wc211o.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa0wc211o.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa0wc211o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n   \
    \ # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnc4yk4a8.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnc4yk4a8.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnc4yk4a8.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnc4yk4a8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnc4yk4a8.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnc4yk4a8.jl:17\n \
    \  [2] top-level scope at /tmp/tmpnc4yk4a8.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnc4yk4a8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnc4yk4a8.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnc4yk4a8.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpnc4yk4a8.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnc4yk4a8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpnc4yk4a8.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnc4yk4a8.jl:17\n \
    \  [2] top-level scope at /tmp/tmpnc4yk4a8.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnc4yk4a8.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnc4yk4a8.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # We do this by finding the longest prefix of the reversed string that is a\
    \ palindrome.\n    # This is done by finding the longest common prefix of the\
    \ string and its reverse.\n    # This is done by finding the longest common prefix\
    \ of the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4srvd7ul.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp4srvd7ul.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp4srvd7ul.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return string\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1r5_lz8e.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1r5_lz8e.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1r5_lz8e.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1r5_lz8e.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1r5_lz8e.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1r5_lz8e.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1r5_lz8e.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1r5_lz8e.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1r5_lz8e.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1r5_lz8e.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1r5_lz8e.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1r5_lz8e.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1r5_lz8e.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1r5_lz8e.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1r5_lz8e.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1r5_lz8e.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1r5_lz8e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd614au56.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpd614au56.jl:16\n\
    \   [2] top-level scope at /tmp/tmpd614au56.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd614au56.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpd614au56.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpd614au56.jl:16\n \
    \  [2] top-level scope at /tmp/tmpd614au56.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd614au56.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpd614au56.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpd614au56.jl:16\n \
    \  [2] top-level scope at /tmp/tmpd614au56.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd614au56.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpd614au56.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpd614au56.jl:16\n\
    \   [2] top-level scope at /tmp/tmpd614au56.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd614au56.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd614au56.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph8wuph52.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph8wuph52.jl:16\n\
    \   [2] top-level scope at /tmp/tmph8wuph52.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph8wuph52.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmph8wuph52.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph8wuph52.jl:16\n \
    \  [2] top-level scope at /tmp/tmph8wuph52.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph8wuph52.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmph8wuph52.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph8wuph52.jl:16\n \
    \  [2] top-level scope at /tmp/tmph8wuph52.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph8wuph52.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmph8wuph52.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph8wuph52.jl:16\n\
    \   [2] top-level scope at /tmp/tmph8wuph52.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph8wuph52.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph8wuph52.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ldgei_h.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1ldgei_h.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1ldgei_h.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ldgei_h.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ldgei_h.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1ldgei_h.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1ldgei_h.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ldgei_h.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ldgei_h.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1ldgei_h.jl:16\n \
    \  [2] top-level scope at /tmp/tmp1ldgei_h.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ldgei_h.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp1ldgei_h.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1ldgei_h.jl:16\n\
    \   [2] top-level scope at /tmp/tmp1ldgei_h.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1ldgei_h.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ldgei_h.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    # Note that we don't need to check the whole string, just the half\
    \ of it\n    # because if a string is a palindrome, then its reverse is also a\
    \ palindrome\n    # and we can just append the reverse of the prefix to the end\
    \ of the string\n    # to get a palindrome.\n    # For example, if we have a string\
    \ 'cata', then its reverse is 'atac'\n    # and we can see that 'atac' is a palindrome.\n\
    \    # So, we can just append 'at' to the end of the string 'cata' to get a palindrome.\n\
    \    # If we have a string 'cat', then its reverse is 'tac'\n    # and we can\
    \ see that 'tac' is not a palindrome.\n    # So, we need to find the longest palindromic\
    \ suffix of the string 'cat'\n    # which is 't' and append 'at' to the end of\
    \ the string 'cat' to get a palindrome.\n    # Note that we don't need to check\
    \ the whole string, just the half of it\n    # because if a string is a palindrome,\
    \ then its reverse is also a palindrome\n    # and we can just append the reverse\
    \ of the prefix to the end of the string\n    # to get a palindrome.\n    # For\
    \ example, if we have a string 'cata', then its reverse is 'atac'\n    # and we\
    \ can see that 'atac' is a palindrome.\n    # So, we can just append 'at' to the\
    \ end of the string 'cata' to get a palindrome.\n    # If we have a string 'cat',\
    \ then its reverse is 'tac'\n    # and we can see that 'tac' is not a palindrome.\n\
    \    # So, we need to find the longest palindromic suffix of the string 'cat'\n\
    \    # which is 't' and append 'at' to the end of the string 'cat' to get a palindrome.\n\
    \    # Note that we don't need to check the whole string, just the half of it\n\
    \    # because if a string is\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphjt2donf.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmphjt2donf.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmphjt2donf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkwihxtie.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkwihxtie.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkwihxtie.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkwihxtie.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkwihxtie.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkwihxtie.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkwihxtie.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkwihxtie.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkwihxtie.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkwihxtie.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkwihxtie.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkwihxtie.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkwihxtie.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkwihxtie.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkwihxtie.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkwihxtie.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkwihxtie.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # This is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\n    # This is done by finding the longest common prefix of the string\
    \ and its reverse.\n    # This is done by finding the longest common prefix of\
    \ the string and its reverse.\n    # This is done by finding the longest common\
    \ prefix of the string and its reverse.\n    # This is done by finding the longest\
    \ common prefix of the string and its reverse.\n    # This is done by finding\
    \ the longest common prefix of the string and its reverse.\n    # This is done\
    \ by finding the longest common prefix of the string and its reverse.\n    # This\
    \ is done by finding the longest common prefix of the string and its reverse.\n\
    \    # This is done by finding the longest common prefix of the string and its\
    \ reverse.\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt931i0rv.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpt931i0rv.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpt931i0rv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdlst3mc4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdlst3mc4.jl:16\n\
    \   [2] top-level scope at /tmp/tmpdlst3mc4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdlst3mc4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpdlst3mc4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdlst3mc4.jl:16\n \
    \  [2] top-level scope at /tmp/tmpdlst3mc4.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdlst3mc4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpdlst3mc4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdlst3mc4.jl:16\n \
    \  [2] top-level scope at /tmp/tmpdlst3mc4.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdlst3mc4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpdlst3mc4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdlst3mc4.jl:16\n\
    \   [2] top-level scope at /tmp/tmpdlst3mc4.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdlst3mc4.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdlst3mc4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix.\n    for i in 1:length(string)\n        if is_palindrome(string[end-i+1:end])\n\
    \            return string * reverse(string[1:end-i])\n        end\n    end\n\
    \    # If we got here, the whole string is a palindrome.\n    return string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_685715b.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_685715b.jl:18\n \
    \  [2] top-level scope at /tmp/tmp_685715b.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_685715b.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_685715b.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp_685715b.jl:18\n   [2] top-level\
    \ scope at /tmp/tmp_685715b.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_685715b.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_685715b.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp_685715b.jl:18\n   [2] top-level\
    \ scope at /tmp/tmp_685715b.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_685715b.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp_685715b.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp_685715b.jl:18\n   [2] top-level\
    \ scope at /tmp/tmp_685715b.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_685715b.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_685715b.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6gyl2gnx.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp6gyl2gnx.jl:16\\\
    n   [2] top-level scope at /tmp/tmp6gyl2gnx.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6gyl2gnx.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6gyl2gnx.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp6gyl2gnx.jl:16\\\
    n   [2] top-level scope at /tmp/tmp6gyl2gnx.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6gyl2gnx.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6gyl2gnx.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp6gyl2gnx.jl:16\\\
    n   [2] top-level scope at /tmp/tmp6gyl2gnx.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6gyl2gnx.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6gyl2gnx.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp6gyl2gnx.jl:16\\\
    n   [2] top-level scope at /tmp/tmp6gyl2gnx.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6gyl2gnx.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp6gyl2gnx.jl:21\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp49xvhqhi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp49xvhqhi.jl:16\n\
    \   [2] top-level scope at /tmp/tmp49xvhqhi.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49xvhqhi.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp49xvhqhi.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp49xvhqhi.jl:16\n \
    \  [2] top-level scope at /tmp/tmp49xvhqhi.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49xvhqhi.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp49xvhqhi.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp49xvhqhi.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp49xvhqhi.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49xvhqhi.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp49xvhqhi.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp49xvhqhi.jl:16\n \
    \  [2] top-level scope at /tmp/tmp49xvhqhi.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49xvhqhi.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp49xvhqhi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwrnkxrq5.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwrnkxrq5.jl:16\n\
    \   [2] top-level scope at /tmp/tmpwrnkxrq5.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwrnkxrq5.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnkxrq5.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwrnkxrq5.jl:16\n \
    \  [2] top-level scope at /tmp/tmpwrnkxrq5.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwrnkxrq5.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnkxrq5.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwrnkxrq5.jl:16\n \
    \  [2] top-level scope at /tmp/tmpwrnkxrq5.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwrnkxrq5.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwrnkxrq5.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwrnkxrq5.jl:16\n\
    \   [2] top-level scope at /tmp/tmpwrnkxrq5.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwrnkxrq5.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwrnkxrq5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # Note that we don't need to check the whole string,\n\
    \    # because if the string is a palindrome, then the whole string is the longest\
    \ palindromic suffix.\n    # So, we only need to check the first half of the string.\n\
    \    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n    \
    \        return string * reverse(string[1:i-1])\n        end\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphd166ssp.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphd166ssp.jl:21\n \
    \  [2] top-level scope at /tmp/tmphd166ssp.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd166ssp.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmphd166ssp.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphd166ssp.jl:21\n   [2] top-level\
    \ scope at /tmp/tmphd166ssp.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd166ssp.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmphd166ssp.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphd166ssp.jl:21\n   [2] top-level\
    \ scope at /tmp/tmphd166ssp.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd166ssp.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmphd166ssp.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphd166ssp.jl:21\n   [2] top-level\
    \ scope at /tmp/tmphd166ssp.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphd166ssp.jl:30\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphd166ssp.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    if string == reverse(string)\n\
    \        return string\n    end\n    # Find the longest palindromic suffix\n \
    \   for i in 1:length(string)\n        if string[1:i] == reverse(string[end-i+1:end])\n\
    \            return string * reverse(string[1:end-i])\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2ag2ay4t.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:209\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp2ag2ay4t.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp2ag2ay4t.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2ag2ay4t.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmp2ag2ay4t.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp2ag2ay4t.jl:22\n   [2] top-level\
    \ scope at /tmp/tmp2ag2ay4t.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2ag2ay4t.jl:30\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    3      2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2ag2ay4t.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If no palindromic suffix found, return the reverse of the string\n    return\
    \ string * reverse(string[1:end])\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzm4v72ny.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: is_palindrome\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpzm4v72ny.jl:18\\\
    n   [2] top-level scope at /tmp/tmpzm4v72ny.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzm4v72ny.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzm4v72ny.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmpzm4v72ny.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmpzm4v72ny.jl:32\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzm4v72ny.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzm4v72ny.jl:33\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmpzm4v72ny.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmpzm4v72ny.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzm4v72ny.jl:29\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpzm4v72ny.jl:34\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: is_palindrome not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmpzm4v72ny.jl:18\\n   [2] top-level\
    \ scope at /tmp/tmpzm4v72ny.jl:34\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpzm4v72ny.jl:29\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzhn2j_r8.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzhn2j_r8.jl:16\n\
    \   [2] top-level scope at /tmp/tmpzhn2j_r8.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzhn2j_r8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpzhn2j_r8.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzhn2j_r8.jl:16\n \
    \  [2] top-level scope at /tmp/tmpzhn2j_r8.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzhn2j_r8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpzhn2j_r8.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzhn2j_r8.jl:16\n \
    \  [2] top-level scope at /tmp/tmpzhn2j_r8.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzhn2j_r8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpzhn2j_r8.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpzhn2j_r8.jl:16\n\
    \   [2] top-level scope at /tmp/tmpzhn2j_r8.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzhn2j_r8.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzhn2j_r8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Append to the\
    \ end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n    return string * reverse(string[1:end-length(suffix)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp27uq5slf.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp27uq5slf.jl:17\n\
    \   [2] top-level scope at /tmp/tmp27uq5slf.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp27uq5slf.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp27uq5slf.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp27uq5slf.jl:17\n \
    \  [2] top-level scope at /tmp/tmp27uq5slf.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp27uq5slf.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp27uq5slf.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp27uq5slf.jl:17\n  \
    \ [2] top-level scope at /tmp/tmp27uq5slf.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp27uq5slf.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp27uq5slf.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp27uq5slf.jl:17\n \
    \  [2] top-level scope at /tmp/tmp27uq5slf.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp27uq5slf.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27uq5slf.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix =\
    \ longest_palindrome_suffix(string)\n    return string * palindrome_suffix\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa94cpxkq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa94cpxkq.jl:16\n\
    \   [2] top-level scope at /tmp/tmpa94cpxkq.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa94cpxkq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa94cpxkq.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa94cpxkq.jl:16\n \
    \  [2] top-level scope at /tmp/tmpa94cpxkq.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa94cpxkq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa94cpxkq.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpa94cpxkq.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpa94cpxkq.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa94cpxkq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa94cpxkq.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa94cpxkq.jl:16\n \
    \  [2] top-level scope at /tmp/tmpa94cpxkq.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa94cpxkq.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa94cpxkq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe6kmqhjp.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpe6kmqhjp.jl:16\n\
    \   [2] top-level scope at /tmp/tmpe6kmqhjp.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe6kmqhjp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpe6kmqhjp.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpe6kmqhjp.jl:16\n \
    \  [2] top-level scope at /tmp/tmpe6kmqhjp.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe6kmqhjp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpe6kmqhjp.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpe6kmqhjp.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpe6kmqhjp.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe6kmqhjp.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpe6kmqhjp.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpe6kmqhjp.jl:16\n \
    \  [2] top-level scope at /tmp/tmpe6kmqhjp.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe6kmqhjp.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe6kmqhjp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    for i in 1:length(string)\n        if is_palindrome(string[end-i+1:end])\n\
    \            return string * reverse(string[1:end-i])\n        end\n    end\n\
    \    # If we got here, the whole string is a palindrome.\n    return string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy8sdfjsc.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpy8sdfjsc.jl:18\n \
    \  [2] top-level scope at /tmp/tmpy8sdfjsc.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy8sdfjsc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpy8sdfjsc.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpy8sdfjsc.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpy8sdfjsc.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy8sdfjsc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpy8sdfjsc.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpy8sdfjsc.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpy8sdfjsc.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy8sdfjsc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpy8sdfjsc.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpy8sdfjsc.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpy8sdfjsc.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpy8sdfjsc.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy8sdfjsc.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps_4i8hhc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmps_4i8hhc.jl:16\n\
    \   [2] top-level scope at /tmp/tmps_4i8hhc.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_4i8hhc.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmps_4i8hhc.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmps_4i8hhc.jl:16\n \
    \  [2] top-level scope at /tmp/tmps_4i8hhc.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_4i8hhc.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmps_4i8hhc.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmps_4i8hhc.jl:16\n   [2] top-level\
    \ scope at /tmp/tmps_4i8hhc.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_4i8hhc.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmps_4i8hhc.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmps_4i8hhc.jl:16\n \
    \  [2] top-level scope at /tmp/tmps_4i8hhc.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps_4i8hhc.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps_4i8hhc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # This is the same as finding the longest palindromic\
    \ prefix of the string reversed.\n    longest_palindromic_suffix = longest_palindromic_prefix(reverse(string))\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-length(longest_palindromic_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcw52p47_.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindromic_prefix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpcw52p47_.jl:18\\\
    n   [2] top-level scope at /tmp/tmpcw52p47_.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw52p47_.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw52p47_.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindromic_prefix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpcw52p47_.jl:18\\\
    n   [2] top-level scope at /tmp/tmpcw52p47_.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw52p47_.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw52p47_.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindromic_prefix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpcw52p47_.jl:18\\\
    n   [2] top-level scope at /tmp/tmpcw52p47_.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw52p47_.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcw52p47_.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindromic_prefix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpcw52p47_.jl:18\\\
    n   [2] top-level scope at /tmp/tmpcw52p47_.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcw52p47_.jl:26\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpcw52p47_.jl:24\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # This is the longest palindrome that ends with the\
    \ last character of the string.\n    # We only need to find the longest palindrome\
    \ that ends with the last character of the string\n    # because we will append\
    \ the reverse of the prefix that comes before the palindromic suffix.\n    # This\
    \ will make the whole string a palindrome.\n    longest_palindromic_suffix = longest_palindromic_suffix(string)\n\
    \    # Find the prefix that comes before the palindromic suffix.\n    prefix =\
    \ string[1:end-length(longest_palindromic_suffix)]\n    # Append the reverse of\
    \ the prefix to the end of the string.\n    return string * reverse(prefix)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgydzxwbf.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgydzxwbf.jl:21\n\
    \   [2] top-level scope at /tmp/tmpgydzxwbf.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgydzxwbf.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpgydzxwbf.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgydzxwbf.jl:21\n \
    \  [2] top-level scope at /tmp/tmpgydzxwbf.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgydzxwbf.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpgydzxwbf.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgydzxwbf.jl:21\n  \
    \ [2] top-level scope at /tmp/tmpgydzxwbf.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgydzxwbf.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpgydzxwbf.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgydzxwbf.jl:21\n \
    \  [2] top-level scope at /tmp/tmpgydzxwbf.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgydzxwbf.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgydzxwbf.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphz8dv9dk.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphz8dv9dk.jl:16\n\
    \   [2] top-level scope at /tmp/tmphz8dv9dk.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphz8dv9dk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphz8dv9dk.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphz8dv9dk.jl:16\n \
    \  [2] top-level scope at /tmp/tmphz8dv9dk.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphz8dv9dk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphz8dv9dk.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphz8dv9dk.jl:16\n \
    \  [2] top-level scope at /tmp/tmphz8dv9dk.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphz8dv9dk.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmphz8dv9dk.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphz8dv9dk.jl:16\n\
    \   [2] top-level scope at /tmp/tmphz8dv9dk.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphz8dv9dk.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphz8dv9dk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix =\
    \ find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5_anpaer.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5_anpaer.jl:16\n\
    \   [2] top-level scope at /tmp/tmp5_anpaer.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5_anpaer.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5_anpaer.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5_anpaer.jl:16\n \
    \  [2] top-level scope at /tmp/tmp5_anpaer.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5_anpaer.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5_anpaer.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5_anpaer.jl:16\n \
    \  [2] top-level scope at /tmp/tmp5_anpaer.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5_anpaer.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmp5_anpaer.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5_anpaer.jl:16\n\
    \   [2] top-level scope at /tmp/tmp5_anpaer.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5_anpaer.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5_anpaer.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphqafgu88.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphqafgu88.jl:16\n \
    \  [2] top-level scope at /tmp/tmphqafgu88.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphqafgu88.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmphqafgu88.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphqafgu88.jl:16\n   [2] top-level\
    \ scope at /tmp/tmphqafgu88.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphqafgu88.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmphqafgu88.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphqafgu88.jl:16\n   [2] top-level\
    \ scope at /tmp/tmphqafgu88.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphqafgu88.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmphqafgu88.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmphqafgu88.jl:16\n   [2] top-level\
    \ scope at /tmp/tmphqafgu88.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphqafgu88.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphqafgu88.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8ups3siq.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8ups3siq.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8ups3siq.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8ups3siq.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8ups3siq.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8ups3siq.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8ups3siq.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8ups3siq.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8ups3siq.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8ups3siq.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8ups3siq.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8ups3siq.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8ups3siq.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp8ups3siq.jl:16\\\
    n   [2] top-level scope at /tmp/tmp8ups3siq.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8ups3siq.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfgbwippw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpfgbwippw.jl:16\n\
    \   [2] top-level scope at /tmp/tmpfgbwippw.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfgbwippw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfgbwippw.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpfgbwippw.jl:16\n \
    \  [2] top-level scope at /tmp/tmpfgbwippw.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfgbwippw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfgbwippw.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpfgbwippw.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpfgbwippw.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfgbwippw.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpfgbwippw.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpfgbwippw.jl:16\n \
    \  [2] top-level scope at /tmp/tmpfgbwippw.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfgbwippw.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfgbwippw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8mqb4elr.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8mqb4elr.jl:16\n\
    \   [2] top-level scope at /tmp/tmp8mqb4elr.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mqb4elr.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mqb4elr.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8mqb4elr.jl:16\n \
    \  [2] top-level scope at /tmp/tmp8mqb4elr.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mqb4elr.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mqb4elr.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8mqb4elr.jl:16\n \
    \  [2] top-level scope at /tmp/tmp8mqb4elr.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mqb4elr.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp8mqb4elr.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8mqb4elr.jl:16\n\
    \   [2] top-level scope at /tmp/tmp8mqb4elr.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8mqb4elr.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8mqb4elr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Append to the\
    \ end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n    return string * reverse(string[1:end-length(suffix)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6zqs_hey.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6zqs_hey.jl:17\n\
    \   [2] top-level scope at /tmp/tmp6zqs_hey.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6zqs_hey.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp6zqs_hey.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6zqs_hey.jl:17\n \
    \  [2] top-level scope at /tmp/tmp6zqs_hey.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6zqs_hey.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp6zqs_hey.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6zqs_hey.jl:17\n  \
    \ [2] top-level scope at /tmp/tmp6zqs_hey.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6zqs_hey.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp6zqs_hey.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6zqs_hey.jl:17\n \
    \  [2] top-level scope at /tmp/tmp6zqs_hey.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6zqs_hey.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6zqs_hey.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkrap2phs.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkrap2phs.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkrap2phs.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrap2phs.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrap2phs.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkrap2phs.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkrap2phs.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrap2phs.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrap2phs.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkrap2phs.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkrap2phs.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrap2phs.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkrap2phs.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkrap2phs.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkrap2phs.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkrap2phs.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkrap2phs.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvtaxnl3a.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvtaxnl3a.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvtaxnl3a.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvtaxnl3a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvtaxnl3a.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvtaxnl3a.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvtaxnl3a.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvtaxnl3a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvtaxnl3a.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpvtaxnl3a.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpvtaxnl3a.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvtaxnl3a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvtaxnl3a.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvtaxnl3a.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvtaxnl3a.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvtaxnl3a.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtaxnl3a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # This is done by finding the longest common prefix\
    \ of the string and its reverse.\n    # The longest common prefix of a string\
    \ and its reverse is the longest palindromic suffix.\n    # This is because the\
    \ longest common prefix of a string and its reverse is the longest\n    # palindromic\
    \ suffix of the string.\n    # Example:\n    # string = \"cata\"\n    # string_reverse\
    \ = \"atac\"\n    # longest_common_prefix = \"a\"\n    # longest_palindromic_suffix\
    \ = \"a\"\n    # string_prefix = \"cat\"\n    # string_prefix_reverse = \"tac\"\
    \n    # string_palindrome = \"catac\"\n    string_reverse = reverse(string)\n\
    \    longest_common_prefix = lcp(string, string_reverse)\n    string_prefix =\
    \ string[1:end-length(longest_common_prefix)]\n    string_prefix_reverse = reverse(string_prefix)\n\
    \    return string * string_prefix_reverse\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmponf9hp5u.jl:41\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: lcp not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmponf9hp5u.jl:30\n  \
    \ [2] top-level scope at /tmp/tmponf9hp5u.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponf9hp5u.jl:39\n  \ntest set: Error During\
    \ Test at /tmp/tmponf9hp5u.jl:42\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: lcp not defined\n  Stacktrace:\n   [1] make_palindrome(::String)\
    \ at /tmp/tmponf9hp5u.jl:30\n   [2] top-level scope at /tmp/tmponf9hp5u.jl:42\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponf9hp5u.jl:39\n  \ntest set: Error During\
    \ Test at /tmp/tmponf9hp5u.jl:43\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: lcp not defined\n  Stacktrace:\n   [1] make_palindrome(::String)\
    \ at /tmp/tmponf9hp5u.jl:30\n   [2] top-level scope at /tmp/tmponf9hp5u.jl:43\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponf9hp5u.jl:39\n  \ntest set: Error During\
    \ Test at /tmp/tmponf9hp5u.jl:44\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: lcp not defined\n  Stacktrace:\n \
    \  [1] make_palindrome(::String) at /tmp/tmponf9hp5u.jl:30\n   [2] top-level scope\
    \ at /tmp/tmponf9hp5u.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponf9hp5u.jl:39\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponf9hp5u.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix =\
    \ longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_vx670ho.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp_vx670ho.jl:16\\\
    n   [2] top-level scope at /tmp/tmp_vx670ho.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_vx670ho.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_vx670ho.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp_vx670ho.jl:16\\\
    n   [2] top-level scope at /tmp/tmp_vx670ho.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_vx670ho.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_vx670ho.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\n\
    \  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp_vx670ho.jl:16\\\
    n   [2] top-level scope at /tmp/tmp_vx670ho.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_vx670ho.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_vx670ho.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp_vx670ho.jl:16\\\
    n   [2] top-level scope at /tmp/tmp_vx670ho.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_vx670ho.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix that is a palindrome\n    # This is the same as\
    \ finding the longest prefix that is a palindrome\n    # because the string is\
    \ symmetric\n    palindrome_length = longest_palindrome_prefix(string)\n    #\
    \ Reverse the prefix that comes before the palindrome\n    # and append it to\
    \ the end of the string\n    return string * string[1:palindrome_length]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdy8g75ss.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindrome_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdy8g75ss.jl:16\n\
    \   [2] top-level scope at /tmp/tmpdy8g75ss.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy8g75ss.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy8g75ss.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: longest_palindrome_prefix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpdy8g75ss.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpdy8g75ss.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy8g75ss.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy8g75ss.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_prefix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdy8g75ss.jl:16\n \
    \  [2] top-level scope at /tmp/tmpdy8g75ss.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy8g75ss.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy8g75ss.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_prefix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpdy8g75ss.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpdy8g75ss.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy8g75ss.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpdy8g75ss.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_prefix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdy8g75ss.jl:16\n \
    \  [2] top-level scope at /tmp/tmpdy8g75ss.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdy8g75ss.jl:25\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdy8g75ss.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix.\n \
    \   reversed_prefix = reverse(string[1:end-length(longest_palindromic_suffix)])\n\
    \    # Append the reversed prefix to the end of the string.\n    return string\
    \ * reversed_prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6z0x6dcf.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6z0x6dcf.jl:17\n\
    \   [2] top-level scope at /tmp/tmp6z0x6dcf.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z0x6dcf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z0x6dcf.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6z0x6dcf.jl:17\n \
    \  [2] top-level scope at /tmp/tmp6z0x6dcf.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z0x6dcf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z0x6dcf.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6z0x6dcf.jl:17\n \
    \  [2] top-level scope at /tmp/tmp6z0x6dcf.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z0x6dcf.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp6z0x6dcf.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp6z0x6dcf.jl:17\n\
    \   [2] top-level scope at /tmp/tmp6z0x6dcf.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6z0x6dcf.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6z0x6dcf.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwejf4t7u.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwejf4t7u.jl:16\n\
    \   [2] top-level scope at /tmp/tmpwejf4t7u.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwejf4t7u.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwejf4t7u.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwejf4t7u.jl:16\n \
    \  [2] top-level scope at /tmp/tmpwejf4t7u.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwejf4t7u.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwejf4t7u.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwejf4t7u.jl:16\n \
    \  [2] top-level scope at /tmp/tmpwejf4t7u.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwejf4t7u.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwejf4t7u.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwejf4t7u.jl:16\n\
    \   [2] top-level scope at /tmp/tmpwejf4t7u.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwejf4t7u.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwejf4t7u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # This is done by finding the longest common substring of the string and its\
    \ reverse.\n    # This is done in O(n) time using the suffix tree.\n    #\n  \
    \  # The suffix tree is constructed using the Ukkonen algorithm.\n    # The algorithm\
    \ is described in the paper:\n    # Ukkonen, Esko. \"On-line construction of suffix\
    \ trees.\" Algorithmica 14.3 (1995): 249-260.\n    #\n    # The suffix tree is\
    \ a trie of all suffixes of the string.\n    # The longest common substring is\
    \ the deepest node in the suffix tree that is a leaf.\n    #\n    # The suffix\
    \ tree is constructed in O(n) time and O(n) space.\n    #\n    # The suffix tree\
    \ is a trie of all suffixes of the string.\n    # The longest common substring\
    \ is the deepest node in the suffix tree that is a leaf.\n    #\n    # The suffix\
    \ tree is constructed in O(n) time and O(n) space.\n    #\n    # The suffix tree\
    \ is a trie of all suffixes of the string.\n    # The longest common substring\
    \ is the deepest node in the suffix tree that is a leaf.\n    #\n    # The suffix\
    \ tree is constructed in O(n) time and O(n) space.\n    #\n    # The suffix tree\
    \ is a trie of all suffixes of the string.\n    # The longest common substring\
    \ is the deepest node in the suffix tree that is a leaf.\n    #\n    # The suffix\
    \ tree is constructed in O(n) time and O(n) space.\n    #\n    # The suffix tree\
    \ is a trie of all suffixes of the string.\n    # The longest common substring\
    \ is the deepest node in the suffix tree that is a leaf.\n    #\n    # The suffix\
    \ tree is constructed in O(n) time and O(n) space.\n    #\n    # The suffix tree\
    \ is a trie of all suffixes of the string.\n    # The longest common substring\
    \ is the deepest node in the suffix tree that is a leaf.\n    #\n    # The suffix\
    \ tree is constructed in O(n) time and O(n) space.\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjbfrolc4.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpjbfrolc4.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpjbfrolc4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps3wfezuq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmps3wfezuq.jl:16\n\
    \   [2] top-level scope at /tmp/tmps3wfezuq.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3wfezuq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmps3wfezuq.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmps3wfezuq.jl:16\n \
    \  [2] top-level scope at /tmp/tmps3wfezuq.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3wfezuq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmps3wfezuq.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmps3wfezuq.jl:16\n   [2] top-level\
    \ scope at /tmp/tmps3wfezuq.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3wfezuq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmps3wfezuq.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmps3wfezuq.jl:16\n \
    \  [2] top-level scope at /tmp/tmps3wfezuq.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps3wfezuq.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps3wfezuq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string\n    longest_palindromic_suffix = longest_palindromic_suffix(string)\n\
    \    # Find the prefix that comes before the palindromic suffix\n    prefix =\
    \ string[1:end-length(longest_palindromic_suffix)]\n    # Append to the end of\
    \ the string reverse of the prefix\n    return string * reverse(prefix)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn9la0ek8.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn9la0ek8.jl:17\n\
    \   [2] top-level scope at /tmp/tmpn9la0ek8.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn9la0ek8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpn9la0ek8.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn9la0ek8.jl:17\n \
    \  [2] top-level scope at /tmp/tmpn9la0ek8.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn9la0ek8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpn9la0ek8.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn9la0ek8.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpn9la0ek8.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn9la0ek8.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpn9la0ek8.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn9la0ek8.jl:17\n \
    \  [2] top-level scope at /tmp/tmpn9la0ek8.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn9la0ek8.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn9la0ek8.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Append reverse\
    \ of the prefix to the end of the string\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphuezm8ch.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphuezm8ch.jl:17\n\
    \   [2] top-level scope at /tmp/tmphuezm8ch.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphuezm8ch.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphuezm8ch.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphuezm8ch.jl:17\n \
    \  [2] top-level scope at /tmp/tmphuezm8ch.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphuezm8ch.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphuezm8ch.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphuezm8ch.jl:17\n  \
    \ [2] top-level scope at /tmp/tmphuezm8ch.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphuezm8ch.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmphuezm8ch.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphuezm8ch.jl:17\n \
    \  [2] top-level scope at /tmp/tmphuezm8ch.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphuezm8ch.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphuezm8ch.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return string\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg6__r0i3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg6__r0i3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpg6__r0i3.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg6__r0i3.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpg6__r0i3.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg6__r0i3.jl:16\n \
    \  [2] top-level scope at /tmp/tmpg6__r0i3.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg6__r0i3.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpg6__r0i3.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg6__r0i3.jl:16\n \
    \  [2] top-level scope at /tmp/tmpg6__r0i3.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg6__r0i3.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpg6__r0i3.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg6__r0i3.jl:16\n\
    \   [2] top-level scope at /tmp/tmpg6__r0i3.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg6__r0i3.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg6__r0i3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string\n    # and the length of the prefix that comes before it.\n\
    \    longest_palindrome_suffix_length = 0\n    for i in 1:length(string)\n   \
    \     if is_palindrome(string[i:end])\n            longest_palindrome_suffix_length\
    \ = i - 1\n            break\n        end\n    end\n    # Append to the end of\
    \ the string reverse of the prefix that comes before the palindromic suffix.\n\
    \    return string * string[1:longest_palindrome_suffix_length]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo7buvue9.jl:34\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpo7buvue9.jl:20\n \
    \  [2] top-level scope at /tmp/tmpo7buvue9.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo7buvue9.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpo7buvue9.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo7buvue9.jl:20\n   [2] top-level\
    \ scope at /tmp/tmpo7buvue9.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo7buvue9.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpo7buvue9.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo7buvue9.jl:20\n   [2] top-level\
    \ scope at /tmp/tmpo7buvue9.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo7buvue9.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpo7buvue9.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo7buvue9.jl:20\n   [2] top-level\
    \ scope at /tmp/tmpo7buvue9.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo7buvue9.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo7buvue9.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpowvpxm8o.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpowvpxm8o.jl:16\n\
    \   [2] top-level scope at /tmp/tmpowvpxm8o.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpowvpxm8o.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpowvpxm8o.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpowvpxm8o.jl:16\n \
    \  [2] top-level scope at /tmp/tmpowvpxm8o.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpowvpxm8o.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpowvpxm8o.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpowvpxm8o.jl:16\n \
    \  [2] top-level scope at /tmp/tmpowvpxm8o.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpowvpxm8o.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpowvpxm8o.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpowvpxm8o.jl:16\n\
    \   [2] top-level scope at /tmp/tmpowvpxm8o.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpowvpxm8o.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpowvpxm8o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdtcw7en6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdtcw7en6.jl:16\n\
    \   [2] top-level scope at /tmp/tmpdtcw7en6.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdtcw7en6.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpdtcw7en6.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdtcw7en6.jl:16\n \
    \  [2] top-level scope at /tmp/tmpdtcw7en6.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdtcw7en6.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpdtcw7en6.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdtcw7en6.jl:16\n \
    \  [2] top-level scope at /tmp/tmpdtcw7en6.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdtcw7en6.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpdtcw7en6.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpdtcw7en6.jl:16\n\
    \   [2] top-level scope at /tmp/tmpdtcw7en6.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdtcw7en6.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdtcw7en6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return \"\"\n    end\n    # Find the longest\
    \ palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse\
    \ the prefix that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppg_7icul.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppg_7icul.jl:17\n\
    \   [2] top-level scope at /tmp/tmppg_7icul.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppg_7icul.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppg_7icul.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppg_7icul.jl:17\n \
    \  [2] top-level scope at /tmp/tmppg_7icul.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppg_7icul.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppg_7icul.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppg_7icul.jl:17\n  \
    \ [2] top-level scope at /tmp/tmppg_7icul.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppg_7icul.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmppg_7icul.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppg_7icul.jl:17\n \
    \  [2] top-level scope at /tmp/tmppg_7icul.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppg_7icul.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppg_7icul.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb_waulhd.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpb_waulhd.jl:16\n\
    \   [2] top-level scope at /tmp/tmpb_waulhd.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_waulhd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_waulhd.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpb_waulhd.jl:16\n \
    \  [2] top-level scope at /tmp/tmpb_waulhd.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_waulhd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_waulhd.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpb_waulhd.jl:16\n \
    \  [2] top-level scope at /tmp/tmpb_waulhd.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_waulhd.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpb_waulhd.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpb_waulhd.jl:16\n\
    \   [2] top-level scope at /tmp/tmpb_waulhd.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb_waulhd.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb_waulhd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpooze40hd.jl:26\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpooze40hd.jl:16\\\
    n   [2] top-level scope at /tmp/tmpooze40hd.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpooze40hd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpooze40hd.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpooze40hd.jl:16\\\
    n   [2] top-level scope at /tmp/tmpooze40hd.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpooze40hd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpooze40hd.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpooze40hd.jl:16\\\
    n   [2] top-level scope at /tmp/tmpooze40hd.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpooze40hd.jl:24\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpooze40hd.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpooze40hd.jl:16\\\
    n   [2] top-level scope at /tmp/tmpooze40hd.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpooze40hd.jl:24\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp40nrekiv.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp40nrekiv.jl:16\n\
    \   [2] top-level scope at /tmp/tmp40nrekiv.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40nrekiv.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp40nrekiv.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp40nrekiv.jl:16\n \
    \  [2] top-level scope at /tmp/tmp40nrekiv.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40nrekiv.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp40nrekiv.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp40nrekiv.jl:16\n \
    \  [2] top-level scope at /tmp/tmp40nrekiv.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40nrekiv.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp40nrekiv.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp40nrekiv.jl:16\n\
    \   [2] top-level scope at /tmp/tmp40nrekiv.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp40nrekiv.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40nrekiv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix.\n    # Note that we don't need to find the longest palindromic prefix,\n\
    \    # because we know that it is the same as the longest palindromic suffix.\n\
    \    # We just need to know the length of the longest palindromic suffix.\n  \
    \  #\n    # The longest palindromic suffix is the longest palindromic substring\n\
    \    # that ends at the end of the string.\n    #\n    # We can find the longest\
    \ palindromic suffix using Manacher's algorithm.\n    #\n    # We need to find\
    \ the longest palindromic suffix, not the longest palindromic substring.\n   \
    \ # This means that we need to find the longest palindromic substring that ends\
    \ at the end of the string.\n    #\n    # We can do this by reversing the string\
    \ and finding the longest palindromic substring that starts at the beginning of\
    \ the string.\n    #\n    # We can find the longest palindromic substring that\
    \ starts at the beginning of the string using Manacher's algorithm.\n    #\n \
    \   # We can find the longest palindromic substring that starts at the beginning\
    \ of the string by reversing the string and finding the longest palindromic substring\
    \ that ends at the end of the string.\n    #\n    # We can find the longest palindromic\
    \ substring that ends at the end of the string by reversing the string and finding\
    \ the longest palindromic substring that starts at the beginning of the string.\n\
    \    #\n    # We can find the longest palindromic substring that starts at the\
    \ beginning of the string by reversing the string and finding the longest palindromic\
    \ substring that ends at the end of the string.\n    #\n    # We can find the\
    \ longest palindromic substring that ends at the end of the string by reversing\
    \ the string and finding the longest palindromic substring that starts at the\
    \ beginning of the string.\n    #\n    # We can find the longest palindromic substring\
    \ that starts at the beginning of the string by reversing the string and finding\
    \ the longest palindromic substring that ends at the end of the string.\n    #\n\
    \    # We can find the longest palindrom\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwjn1i76w.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpwjn1i76w.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpwjn1i76w.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse the prefix\
    \ that comes before the suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    # Append the prefix to the end of the string\n    return string * prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5exw23__.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5exw23__.jl:17\n\
    \   [2] top-level scope at /tmp/tmp5exw23__.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5exw23__.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5exw23__.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5exw23__.jl:17\n \
    \  [2] top-level scope at /tmp/tmp5exw23__.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5exw23__.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5exw23__.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5exw23__.jl:17\n  \
    \ [2] top-level scope at /tmp/tmp5exw23__.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5exw23__.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp5exw23__.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5exw23__.jl:17\n \
    \  [2] top-level scope at /tmp/tmp5exw23__.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5exw23__.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5exw23__.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7els595p.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp7els595p.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7els595p.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7els595p.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7els595p.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp7els595p.jl:16\n \
    \  [2] top-level scope at /tmp/tmp7els595p.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7els595p.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7els595p.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp7els595p.jl:16\n \
    \  [2] top-level scope at /tmp/tmp7els595p.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7els595p.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp7els595p.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp7els595p.jl:16\n\
    \   [2] top-level scope at /tmp/tmp7els595p.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7els595p.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7els595p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # This is done by finding the longest common prefix\
    \ and suffix of the string and its reverse.\n    # The longest common prefix and\
    \ suffix of the string and its reverse is the same as the longest common prefix\
    \ of the string and its reverse.\n    # The longest common prefix of the string\
    \ and its reverse is the same as the longest palindromic suffix of the string.\n\
    \    # The longest common prefix of the string and its reverse is the same as\
    \ the longest common prefix of the string and its reverse.\n    # The longest\
    \ common prefix of the string and its reverse is the same as the longest palindromic\
    \ suffix of the string.\n    # The longest common prefix of the string and its\
    \ reverse is the same as the longest palindromic suffix of the string.\n    #\
    \ The longest common prefix of the string and its reverse is the same as the longest\
    \ palindromic suffix of the string.\n    # The longest common prefix of the string\
    \ and its reverse is the same as the longest palindromic suffix of the string.\n\
    \    # The longest common prefix of the string and its reverse is the same as\
    \ the longest palindromic suffix of the string.\n    # The longest common prefix\
    \ of the string and its reverse is the same as the longest palindromic suffix\
    \ of the string.\n    # The longest common prefix of the string and its reverse\
    \ is the same as the longest palindromic suffix of the string.\n    # The longest\
    \ common prefix of the string and its reverse is the same as the longest palindromic\
    \ suffix of the string.\n    # The longest common prefix of the string and its\
    \ reverse is the same as the longest palindromic suffix of the string.\n    #\
    \ The longest common prefix of the string and its reverse is the same as the longest\
    \ palindromic suffix of the string.\n    # The longest common prefix of the string\
    \ and its reverse is the same as the longest palindromic suffix of the string.\n\
    \    # The longest common prefix of the string and its reverse is the same as\
    \ the longest palindromic suffix of the string.\n    # The longest common prefix\
    \ of the string and its reverse is the same as the longest palindromic suffix\
    \ of the string.\n    # The longest common prefix of the string and its reverse\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp131cu58e.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp131cu58e.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp131cu58e.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf4v3cshu.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpf4v3cshu.jl:16\n\
    \   [2] top-level scope at /tmp/tmpf4v3cshu.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf4v3cshu.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpf4v3cshu.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpf4v3cshu.jl:16\n \
    \  [2] top-level scope at /tmp/tmpf4v3cshu.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf4v3cshu.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpf4v3cshu.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpf4v3cshu.jl:16\n \
    \  [2] top-level scope at /tmp/tmpf4v3cshu.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf4v3cshu.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpf4v3cshu.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpf4v3cshu.jl:16\n\
    \   [2] top-level scope at /tmp/tmpf4v3cshu.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpf4v3cshu.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4v3cshu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprmsau8r4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmprmsau8r4.jl:16\n\
    \   [2] top-level scope at /tmp/tmprmsau8r4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmsau8r4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmprmsau8r4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmprmsau8r4.jl:16\n \
    \  [2] top-level scope at /tmp/tmprmsau8r4.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmsau8r4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmprmsau8r4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmprmsau8r4.jl:16\n   [2] top-level\
    \ scope at /tmp/tmprmsau8r4.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmsau8r4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmprmsau8r4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmprmsau8r4.jl:16\n \
    \  [2] top-level scope at /tmp/tmprmsau8r4.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprmsau8r4.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprmsau8r4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    # This is done by finding the longest common prefix\
    \ and suffix of the string.\n    # The longest common prefix and suffix are the\
    \ same for a palindrome.\n    # The longest common prefix and suffix are found\
    \ using the KMP algorithm.\n    # The KMP algorithm is used to find the longest\
    \ common prefix and suffix\n    # because it is linear in time.\n    # The KMP\
    \ algorithm is described in detail here:\n    # http://www.inf.fh-flensburg.de/lang/algorithmen/pattern/kmpen.htm\n\
    \    # The KMP algorithm is implemented in the function kmp_prefix_suffix.\n \
    \   # The function kmp_prefix_suffix returns a vector of integers.\n    # The\
    \ integer at index i in the vector is the length of the longest common prefix\
    \ and suffix of the string\n    # that ends at index i.\n    # The length of the\
    \ longest common prefix and suffix of the entire string is the last element in\
    \ the vector.\n    # This is the length of the longest palindromic suffix of the\
    \ string.\n    # The longest palindromic suffix of the string is the string from\
    \ index 0 to index (length of longest palindromic suffix - 1).\n    # The string\
    \ prefix that comes before the palindromic suffix is the string from index (length\
    \ of longest palindromic suffix) to the end.\n    # The string prefix that comes\
    \ before the palindromic suffix is reversed and appended to the end of the string.\n\
    \    # The result is the shortest palindrome that begins with the supplied string.\n\
    \    return string * \" \" * reverse(string[kmp_prefix_suffix(string)[end] + 1:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp77y8kvk1.jl:42\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: kmp_prefix_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp77y8kvk1.jl:34\\\
    n   [2] top-level scope at /tmp/tmp77y8kvk1.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp77y8kvk1.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp77y8kvk1.jl:43\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: kmp_prefix_suffix not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmp77y8kvk1.jl:34\\n   [2] top-level\
    \ scope at /tmp/tmp77y8kvk1.jl:43\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp77y8kvk1.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp77y8kvk1.jl:44\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: kmp_prefix_suffix not defined\\n  Stacktrace:\\\
    n   [1] make_palindrome(::String) at /tmp/tmp77y8kvk1.jl:34\\n   [2] top-level\
    \ scope at /tmp/tmp77y8kvk1.jl:44\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp77y8kvk1.jl:40\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp77y8kvk1.jl:45\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: kmp_prefix_suffix not defined\\n\
    \  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp77y8kvk1.jl:34\\\
    n   [2] top-level scope at /tmp/tmp77y8kvk1.jl:45\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp77y8kvk1.jl:40\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix.\n    suffix = longest_palindromic_suffix(string)\n    # Reverse the\
    \ prefix that comes before the palindromic suffix.\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    # Append the reversed prefix to the end of the string.\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplyb1zhgo.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmplyb1zhgo.jl:17\n\
    \   [2] top-level scope at /tmp/tmplyb1zhgo.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplyb1zhgo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplyb1zhgo.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmplyb1zhgo.jl:17\n \
    \  [2] top-level scope at /tmp/tmplyb1zhgo.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplyb1zhgo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplyb1zhgo.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmplyb1zhgo.jl:17\n  \
    \ [2] top-level scope at /tmp/tmplyb1zhgo.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplyb1zhgo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmplyb1zhgo.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmplyb1zhgo.jl:17\n \
    \  [2] top-level scope at /tmp/tmplyb1zhgo.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplyb1zhgo.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplyb1zhgo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwnurxwyr.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwnurxwyr.jl:16\n\
    \   [2] top-level scope at /tmp/tmpwnurxwyr.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnurxwyr.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwnurxwyr.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwnurxwyr.jl:16\n \
    \  [2] top-level scope at /tmp/tmpwnurxwyr.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnurxwyr.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwnurxwyr.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwnurxwyr.jl:16\n \
    \  [2] top-level scope at /tmp/tmpwnurxwyr.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnurxwyr.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpwnurxwyr.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpwnurxwyr.jl:16\n\
    \   [2] top-level scope at /tmp/tmpwnurxwyr.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnurxwyr.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwnurxwyr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse the prefix\
    \ and append it to the end of the string\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuhss1y_1.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpuhss1y_1.jl:17\n\
    \   [2] top-level scope at /tmp/tmpuhss1y_1.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuhss1y_1.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpuhss1y_1.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpuhss1y_1.jl:17\n \
    \  [2] top-level scope at /tmp/tmpuhss1y_1.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuhss1y_1.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpuhss1y_1.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpuhss1y_1.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpuhss1y_1.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuhss1y_1.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpuhss1y_1.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpuhss1y_1.jl:17\n \
    \  [2] top-level scope at /tmp/tmpuhss1y_1.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuhss1y_1.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuhss1y_1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvcruvydd.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvcruvydd.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvcruvydd.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvcruvydd.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvcruvydd.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvcruvydd.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvcruvydd.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvcruvydd.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvcruvydd.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvcruvydd.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvcruvydd.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvcruvydd.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvcruvydd.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvcruvydd.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvcruvydd.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvcruvydd.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvcruvydd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string\n    suffix = longest_palindromic_suffix(string)\n    #\
    \ Reverse the string prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(suffix)])\n    # Append the reversed prefix to\
    \ the end of the string\n    return string * prefix\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8lk52yv5.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8lk52yv5.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8lk52yv5.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8lk52yv5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8lk52yv5.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8lk52yv5.jl:17\n \
    \  [2] top-level scope at /tmp/tmp8lk52yv5.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8lk52yv5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8lk52yv5.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8lk52yv5.jl:17\n  \
    \ [2] top-level scope at /tmp/tmp8lk52yv5.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8lk52yv5.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp8lk52yv5.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8lk52yv5.jl:17\n \
    \  [2] top-level scope at /tmp/tmp8lk52yv5.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8lk52yv5.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lk52yv5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    for i in length(string):-1:1\n\
    \        if is_palindrome(string[i:end])\n            return string * reverse(string[1:i])\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo9ry8qu7.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpo9ry8qu7.jl:17\n \
    \  [2] top-level scope at /tmp/tmpo9ry8qu7.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9ry8qu7.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpo9ry8qu7.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo9ry8qu7.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpo9ry8qu7.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9ry8qu7.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpo9ry8qu7.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo9ry8qu7.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpo9ry8qu7.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9ry8qu7.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpo9ry8qu7.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo9ry8qu7.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpo9ry8qu7.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9ry8qu7.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo9ry8qu7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaa4dfcjc.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpaa4dfcjc.jl:16\n\
    \   [2] top-level scope at /tmp/tmpaa4dfcjc.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpaa4dfcjc.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpaa4dfcjc.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpaa4dfcjc.jl:16\n \
    \  [2] top-level scope at /tmp/tmpaa4dfcjc.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpaa4dfcjc.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpaa4dfcjc.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpaa4dfcjc.jl:16\n \
    \  [2] top-level scope at /tmp/tmpaa4dfcjc.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpaa4dfcjc.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpaa4dfcjc.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpaa4dfcjc.jl:16\n\
    \   [2] top-level scope at /tmp/tmpaa4dfcjc.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpaa4dfcjc.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaa4dfcjc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnqw5t1ji.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnqw5t1ji.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnqw5t1ji.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqw5t1ji.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqw5t1ji.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnqw5t1ji.jl:16\n \
    \  [2] top-level scope at /tmp/tmpnqw5t1ji.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqw5t1ji.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqw5t1ji.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpnqw5t1ji.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpnqw5t1ji.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqw5t1ji.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpnqw5t1ji.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnqw5t1ji.jl:16\n \
    \  [2] top-level scope at /tmp/tmpnqw5t1ji.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnqw5t1ji.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqw5t1ji.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse the prefix\
    \ that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    # Append the prefix to the end of the string\n    return string * prefix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpydfm9wy4.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpydfm9wy4.jl:17\n\
    \   [2] top-level scope at /tmp/tmpydfm9wy4.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpydfm9wy4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpydfm9wy4.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpydfm9wy4.jl:17\n \
    \  [2] top-level scope at /tmp/tmpydfm9wy4.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpydfm9wy4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpydfm9wy4.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpydfm9wy4.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpydfm9wy4.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpydfm9wy4.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpydfm9wy4.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpydfm9wy4.jl:17\n \
    \  [2] top-level scope at /tmp/tmpydfm9wy4.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpydfm9wy4.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpydfm9wy4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpphkk_e0v.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpphkk_e0v.jl:16\n\
    \   [2] top-level scope at /tmp/tmpphkk_e0v.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphkk_e0v.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpphkk_e0v.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpphkk_e0v.jl:16\n \
    \  [2] top-level scope at /tmp/tmpphkk_e0v.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphkk_e0v.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpphkk_e0v.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpphkk_e0v.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpphkk_e0v.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphkk_e0v.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpphkk_e0v.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpphkk_e0v.jl:16\n \
    \  [2] top-level scope at /tmp/tmpphkk_e0v.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpphkk_e0v.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpphkk_e0v.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome\n    # (i.e. the longest suffix that is also a prefix)\n\
    \    # This is done by finding the longest common prefix and suffix\n    # of\
    \ the string and its reverse.\n    # The longest common prefix and suffix are\
    \ the same,\n    # so we can use either one.\n    # The longest common prefix\
    \ is found by the KMP algorithm.\n    # The longest common suffix is found by\
    \ the KMP algorithm\n    # applied to the reverse of the string.\n    # The longest\
    \ common suffix is the same as the longest common prefix\n    # of the reverse\
    \ of the string.\n    # The reverse of the string is the same as the string with\
    \ the characters\n    # in reverse order.\n    # The reverse of the string is\
    \ the same as the string with the characters\n    # in reverse order.\n    # The\
    \ reverse of the string is the same as the string with the characters\n    # in\
    \ reverse order.\n    # The reverse of the string is the same as the string with\
    \ the characters\n    # in reverse order.\n    # The reverse of the string is\
    \ the same as the string with the characters\n    # in reverse order.\n    # The\
    \ reverse of the string is the same as the string with the characters\n    # in\
    \ reverse order.\n    # The reverse of the string is the same as the string with\
    \ the characters\n    # in reverse order.\n    # The reverse of the string is\
    \ the same as the string with the characters\n    # in reverse order.\n    # The\
    \ reverse of the string is the same as the string with the characters\n    # in\
    \ reverse order.\n    # The reverse of the string is the same as the string with\
    \ the characters\n    # in reverse order.\n    # The reverse of the string is\
    \ the same as the string with the characters\n    # in reverse order.\n    # The\
    \ reverse of the string is the same as the string with the characters\n    # in\
    \ reverse order.\n    # The reverse of the string is the same as the string with\
    \ the characters\n    # in reverse order.\n    # The reverse of the string is\
    \ the same as the string with the characters\n    # in reverse order.\n    # The\
    \ reverse of the string is the same as the string with the characters\n    #\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp873_c_oy.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp873_c_oy.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp873_c_oy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # Note that we can use the same function as for finding\
    \ the longest palindromic substring.\n    # The only difference is that we need\
    \ to pass the whole string as a parameter.\n    palindromic_suffix = longest_palindromic_substring(string)\n\
    \    # Find the prefix that comes before the palindromic suffix.\n    prefix =\
    \ string[1:end-length(palindromic_suffix)]\n    # Reverse the prefix and append\
    \ it to the end of the string.\n    return string * reverse(prefix)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4jevkx2j.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_substring\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4jevkx2j.jl:19\n\
    \   [2] top-level scope at /tmp/tmp4jevkx2j.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jevkx2j.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jevkx2j.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_substring not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4jevkx2j.jl:19\n \
    \  [2] top-level scope at /tmp/tmp4jevkx2j.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jevkx2j.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jevkx2j.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_substring not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4jevkx2j.jl:19\n \
    \  [2] top-level scope at /tmp/tmp4jevkx2j.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jevkx2j.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmp4jevkx2j.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_substring not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4jevkx2j.jl:19\n\
    \   [2] top-level scope at /tmp/tmp4jevkx2j.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4jevkx2j.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4jevkx2j.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvzxu4dsz.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvzxu4dsz.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvzxu4dsz.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvzxu4dsz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvzxu4dsz.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvzxu4dsz.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvzxu4dsz.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvzxu4dsz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvzxu4dsz.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvzxu4dsz.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvzxu4dsz.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvzxu4dsz.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpvzxu4dsz.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvzxu4dsz.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvzxu4dsz.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvzxu4dsz.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvzxu4dsz.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n   \
    \ # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpse_zvrmg.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpse_zvrmg.jl:17\n\
    \   [2] top-level scope at /tmp/tmpse_zvrmg.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpse_zvrmg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpse_zvrmg.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpse_zvrmg.jl:17\n \
    \  [2] top-level scope at /tmp/tmpse_zvrmg.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpse_zvrmg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpse_zvrmg.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpse_zvrmg.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpse_zvrmg.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpse_zvrmg.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpse_zvrmg.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpse_zvrmg.jl:17\n \
    \  [2] top-level scope at /tmp/tmpse_zvrmg.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpse_zvrmg.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpse_zvrmg.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    if string == reverse(string)\n\
    \        return string\n    end\n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    prefix = string[1:end-length(longest_palindrome_suffix)]\n    return string\
    \ * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgqmqmkis.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgqmqmkis.jl:19\n\
    \   [2] top-level scope at /tmp/tmpgqmqmkis.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgqmqmkis.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpgqmqmkis.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgqmqmkis.jl:19\n\
    \   [2] top-level scope at /tmp/tmpgqmqmkis.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgqmqmkis.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    3      2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 2 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgqmqmkis.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If no palindromic suffix is found, the whole string is a palindrome\n   \
    \ return string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsof99p1v.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsof99p1v.jl:18\n \
    \  [2] top-level scope at /tmp/tmpsof99p1v.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsof99p1v.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsof99p1v.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpsof99p1v.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpsof99p1v.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsof99p1v.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsof99p1v.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpsof99p1v.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpsof99p1v.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsof99p1v.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpsof99p1v.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpsof99p1v.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpsof99p1v.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsof99p1v.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsof99p1v.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(longest_palindromic_suffix)])\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1688apsi.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1688apsi.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1688apsi.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1688apsi.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp1688apsi.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1688apsi.jl:17\n \
    \  [2] top-level scope at /tmp/tmp1688apsi.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1688apsi.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp1688apsi.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1688apsi.jl:17\n \
    \  [2] top-level scope at /tmp/tmp1688apsi.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1688apsi.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmp1688apsi.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1688apsi.jl:17\n\
    \   [2] top-level scope at /tmp/tmp1688apsi.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1688apsi.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1688apsi.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvhrwcdqg.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpvhrwcdqg.jl:16\\\
    n   [2] top-level scope at /tmp/tmpvhrwcdqg.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpvhrwcdqg.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvhrwcdqg.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpvhrwcdqg.jl:16\\\
    n   [2] top-level scope at /tmp/tmpvhrwcdqg.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpvhrwcdqg.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvhrwcdqg.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpvhrwcdqg.jl:16\\\
    n   [2] top-level scope at /tmp/tmpvhrwcdqg.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpvhrwcdqg.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpvhrwcdqg.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpvhrwcdqg.jl:16\\\
    n   [2] top-level scope at /tmp/tmpvhrwcdqg.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpvhrwcdqg.jl:23\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # This is the same as finding the longest prefix of the reversed string that\
    \ is a palindrome.\n    # We can do this by finding the longest common prefix\
    \ of the string and its reverse.\n    # This is a linear time algorithm.\n   \
    \ # See https://en.wikipedia.org/wiki/Longest_common_prefix_problem\n    # Note\
    \ that we can use the same algorithm to find the longest common prefix of two\
    \ strings.\n    # This is because the longest common prefix of two strings is\
    \ the same as the longest common prefix of the first string and the reverse of\
    \ the second string.\n    # This is because the longest common prefix of two strings\
    \ is the same as the longest common prefix of the first string and the reverse\
    \ of the second string.\n    # This is because the longest common prefix of two\
    \ strings is the same as the longest common prefix of the first string and the\
    \ reverse of the second string.\n    # This is because the longest common prefix\
    \ of two strings is the same as the longest common prefix of the first string\
    \ and the reverse of the second string.\n    # This is because the longest common\
    \ prefix of two strings is the same as the longest common prefix of the first\
    \ string and the reverse of the second string.\n    # This is because the longest\
    \ common prefix of two strings is the same as the longest common prefix of the\
    \ first string and the reverse of the second string.\n    # This is because the\
    \ longest common prefix of two strings is the same as the longest common prefix\
    \ of the first string and the reverse of the second string.\n    # This is because\
    \ the longest common prefix of two strings is the same as the longest common prefix\
    \ of the first string and the reverse of the second string.\n    # This is because\
    \ the longest common prefix of two strings is the same as the longest common prefix\
    \ of the first string and the reverse of the second string.\n    # This is because\
    \ the longest common prefix of two strings is the same as the longest common prefix\
    \ of the first string and the reverse of the second string.\n    # This is because\
    \ the longest common prefix of two strings is the same as the longest common prefix\
    \ of the first string and the reverse of the second string.\n    # This is because\
    \ the longest common prefix of two strings is the same as the longest common prefix\
    \ of the first string and the reverse of the second string.\n   \nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpi7kr_lea.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpi7kr_lea.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpi7kr_lea.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcoo4nrjm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcoo4nrjm.jl:16\n\
    \   [2] top-level scope at /tmp/tmpcoo4nrjm.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcoo4nrjm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpcoo4nrjm.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcoo4nrjm.jl:16\n \
    \  [2] top-level scope at /tmp/tmpcoo4nrjm.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcoo4nrjm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpcoo4nrjm.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcoo4nrjm.jl:16\n \
    \  [2] top-level scope at /tmp/tmpcoo4nrjm.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcoo4nrjm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpcoo4nrjm.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcoo4nrjm.jl:16\n\
    \   [2] top-level scope at /tmp/tmpcoo4nrjm.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcoo4nrjm.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcoo4nrjm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    suffix_length = longest_palindromic_suffix(string)\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * string[1:end-suffix_length]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnaharpdu.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnaharpdu.jl:17\n\
    \   [2] top-level scope at /tmp/tmpnaharpdu.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnaharpdu.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpnaharpdu.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnaharpdu.jl:17\n \
    \  [2] top-level scope at /tmp/tmpnaharpdu.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnaharpdu.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpnaharpdu.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnaharpdu.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpnaharpdu.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnaharpdu.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpnaharpdu.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnaharpdu.jl:17\n \
    \  [2] top-level scope at /tmp/tmpnaharpdu.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnaharpdu.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnaharpdu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    longest_palindromic_suffix = \"\"\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[i:end])\n            longest_palindromic_suffix\
    \ = string[i:end]\n            break\n        end\n    end\n    # Append reverse\
    \ of the prefix to the end of the string\n    return string * reverse(string[1:length(string)\
    \ - length(longest_palindromic_suffix)])\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq3_tq0y6.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpq3_tq0y6.jl:19\n \
    \  [2] top-level scope at /tmp/tmpq3_tq0y6.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3_tq0y6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3_tq0y6.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpq3_tq0y6.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpq3_tq0y6.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3_tq0y6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3_tq0y6.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpq3_tq0y6.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpq3_tq0y6.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3_tq0y6.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpq3_tq0y6.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpq3_tq0y6.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpq3_tq0y6.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq3_tq0y6.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3_tq0y6.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    suffix_length = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-suffix_length])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp80dhu46s.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp80dhu46s.jl:17\\\
    n   [2] top-level scope at /tmp/tmp80dhu46s.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp80dhu46s.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp80dhu46s.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp80dhu46s.jl:17\\\
    n   [2] top-level scope at /tmp/tmp80dhu46s.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp80dhu46s.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp80dhu46s.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp80dhu46s.jl:17\\\
    n   [2] top-level scope at /tmp/tmp80dhu46s.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp80dhu46s.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp80dhu46s.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp80dhu46s.jl:17\\\
    n   [2] top-level scope at /tmp/tmp80dhu46s.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp80dhu46s.jl:27\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpylka4zhr.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpylka4zhr.jl:16\\\
    n   [2] top-level scope at /tmp/tmpylka4zhr.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpylka4zhr.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpylka4zhr.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpylka4zhr.jl:16\\\
    n   [2] top-level scope at /tmp/tmpylka4zhr.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpylka4zhr.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpylka4zhr.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpylka4zhr.jl:16\\\
    n   [2] top-level scope at /tmp/tmpylka4zhr.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpylka4zhr.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpylka4zhr.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpylka4zhr.jl:16\\\
    n   [2] top-level scope at /tmp/tmpylka4zhr.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpylka4zhr.jl:23\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix that is a palindrome.\n    # We can do it in O(n)\
    \ time using Manacher's algorithm.\n    # We can do it in O(n^2) time using KMP.\n\
    \    # We can do it in O(n^3) time by brute force.\n    # We can do it in O(n^2)\
    \ time by dynamic programming.\n    # We can do it in O(n^2) time by using suffix\
    \ trees.\n    # We can do it in O(n^2) time by using suffix arrays.\n    # We\
    \ can do it in O(n^2) time by using suffix automata.\n    # We can do it in O(n^2)\
    \ time by using suffix tries.\n    # We can do it in O(n^2) time by using suffix\
    \ tries.\n    # We can do it in O(n^2) time by using suffix tries.\n    # We can\
    \ do it in O(n^2) time by using suffix tries.\n    # We can do it in O(n^2) time\
    \ by using suffix tries.\n    # We can do it in O(n^2) time by using suffix tries.\n\
    \    # We can do it in O(n^2) time by using suffix tries.\n    # We can do it\
    \ in O(n^2) time by using suffix tries.\n    # We can do it in O(n^2) time by\
    \ using suffix tries.\n    # We can do it in O(n^2) time by using suffix tries.\n\
    \    # We can do it in O(n^2) time by using suffix tries.\n    # We can do it\
    \ in O(n^2) time by using suffix tries.\n    # We can do it in O(n^2) time by\
    \ using suffix tries.\n    # We can do it in O(n^2) time by using suffix tries.\n\
    \    # We can do it in O(n^2) time by using suffix tries.\n    # We can do it\
    \ in O(n^2) time by using suffix tries.\n    # We can do it in O(n^2) time by\
    \ using suffix tries.\n    # We can do it in O(n^2) time by using suffix tries.\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpe15u8o_w.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpe15u8o_w.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpe15u8o_w.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo6_ew0m2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpo6_ew0m2.jl:16\n\
    \   [2] top-level scope at /tmp/tmpo6_ew0m2.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6_ew0m2.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6_ew0m2.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpo6_ew0m2.jl:16\n \
    \  [2] top-level scope at /tmp/tmpo6_ew0m2.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6_ew0m2.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6_ew0m2.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpo6_ew0m2.jl:16\n \
    \  [2] top-level scope at /tmp/tmpo6_ew0m2.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6_ew0m2.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6_ew0m2.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpo6_ew0m2.jl:16\n\
    \   [2] top-level scope at /tmp/tmpo6_ew0m2.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6_ew0m2.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6_ew0m2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # This is the same as finding the longest palindromic\
    \ prefix of the string reversed.\n    longest_palindromic_suffix = longest_palindromic_prefix(reverse(string))\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-length(longest_palindromic_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbppbgpcf.jl:28\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_prefix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbppbgpcf.jl:18\n\
    \   [2] top-level scope at /tmp/tmpbppbgpcf.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbppbgpcf.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpbppbgpcf.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_prefix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbppbgpcf.jl:18\n \
    \  [2] top-level scope at /tmp/tmpbppbgpcf.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbppbgpcf.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpbppbgpcf.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_prefix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbppbgpcf.jl:18\n  \
    \ [2] top-level scope at /tmp/tmpbppbgpcf.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbppbgpcf.jl:26\n  \ntest set: Error During\
    \ Test at /tmp/tmpbppbgpcf.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_prefix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbppbgpcf.jl:18\n \
    \  [2] top-level scope at /tmp/tmpbppbgpcf.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbppbgpcf.jl:26\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbppbgpcf.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix that is a palindrome\n    postfix_length = longest_palindrome_length(string)\n\
    \    # Reverse the prefix and append it to the end of the string\n    return string\
    \ * string[1:end-postfix_length]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1hhwgxei.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindrome_length\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1hhwgxei.jl:14\n\
    \   [2] top-level scope at /tmp/tmp1hhwgxei.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hhwgxei.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hhwgxei.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: longest_palindrome_length not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp1hhwgxei.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp1hhwgxei.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hhwgxei.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hhwgxei.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_length not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1hhwgxei.jl:14\n \
    \  [2] top-level scope at /tmp/tmp1hhwgxei.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hhwgxei.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hhwgxei.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_length not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp1hhwgxei.jl:14\n   [2] top-level\
    \ scope at /tmp/tmp1hhwgxei.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hhwgxei.jl:22\n  \ntest set: Error During\
    \ Test at /tmp/tmp1hhwgxei.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_length not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp1hhwgxei.jl:14\n \
    \  [2] top-level scope at /tmp/tmp1hhwgxei.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1hhwgxei.jl:22\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1hhwgxei.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpns4990bo.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpns4990bo.jl:16\n\
    \   [2] top-level scope at /tmp/tmpns4990bo.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpns4990bo.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpns4990bo.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpns4990bo.jl:16\n \
    \  [2] top-level scope at /tmp/tmpns4990bo.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpns4990bo.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpns4990bo.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpns4990bo.jl:16\n \
    \  [2] top-level scope at /tmp/tmpns4990bo.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpns4990bo.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpns4990bo.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpns4990bo.jl:16\n\
    \   [2] top-level scope at /tmp/tmpns4990bo.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpns4990bo.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpns4990bo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9k6dd0wn.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9k6dd0wn.jl:16\n\
    \   [2] top-level scope at /tmp/tmp9k6dd0wn.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9k6dd0wn.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9k6dd0wn.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9k6dd0wn.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9k6dd0wn.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9k6dd0wn.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9k6dd0wn.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9k6dd0wn.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9k6dd0wn.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9k6dd0wn.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9k6dd0wn.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9k6dd0wn.jl:16\n\
    \   [2] top-level scope at /tmp/tmp9k6dd0wn.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9k6dd0wn.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9k6dd0wn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix.\n    palindrome_suffix = find_longest_palindrome_suffix(string)\n  \
    \  # Reverse the prefix that comes before the palindromic suffix.\n    prefix\
    \ = reverse(string[1:end-length(palindrome_suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcpr951so.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcpr951so.jl:17\n\
    \   [2] top-level scope at /tmp/tmpcpr951so.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcpr951so.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcpr951so.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcpr951so.jl:17\n \
    \  [2] top-level scope at /tmp/tmpcpr951so.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcpr951so.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcpr951so.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcpr951so.jl:17\n \
    \  [2] top-level scope at /tmp/tmpcpr951so.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcpr951so.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcpr951so.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcpr951so.jl:17\n\
    \   [2] top-level scope at /tmp/tmpcpr951so.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcpr951so.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcpr951so.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2_hp7066.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp2_hp7066.jl:16\n\
    \   [2] top-level scope at /tmp/tmp2_hp7066.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2_hp7066.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp2_hp7066.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp2_hp7066.jl:16\n \
    \  [2] top-level scope at /tmp/tmp2_hp7066.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2_hp7066.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp2_hp7066.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp2_hp7066.jl:16\n \
    \  [2] top-level scope at /tmp/tmp2_hp7066.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2_hp7066.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp2_hp7066.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp2_hp7066.jl:16\n\
    \   [2] top-level scope at /tmp/tmp2_hp7066.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2_hp7066.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_hp7066.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest palindromic suffix\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(suffix)])\n    # Append the prefix to the end\
    \ of the string\n    return string * prefix\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkqksdsof.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkqksdsof.jl:14\n\
    \   [2] top-level scope at /tmp/tmpkqksdsof.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkqksdsof.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkqksdsof.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpkqksdsof.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpkqksdsof.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkqksdsof.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkqksdsof.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkqksdsof.jl:14\n \
    \  [2] top-level scope at /tmp/tmpkqksdsof.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkqksdsof.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkqksdsof.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkqksdsof.jl:14\n  \
    \ [2] top-level scope at /tmp/tmpkqksdsof.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkqksdsof.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpkqksdsof.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkqksdsof.jl:14\n \
    \  [2] top-level scope at /tmp/tmpkqksdsof.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkqksdsof.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkqksdsof.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph64_ak8t.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph64_ak8t.jl:16\n\
    \   [2] top-level scope at /tmp/tmph64_ak8t.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph64_ak8t.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmph64_ak8t.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph64_ak8t.jl:16\n \
    \  [2] top-level scope at /tmp/tmph64_ak8t.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph64_ak8t.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmph64_ak8t.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph64_ak8t.jl:16\n \
    \  [2] top-level scope at /tmp/tmph64_ak8t.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph64_ak8t.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmph64_ak8t.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmph64_ak8t.jl:16\n\
    \   [2] top-level scope at /tmp/tmph64_ak8t.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmph64_ak8t.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph64_ak8t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptj8b8drk.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmptj8b8drk.jl:16\n\
    \   [2] top-level scope at /tmp/tmptj8b8drk.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptj8b8drk.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmptj8b8drk.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmptj8b8drk.jl:16\n \
    \  [2] top-level scope at /tmp/tmptj8b8drk.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptj8b8drk.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmptj8b8drk.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmptj8b8drk.jl:16\n   [2] top-level\
    \ scope at /tmp/tmptj8b8drk.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptj8b8drk.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmptj8b8drk.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmptj8b8drk.jl:16\n \
    \  [2] top-level scope at /tmp/tmptj8b8drk.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptj8b8drk.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptj8b8drk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpci28lndm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpci28lndm.jl:16\n\
    \   [2] top-level scope at /tmp/tmpci28lndm.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpci28lndm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpci28lndm.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpci28lndm.jl:16\n \
    \  [2] top-level scope at /tmp/tmpci28lndm.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpci28lndm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpci28lndm.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpci28lndm.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpci28lndm.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpci28lndm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpci28lndm.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpci28lndm.jl:16\n \
    \  [2] top-level scope at /tmp/tmpci28lndm.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpci28lndm.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpci28lndm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string\n    longest_palindromic_suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix\n\
    \    prefix = reverse(string[1:end-length(longest_palindromic_suffix)])\n    #\
    \ Append the prefix to the end of the string\n    return string * prefix\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjcrloy5w.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpjcrloy5w.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjcrloy5w.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjcrloy5w.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcrloy5w.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpjcrloy5w.jl:17\n \
    \  [2] top-level scope at /tmp/tmpjcrloy5w.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjcrloy5w.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcrloy5w.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpjcrloy5w.jl:17\n \
    \  [2] top-level scope at /tmp/tmpjcrloy5w.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjcrloy5w.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpjcrloy5w.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpjcrloy5w.jl:17\n\
    \   [2] top-level scope at /tmp/tmpjcrloy5w.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjcrloy5w.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjcrloy5w.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix.\n    suffix_length = longest_palindromic_suffix(string)\n    # Append\
    \ to the end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n    return string * string[1:end-suffix_length]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf9deb86l.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf9deb86l.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf9deb86l.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9deb86l.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9deb86l.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf9deb86l.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf9deb86l.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9deb86l.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9deb86l.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf9deb86l.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf9deb86l.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9deb86l.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf9deb86l.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf9deb86l.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf9deb86l.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf9deb86l.jl:25\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest palindromic suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn8svlrk2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn8svlrk2.jl:14\n\
    \   [2] top-level scope at /tmp/tmpn8svlrk2.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn8svlrk2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpn8svlrk2.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpn8svlrk2.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpn8svlrk2.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn8svlrk2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpn8svlrk2.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn8svlrk2.jl:14\n \
    \  [2] top-level scope at /tmp/tmpn8svlrk2.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn8svlrk2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpn8svlrk2.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn8svlrk2.jl:14\n  \
    \ [2] top-level scope at /tmp/tmpn8svlrk2.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn8svlrk2.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpn8svlrk2.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpn8svlrk2.jl:14\n \
    \  [2] top-level scope at /tmp/tmpn8svlrk2.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn8svlrk2.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn8svlrk2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9dgp3i3w.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9dgp3i3w.jl:16\n\
    \   [2] top-level scope at /tmp/tmp9dgp3i3w.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgp3i3w.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgp3i3w.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9dgp3i3w.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9dgp3i3w.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgp3i3w.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgp3i3w.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9dgp3i3w.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9dgp3i3w.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgp3i3w.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9dgp3i3w.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9dgp3i3w.jl:16\n\
    \   [2] top-level scope at /tmp/tmp9dgp3i3w.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9dgp3i3w.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9dgp3i3w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5wxp15dr.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp5wxp15dr.jl:16\\\
    n   [2] top-level scope at /tmp/tmp5wxp15dr.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5wxp15dr.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5wxp15dr.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp5wxp15dr.jl:16\\\
    n   [2] top-level scope at /tmp/tmp5wxp15dr.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5wxp15dr.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5wxp15dr.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp5wxp15dr.jl:16\\\
    n   [2] top-level scope at /tmp/tmp5wxp15dr.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5wxp15dr.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5wxp15dr.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmp5wxp15dr.jl:16\\\
    n   [2] top-level scope at /tmp/tmp5wxp15dr.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5wxp15dr.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps8wjebdt.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmps8wjebdt.jl:16\\\
    n   [2] top-level scope at /tmp/tmps8wjebdt.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps8wjebdt.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps8wjebdt.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmps8wjebdt.jl:16\\\
    n   [2] top-level scope at /tmp/tmps8wjebdt.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps8wjebdt.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps8wjebdt.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\n\
    \  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmps8wjebdt.jl:16\\\
    n   [2] top-level scope at /tmp/tmps8wjebdt.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps8wjebdt.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmps8wjebdt.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmps8wjebdt.jl:16\\\
    n   [2] top-level scope at /tmp/tmps8wjebdt.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmps8wjebdt.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    # The longest postfix that is a palindrome is the\
    \ same as the longest prefix that is a palindrome.\n    # This is because the\
    \ string is reversed.\n    longest_palindrome_prefix = longest_palindrome_prefix(string)\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * string[1:end-length(longest_palindrome_prefix)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptisk08f1.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindrome_prefix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmptisk08f1.jl:19\\\
    n   [2] top-level scope at /tmp/tmptisk08f1.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptisk08f1.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptisk08f1.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindrome_prefix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmptisk08f1.jl:19\\\
    n   [2] top-level scope at /tmp/tmptisk08f1.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptisk08f1.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptisk08f1.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindrome_prefix not defined\\n\
    \  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmptisk08f1.jl:19\\\
    n   [2] top-level scope at /tmp/tmptisk08f1.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptisk08f1.jl:27\\n  \\ntest set: Error During\
    \ Test at /tmp/tmptisk08f1.jl:32\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindrome_prefix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmptisk08f1.jl:19\\\
    n   [2] top-level scope at /tmp/tmptisk08f1.jl:32\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmptisk08f1.jl:27\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse the prefix\
    \ and append it to the end of the string\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3h364uks.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h364uks.jl:17\n\
    \   [2] top-level scope at /tmp/tmp3h364uks.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h364uks.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp3h364uks.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h364uks.jl:17\n \
    \  [2] top-level scope at /tmp/tmp3h364uks.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h364uks.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp3h364uks.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h364uks.jl:17\n  \
    \ [2] top-level scope at /tmp/tmp3h364uks.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h364uks.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp3h364uks.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h364uks.jl:17\n \
    \  [2] top-level scope at /tmp/tmp3h364uks.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h364uks.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3h364uks.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # This is done by finding the longest common prefix and suffix of the string\
    \ and its reverse.\n    # This is done in O(n) time using the KMP algorithm.\n\
    \    # The longest common prefix and suffix of a string and its reverse are the\
    \ same.\n    # The longest common prefix and suffix of a string and its reverse\
    \ are the same.\n    # The longest common prefix and suffix of a string and its\
    \ reverse are the same.\n    # The longest common prefix and suffix of a string\
    \ and its reverse are the same.\n    # The longest common prefix and suffix of\
    \ a string and its reverse are the same.\n    # The longest common prefix and\
    \ suffix of a string and its reverse are the same.\n    # The longest common prefix\
    \ and suffix of a string and its reverse are the same.\n    # The longest common\
    \ prefix and suffix of a string and its reverse are the same.\n    # The longest\
    \ common prefix and suffix of a string and its reverse are the same.\n    # The\
    \ longest common prefix and suffix of a string and its reverse are the same.\n\
    \    # The longest common prefix and suffix of a string and its reverse are the\
    \ same.\n    # The longest common prefix and suffix of a string and its reverse\
    \ are the same.\n    # The longest common prefix and suffix of a string and its\
    \ reverse are the same.\n    # The longest common prefix and suffix of a string\
    \ and its reverse are the same.\n    # The longest common prefix and suffix of\
    \ a string and its reverse are the same.\n    # The longest common prefix and\
    \ suffix of a string and its reverse are the same.\n    # The longest common prefix\
    \ and suffix of a string and its reverse are the same.\n    # The longest common\
    \ prefix and suffix of a string and its reverse are the same.\n    # The longest\
    \ common prefix and suffix of a string and its reverse are the same.\n    # The\
    \ longest common prefix and suffix of a string and its reverse are the same.\n\
    \    # The longest common prefix and suffix of a string and its reverse are the\
    \ same.\n    # The longest common prefix and suffix of a string and its reverse\
    \ are the same.\n    # The longest common prefix and suffix of a string and its\
    \ reverse are the same.\n    # The longest common prefix and suffix of a string\
    \ and its reverse are the same\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpei7jf2bx.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpei7jf2bx.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpei7jf2bx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnvvf3nic.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnvvf3nic.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnvvf3nic.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnvvf3nic.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpnvvf3nic.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnvvf3nic.jl:16\n \
    \  [2] top-level scope at /tmp/tmpnvvf3nic.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnvvf3nic.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpnvvf3nic.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnvvf3nic.jl:16\n \
    \  [2] top-level scope at /tmp/tmpnvvf3nic.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnvvf3nic.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpnvvf3nic.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnvvf3nic.jl:16\n\
    \   [2] top-level scope at /tmp/tmpnvvf3nic.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnvvf3nic.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnvvf3nic.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9gg_0gk4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9gg_0gk4.jl:16\n\
    \   [2] top-level scope at /tmp/tmp9gg_0gk4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gg_0gk4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gg_0gk4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9gg_0gk4.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9gg_0gk4.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gg_0gk4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gg_0gk4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp9gg_0gk4.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp9gg_0gk4.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gg_0gk4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9gg_0gk4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9gg_0gk4.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9gg_0gk4.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9gg_0gk4.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9gg_0gk4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    longest_palindromic_suffix = longest_palindromic_suffix(string)\n\
    \    # Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n    return string * reverse(string[1:end-length(longest_palindromic_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpekwa186m.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpekwa186m.jl:17\n\
    \   [2] top-level scope at /tmp/tmpekwa186m.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekwa186m.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpekwa186m.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpekwa186m.jl:17\n \
    \  [2] top-level scope at /tmp/tmpekwa186m.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekwa186m.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpekwa186m.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpekwa186m.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpekwa186m.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekwa186m.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpekwa186m.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpekwa186m.jl:17\n \
    \  [2] top-level scope at /tmp/tmpekwa186m.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekwa186m.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpekwa186m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Append to the\
    \ end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n    return string * reverse(string[1:end-length(suffix)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq35a0ncx.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpq35a0ncx.jl:17\n\
    \   [2] top-level scope at /tmp/tmpq35a0ncx.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq35a0ncx.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpq35a0ncx.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpq35a0ncx.jl:17\n \
    \  [2] top-level scope at /tmp/tmpq35a0ncx.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq35a0ncx.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpq35a0ncx.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpq35a0ncx.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpq35a0ncx.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq35a0ncx.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpq35a0ncx.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpq35a0ncx.jl:17\n \
    \  [2] top-level scope at /tmp/tmpq35a0ncx.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq35a0ncx.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq35a0ncx.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpslj32_2r.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpslj32_2r.jl:16\\\
    n   [2] top-level scope at /tmp/tmpslj32_2r.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpslj32_2r.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpslj32_2r.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpslj32_2r.jl:16\\\
    n   [2] top-level scope at /tmp/tmpslj32_2r.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpslj32_2r.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpslj32_2r.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindrome_suffix not defined\\n\
    \  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpslj32_2r.jl:16\\\
    n   [2] top-level scope at /tmp/tmpslj32_2r.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpslj32_2r.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpslj32_2r.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpslj32_2r.jl:16\\\
    n   [2] top-level scope at /tmp/tmpslj32_2r.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpslj32_2r.jl:23\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg78odsmq.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg78odsmq.jl:16\n\
    \   [2] top-level scope at /tmp/tmpg78odsmq.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg78odsmq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpg78odsmq.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg78odsmq.jl:16\n \
    \  [2] top-level scope at /tmp/tmpg78odsmq.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg78odsmq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpg78odsmq.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg78odsmq.jl:16\n \
    \  [2] top-level scope at /tmp/tmpg78odsmq.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg78odsmq.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpg78odsmq.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpg78odsmq.jl:16\n\
    \   [2] top-level scope at /tmp/tmpg78odsmq.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpg78odsmq.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg78odsmq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpym8xez9a.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpym8xez9a.jl:16\n\
    \   [2] top-level scope at /tmp/tmpym8xez9a.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpym8xez9a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpym8xez9a.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpym8xez9a.jl:16\n \
    \  [2] top-level scope at /tmp/tmpym8xez9a.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpym8xez9a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpym8xez9a.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpym8xez9a.jl:16\n \
    \  [2] top-level scope at /tmp/tmpym8xez9a.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpym8xez9a.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpym8xez9a.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpym8xez9a.jl:16\n\
    \   [2] top-level scope at /tmp/tmpym8xez9a.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpym8xez9a.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpym8xez9a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix_length\
    \ = longest_palindrome_suffix_length(string)\n    return string * string[1:end-longest_palindrome_suffix_length]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp84xrve44.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix_length\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp84xrve44.jl:16\n\
    \   [2] top-level scope at /tmp/tmp84xrve44.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp84xrve44.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp84xrve44.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix_length not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp84xrve44.jl:16\n \
    \  [2] top-level scope at /tmp/tmp84xrve44.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp84xrve44.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp84xrve44.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix_length not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp84xrve44.jl:16\n \
    \  [2] top-level scope at /tmp/tmp84xrve44.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp84xrve44.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp84xrve44.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix_length not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp84xrve44.jl:16\n\
    \   [2] top-level scope at /tmp/tmp84xrve44.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp84xrve44.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp84xrve44.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3h1gp63m.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h1gp63m.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3h1gp63m.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h1gp63m.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp3h1gp63m.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h1gp63m.jl:16\n \
    \  [2] top-level scope at /tmp/tmp3h1gp63m.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h1gp63m.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp3h1gp63m.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h1gp63m.jl:16\n \
    \  [2] top-level scope at /tmp/tmp3h1gp63m.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h1gp63m.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp3h1gp63m.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp3h1gp63m.jl:16\n\
    \   [2] top-level scope at /tmp/tmp3h1gp63m.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3h1gp63m.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3h1gp63m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest palindromic suffix.\n    # If the string is already a\
    \ palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest palindromic suffix.\n    # If the string is already\
    \ a palindrome, return it.\n    if is_palindrome(string)\n        return string\n\
    \    end\n    # Find the longest\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqekqujs7.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpqekqujs7.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpqekqujs7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return string\n    end\n    if length(string)\
    \ == 1\n        return string * 2\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix_length = 0\n    for i in 1:length(string)\n        if is_palindrome(string[end-i+1:end])\n\
    \            suffix_length = i\n            break\n        end\n    end\n    #\
    \ Append the reverse of the prefix\n    return string * 2[1:end-suffix_length]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr9gmhe6x.jl:36\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  MethodError: no method matching *(::String,\
    \ ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    *(!Matched::Complex{Bool}, ::Real) at complex.jl:309\n\
    \    *(!Matched::Missing, ::Number) at missing.jl:115\n    ...\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpr9gmhe6x.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpr9gmhe6x.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9gmhe6x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9gmhe6x.jl:37\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpr9gmhe6x.jl:22\n   [2] top-level\
    \ scope at /tmp/tmpr9gmhe6x.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9gmhe6x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9gmhe6x.jl:38\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpr9gmhe6x.jl:22\n   [2] top-level\
    \ scope at /tmp/tmpr9gmhe6x.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9gmhe6x.jl:34\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9gmhe6x.jl:39\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpr9gmhe6x.jl:22\n   [2] top-level\
    \ scope at /tmp/tmpr9gmhe6x.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9gmhe6x.jl:34\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9gmhe6x.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    # This is the same as finding the longest prefix\
    \ that is a palindrome.\n    # We can do this by reversing the string and finding\
    \ the longest prefix that is a palindrome.\n    # This is the same as finding\
    \ the longest postfix that is a palindrome.\n    longest_palindromic_postfix =\
    \ longest_palindromic_postfix(string)\n    # Append to the end of the string reverse\
    \ of a string prefix that comes before the palindromic suffix.\n    return string\
    \ * string[1:end-length(longest_palindromic_postfix)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8s1xxymq.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_postfix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8s1xxymq.jl:20\n\
    \   [2] top-level scope at /tmp/tmp8s1xxymq.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8s1xxymq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8s1xxymq.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_postfix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8s1xxymq.jl:20\n \
    \  [2] top-level scope at /tmp/tmp8s1xxymq.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8s1xxymq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8s1xxymq.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_postfix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8s1xxymq.jl:20\n \
    \  [2] top-level scope at /tmp/tmp8s1xxymq.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8s1xxymq.jl:28\n  \ntest set: Error During\
    \ Test at /tmp/tmp8s1xxymq.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_postfix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8s1xxymq.jl:20\n \
    \  [2] top-level scope at /tmp/tmp8s1xxymq.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8s1xxymq.jl:28\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8s1xxymq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9rl57sj_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9rl57sj_.jl:16\n\
    \   [2] top-level scope at /tmp/tmp9rl57sj_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9rl57sj_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9rl57sj_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9rl57sj_.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9rl57sj_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9rl57sj_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9rl57sj_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9rl57sj_.jl:16\n \
    \  [2] top-level scope at /tmp/tmp9rl57sj_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9rl57sj_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp9rl57sj_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp9rl57sj_.jl:16\n\
    \   [2] top-level scope at /tmp/tmp9rl57sj_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9rl57sj_.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9rl57sj_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    prefix = string[1:end-length(longest_palindrome_suffix)]\n\
    \    return string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpatm380i_.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpatm380i_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpatm380i_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatm380i_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpatm380i_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpatm380i_.jl:16\n \
    \  [2] top-level scope at /tmp/tmpatm380i_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatm380i_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpatm380i_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpatm380i_.jl:16\n \
    \  [2] top-level scope at /tmp/tmpatm380i_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatm380i_.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpatm380i_.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpatm380i_.jl:16\n\
    \   [2] top-level scope at /tmp/tmpatm380i_.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatm380i_.jl:24\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpatm380i_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    for i in 1:length(string)\n        if is_palindrome(string[end-i+1:end])\n\
    \            return string * reverse(string[1:end-i])\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcczwu415.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpcczwu415.jl:18\n \
    \  [2] top-level scope at /tmp/tmpcczwu415.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcczwu415.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcczwu415.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpcczwu415.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpcczwu415.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcczwu415.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcczwu415.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpcczwu415.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpcczwu415.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcczwu415.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpcczwu415.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpcczwu415.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpcczwu415.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcczwu415.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcczwu415.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgwh1tatz.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpgwh1tatz.jl:16\\\
    n   [2] top-level scope at /tmp/tmpgwh1tatz.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwh1tatz.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwh1tatz.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpgwh1tatz.jl:16\\\
    n   [2] top-level scope at /tmp/tmpgwh1tatz.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwh1tatz.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwh1tatz.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpgwh1tatz.jl:16\\\
    n   [2] top-level scope at /tmp/tmpgwh1tatz.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwh1tatz.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgwh1tatz.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpgwh1tatz.jl:16\\\
    n   [2] top-level scope at /tmp/tmpgwh1tatz.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgwh1tatz.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpgwh1tatz.jl:21\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = find_longest_palindromic_suffix(string)\n    # Reverse\
    \ the string prefix that comes before the palindromic suffix\n    prefix = reverse(string[1:end-length(suffix)])\n\
    \    # Append the reversed prefix to the end of the string\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4sig6smo.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4sig6smo.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4sig6smo.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4sig6smo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4sig6smo.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4sig6smo.jl:17\n \
    \  [2] top-level scope at /tmp/tmp4sig6smo.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4sig6smo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4sig6smo.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4sig6smo.jl:17\n \
    \  [2] top-level scope at /tmp/tmp4sig6smo.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4sig6smo.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp4sig6smo.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp4sig6smo.jl:17\n\
    \   [2] top-level scope at /tmp/tmp4sig6smo.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4sig6smo.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4sig6smo.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxjwn9yhc.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpxjwn9yhc.jl:16\n \
    \  [2] top-level scope at /tmp/tmpxjwn9yhc.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxjwn9yhc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpxjwn9yhc.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpxjwn9yhc.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpxjwn9yhc.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxjwn9yhc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpxjwn9yhc.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpxjwn9yhc.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpxjwn9yhc.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxjwn9yhc.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpxjwn9yhc.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpxjwn9yhc.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpxjwn9yhc.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxjwn9yhc.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxjwn9yhc.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc76qz6if.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpc76qz6if.jl:16\n\
    \   [2] top-level scope at /tmp/tmpc76qz6if.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc76qz6if.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpc76qz6if.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpc76qz6if.jl:16\n \
    \  [2] top-level scope at /tmp/tmpc76qz6if.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc76qz6if.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpc76qz6if.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpc76qz6if.jl:16\n \
    \  [2] top-level scope at /tmp/tmpc76qz6if.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc76qz6if.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpc76qz6if.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpc76qz6if.jl:16\n\
    \   [2] top-level scope at /tmp/tmpc76qz6if.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc76qz6if.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc76qz6if.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If no palindromic suffix found, then the whole string is a palindrome.\n\
    \    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo9caxzd6.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpo9caxzd6.jl:18\n \
    \  [2] top-level scope at /tmp/tmpo9caxzd6.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9caxzd6.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpo9caxzd6.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo9caxzd6.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpo9caxzd6.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9caxzd6.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpo9caxzd6.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo9caxzd6.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpo9caxzd6.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9caxzd6.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpo9caxzd6.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpo9caxzd6.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpo9caxzd6.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo9caxzd6.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo9caxzd6.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphstd0185.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphstd0185.jl:16\\\
    n   [2] top-level scope at /tmp/tmphstd0185.jl:25\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphstd0185.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphstd0185.jl:26\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphstd0185.jl:16\\\
    n   [2] top-level scope at /tmp/tmphstd0185.jl:26\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphstd0185.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphstd0185.jl:27\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphstd0185.jl:16\\\
    n   [2] top-level scope at /tmp/tmphstd0185.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphstd0185.jl:23\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphstd0185.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphstd0185.jl:16\\\
    n   [2] top-level scope at /tmp/tmphstd0185.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphstd0185.jl:23\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    palindrome_suffix = \"\"\n    for i in 1:length(string)\n      \
    \  if is_palindrome(string[end-i+1:end])\n            palindrome_suffix = string[end-i+1:end]\n\
    \            break\n        end\n    end\n    # Append to the end of the string\
    \ reverse of a string prefix that comes before the palindromic suffix.\n    return\
    \ string * reverse(string[1:end-length(palindrome_suffix)])\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmwv11kfj.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpmwv11kfj.jl:19\n \
    \  [2] top-level scope at /tmp/tmpmwv11kfj.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwv11kfj.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwv11kfj.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpmwv11kfj.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpmwv11kfj.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwv11kfj.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwv11kfj.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpmwv11kfj.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpmwv11kfj.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwv11kfj.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpmwv11kfj.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpmwv11kfj.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpmwv11kfj.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmwv11kfj.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwv11kfj.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n    return\
    \ string * string[1:end-longest_palindrome_suffix]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgvlj366d.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgvlj366d.jl:13\n\
    \   [2] top-level scope at /tmp/tmpgvlj366d.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvlj366d.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvlj366d.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgvlj366d.jl:13\n  \
    \ [2] top-level scope at /tmp/tmpgvlj366d.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvlj366d.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvlj366d.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgvlj366d.jl:13\n \
    \  [2] top-level scope at /tmp/tmpgvlj366d.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvlj366d.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvlj366d.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgvlj366d.jl:13\n \
    \  [2] top-level scope at /tmp/tmpgvlj366d.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvlj366d.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvlj366d.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpgvlj366d.jl:13\n\
    \   [2] top-level scope at /tmp/tmpgvlj366d.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvlj366d.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgvlj366d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[i:end])\n            return string * reverse(string[1:i-1])\n\
    \        end\n    end\n    return string * reverse(string[1:end])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm1h7601i.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpm1h7601i.jl:17\n \
    \  [2] top-level scope at /tmp/tmpm1h7601i.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1h7601i.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1h7601i.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpm1h7601i.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpm1h7601i.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1h7601i.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1h7601i.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpm1h7601i.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpm1h7601i.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1h7601i.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpm1h7601i.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpm1h7601i.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpm1h7601i.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm1h7601i.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm1h7601i.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Reverse the prefix\
    \ and append it to the end of the string\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpehzd7a3b.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpehzd7a3b.jl:17\n\
    \   [2] top-level scope at /tmp/tmpehzd7a3b.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpehzd7a3b.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpehzd7a3b.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpehzd7a3b.jl:17\n \
    \  [2] top-level scope at /tmp/tmpehzd7a3b.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpehzd7a3b.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpehzd7a3b.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpehzd7a3b.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpehzd7a3b.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpehzd7a3b.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmpehzd7a3b.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpehzd7a3b.jl:17\n \
    \  [2] top-level scope at /tmp/tmpehzd7a3b.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpehzd7a3b.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpehzd7a3b.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsojflcfi.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsojflcfi.jl:16\n\
    \   [2] top-level scope at /tmp/tmpsojflcfi.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsojflcfi.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpsojflcfi.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsojflcfi.jl:16\n \
    \  [2] top-level scope at /tmp/tmpsojflcfi.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsojflcfi.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpsojflcfi.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsojflcfi.jl:16\n \
    \  [2] top-level scope at /tmp/tmpsojflcfi.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsojflcfi.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpsojflcfi.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsojflcfi.jl:16\n\
    \   [2] top-level scope at /tmp/tmpsojflcfi.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsojflcfi.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsojflcfi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n   \
    \ # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpso40599a.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpso40599a.jl:17\n\
    \   [2] top-level scope at /tmp/tmpso40599a.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpso40599a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpso40599a.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpso40599a.jl:17\n \
    \  [2] top-level scope at /tmp/tmpso40599a.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpso40599a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpso40599a.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpso40599a.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpso40599a.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpso40599a.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpso40599a.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpso40599a.jl:17\n \
    \  [2] top-level scope at /tmp/tmpso40599a.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpso40599a.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpso40599a.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    for i in 1:length(string)\n\
    \        if is_palindrome(string[1:end-i+1])\n            return string * reverse(string[1:end-i+1])\n\
    \        end\n    end\n    return string * reverse(string[1:end])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbw0_4s7b.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbw0_4s7b.jl:17\n \
    \  [2] top-level scope at /tmp/tmpbw0_4s7b.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbw0_4s7b.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbw0_4s7b.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpbw0_4s7b.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpbw0_4s7b.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbw0_4s7b.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbw0_4s7b.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpbw0_4s7b.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpbw0_4s7b.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbw0_4s7b.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpbw0_4s7b.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpbw0_4s7b.jl:17\n   [2] top-level\
    \ scope at /tmp/tmpbw0_4s7b.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbw0_4s7b.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbw0_4s7b.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa4k4f9e7.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa4k4f9e7.jl:16\n\
    \   [2] top-level scope at /tmp/tmpa4k4f9e7.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa4k4f9e7.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa4k4f9e7.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa4k4f9e7.jl:16\n \
    \  [2] top-level scope at /tmp/tmpa4k4f9e7.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa4k4f9e7.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa4k4f9e7.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa4k4f9e7.jl:16\n \
    \  [2] top-level scope at /tmp/tmpa4k4f9e7.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa4k4f9e7.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpa4k4f9e7.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpa4k4f9e7.jl:16\n\
    \   [2] top-level scope at /tmp/tmpa4k4f9e7.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa4k4f9e7.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa4k4f9e7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphhf1s_b6.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphhf1s_b6.jl:16\n\
    \   [2] top-level scope at /tmp/tmphhf1s_b6.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphhf1s_b6.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmphhf1s_b6.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphhf1s_b6.jl:16\n \
    \  [2] top-level scope at /tmp/tmphhf1s_b6.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphhf1s_b6.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmphhf1s_b6.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphhf1s_b6.jl:16\n \
    \  [2] top-level scope at /tmp/tmphhf1s_b6.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphhf1s_b6.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmphhf1s_b6.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphhf1s_b6.jl:16\n\
    \   [2] top-level scope at /tmp/tmphhf1s_b6.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphhf1s_b6.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphhf1s_b6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome.\n    # This is the same as finding the longest prefix\
    \ that is a palindrome.\n    # We can do this by reversing the string and finding\
    \ the longest prefix that is a palindrome.\n    # This is the same as finding\
    \ the longest postfix that is a palindrome.\n    # We can do this by reversing\
    \ the string and finding the longest prefix that is a palindrome.\n    # We can\
    \ do this by reversing the string and finding the longest prefix that is a palindrome.\n\
    \    # We can do this by reversing the string and finding the longest prefix that\
    \ is a palindrome.\n    # We can do this by reversing the string and finding the\
    \ longest prefix that is a palindrome.\n    # We can do this by reversing the\
    \ string and finding the longest prefix that is a palindrome.\n    # We can do\
    \ this by reversing the string and finding the longest prefix that is a palindrome.\n\
    \    # We can do this by reversing the string and finding the longest prefix that\
    \ is a palindrome.\n    # We can do this by reversing the string and finding the\
    \ longest prefix that is a palindrome.\n    # We can do this by reversing the\
    \ string and finding the longest prefix that is a palindrome.\n    # We can do\
    \ this by reversing the string and finding the longest prefix that is a palindrome.\n\
    \    # We can do this by reversing the string and finding the longest prefix that\
    \ is a palindrome.\n    # We can do this by reversing the string and finding the\
    \ longest prefix that is a palindrome.\n    # We can do this by reversing the\
    \ string and finding the longest prefix that is a palindrome.\n    # We can do\
    \ this by reversing the string and finding the longest prefix that is a palindrome.\n\
    \    # We can do this by reversing the string and finding the longest prefix that\
    \ is a palindrome.\n    # We can do this by reversing the string and finding the\
    \ longest prefix that is a palindrome.\n    # We can do this by reversing the\
    \ string and finding the longest prefix that is a palindrome.\n    # We can do\
    \ this by reversing the string and finding the longest prefix that is a palindrome.\n\
    \    # We can do this by\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptyf9vprk.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmptyf9vprk.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmptyf9vprk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return string\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppkrt5w2k.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppkrt5w2k.jl:16\n\
    \   [2] top-level scope at /tmp/tmppkrt5w2k.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppkrt5w2k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmppkrt5w2k.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppkrt5w2k.jl:16\n \
    \  [2] top-level scope at /tmp/tmppkrt5w2k.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppkrt5w2k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmppkrt5w2k.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppkrt5w2k.jl:16\n \
    \  [2] top-level scope at /tmp/tmppkrt5w2k.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppkrt5w2k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmppkrt5w2k.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmppkrt5w2k.jl:16\n\
    \   [2] top-level scope at /tmp/tmppkrt5w2k.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppkrt5w2k.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppkrt5w2k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    longest_palindrome_suffix = find_longest_palindrome_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-length(longest_palindrome_suffix)])\n    return string\
    \ * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphuqeqzyv.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphuqeqzyv.jl:17\\\
    n   [2] top-level scope at /tmp/tmphuqeqzyv.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphuqeqzyv.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphuqeqzyv.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphuqeqzyv.jl:17\\\
    n   [2] top-level scope at /tmp/tmphuqeqzyv.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphuqeqzyv.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphuqeqzyv.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: find_longest_palindrome_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphuqeqzyv.jl:17\\\
    n   [2] top-level scope at /tmp/tmphuqeqzyv.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphuqeqzyv.jl:26\\n  \\ntest set: Error During\
    \ Test at /tmp/tmphuqeqzyv.jl:31\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmphuqeqzyv.jl:17\\\
    n   [2] top-level scope at /tmp/tmphuqeqzyv.jl:31\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmphuqeqzyv.jl:26\\n  \\nTest Summary: | Pass\
    \  Error  Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_mqk7rzl.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_mqk7rzl.jl:16\n\
    \   [2] top-level scope at /tmp/tmp_mqk7rzl.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_mqk7rzl.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_mqk7rzl.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_mqk7rzl.jl:16\n \
    \  [2] top-level scope at /tmp/tmp_mqk7rzl.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_mqk7rzl.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_mqk7rzl.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_mqk7rzl.jl:16\n \
    \  [2] top-level scope at /tmp/tmp_mqk7rzl.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_mqk7rzl.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_mqk7rzl.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_mqk7rzl.jl:16\n\
    \   [2] top-level scope at /tmp/tmp_mqk7rzl.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_mqk7rzl.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mqk7rzl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix\n    suffix = longest_palindromic_suffix(string)\n    # Append the reverse\
    \ of the prefix to the end of the string\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf0s43fc8.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(\"x\") == \"x\"\\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\\n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf0s43fc8.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf0s43fc8.jl:27\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf0s43fc8.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf0s43fc8.jl:28\\n  Test threw exception\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n  UndefVarError: longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf0s43fc8.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf0s43fc8.jl:28\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf0s43fc8.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf0s43fc8.jl:29\\n  Test threw exception\\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\\n  UndefVarError: longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf0s43fc8.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf0s43fc8.jl:29\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf0s43fc8.jl:25\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpf0s43fc8.jl:30\\n  Test threw exception\\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\\n  UndefVarError: longest_palindromic_suffix not defined\\\
    n  Stacktrace:\\n   [1] make_palindrome(::String) at /tmp/tmpf0s43fc8.jl:17\\\
    n   [2] top-level scope at /tmp/tmpf0s43fc8.jl:30\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpf0s43fc8.jl:25\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      4      5\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix.\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\n  \
    \  # If no palindromic suffix found, the whole string is a palindrome.\n    return\
    \ string\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t\
    @test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjct9m8zv.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpjct9m8zv.jl:18\n \
    \  [2] top-level scope at /tmp/tmpjct9m8zv.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjct9m8zv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjct9m8zv.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpjct9m8zv.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpjct9m8zv.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjct9m8zv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjct9m8zv.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpjct9m8zv.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpjct9m8zv.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjct9m8zv.jl:29\n  \ntest set: Error During\
    \ Test at /tmp/tmpjct9m8zv.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpjct9m8zv.jl:18\n   [2] top-level\
    \ scope at /tmp/tmpjct9m8zv.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjct9m8zv.jl:29\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjct9m8zv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkkcgc54k.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkkcgc54k.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkkcgc54k.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkkcgc54k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpkkcgc54k.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkkcgc54k.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkkcgc54k.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkkcgc54k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpkkcgc54k.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkkcgc54k.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkkcgc54k.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkkcgc54k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpkkcgc54k.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkkcgc54k.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkkcgc54k.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkkcgc54k.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkkcgc54k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvg2i2et2.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvg2i2et2.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvg2i2et2.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvg2i2et2.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvg2i2et2.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvg2i2et2.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvg2i2et2.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvg2i2et2.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvg2i2et2.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvg2i2et2.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvg2i2et2.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvg2i2et2.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvg2i2et2.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvg2i2et2.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvg2i2et2.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvg2i2et2.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvg2i2et2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp29r9l8u8.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp29r9l8u8.jl:16\n\
    \   [2] top-level scope at /tmp/tmp29r9l8u8.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp29r9l8u8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp29r9l8u8.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp29r9l8u8.jl:16\n \
    \  [2] top-level scope at /tmp/tmp29r9l8u8.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp29r9l8u8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp29r9l8u8.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp29r9l8u8.jl:16\n \
    \  [2] top-level scope at /tmp/tmp29r9l8u8.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp29r9l8u8.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp29r9l8u8.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp29r9l8u8.jl:16\n\
    \   [2] top-level scope at /tmp/tmp29r9l8u8.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp29r9l8u8.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp29r9l8u8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    longest_palindromic_suffix = longest_palindromic_suffix(string)\n\
    \    # Reverse the string prefix that comes before the palindromic suffix.\n \
    \   reversed_prefix = reverse(string[1:end-length(longest_palindromic_suffix)])\n\
    \    # Append the reversed prefix to the end of the string.\n    return string\
    \ * reversed_prefix\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp08ke4fcm.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp08ke4fcm.jl:17\n\
    \   [2] top-level scope at /tmp/tmp08ke4fcm.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp08ke4fcm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp08ke4fcm.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp08ke4fcm.jl:17\n \
    \  [2] top-level scope at /tmp/tmp08ke4fcm.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp08ke4fcm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp08ke4fcm.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp08ke4fcm.jl:17\n  \
    \ [2] top-level scope at /tmp/tmp08ke4fcm.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp08ke4fcm.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmp08ke4fcm.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp08ke4fcm.jl:17\n \
    \  [2] top-level scope at /tmp/tmp08ke4fcm.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp08ke4fcm.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp08ke4fcm.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix.\n    # This is the longest palindrome that ends at the end of the string.\n\
    \    # We can do this by finding the longest palindrome that starts at the beginning\
    \ of the string.\n    # This is the same as finding the longest palindrome that\
    \ starts at the end of the string.\n    # We can do this by reversing the string\
    \ and finding the longest palindrome that starts at the beginning of the string.\n\
    \    # This is the same as finding the longest palindrome that starts at the end\
    \ of the string.\n    # We can do this by reversing the string and finding the\
    \ longest palindrome that starts at the beginning of the string.\n    # This is\
    \ the same as finding the longest palindrome that starts at the end of the string.\n\
    \    # We can do this by reversing the string and finding the longest palindrome\
    \ that starts at the beginning of the string.\n    # This is the same as finding\
    \ the longest palindrome that starts at the end of the string.\n    # We can do\
    \ this by reversing the string and finding the longest palindrome that starts\
    \ at the beginning of the string.\n    # This is the same as finding the longest\
    \ palindrome that starts at the end of the string.\n    # We can do this by reversing\
    \ the string and finding the longest palindrome that starts at the beginning of\
    \ the string.\n    # This is the same as finding the longest palindrome that starts\
    \ at the end of the string.\n    # We can do this by reversing the string and\
    \ finding the longest palindrome that starts at the beginning of the string.\n\
    \    # This is the same as finding the longest palindrome that starts at the end\
    \ of the string.\n    # We can do this by reversing the string and finding the\
    \ longest palindrome that starts at the beginning of the string.\n    # This is\
    \ the same as finding the longest palindrome that starts at the end of the string.\n\
    \    # We can do this by reversing the string and finding the longest palindrome\
    \ that starts at the beginning of the string.\n    # This is the same as finding\
    \ the longest palindrome that starts at the end of the string.\n    # We can do\
    \ this by reversing the string and finding the longest palindrome that starts\
    \ at the\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpy6gsla18.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpy6gsla18.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpy6gsla18.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest palindromic suffix\n    suffix_length = longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix\n    prefix\
    \ = reverse(string[1:end-suffix_length])\n    # Append the reversed prefix to\
    \ the end of the string\n    return string * prefix\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsrm219r4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsrm219r4.jl:14\n\
    \   [2] top-level scope at /tmp/tmpsrm219r4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsrm219r4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsrm219r4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpsrm219r4.jl:14\n   [2] top-level\
    \ scope at /tmp/tmpsrm219r4.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsrm219r4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsrm219r4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsrm219r4.jl:14\n \
    \  [2] top-level scope at /tmp/tmpsrm219r4.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsrm219r4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsrm219r4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsrm219r4.jl:14\n  \
    \ [2] top-level scope at /tmp/tmpsrm219r4.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsrm219r4.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpsrm219r4.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsrm219r4.jl:14\n \
    \  [2] top-level scope at /tmp/tmpsrm219r4.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsrm219r4.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsrm219r4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest palindromic suffix.\n    suffix = find_longest_palindromic_suffix(string)\n\
    \    # Reverse the prefix that comes before the palindromic suffix.\n    prefix\
    \ = reverse(string[1:end-length(suffix)])\n    # Append the reversed prefix to\
    \ the end of the string.\n    return string * prefix\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiuvj5p8m.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: find_longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpiuvj5p8m.jl:14\n\
    \   [2] top-level scope at /tmp/tmpiuvj5p8m.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiuvj5p8m.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiuvj5p8m.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpiuvj5p8m.jl:14\n \
    \  [2] top-level scope at /tmp/tmpiuvj5p8m.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiuvj5p8m.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiuvj5p8m.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpiuvj5p8m.jl:14\n \
    \  [2] top-level scope at /tmp/tmpiuvj5p8m.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiuvj5p8m.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiuvj5p8m.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpiuvj5p8m.jl:14\n \
    \  [2] top-level scope at /tmp/tmpiuvj5p8m.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiuvj5p8m.jl:24\n  \ntest set: Error During\
    \ Test at /tmp/tmpiuvj5p8m.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindromic_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpiuvj5p8m.jl:14\n\
    \   [2] top-level scope at /tmp/tmpiuvj5p8m.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiuvj5p8m.jl:24\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiuvj5p8m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return string\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz92945lg.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpz92945lg.jl:16\n\
    \   [2] top-level scope at /tmp/tmpz92945lg.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz92945lg.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpz92945lg.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpz92945lg.jl:16\n \
    \  [2] top-level scope at /tmp/tmpz92945lg.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz92945lg.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpz92945lg.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpz92945lg.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpz92945lg.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz92945lg.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpz92945lg.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpz92945lg.jl:16\n \
    \  [2] top-level scope at /tmp/tmpz92945lg.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz92945lg.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz92945lg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-longest_palindrome_suffix])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmponfbbrfh.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmponfbbrfh.jl:16\n\
    \   [2] top-level scope at /tmp/tmponfbbrfh.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponfbbrfh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmponfbbrfh.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmponfbbrfh.jl:16\n \
    \  [2] top-level scope at /tmp/tmponfbbrfh.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponfbbrfh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmponfbbrfh.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmponfbbrfh.jl:16\n \
    \  [2] top-level scope at /tmp/tmponfbbrfh.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponfbbrfh.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmponfbbrfh.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmponfbbrfh.jl:16\n\
    \   [2] top-level scope at /tmp/tmponfbbrfh.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmponfbbrfh.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponfbbrfh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0ungf004.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp0ungf004.jl:16\n\
    \   [2] top-level scope at /tmp/tmp0ungf004.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ungf004.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ungf004.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp0ungf004.jl:16\n \
    \  [2] top-level scope at /tmp/tmp0ungf004.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ungf004.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ungf004.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp0ungf004.jl:16\n \
    \  [2] top-level scope at /tmp/tmp0ungf004.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ungf004.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ungf004.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp0ungf004.jl:16\n\
    \   [2] top-level scope at /tmp/tmp0ungf004.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ungf004.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ungf004.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    if string == reverse(string)\n\
    \        return string\n    end\n    # find the longest palindromic suffix\n \
    \   suffix = \"\"\n    for i in 1:length(string)\n        if string[end-i+1:end]\
    \ == reverse(string[1:i])\n            suffix = string[end-i+1:end]\n        end\n\
    \    end\n    # append to the end of the string reverse of a string prefix that\
    \ comes before the palindromic suffix\n    return string * reverse(string[1:end-length(suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpi7n4cf27.jl:36\\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\\n   Evaluated: \"xyzzyx\" == \"xyzyx\"\\nStacktrace:\\n [1]\
    \ top-level scope at /tmp/tmpi7n4cf27.jl:36\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi7n4cf27.jl:33\\ntest set: Test Failed at /tmp/tmpi7n4cf27.jl:38\\\
    n  Expression: candidate(\"jerry\") == \"jerryrrej\"\\n   Evaluated: \"jerryyrrej\"\
    \ == \"jerryrrej\"\\nStacktrace:\\n [1] top-level scope at /tmp/tmpi7n4cf27.jl:38\\\
    n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpi7n4cf27.jl:33\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    3     2      5\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvs0g9p_4.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvs0g9p_4.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvs0g9p_4.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvs0g9p_4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvs0g9p_4.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvs0g9p_4.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvs0g9p_4.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvs0g9p_4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvs0g9p_4.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvs0g9p_4.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvs0g9p_4.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvs0g9p_4.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpvs0g9p_4.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvs0g9p_4.jl:16\n\
    \   [2] top-level scope at /tmp/tmpvs0g9p_4.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvs0g9p_4.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvs0g9p_4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbncs4i5k.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbncs4i5k.jl:16\n\
    \   [2] top-level scope at /tmp/tmpbncs4i5k.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbncs4i5k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpbncs4i5k.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbncs4i5k.jl:16\n \
    \  [2] top-level scope at /tmp/tmpbncs4i5k.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbncs4i5k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpbncs4i5k.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpbncs4i5k.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpbncs4i5k.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbncs4i5k.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpbncs4i5k.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpbncs4i5k.jl:16\n \
    \  [2] top-level scope at /tmp/tmpbncs4i5k.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbncs4i5k.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbncs4i5k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if length(string) == 0\n        return string\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:length(string)\
    \ - length(longest_palindrome_suffix) + 1])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5soaa6wm.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5soaa6wm.jl:16\n\
    \   [2] top-level scope at /tmp/tmp5soaa6wm.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5soaa6wm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp5soaa6wm.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5soaa6wm.jl:16\n \
    \  [2] top-level scope at /tmp/tmp5soaa6wm.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5soaa6wm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp5soaa6wm.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5soaa6wm.jl:16\n \
    \  [2] top-level scope at /tmp/tmp5soaa6wm.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5soaa6wm.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp5soaa6wm.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp5soaa6wm.jl:16\n\
    \   [2] top-level scope at /tmp/tmp5soaa6wm.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5soaa6wm.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5soaa6wm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest postfix\
    \ that is a palindrome\n    palindrome_suffix = longest_palindrome_suffix(string)\n\
    \    # Append the reverse of the prefix that comes before the palindrome suffix\n\
    \    return string * reverse(string[1:end-length(palindrome_suffix)])\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8xrlm1eb.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8xrlm1eb.jl:17\n\
    \   [2] top-level scope at /tmp/tmp8xrlm1eb.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xrlm1eb.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xrlm1eb.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8xrlm1eb.jl:17\n \
    \  [2] top-level scope at /tmp/tmp8xrlm1eb.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xrlm1eb.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xrlm1eb.jl:29\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp8xrlm1eb.jl:17\n   [2] top-level\
    \ scope at /tmp/tmp8xrlm1eb.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xrlm1eb.jl:25\n  \ntest set: Error During\
    \ Test at /tmp/tmp8xrlm1eb.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp8xrlm1eb.jl:17\n \
    \  [2] top-level scope at /tmp/tmp8xrlm1eb.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8xrlm1eb.jl:25\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8xrlm1eb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphnab0hz9.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphnab0hz9.jl:16\n\
    \   [2] top-level scope at /tmp/tmphnab0hz9.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphnab0hz9.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmphnab0hz9.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphnab0hz9.jl:16\n \
    \  [2] top-level scope at /tmp/tmphnab0hz9.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphnab0hz9.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmphnab0hz9.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphnab0hz9.jl:16\n \
    \  [2] top-level scope at /tmp/tmphnab0hz9.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphnab0hz9.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmphnab0hz9.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmphnab0hz9.jl:16\n\
    \   [2] top-level scope at /tmp/tmphnab0hz9.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphnab0hz9.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphnab0hz9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # Note that the string itself is a palindrome.\n\
    \    palindrome_suffix = string\n    while !is_palindrome(palindrome_suffix)\n\
    \        palindrome_suffix = palindrome_suffix[2:end]\n    end\n    # Reverse\
    \ the prefix that comes before the palindromic suffix.\n    prefix = reverse(string[1:end-length(palindrome_suffix)])\n\
    \    return string * prefix\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\"\
    ) == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\"\
    ) == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnucu4nhb.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpnucu4nhb.jl:19\n \
    \  [2] top-level scope at /tmp/tmpnucu4nhb.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnucu4nhb.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpnucu4nhb.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpnucu4nhb.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpnucu4nhb.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnucu4nhb.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpnucu4nhb.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpnucu4nhb.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpnucu4nhb.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnucu4nhb.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpnucu4nhb.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpnucu4nhb.jl:19\n   [2] top-level\
    \ scope at /tmp/tmpnucu4nhb.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnucu4nhb.jl:30\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnucu4nhb.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    # If the string is already a palindrome, return it.\n\
    \    palindrome_suffix = find_longest_palindrome_suffix(string)\n    if palindrome_suffix\
    \ == string\n        return string\n    end\n    # Find the prefix of the string\
    \ that comes before the palindromic suffix.\n    prefix = string[1:end-length(palindrome_suffix)]\n\
    \    # Reverse the prefix and append it to the end of the string.\n    return\
    \ string * reverse(prefix)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"\
    xyz\") == \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"\
    jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpow8d2h3e.jl:33\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpow8d2h3e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpow8d2h3e.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpow8d2h3e.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpow8d2h3e.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpow8d2h3e.jl:18\n \
    \  [2] top-level scope at /tmp/tmpow8d2h3e.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpow8d2h3e.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpow8d2h3e.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpow8d2h3e.jl:18\n \
    \  [2] top-level scope at /tmp/tmpow8d2h3e.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpow8d2h3e.jl:31\n  \ntest set: Error During\
    \ Test at /tmp/tmpow8d2h3e.jl:36\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpow8d2h3e.jl:18\n\
    \   [2] top-level scope at /tmp/tmpow8d2h3e.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpow8d2h3e.jl:31\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpow8d2h3e.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    if is_palindrome(string)\n\
    \        return string\n    end\n    # Find the longest palindromic suffix of\
    \ the string.\n    for i in 1:length(string)\n        if is_palindrome(string[i:end])\n\
    \            return string * reverse(string[1:i-1])\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvfnsr5io.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpvfnsr5io.jl:16\n \
    \  [2] top-level scope at /tmp/tmpvfnsr5io.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfnsr5io.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfnsr5io.jl:33\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpvfnsr5io.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpvfnsr5io.jl:33\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfnsr5io.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfnsr5io.jl:34\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpvfnsr5io.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpvfnsr5io.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfnsr5io.jl:30\n  \ntest set: Error During\
    \ Test at /tmp/tmpvfnsr5io.jl:35\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmpvfnsr5io.jl:16\n   [2] top-level\
    \ scope at /tmp/tmpvfnsr5io.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvfnsr5io.jl:30\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvfnsr5io.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    # Find the longest palindromic\
    \ suffix of the string.\n    suffix = longest_palindromic_suffix(string)\n   \
    \ # Reverse the prefix of the string that comes before the palindromic suffix.\n\
    \    prefix = reverse(string[1:end-length(suffix)])\n    # Append the reversed\
    \ prefix to the end of the string.\n    return string * prefix\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\
    \")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\"\
    )\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"\
    jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmsqevwqi.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindromic_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpmsqevwqi.jl:17\n\
    \   [2] top-level scope at /tmp/tmpmsqevwqi.jl:29\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsqevwqi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsqevwqi.jl:30\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpmsqevwqi.jl:17\n \
    \  [2] top-level scope at /tmp/tmpmsqevwqi.jl:30\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsqevwqi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsqevwqi.jl:31\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindromic_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpmsqevwqi.jl:17\n  \
    \ [2] top-level scope at /tmp/tmpmsqevwqi.jl:31\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsqevwqi.jl:27\n  \ntest set: Error During\
    \ Test at /tmp/tmpmsqevwqi.jl:32\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindromic_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpmsqevwqi.jl:17\n \
    \  [2] top-level scope at /tmp/tmpmsqevwqi.jl:32\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmsqevwqi.jl:27\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmsqevwqi.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp47phbnn_.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp47phbnn_.jl:16\n\
    \   [2] top-level scope at /tmp/tmp47phbnn_.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47phbnn_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp47phbnn_.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp47phbnn_.jl:16\n \
    \  [2] top-level scope at /tmp/tmp47phbnn_.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47phbnn_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp47phbnn_.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: longest_palindrome_suffix not defined\n  Stacktrace:\n\
    \   [1] make_palindrome(::String) at /tmp/tmp47phbnn_.jl:16\n   [2] top-level\
    \ scope at /tmp/tmp47phbnn_.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47phbnn_.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp47phbnn_.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp47phbnn_.jl:16\n \
    \  [2] top-level scope at /tmp/tmp47phbnn_.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp47phbnn_.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp47phbnn_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    palindrome_suffix =\
    \ find_longest_palindrome_suffix(string)\n    return string * palindrome_suffix\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpraobcflz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpraobcflz.jl:16\n\
    \   [2] top-level scope at /tmp/tmpraobcflz.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpraobcflz.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpraobcflz.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpraobcflz.jl:16\n \
    \  [2] top-level scope at /tmp/tmpraobcflz.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpraobcflz.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpraobcflz.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpraobcflz.jl:16\n \
    \  [2] top-level scope at /tmp/tmpraobcflz.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpraobcflz.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpraobcflz.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpraobcflz.jl:16\n\
    \   [2] top-level scope at /tmp/tmpraobcflz.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpraobcflz.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpraobcflz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_u2nqddy.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_u2nqddy.jl:16\n\
    \   [2] top-level scope at /tmp/tmp_u2nqddy.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2nqddy.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2nqddy.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_u2nqddy.jl:16\n \
    \  [2] top-level scope at /tmp/tmp_u2nqddy.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2nqddy.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2nqddy.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_u2nqddy.jl:16\n \
    \  [2] top-level scope at /tmp/tmp_u2nqddy.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2nqddy.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmp_u2nqddy.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmp_u2nqddy.jl:16\n\
    \   [2] top-level scope at /tmp/tmp_u2nqddy.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_u2nqddy.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_u2nqddy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    palindrome_suffix = find_longest_palindrome_suffix(string)\n    return string\
    \ * reverse(string[1:end-palindrome_suffix])\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t@test(candidate(\"\
    xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsiieq82w.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsiieq82w.jl:13\n\
    \   [2] top-level scope at /tmp/tmpsiieq82w.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsiieq82w.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpsiieq82w.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n \
    \ Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsiieq82w.jl:13\n  \
    \ [2] top-level scope at /tmp/tmpsiieq82w.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsiieq82w.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpsiieq82w.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsiieq82w.jl:13\n \
    \  [2] top-level scope at /tmp/tmpsiieq82w.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsiieq82w.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpsiieq82w.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsiieq82w.jl:13\n \
    \  [2] top-level scope at /tmp/tmpsiieq82w.jl:24\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsiieq82w.jl:20\n  \ntest set: Error During\
    \ Test at /tmp/tmpsiieq82w.jl:25\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpsiieq82w.jl:13\n\
    \   [2] top-level scope at /tmp/tmpsiieq82w.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsiieq82w.jl:20\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsiieq82w.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    # Find the longest postfix of supplied string that is a palindrome.\n   \
    \ # This is done by iterating over the string and checking if a substring is a\
    \ palindrome.\n    # The longest palindromic substring is found by iterating over\
    \ the string in reverse.\n    # This is done because the palindrome is likely\
    \ to be found at the end of the string.\n    # This is not guaranteed, but it\
    \ is likely.\n    # The algorithm is O(n^2) because we iterate over the string\
    \ and then over the substring.\n    # This can be improved by using a suffix tree,\
    \ but that is not implemented here.\n    # The suffix tree would be O(n) and would\
    \ be more efficient.\n    longest_palindrome_length = 0\n    longest_palindrome_index\
    \ = 0\n    for i in length(string)::Int:-1:1\n        if is_palindrome(string[i:end])\n\
    \            longest_palindrome_length = length(string[i:end])\n            longest_palindrome_index\
    \ = i\n            break\n    end\n    # Append to the end of the string reverse\
    \ of a string prefix that comes before the palindromic suffix.\n    # This is\
    \ done by taking the string prefix that comes before the palindromic suffix and\
    \ reversing it.\n    # The reversed prefix is then appended to the end of the\
    \ string.\n    # This is O(n) because we iterate over the string once.\n    return\
    \ string * reverse(string[1:longest_palindrome_index])\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") == \"xyzyx\")\n\t\
    @test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\") == \"jerryrrej\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3691hiiu.jl:12\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp3691hiiu.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp3691hiiu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * string[1:end-longest_palindrome_suffix]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmple76dh4r.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmple76dh4r.jl:16\n\
    \   [2] top-level scope at /tmp/tmple76dh4r.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmple76dh4r.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmple76dh4r.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmple76dh4r.jl:16\n \
    \  [2] top-level scope at /tmp/tmple76dh4r.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmple76dh4r.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmple76dh4r.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmple76dh4r.jl:16\n \
    \  [2] top-level scope at /tmp/tmple76dh4r.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmple76dh4r.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmple76dh4r.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmple76dh4r.jl:16\n\
    \   [2] top-level scope at /tmp/tmple76dh4r.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmple76dh4r.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmple76dh4r.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Find the shortest palindrome that begins with a supplied string.\n\
    \    Algorithm idea is simple:\n    - Find the longest postfix of supplied string\
    \ that is a palindrome.\n    - Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n\
    \    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n\
    \    'catac'\n    \"\"\"\nfunction make_palindrome(string::String)::String \n\
    \    if string == \"\"\n        return \"\"\n    end\n    longest_palindrome_suffix\
    \ = find_longest_palindrome_suffix(string)\n    return string * reverse(string[1:end-length(longest_palindrome_suffix)])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_palindrome;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"x\") == \"x\")\n\t@test(candidate(\"xyz\") ==\
    \ \"xyzyx\")\n\t@test(candidate(\"xyx\") == \"xyx\")\n\t@test(candidate(\"jerry\"\
    ) == \"jerryrrej\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkc7vsjip.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"x\") == \"x\"\n  UndefVarError: find_longest_palindrome_suffix\
    \ not defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkc7vsjip.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkc7vsjip.jl:25\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkc7vsjip.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpkc7vsjip.jl:26\n  Test threw exception\n  Expression: candidate(\"\
    xyz\") == \"xyzyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkc7vsjip.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkc7vsjip.jl:26\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkc7vsjip.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpkc7vsjip.jl:27\n  Test threw exception\n  Expression: candidate(\"\
    xyx\") == \"xyx\"\n  UndefVarError: find_longest_palindrome_suffix not defined\n\
    \  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkc7vsjip.jl:16\n \
    \  [2] top-level scope at /tmp/tmpkc7vsjip.jl:27\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkc7vsjip.jl:23\n  \ntest set: Error During\
    \ Test at /tmp/tmpkc7vsjip.jl:28\n  Test threw exception\n  Expression: candidate(\"\
    jerry\") == \"jerryrrej\"\n  UndefVarError: find_longest_palindrome_suffix not\
    \ defined\n  Stacktrace:\n   [1] make_palindrome(::String) at /tmp/tmpkc7vsjip.jl:16\n\
    \   [2] top-level scope at /tmp/tmpkc7vsjip.jl:28\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkc7vsjip.jl:23\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkc7vsjip.jl:21\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_24_largest_divisor
language: julia
results:
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx0p2zcq5.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx0p2zcq5.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx0p2zcq5.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpx0p2zcq5.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx0p2zcq5.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx0p2zcq5.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx0p2zcq5.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ota_9ge.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7ota_9ge.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7ota_9ge.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7ota_9ge.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7ota_9ge.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7ota_9ge.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ota_9ge.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (2:n-1)\n        if n % i == 0\n            return i\n      \
    \  end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi2udld16.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi2udld16.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi2udld16.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpi2udld16.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi2udld16.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi2udld16.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi2udld16.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in div(n,2):-1:1\n        if n % i == 0\n            return i\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0uibct9u.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0uibct9u.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0uibct9u.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp0uibct9u.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0uibct9u.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0uibct9u.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0uibct9u.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpotwg_8eo.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpotwg_8eo.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpotwg_8eo.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpotwg_8eo.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpotwg_8eo.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpotwg_8eo.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpotwg_8eo.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ckm80av.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8ckm80av.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ckm80av.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp8ckm80av.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8ckm80av.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ckm80av.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ckm80av.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkbalb9xd.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkbalb9xd.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkbalb9xd.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpkbalb9xd.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkbalb9xd.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkbalb9xd.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkbalb9xd.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk94cu0s3.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk94cu0s3.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk94cu0s3.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpk94cu0s3.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk94cu0s3.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk94cu0s3.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk94cu0s3.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqbv3n7rr.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqbv3n7rr.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqbv3n7rr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqbv3n7rr.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqbv3n7rr.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqbv3n7rr.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbv3n7rr.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in reverse(2:n-1)\n        if n % i == 0\n            return i\n\
    \        end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzb21z6a2.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzb21z6a2.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzb21z6a2.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpzb21z6a2.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzb21z6a2.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzb21z6a2.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzb21z6a2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmuftx6ia.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmuftx6ia.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmuftx6ia.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpmuftx6ia.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmuftx6ia.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmuftx6ia.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmuftx6ia.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1x84vmm_.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1x84vmm_.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1x84vmm_.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp1x84vmm_.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1x84vmm_.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1x84vmm_.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1x84vmm_.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6vuffz5i.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6vuffz5i.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6vuffz5i.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp6vuffz5i.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6vuffz5i.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6vuffz5i.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6vuffz5i.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv3ckob_j.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv3ckob_j.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3ckob_j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpv3ckob_j.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv3ckob_j.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3ckob_j.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3ckob_j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 1:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\t\
    @test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10) ==\
    \ 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvw8oryjk.jl:19\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvw8oryjk.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvw8oryjk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvw8oryjk.jl:20\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 1 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvw8oryjk.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvw8oryjk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvw8oryjk.jl:21\n  Expression: candidate(49) == 7\n   Evaluated:\
    \ 1 == 7\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvw8oryjk.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvw8oryjk.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvw8oryjk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpei5phzup.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpei5phzup.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpei5phzup.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpei5phzup.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpei5phzup.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpei5phzup.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpei5phzup.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkz3pfn8j.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkz3pfn8j.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkz3pfn8j.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpkz3pfn8j.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkz3pfn8j.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkz3pfn8j.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkz3pfn8j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyaztepe7.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyaztepe7.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyaztepe7.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpyaztepe7.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyaztepe7.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyaztepe7.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyaztepe7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_xhqiwyv.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_xhqiwyv.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_xhqiwyv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp_xhqiwyv.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_xhqiwyv.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_xhqiwyv.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_xhqiwyv.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 1:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\t\
    @test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10) ==\
    \ 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp62yje83u.jl:19\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp62yje83u.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp62yje83u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp62yje83u.jl:20\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 1 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp62yje83u.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp62yje83u.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp62yje83u.jl:21\n  Expression: candidate(49) == 7\n   Evaluated:\
    \ 1 == 7\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp62yje83u.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp62yje83u.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp62yje83u.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpubuzeon2.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpubuzeon2.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpubuzeon2.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpubuzeon2.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpubuzeon2.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpubuzeon2.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpubuzeon2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl_n4blsb.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl_n4blsb.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl_n4blsb.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpl_n4blsb.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl_n4blsb.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl_n4blsb.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl_n4blsb.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3g_ftbkz.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3g_ftbkz.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3g_ftbkz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp3g_ftbkz.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3g_ftbkz.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3g_ftbkz.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3g_ftbkz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpknxic7ua.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpknxic7ua.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpknxic7ua.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpknxic7ua.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpknxic7ua.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpknxic7ua.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknxic7ua.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptjopa5ny.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptjopa5ny.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptjopa5ny.jl:17\ntest set: Test\
    \ Failed at /tmp/tmptjopa5ny.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptjopa5ny.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptjopa5ny.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptjopa5ny.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl7gct_55.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl7gct_55.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl7gct_55.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpl7gct_55.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl7gct_55.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl7gct_55.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7gct_55.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjlm6lp_2.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjlm6lp_2.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjlm6lp_2.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjlm6lp_2.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjlm6lp_2.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjlm6lp_2.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjlm6lp_2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 1:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\t\
    @test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10) ==\
    \ 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiet_9dwl.jl:19\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiet_9dwl.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiet_9dwl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiet_9dwl.jl:20\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 1 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiet_9dwl.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiet_9dwl.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiet_9dwl.jl:21\n  Expression: candidate(49) == 7\n   Evaluated:\
    \ 1 == 7\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiet_9dwl.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiet_9dwl.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiet_9dwl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplahlauec.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplahlauec.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplahlauec.jl:17\ntest set: Test\
    \ Failed at /tmp/tmplahlauec.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplahlauec.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplahlauec.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplahlauec.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8vtce2_n.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8vtce2_n.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8vtce2_n.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp8vtce2_n.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8vtce2_n.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8vtce2_n.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8vtce2_n.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwji7_khu.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwji7_khu.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwji7_khu.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpwji7_khu.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwji7_khu.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwji7_khu.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwji7_khu.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 1:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\t\
    @test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10) ==\
    \ 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprfdvkrc8.jl:19\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 1 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprfdvkrc8.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprfdvkrc8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprfdvkrc8.jl:20\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 1 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprfdvkrc8.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprfdvkrc8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprfdvkrc8.jl:21\n  Expression: candidate(49) == 7\n   Evaluated:\
    \ 1 == 7\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprfdvkrc8.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprfdvkrc8.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprfdvkrc8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpakyu3fwd.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpakyu3fwd.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpakyu3fwd.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpakyu3fwd.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpakyu3fwd.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpakyu3fwd.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpakyu3fwd.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo6n48zdw.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo6n48zdw.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo6n48zdw.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpo6n48zdw.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo6n48zdw.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo6n48zdw.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6n48zdw.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptxt2iofe.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptxt2iofe.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptxt2iofe.jl:17\ntest set: Test\
    \ Failed at /tmp/tmptxt2iofe.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptxt2iofe.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptxt2iofe.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptxt2iofe.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (2:n-1)\n        if n % i == 0\n            return i\n      \
    \  end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaabppug2.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaabppug2.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaabppug2.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpaabppug2.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaabppug2.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaabppug2.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaabppug2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc6jb3fs8.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc6jb3fs8.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc6jb3fs8.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpc6jb3fs8.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc6jb3fs8.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc6jb3fs8.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6jb3fs8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i = n-1:-1:1\n        if n % i == 0\n            return i\n      \
    \  end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8bi_o7kv.jl:18\n  Expression: candidate(3)\
    \ == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8bi_o7kv.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8bi_o7kv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp8bi_o7kv.jl:19\n  Expression: candidate(7) == 1\n   Evaluated:\
    \ 7 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8bi_o7kv.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8bi_o7kv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp8bi_o7kv.jl:20\n  Expression: candidate(10) == 5\n   Evaluated:\
    \ 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8bi_o7kv.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8bi_o7kv.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp8bi_o7kv.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8bi_o7kv.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8bi_o7kv.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8bi_o7kv.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (2:n-1)\n        if n % i == 0\n            return i\n      \
    \  end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxn3hr81e.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxn3hr81e.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxn3hr81e.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpxn3hr81e.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxn3hr81e.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxn3hr81e.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxn3hr81e.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnlogduo9.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnlogduo9.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnlogduo9.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnlogduo9.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnlogduo9.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnlogduo9.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnlogduo9.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp78awhtcq.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp78awhtcq.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp78awhtcq.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp78awhtcq.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp78awhtcq.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp78awhtcq.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78awhtcq.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in reverse(1:n-1)\n        if n % i == 0\n            return i\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnrbyd9ne.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnrbyd9ne.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnrbyd9ne.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpnrbyd9ne.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnrbyd9ne.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnrbyd9ne.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnrbyd9ne.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5w8k330_.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5w8k330_.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5w8k330_.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp5w8k330_.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5w8k330_.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5w8k330_.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5w8k330_.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpns0c__vn.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpns0c__vn.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpns0c__vn.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpns0c__vn.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpns0c__vn.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpns0c__vn.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpns0c__vn.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7fepdtnc.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7fepdtnc.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7fepdtnc.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7fepdtnc.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7fepdtnc.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7fepdtnc.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7fepdtnc.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz8lwtmd6.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz8lwtmd6.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz8lwtmd6.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpz8lwtmd6.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz8lwtmd6.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz8lwtmd6.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz8lwtmd6.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfb7llawq.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfb7llawq.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfb7llawq.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpfb7llawq.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfb7llawq.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfb7llawq.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfb7llawq.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (2:n-1)\n        if n % i == 0\n            return i\n      \
    \  end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvc03giy8.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvc03giy8.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvc03giy8.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpvc03giy8.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvc03giy8.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvc03giy8.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvc03giy8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4c7o3mfq.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4c7o3mfq.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4c7o3mfq.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp4c7o3mfq.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4c7o3mfq.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4c7o3mfq.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4c7o3mfq.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpms6qjrz_.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpms6qjrz_.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpms6qjrz_.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpms6qjrz_.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpms6qjrz_.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpms6qjrz_.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpms6qjrz_.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4wj0xxxw.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4wj0xxxw.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4wj0xxxw.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp4wj0xxxw.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4wj0xxxw.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4wj0xxxw.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4wj0xxxw.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzhlnrpvn.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzhlnrpvn.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzhlnrpvn.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpzhlnrpvn.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzhlnrpvn.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzhlnrpvn.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzhlnrpvn.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiwq3o1w6.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiwq3o1w6.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiwq3o1w6.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpiwq3o1w6.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiwq3o1w6.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiwq3o1w6.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwq3o1w6.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for d in 2:n-1\n        if n % d == 0\n            return d\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp72quyyyb.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp72quyyyb.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp72quyyyb.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp72quyyyb.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp72quyyyb.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp72quyyyb.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp72quyyyb.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqxo50idb.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqxo50idb.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqxo50idb.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqxo50idb.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqxo50idb.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqxo50idb.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqxo50idb.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjtxesagj.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjtxesagj.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjtxesagj.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjtxesagj.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjtxesagj.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjtxesagj.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjtxesagj.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_tl7g1q8.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_tl7g1q8.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_tl7g1q8.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp_tl7g1q8.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_tl7g1q8.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_tl7g1q8.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_tl7g1q8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjkol46g6.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjkol46g6.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjkol46g6.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjkol46g6.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjkol46g6.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjkol46g6.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjkol46g6.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr01p6m_s.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr01p6m_s.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr01p6m_s.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpr01p6m_s.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr01p6m_s.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr01p6m_s.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr01p6m_s.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqhczdk31.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqhczdk31.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqhczdk31.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpqhczdk31.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqhczdk31.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqhczdk31.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqhczdk31.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (2:n-1)\n        if n % i == 0\n            return i\n      \
    \  end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp258tyd1w.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp258tyd1w.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp258tyd1w.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp258tyd1w.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp258tyd1w.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp258tyd1w.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp258tyd1w.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps5ytqc8y.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps5ytqc8y.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5ytqc8y.jl:17\ntest set: Test\
    \ Failed at /tmp/tmps5ytqc8y.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps5ytqc8y.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5ytqc8y.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps5ytqc8y.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjq3loz77.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjq3loz77.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjq3loz77.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjq3loz77.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjq3loz77.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjq3loz77.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjq3loz77.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:2\n        if n % i == 0\n            return i\n   \
    \     end\n    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_divisor;\n\t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\
    \t@test(candidate(10) == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49)\
    \ == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpam5d4jvy.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpam5d4jvy.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpam5d4jvy.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpam5d4jvy.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpam5d4jvy.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpam5d4jvy.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpam5d4jvy.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i = n-1:-1:1\n        if n % i == 0\n            return i\n      \
    \  end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6e8be336.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6e8be336.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6e8be336.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp6e8be336.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6e8be336.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6e8be336.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6e8be336.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps5zpfbyj.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps5zpfbyj.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5zpfbyj.jl:17\ntest set: Test\
    \ Failed at /tmp/tmps5zpfbyj.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps5zpfbyj.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5zpfbyj.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps5zpfbyj.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for d in 2:n-1\n        if n % d == 0\n            return d\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8_an_99e.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8_an_99e.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8_an_99e.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp8_an_99e.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8_an_99e.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8_an_99e.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_an_99e.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsgeap19z.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsgeap19z.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsgeap19z.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpsgeap19z.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsgeap19z.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsgeap19z.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsgeap19z.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in n-1:-1:1\n        if n % i == 0\n            return i\n     \
    \   end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return n\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc9g816sf.jl:18\n  Expression: candidate(3)\
    \ == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc9g816sf.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc9g816sf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpc9g816sf.jl:19\n  Expression: candidate(7) == 1\n   Evaluated:\
    \ 7 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc9g816sf.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc9g816sf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpc9g816sf.jl:20\n  Expression: candidate(10) == 5\n   Evaluated:\
    \ 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc9g816sf.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc9g816sf.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpc9g816sf.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc9g816sf.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc9g816sf.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9g816sf.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpapwz7ofh.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpapwz7ofh.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpapwz7ofh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpapwz7ofh.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpapwz7ofh.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpapwz7ofh.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpapwz7ofh.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in 2:n-1\n        if n % i == 0\n            return i\n        end\n\
    \    end\n    return 1\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9hjszw7v.jl:20\n  Expression: candidate(10)\
    \ == 5\n   Evaluated: 2 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9hjszw7v.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hjszw7v.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp9hjszw7v.jl:21\n  Expression: candidate(100) == 50\n   Evaluated:\
    \ 2 == 50\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9hjszw7v.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hjszw7v.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9hjszw7v.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
    \ \n    for i in (n-1):-1:1\n        if n % i == 0\n            return i\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\
    \t@test(candidate(3) == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10)\
    \ == 5)\n\t@test(candidate(100) == 50)\n\t@test(candidate(49) == 7)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK

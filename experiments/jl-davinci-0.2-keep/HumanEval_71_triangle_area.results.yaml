name: HumanEval_71_triangle_area
language: julia
results:
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp51dxbd23.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp51dxbd23.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp51dxbd23.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp51dxbd23.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp51dxbd23.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp51dxbd23.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp51dxbd23.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp51dxbd23.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp51dxbd23.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp51dxbd23.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp51dxbd23.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp51dxbd23.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp51dxbd23.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0oe7ba9g.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0oe7ba9g.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0oe7ba9g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0oe7ba9g.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0oe7ba9g.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0oe7ba9g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0oe7ba9g.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0oe7ba9g.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0oe7ba9g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0oe7ba9g.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0oe7ba9g.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0oe7ba9g.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0oe7ba9g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwvl2g6bz.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwvl2g6bz.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvl2g6bz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwvl2g6bz.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwvl2g6bz.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvl2g6bz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwvl2g6bz.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwvl2g6bz.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvl2g6bz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwvl2g6bz.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwvl2g6bz.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvl2g6bz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwvl2g6bz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl5prns2n.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpl5prns2n.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl5prns2n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl5prns2n.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl5prns2n.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl5prns2n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl5prns2n.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl5prns2n.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl5prns2n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl5prns2n.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl5prns2n.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl5prns2n.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl5prns2n.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9hlcxpt0.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9hlcxpt0.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hlcxpt0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9hlcxpt0.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9hlcxpt0.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hlcxpt0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9hlcxpt0.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9hlcxpt0.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hlcxpt0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9hlcxpt0.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9hlcxpt0.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hlcxpt0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9hlcxpt0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpveq7y4lu.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpveq7y4lu.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpveq7y4lu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpveq7y4lu.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpveq7y4lu.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpveq7y4lu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpveq7y4lu.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpveq7y4lu.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpveq7y4lu.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpveq7y4lu.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpveq7y4lu.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpveq7y4lu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpveq7y4lu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzew1972_.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpzew1972_.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpzew1972_.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzew1972_.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpzew1972_.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpzew1972_.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpzew1972_.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzew1972_.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpzew1972_.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeavv2_xa.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpeavv2_xa.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeavv2_xa.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeavv2_xa.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpeavv2_xa.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeavv2_xa.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeavv2_xa.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpeavv2_xa.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeavv2_xa.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpeavv2_xa.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpeavv2_xa.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeavv2_xa.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeavv2_xa.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c)\
    \ / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyu3oypjp.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyu3oypjp.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyu3oypjp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyu3oypjp.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyu3oypjp.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyu3oypjp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyu3oypjp.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyu3oypjp.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyu3oypjp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyu3oypjp.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyu3oypjp.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyu3oypjp.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyu3oypjp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        s = (a + b + c)\
    \ / 2\n        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5ytbhs7c.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5ytbhs7c.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ytbhs7c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5ytbhs7c.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5ytbhs7c.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ytbhs7c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5ytbhs7c.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5ytbhs7c.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ytbhs7c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5ytbhs7c.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5ytbhs7c.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ytbhs7c.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ytbhs7c.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwcksibam.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwcksibam.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwcksibam.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwcksibam.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwcksibam.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwcksibam.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwcksibam.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwcksibam.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwcksibam.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwcksibam.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwcksibam.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwcksibam.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwcksibam.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyqwj972f.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyqwj972f.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyqwj972f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyqwj972f.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyqwj972f.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyqwj972f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyqwj972f.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyqwj972f.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyqwj972f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyqwj972f.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyqwj972f.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyqwj972f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyqwj972f.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp71wypfe9.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmp71wypfe9.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp71wypfe9.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp71wypfe9.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp71wypfe9.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmp71wypfe9.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmp71wypfe9.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp71wypfe9.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp71wypfe9.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpraxjqg4t.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpraxjqg4t.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpraxjqg4t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpraxjqg4t.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpraxjqg4t.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpraxjqg4t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpraxjqg4t.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpraxjqg4t.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpraxjqg4t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpraxjqg4t.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpraxjqg4t.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpraxjqg4t.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpraxjqg4t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv0dgvgg8.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpv0dgvgg8.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0dgvgg8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv0dgvgg8.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv0dgvgg8.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0dgvgg8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv0dgvgg8.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv0dgvgg8.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0dgvgg8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpv0dgvgg8.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv0dgvgg8.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0dgvgg8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv0dgvgg8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa2s7sj83.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpa2s7sj83.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa2s7sj83.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa2s7sj83.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpa2s7sj83.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa2s7sj83.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa2s7sj83.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpa2s7sj83.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa2s7sj83.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa2s7sj83.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpa2s7sj83.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa2s7sj83.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa2s7sj83.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprselofh_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprselofh_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprselofh_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprselofh_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprselofh_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprselofh_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprselofh_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprselofh_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprselofh_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprselofh_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprselofh_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprselofh_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprselofh_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp13rcmhi6.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp13rcmhi6.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp13rcmhi6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp13rcmhi6.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp13rcmhi6.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp13rcmhi6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp13rcmhi6.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp13rcmhi6.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp13rcmhi6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp13rcmhi6.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp13rcmhi6.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp13rcmhi6.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp13rcmhi6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph15bll9w.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmph15bll9w.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph15bll9w.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph15bll9w.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph15bll9w.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph15bll9w.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph15bll9w.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph15bll9w.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph15bll9w.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph15bll9w.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph15bll9w.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph15bll9w.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph15bll9w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsw03wan9.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpsw03wan9.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpsw03wan9.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsw03wan9.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpsw03wan9.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpsw03wan9.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpsw03wan9.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsw03wan9.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpsw03wan9.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp00j_0p5e.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp00j_0p5e.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00j_0p5e.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp00j_0p5e.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp00j_0p5e.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00j_0p5e.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp00j_0p5e.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp00j_0p5e.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00j_0p5e.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp00j_0p5e.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp00j_0p5e.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00j_0p5e.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp00j_0p5e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxg1i0eoj.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxg1i0eoj.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxg1i0eoj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxg1i0eoj.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxg1i0eoj.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxg1i0eoj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxg1i0eoj.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxg1i0eoj.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxg1i0eoj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxg1i0eoj.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxg1i0eoj.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxg1i0eoj.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxg1i0eoj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz2585tb2.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpz2585tb2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz2585tb2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpz2585tb2.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz2585tb2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz2585tb2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpz2585tb2.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz2585tb2.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz2585tb2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpz2585tb2.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz2585tb2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz2585tb2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz2585tb2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprw60720_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprw60720_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprw60720_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprw60720_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprw60720_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprw60720_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprw60720_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprw60720_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprw60720_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmprw60720_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprw60720_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprw60720_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprw60720_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        s = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(s, 2)\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdi16zd00.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpdi16zd00.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpdi16zd00.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdi16zd00.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpdi16zd00.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpdi16zd00.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpdi16zd00.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdi16zd00.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpdi16zd00.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfys7_wi2.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpfys7_wi2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfys7_wi2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfys7_wi2.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfys7_wi2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfys7_wi2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfys7_wi2.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfys7_wi2.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfys7_wi2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpfys7_wi2.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfys7_wi2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfys7_wi2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfys7_wi2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6mztnpzo.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6mztnpzo.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6mztnpzo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6mztnpzo.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6mztnpzo.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6mztnpzo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6mztnpzo.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6mztnpzo.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6mztnpzo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6mztnpzo.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6mztnpzo.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6mztnpzo.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6mztnpzo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgew4mh74.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgew4mh74.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgew4mh74.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgew4mh74.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgew4mh74.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgew4mh74.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgew4mh74.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgew4mh74.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgew4mh74.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgew4mh74.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgew4mh74.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgew4mh74.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgew4mh74.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcyy6v500.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpcyy6v500.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcyy6v500.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcyy6v500.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpcyy6v500.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcyy6v500.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcyy6v500.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpcyy6v500.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcyy6v500.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcyy6v500.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpcyy6v500.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcyy6v500.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcyy6v500.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8px2dy1u.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp8px2dy1u.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8px2dy1u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8px2dy1u.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8px2dy1u.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8px2dy1u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8px2dy1u.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8px2dy1u.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8px2dy1u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8px2dy1u.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8px2dy1u.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8px2dy1u.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8px2dy1u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwsq5ifd2.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwsq5ifd2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwsq5ifd2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwsq5ifd2.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwsq5ifd2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwsq5ifd2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwsq5ifd2.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwsq5ifd2.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwsq5ifd2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwsq5ifd2.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwsq5ifd2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwsq5ifd2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwsq5ifd2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        s = (a+b+c)/2\n        return sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4alc4eza.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp4alc4eza.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4alc4eza.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4alc4eza.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4alc4eza.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4alc4eza.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4alc4eza.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4alc4eza.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4alc4eza.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4alc4eza.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4alc4eza.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4alc4eza.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4alc4eza.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwxs7ik6l.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwxs7ik6l.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwxs7ik6l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwxs7ik6l.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwxs7ik6l.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwxs7ik6l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwxs7ik6l.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwxs7ik6l.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwxs7ik6l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwxs7ik6l.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwxs7ik6l.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwxs7ik6l.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwxs7ik6l.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjhcdzlpx.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjhcdzlpx.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjhcdzlpx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjhcdzlpx.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjhcdzlpx.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjhcdzlpx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjhcdzlpx.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjhcdzlpx.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjhcdzlpx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjhcdzlpx.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjhcdzlpx.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjhcdzlpx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjhcdzlpx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8_pannbz.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp8_pannbz.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8_pannbz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8_pannbz.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8_pannbz.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8_pannbz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8_pannbz.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8_pannbz.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8_pannbz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8_pannbz.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8_pannbz.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8_pannbz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_pannbz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8o613neq.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp8o613neq.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8o613neq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8o613neq.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8o613neq.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8o613neq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8o613neq.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8o613neq.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8o613neq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8o613neq.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8o613neq.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8o613neq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8o613neq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp66arjlsk.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp66arjlsk.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp66arjlsk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp66arjlsk.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp66arjlsk.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp66arjlsk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp66arjlsk.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp66arjlsk.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp66arjlsk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp66arjlsk.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp66arjlsk.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp66arjlsk.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp66arjlsk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp2gkzj8p.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpp2gkzj8p.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp2gkzj8p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp2gkzj8p.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp2gkzj8p.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp2gkzj8p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp2gkzj8p.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp2gkzj8p.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp2gkzj8p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp2gkzj8p.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp2gkzj8p.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp2gkzj8p.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp2gkzj8p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2fpnm7is.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2fpnm7is.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2fpnm7is.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2fpnm7is.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2fpnm7is.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2fpnm7is.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2fpnm7is.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2fpnm7is.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2fpnm7is.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2fpnm7is.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2fpnm7is.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2fpnm7is.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2fpnm7is.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4a5cwpkf.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp4a5cwpkf.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4a5cwpkf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4a5cwpkf.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4a5cwpkf.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4a5cwpkf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4a5cwpkf.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4a5cwpkf.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4a5cwpkf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4a5cwpkf.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4a5cwpkf.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4a5cwpkf.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4a5cwpkf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdwepg51g.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdwepg51g.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdwepg51g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdwepg51g.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdwepg51g.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdwepg51g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdwepg51g.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdwepg51g.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdwepg51g.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdwepg51g.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdwepg51g.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdwepg51g.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdwepg51g.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq_qhpdjx.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpq_qhpdjx.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq_qhpdjx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq_qhpdjx.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq_qhpdjx.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq_qhpdjx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq_qhpdjx.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq_qhpdjx.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq_qhpdjx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq_qhpdjx.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq_qhpdjx.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq_qhpdjx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq_qhpdjx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw77ru8wm.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpw77ru8wm.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw77ru8wm.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpw77ru8wm.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpw77ru8wm.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw77ru8wm.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpw77ru8wm.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpw77ru8wm.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw77ru8wm.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpw77ru8wm.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpw77ru8wm.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw77ru8wm.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw77ru8wm.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp1cibuww.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpp1cibuww.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp1cibuww.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp1cibuww.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp1cibuww.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp1cibuww.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp1cibuww.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp1cibuww.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp1cibuww.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp1cibuww.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp1cibuww.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp1cibuww.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp1cibuww.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvt025ic_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvt025ic_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvt025ic_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvt025ic_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvt025ic_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvt025ic_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvt025ic_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvt025ic_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvt025ic_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvt025ic_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvt025ic_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvt025ic_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvt025ic_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyar_0m3f.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyar_0m3f.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyar_0m3f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyar_0m3f.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyar_0m3f.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyar_0m3f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyar_0m3f.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyar_0m3f.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyar_0m3f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyar_0m3f.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyar_0m3f.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyar_0m3f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyar_0m3f.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s(a, b, c)\
    \ * (s(a, b, c) - a) * (s(a, b, c) - b) * (s(a, b, c) - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpocn29a75.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpocn29a75.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpocn29a75.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpocn29a75.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpocn29a75.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpocn29a75.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpocn29a75.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpocn29a75.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpocn29a75.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpocn29a75.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpocn29a75.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpocn29a75.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpocn29a75.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpocn29a75.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpocn29a75.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpocn29a75.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpocn29a75.jl:30\n  Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpocn29a75.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphggdlelf.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmphggdlelf.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphggdlelf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphggdlelf.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphggdlelf.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphggdlelf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphggdlelf.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphggdlelf.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphggdlelf.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphggdlelf.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphggdlelf.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphggdlelf.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphggdlelf.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplkwpyiyn.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmplkwpyiyn.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplkwpyiyn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplkwpyiyn.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplkwpyiyn.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplkwpyiyn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplkwpyiyn.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplkwpyiyn.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplkwpyiyn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplkwpyiyn.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplkwpyiyn.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplkwpyiyn.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplkwpyiyn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdmwd34j5.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdmwd34j5.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdmwd34j5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdmwd34j5.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdmwd34j5.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdmwd34j5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdmwd34j5.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdmwd34j5.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdmwd34j5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdmwd34j5.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdmwd34j5.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdmwd34j5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdmwd34j5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm2u7r5gy.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpm2u7r5gy.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2u7r5gy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm2u7r5gy.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm2u7r5gy.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2u7r5gy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm2u7r5gy.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm2u7r5gy.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2u7r5gy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm2u7r5gy.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm2u7r5gy.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2u7r5gy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm2u7r5gy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptzbm4c9i.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmptzbm4c9i.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmptzbm4c9i.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptzbm4c9i.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmptzbm4c9i.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmptzbm4c9i.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmptzbm4c9i.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptzbm4c9i.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmptzbm4c9i.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpawsg3sf_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpawsg3sf_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawsg3sf_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpawsg3sf_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpawsg3sf_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawsg3sf_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpawsg3sf_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpawsg3sf_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawsg3sf_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpawsg3sf_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpawsg3sf_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawsg3sf_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpawsg3sf_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy6udeaoc.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpy6udeaoc.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy6udeaoc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy6udeaoc.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy6udeaoc.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy6udeaoc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy6udeaoc.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy6udeaoc.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy6udeaoc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy6udeaoc.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy6udeaoc.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy6udeaoc.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy6udeaoc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6afl08ds.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6afl08ds.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6afl08ds.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6afl08ds.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6afl08ds.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6afl08ds.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6afl08ds.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6afl08ds.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6afl08ds.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6afl08ds.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6afl08ds.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6afl08ds.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6afl08ds.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv2glj29t.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpv2glj29t.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpv2glj29t.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpv2glj29t.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpv2glj29t.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpv2glj29t.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpv2glj29t.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpv2glj29t.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpv2glj29t.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpch11nqta.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpch11nqta.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpch11nqta.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpch11nqta.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpch11nqta.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpch11nqta.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpch11nqta.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpch11nqta.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpch11nqta.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpch11nqta.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpch11nqta.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpch11nqta.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpch11nqta.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptcyhxnpg.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptcyhxnpg.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcyhxnpg.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptcyhxnpg.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptcyhxnpg.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcyhxnpg.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptcyhxnpg.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptcyhxnpg.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcyhxnpg.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptcyhxnpg.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptcyhxnpg.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcyhxnpg.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptcyhxnpg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn_vabl6h.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn_vabl6h.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn_vabl6h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpn_vabl6h.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpn_vabl6h.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn_vabl6h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpn_vabl6h.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpn_vabl6h.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn_vabl6h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpn_vabl6h.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpn_vabl6h.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn_vabl6h.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn_vabl6h.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz17dpf1x.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpz17dpf1x.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpz17dpf1x.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz17dpf1x.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpz17dpf1x.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpz17dpf1x.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpz17dpf1x.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz17dpf1x.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpz17dpf1x.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc1l5tmq7.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpc1l5tmq7.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc1l5tmq7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc1l5tmq7.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc1l5tmq7.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc1l5tmq7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc1l5tmq7.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc1l5tmq7.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc1l5tmq7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc1l5tmq7.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc1l5tmq7.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc1l5tmq7.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc1l5tmq7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrc7057d.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptrc7057d.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrc7057d.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptrc7057d.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptrc7057d.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrc7057d.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptrc7057d.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptrc7057d.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrc7057d.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptrc7057d.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptrc7057d.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrc7057d.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrc7057d.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdobth89f.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdobth89f.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdobth89f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdobth89f.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdobth89f.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdobth89f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdobth89f.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdobth89f.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdobth89f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdobth89f.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdobth89f.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdobth89f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdobth89f.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqifp4d5m.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqifp4d5m.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqifp4d5m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqifp4d5m.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqifp4d5m.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqifp4d5m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqifp4d5m.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqifp4d5m.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqifp4d5m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqifp4d5m.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqifp4d5m.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqifp4d5m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqifp4d5m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe1yk8sc3.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpe1yk8sc3.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1yk8sc3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe1yk8sc3.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpe1yk8sc3.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1yk8sc3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe1yk8sc3.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpe1yk8sc3.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1yk8sc3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpe1yk8sc3.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpe1yk8sc3.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1yk8sc3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1yk8sc3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9v9pzrvz.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9v9pzrvz.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9v9pzrvz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9v9pzrvz.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9v9pzrvz.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9v9pzrvz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9v9pzrvz.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9v9pzrvz.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9v9pzrvz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9v9pzrvz.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9v9pzrvz.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9v9pzrvz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9v9pzrvz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b) > c && (a + c) > b && (b + c) > a\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj5aoab8w.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpj5aoab8w.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpj5aoab8w.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpj5aoab8w.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpj5aoab8w.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpj5aoab8w.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpj5aoab8w.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpj5aoab8w.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpj5aoab8w.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzoctvm8m.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzoctvm8m.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoctvm8m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzoctvm8m.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzoctvm8m.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoctvm8m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzoctvm8m.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzoctvm8m.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoctvm8m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzoctvm8m.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzoctvm8m.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoctvm8m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzoctvm8m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpijmhhbno.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpijmhhbno.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijmhhbno.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpijmhhbno.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpijmhhbno.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijmhhbno.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpijmhhbno.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpijmhhbno.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijmhhbno.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpijmhhbno.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpijmhhbno.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijmhhbno.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpijmhhbno.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6zd99w4p.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6zd99w4p.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6zd99w4p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6zd99w4p.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6zd99w4p.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6zd99w4p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6zd99w4p.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6zd99w4p.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6zd99w4p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6zd99w4p.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6zd99w4p.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6zd99w4p.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6zd99w4p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ej1to4u.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0ej1to4u.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ej1to4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0ej1to4u.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0ej1to4u.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ej1to4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0ej1to4u.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0ej1to4u.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ej1to4u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0ej1to4u.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0ej1to4u.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ej1to4u.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ej1to4u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmmqrv34u.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmmqrv34u.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmqrv34u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmmqrv34u.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmmqrv34u.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmqrv34u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmmqrv34u.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmmqrv34u.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmqrv34u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmmqrv34u.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmmqrv34u.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmqrv34u.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmqrv34u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9yw3y83j.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9yw3y83j.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9yw3y83j.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9yw3y83j.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9yw3y83j.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9yw3y83j.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9yw3y83j.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9yw3y83j.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9yw3y83j.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9yw3y83j.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9yw3y83j.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9yw3y83j.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9yw3y83j.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph1_fr2b4.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmph1_fr2b4.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph1_fr2b4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph1_fr2b4.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph1_fr2b4.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph1_fr2b4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph1_fr2b4.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph1_fr2b4.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph1_fr2b4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph1_fr2b4.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph1_fr2b4.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph1_fr2b4.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph1_fr2b4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplo6e_ona.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmplo6e_ona.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplo6e_ona.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplo6e_ona.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplo6e_ona.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplo6e_ona.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplo6e_ona.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplo6e_ona.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplo6e_ona.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplo6e_ona.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplo6e_ona.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplo6e_ona.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplo6e_ona.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps3proqc0.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmps3proqc0.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps3proqc0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps3proqc0.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps3proqc0.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps3proqc0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps3proqc0.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps3proqc0.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps3proqc0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps3proqc0.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps3proqc0.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps3proqc0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps3proqc0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8j1hd6kb.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp8j1hd6kb.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8j1hd6kb.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8j1hd6kb.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8j1hd6kb.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8j1hd6kb.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8j1hd6kb.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8j1hd6kb.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8j1hd6kb.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8j1hd6kb.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8j1hd6kb.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8j1hd6kb.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8j1hd6kb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwe98_hje.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwe98_hje.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwe98_hje.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwe98_hje.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwe98_hje.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwe98_hje.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwe98_hje.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwe98_hje.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwe98_hje.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwe98_hje.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwe98_hje.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwe98_hje.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwe98_hje.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj_d4aw5q.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpj_d4aw5q.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj_d4aw5q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpj_d4aw5q.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj_d4aw5q.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj_d4aw5q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpj_d4aw5q.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj_d4aw5q.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj_d4aw5q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpj_d4aw5q.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj_d4aw5q.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj_d4aw5q.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_d4aw5q.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf1tfa6vj.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpf1tfa6vj.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf1tfa6vj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf1tfa6vj.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpf1tfa6vj.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf1tfa6vj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf1tfa6vj.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpf1tfa6vj.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf1tfa6vj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf1tfa6vj.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpf1tfa6vj.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf1tfa6vj.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf1tfa6vj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyvgd205l.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyvgd205l.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyvgd205l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyvgd205l.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyvgd205l.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyvgd205l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyvgd205l.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyvgd205l.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyvgd205l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyvgd205l.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyvgd205l.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyvgd205l.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyvgd205l.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg3rxvh2c.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpg3rxvh2c.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg3rxvh2c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg3rxvh2c.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg3rxvh2c.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg3rxvh2c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg3rxvh2c.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg3rxvh2c.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg3rxvh2c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg3rxvh2c.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg3rxvh2c.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg3rxvh2c.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg3rxvh2c.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0iacmglv.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0iacmglv.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0iacmglv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0iacmglv.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0iacmglv.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0iacmglv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0iacmglv.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0iacmglv.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0iacmglv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0iacmglv.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0iacmglv.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0iacmglv.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0iacmglv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqia439kn.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqia439kn.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqia439kn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqia439kn.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqia439kn.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqia439kn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqia439kn.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqia439kn.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqia439kn.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqia439kn.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqia439kn.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqia439kn.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqia439kn.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjc4wxyr3.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjc4wxyr3.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc4wxyr3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjc4wxyr3.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjc4wxyr3.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc4wxyr3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjc4wxyr3.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjc4wxyr3.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc4wxyr3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjc4wxyr3.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjc4wxyr3.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc4wxyr3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjc4wxyr3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpndw_7cfs.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpndw_7cfs.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpndw_7cfs.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpndw_7cfs.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpndw_7cfs.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpndw_7cfs.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpndw_7cfs.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpndw_7cfs.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpndw_7cfs.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpndw_7cfs.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpndw_7cfs.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpndw_7cfs.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpndw_7cfs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3dmpgqm_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3dmpgqm_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dmpgqm_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3dmpgqm_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3dmpgqm_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dmpgqm_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3dmpgqm_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3dmpgqm_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dmpgqm_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3dmpgqm_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3dmpgqm_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dmpgqm_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3dmpgqm_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8m5bkeru.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp8m5bkeru.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8m5bkeru.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8m5bkeru.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8m5bkeru.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8m5bkeru.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8m5bkeru.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8m5bkeru.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8m5bkeru.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp8m5bkeru.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8m5bkeru.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8m5bkeru.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8m5bkeru.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps8wgjfmq.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmps8wgjfmq.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps8wgjfmq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps8wgjfmq.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps8wgjfmq.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps8wgjfmq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps8wgjfmq.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps8wgjfmq.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps8wgjfmq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmps8wgjfmq.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps8wgjfmq.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps8wgjfmq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps8wgjfmq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkrslqqbz.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkrslqqbz.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkrslqqbz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkrslqqbz.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkrslqqbz.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkrslqqbz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkrslqqbz.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkrslqqbz.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkrslqqbz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkrslqqbz.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkrslqqbz.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkrslqqbz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkrslqqbz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp3f9vtgd.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpp3f9vtgd.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3f9vtgd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp3f9vtgd.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp3f9vtgd.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3f9vtgd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp3f9vtgd.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp3f9vtgd.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3f9vtgd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpp3f9vtgd.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp3f9vtgd.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3f9vtgd.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp3f9vtgd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) & (a + c > b) & (b + c > a)\n        p = (a + b + c) /\
    \ 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz91ip0vo.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpz91ip0vo.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz91ip0vo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpz91ip0vo.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz91ip0vo.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz91ip0vo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpz91ip0vo.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz91ip0vo.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz91ip0vo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpz91ip0vo.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz91ip0vo.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz91ip0vo.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz91ip0vo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpefc3ev3s.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpefc3ev3s.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpefc3ev3s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpefc3ev3s.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpefc3ev3s.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpefc3ev3s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpefc3ev3s.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpefc3ev3s.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpefc3ev3s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpefc3ev3s.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpefc3ev3s.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpefc3ev3s.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpefc3ev3s.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkt4yefrr.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkt4yefrr.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkt4yefrr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkt4yefrr.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkt4yefrr.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkt4yefrr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkt4yefrr.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkt4yefrr.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkt4yefrr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkt4yefrr.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkt4yefrr.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkt4yefrr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkt4yefrr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b) > c && (a + c) > b && (b + c) > a\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq7vqixxe.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpq7vqixxe.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq7vqixxe.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq7vqixxe.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq7vqixxe.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq7vqixxe.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq7vqixxe.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq7vqixxe.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq7vqixxe.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq7vqixxe.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq7vqixxe.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq7vqixxe.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq7vqixxe.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe9oa99i9.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpe9oa99i9.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpe9oa99i9.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe9oa99i9.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpe9oa99i9.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpe9oa99i9.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpe9oa99i9.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe9oa99i9.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpe9oa99i9.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppgsa30ui.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppgsa30ui.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppgsa30ui.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppgsa30ui.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppgsa30ui.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppgsa30ui.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppgsa30ui.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppgsa30ui.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppgsa30ui.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppgsa30ui.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppgsa30ui.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppgsa30ui.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppgsa30ui.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsqxnw8re.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpsqxnw8re.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqxnw8re.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsqxnw8re.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsqxnw8re.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqxnw8re.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsqxnw8re.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsqxnw8re.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqxnw8re.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsqxnw8re.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsqxnw8re.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqxnw8re.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqxnw8re.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpocp1yyyx.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpocp1yyyx.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpocp1yyyx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpocp1yyyx.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpocp1yyyx.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpocp1yyyx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpocp1yyyx.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpocp1yyyx.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpocp1yyyx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpocp1yyyx.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpocp1yyyx.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpocp1yyyx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpocp1yyyx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp69avr5xk.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp69avr5xk.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp69avr5xk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp69avr5xk.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp69avr5xk.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp69avr5xk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp69avr5xk.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp69avr5xk.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp69avr5xk.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp69avr5xk.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp69avr5xk.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp69avr5xk.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp69avr5xk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkousqym2.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkousqym2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkousqym2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkousqym2.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkousqym2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkousqym2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkousqym2.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkousqym2.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkousqym2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpkousqym2.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkousqym2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkousqym2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkousqym2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0fmf_fa6.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0fmf_fa6.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmf_fa6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0fmf_fa6.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0fmf_fa6.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmf_fa6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0fmf_fa6.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0fmf_fa6.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmf_fa6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0fmf_fa6.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0fmf_fa6.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmf_fa6.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0fmf_fa6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5mhast_9.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5mhast_9.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5mhast_9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5mhast_9.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5mhast_9.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5mhast_9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5mhast_9.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5mhast_9.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5mhast_9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5mhast_9.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5mhast_9.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5mhast_9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mhast_9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnbn3701t.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpnbn3701t.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnbn3701t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnbn3701t.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnbn3701t.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnbn3701t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnbn3701t.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnbn3701t.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnbn3701t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnbn3701t.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnbn3701t.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnbn3701t.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnbn3701t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiblcj3p8.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpiblcj3p8.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiblcj3p8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiblcj3p8.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpiblcj3p8.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiblcj3p8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiblcj3p8.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpiblcj3p8.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiblcj3p8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpiblcj3p8.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpiblcj3p8.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiblcj3p8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiblcj3p8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdxiwykwc.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdxiwykwc.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdxiwykwc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdxiwykwc.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdxiwykwc.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdxiwykwc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdxiwykwc.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdxiwykwc.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdxiwykwc.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdxiwykwc.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdxiwykwc.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdxiwykwc.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdxiwykwc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx4rhsf05.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpx4rhsf05.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx4rhsf05.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpx4rhsf05.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpx4rhsf05.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx4rhsf05.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpx4rhsf05.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpx4rhsf05.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx4rhsf05.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpx4rhsf05.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpx4rhsf05.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx4rhsf05.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx4rhsf05.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5gnb8r95.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5gnb8r95.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5gnb8r95.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5gnb8r95.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5gnb8r95.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5gnb8r95.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5gnb8r95.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5gnb8r95.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5gnb8r95.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5gnb8r95.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5gnb8r95.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5gnb8r95.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5gnb8r95.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_knw97mx.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_knw97mx.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_knw97mx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_knw97mx.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_knw97mx.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_knw97mx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_knw97mx.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_knw97mx.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_knw97mx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_knw97mx.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_knw97mx.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_knw97mx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_knw97mx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpawme9izt.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpawme9izt.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawme9izt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpawme9izt.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpawme9izt.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawme9izt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpawme9izt.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpawme9izt.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawme9izt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpawme9izt.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpawme9izt.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpawme9izt.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpawme9izt.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjs586y65.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjs586y65.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjs586y65.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjs586y65.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjs586y65.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjs586y65.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjs586y65.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjs586y65.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjs586y65.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjs586y65.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjs586y65.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjs586y65.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjs586y65.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf0ijdvh3.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpf0ijdvh3.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf0ijdvh3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf0ijdvh3.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpf0ijdvh3.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf0ijdvh3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf0ijdvh3.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpf0ijdvh3.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf0ijdvh3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf0ijdvh3.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpf0ijdvh3.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf0ijdvh3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf0ijdvh3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6wqtt6f_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6wqtt6f_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wqtt6f_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6wqtt6f_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6wqtt6f_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wqtt6f_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6wqtt6f_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6wqtt6f_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wqtt6f_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp6wqtt6f_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6wqtt6f_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wqtt6f_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6wqtt6f_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmweooxz3.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmweooxz3.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmweooxz3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmweooxz3.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmweooxz3.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmweooxz3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmweooxz3.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmweooxz3.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmweooxz3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmweooxz3.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmweooxz3.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmweooxz3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmweooxz3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5u3u__ri.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5u3u__ri.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5u3u__ri.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5u3u__ri.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5u3u__ri.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5u3u__ri.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5u3u__ri.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5u3u__ri.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5u3u__ri.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5u3u__ri.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5u3u__ri.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5u3u__ri.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5u3u__ri.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7zixsll8.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp7zixsll8.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zixsll8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp7zixsll8.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7zixsll8.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zixsll8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp7zixsll8.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7zixsll8.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zixsll8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp7zixsll8.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7zixsll8.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zixsll8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7zixsll8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2_nr9kul.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp2_nr9kul.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp2_nr9kul.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_nr9kul.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2_nr9kul.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp2_nr9kul.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp2_nr9kul.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_nr9kul.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2_nr9kul.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp2_nr9kul.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp2_nr9kul.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_nr9kul.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2_nr9kul.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp2_nr9kul.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp2_nr9kul.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_nr9kul.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp2_nr9kul.jl:30\n  Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_nr9kul.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr9l6hqtx.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpr9l6hqtx.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpr9l6hqtx.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpr9l6hqtx.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpr9l6hqtx.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpr9l6hqtx.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpr9l6hqtx.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpr9l6hqtx.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpr9l6hqtx.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3co2m3v4.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3co2m3v4.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3co2m3v4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3co2m3v4.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3co2m3v4.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3co2m3v4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3co2m3v4.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3co2m3v4.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3co2m3v4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3co2m3v4.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3co2m3v4.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3co2m3v4.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3co2m3v4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpckzv0nc_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpckzv0nc_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpckzv0nc_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpckzv0nc_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpckzv0nc_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpckzv0nc_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpckzv0nc_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpckzv0nc_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpckzv0nc_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpckzv0nc_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpckzv0nc_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpckzv0nc_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpckzv0nc_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjajfl_09.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjajfl_09.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjajfl_09.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjajfl_09.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjajfl_09.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjajfl_09.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjajfl_09.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjajfl_09.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjajfl_09.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjajfl_09.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjajfl_09.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjajfl_09.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjajfl_09.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptoh78_dq.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptoh78_dq.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoh78_dq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptoh78_dq.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptoh78_dq.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoh78_dq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptoh78_dq.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptoh78_dq.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoh78_dq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptoh78_dq.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptoh78_dq.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoh78_dq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptoh78_dq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptugq030k.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptugq030k.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptugq030k.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptugq030k.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptugq030k.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptugq030k.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptugq030k.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptugq030k.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptugq030k.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptugq030k.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptugq030k.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptugq030k.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptugq030k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk9_fv7v6.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpk9_fv7v6.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk9_fv7v6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk9_fv7v6.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk9_fv7v6.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk9_fv7v6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk9_fv7v6.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk9_fv7v6.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk9_fv7v6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk9_fv7v6.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk9_fv7v6.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk9_fv7v6.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk9_fv7v6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptg2kmwri.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptg2kmwri.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptg2kmwri.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptg2kmwri.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptg2kmwri.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptg2kmwri.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptg2kmwri.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptg2kmwri.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptg2kmwri.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptg2kmwri.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptg2kmwri.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptg2kmwri.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptg2kmwri.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3wn87le3.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3wn87le3.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3wn87le3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3wn87le3.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3wn87le3.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3wn87le3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3wn87le3.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3wn87le3.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3wn87le3.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3wn87le3.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3wn87le3.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3wn87le3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3wn87le3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp455fgj77.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp455fgj77.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp455fgj77.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp455fgj77.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp455fgj77.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp455fgj77.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp455fgj77.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp455fgj77.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp455fgj77.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp455fgj77.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp455fgj77.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp455fgj77.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp455fgj77.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm0rie5r4.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpm0rie5r4.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm0rie5r4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm0rie5r4.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm0rie5r4.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm0rie5r4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm0rie5r4.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm0rie5r4.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm0rie5r4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm0rie5r4.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm0rie5r4.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm0rie5r4.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm0rie5r4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s(a, b, c)\
    \ * (s(a, b, c) - a) * (s(a, b, c) - b) * (s(a, b, c) - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp58acroqv.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp58acroqv.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp58acroqv.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp58acroqv.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp58acroqv.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp58acroqv.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp58acroqv.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp58acroqv.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp58acroqv.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp58acroqv.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp58acroqv.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp58acroqv.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp58acroqv.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp58acroqv.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp58acroqv.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp58acroqv.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp58acroqv.jl:30\n  Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp58acroqv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk5nlsgsj.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpk5nlsgsj.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk5nlsgsj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk5nlsgsj.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk5nlsgsj.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk5nlsgsj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk5nlsgsj.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk5nlsgsj.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk5nlsgsj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk5nlsgsj.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk5nlsgsj.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk5nlsgsj.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5nlsgsj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb858tu6o.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpb858tu6o.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb858tu6o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb858tu6o.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpb858tu6o.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb858tu6o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb858tu6o.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpb858tu6o.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb858tu6o.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpb858tu6o.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpb858tu6o.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb858tu6o.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb858tu6o.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2.0\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n    \
    \    return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp64az6ymo.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp64az6ymo.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64az6ymo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64az6ymo.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp64az6ymo.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64az6ymo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64az6ymo.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp64az6ymo.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64az6ymo.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64az6ymo.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp64az6ymo.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64az6ymo.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64az6ymo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbep0l7iv.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbep0l7iv.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbep0l7iv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbep0l7iv.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbep0l7iv.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbep0l7iv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbep0l7iv.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbep0l7iv.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbep0l7iv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbep0l7iv.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbep0l7iv.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbep0l7iv.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbep0l7iv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0d9s450s.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0d9s450s.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0d9s450s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0d9s450s.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0d9s450s.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0d9s450s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0d9s450s.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0d9s450s.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0d9s450s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0d9s450s.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0d9s450s.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0d9s450s.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0d9s450s.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1468mpf8.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1468mpf8.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1468mpf8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1468mpf8.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1468mpf8.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1468mpf8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1468mpf8.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1468mpf8.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1468mpf8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1468mpf8.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1468mpf8.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1468mpf8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1468mpf8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp70_ntb_u.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp70_ntb_u.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp70_ntb_u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp70_ntb_u.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp70_ntb_u.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp70_ntb_u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp70_ntb_u.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp70_ntb_u.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp70_ntb_u.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp70_ntb_u.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp70_ntb_u.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp70_ntb_u.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp70_ntb_u.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_emppv8n.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp_emppv8n.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp_emppv8n.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_emppv8n.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_emppv8n.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp_emppv8n.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp_emppv8n.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_emppv8n.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_emppv8n.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp_emppv8n.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp_emppv8n.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_emppv8n.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_emppv8n.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp_emppv8n.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp_emppv8n.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_emppv8n.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_emppv8n.jl:30\n  Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_emppv8n.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppprab07v.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppprab07v.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppprab07v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppprab07v.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppprab07v.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppprab07v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppprab07v.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppprab07v.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppprab07v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppprab07v.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppprab07v.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppprab07v.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppprab07v.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5i0kyyba.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5i0kyyba.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5i0kyyba.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5i0kyyba.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5i0kyyba.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5i0kyyba.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5i0kyyba.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5i0kyyba.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5i0kyyba.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5i0kyyba.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5i0kyyba.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5i0kyyba.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5i0kyyba.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbfo_f6g2.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbfo_f6g2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfo_f6g2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbfo_f6g2.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbfo_f6g2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfo_f6g2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbfo_f6g2.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbfo_f6g2.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfo_f6g2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbfo_f6g2.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbfo_f6g2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfo_f6g2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbfo_f6g2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzvf234_y.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzvf234_y.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzvf234_y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzvf234_y.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzvf234_y.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzvf234_y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzvf234_y.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzvf234_y.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzvf234_y.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpzvf234_y.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzvf234_y.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzvf234_y.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzvf234_y.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg5txq0ha.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpg5txq0ha.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg5txq0ha.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg5txq0ha.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg5txq0ha.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg5txq0ha.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg5txq0ha.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg5txq0ha.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg5txq0ha.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg5txq0ha.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg5txq0ha.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg5txq0ha.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5txq0ha.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr1pw3mxi.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpr1pw3mxi.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1pw3mxi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1pw3mxi.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr1pw3mxi.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1pw3mxi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1pw3mxi.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr1pw3mxi.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1pw3mxi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1pw3mxi.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr1pw3mxi.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1pw3mxi.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr1pw3mxi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz3cz89u8.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpz3cz89u8.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpz3cz89u8.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz3cz89u8.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpz3cz89u8.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpz3cz89u8.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpz3cz89u8.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz3cz89u8.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpz3cz89u8.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwn_551z0.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwn_551z0.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwn_551z0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwn_551z0.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwn_551z0.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwn_551z0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwn_551z0.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwn_551z0.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwn_551z0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwn_551z0.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwn_551z0.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwn_551z0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwn_551z0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpykqy1agt.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpykqy1agt.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpykqy1agt.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpykqy1agt.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpykqy1agt.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpykqy1agt.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpykqy1agt.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpykqy1agt.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpykqy1agt.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoi3jals2.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpoi3jals2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoi3jals2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoi3jals2.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpoi3jals2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoi3jals2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoi3jals2.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpoi3jals2.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoi3jals2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoi3jals2.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpoi3jals2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoi3jals2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoi3jals2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpypmn03ti.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpypmn03ti.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpypmn03ti.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpypmn03ti.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpypmn03ti.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpypmn03ti.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpypmn03ti.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpypmn03ti.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpypmn03ti.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpypmn03ti.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpypmn03ti.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpypmn03ti.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpypmn03ti.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwid5w2qs.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwid5w2qs.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwid5w2qs.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwid5w2qs.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwid5w2qs.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwid5w2qs.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwid5w2qs.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwid5w2qs.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwid5w2qs.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwid5w2qs.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwid5w2qs.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwid5w2qs.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwid5w2qs.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0w_hnkna.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0w_hnkna.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0w_hnkna.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0w_hnkna.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0w_hnkna.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0w_hnkna.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0w_hnkna.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0w_hnkna.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0w_hnkna.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0w_hnkna.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0w_hnkna.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0w_hnkna.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0w_hnkna.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk69n_yyd.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpk69n_yyd.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk69n_yyd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk69n_yyd.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk69n_yyd.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk69n_yyd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk69n_yyd.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk69n_yyd.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk69n_yyd.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk69n_yyd.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk69n_yyd.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk69n_yyd.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk69n_yyd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1523fisa.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1523fisa.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1523fisa.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1523fisa.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1523fisa.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1523fisa.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1523fisa.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1523fisa.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1523fisa.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1523fisa.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1523fisa.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1523fisa.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1523fisa.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_ooj8rik.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_ooj8rik.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ooj8rik.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_ooj8rik.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_ooj8rik.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ooj8rik.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_ooj8rik.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_ooj8rik.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ooj8rik.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_ooj8rik.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_ooj8rik.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ooj8rik.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ooj8rik.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk931v5eb.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpk931v5eb.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk931v5eb.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk931v5eb.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk931v5eb.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk931v5eb.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk931v5eb.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk931v5eb.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk931v5eb.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpk931v5eb.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk931v5eb.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk931v5eb.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk931v5eb.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo_h2rlyu.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpo_h2rlyu.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpo_h2rlyu.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpo_h2rlyu.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpo_h2rlyu.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpo_h2rlyu.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpo_h2rlyu.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpo_h2rlyu.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpo_h2rlyu.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaues7xy6.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpaues7xy6.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpaues7xy6.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpaues7xy6.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpaues7xy6.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpaues7xy6.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpaues7xy6.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpaues7xy6.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpaues7xy6.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe3t8y2o5.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpe3t8y2o5.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpe3t8y2o5.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe3t8y2o5.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpe3t8y2o5.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpe3t8y2o5.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpe3t8y2o5.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe3t8y2o5.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpe3t8y2o5.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgdoin931.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgdoin931.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgdoin931.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgdoin931.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgdoin931.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgdoin931.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgdoin931.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgdoin931.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgdoin931.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgdoin931.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgdoin931.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgdoin931.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdoin931.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgizh1i4i.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgizh1i4i.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgizh1i4i.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgizh1i4i.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgizh1i4i.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgizh1i4i.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgizh1i4i.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgizh1i4i.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgizh1i4i.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpgizh1i4i.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgizh1i4i.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgizh1i4i.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgizh1i4i.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s(a, b, c)\
    \ * (s(a, b, c) - a) * (s(a, b, c) - b) * (s(a, b, c) - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpggoh2nyd.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpggoh2nyd.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpggoh2nyd.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpggoh2nyd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpggoh2nyd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpggoh2nyd.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpggoh2nyd.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpggoh2nyd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpggoh2nyd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpggoh2nyd.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpggoh2nyd.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpggoh2nyd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpggoh2nyd.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpggoh2nyd.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpggoh2nyd.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpggoh2nyd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpggoh2nyd.jl:30\n  Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpggoh2nyd.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbhxs_rno.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbhxs_rno.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbhxs_rno.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhxs_rno.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbhxs_rno.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbhxs_rno.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhxs_rno.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbhxs_rno.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbhxs_rno.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbhxs_rno.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbhxs_rno.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbhxs_rno.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhxs_rno.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        return sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) ==\
    \ 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\
    \t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10,\
    \ 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1,\
    \ 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn_oaggle.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpn_oaggle.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpn_oaggle.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn_oaggle.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpn_oaggle.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpn_oaggle.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpn_oaggle.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn_oaggle.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpn_oaggle.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpn_oaggle.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpn_oaggle.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn_oaggle.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpn_oaggle.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmpn_oaggle.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpn_oaggle.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn_oaggle.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpn_oaggle.jl:30\n  Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn_oaggle.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl1hp8i0z.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpl1hp8i0z.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpl1hp8i0z.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl1hp8i0z.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpl1hp8i0z.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpl1hp8i0z.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpl1hp8i0z.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl1hp8i0z.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpl1hp8i0z.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpien17gii.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpien17gii.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpien17gii.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpien17gii.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpien17gii.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpien17gii.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpien17gii.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpien17gii.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpien17gii.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpien17gii.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpien17gii.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpien17gii.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpien17gii.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a+b>c && a+c>b && b+c>a\n        p = (a+b+c)/2\n        return sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2,\
    \ 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2)\
    \ == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7) ==\
    \ 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\
    \t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbgz9v_zr.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbgz9v_zr.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbgz9v_zr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbgz9v_zr.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbgz9v_zr.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbgz9v_zr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbgz9v_zr.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbgz9v_zr.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbgz9v_zr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbgz9v_zr.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbgz9v_zr.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbgz9v_zr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbgz9v_zr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm2p52r0h.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpm2p52r0h.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2p52r0h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm2p52r0h.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm2p52r0h.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2p52r0h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm2p52r0h.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm2p52r0h.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2p52r0h.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpm2p52r0h.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm2p52r0h.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm2p52r0h.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm2p52r0h.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp80ag_9ws.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp80ag_9ws.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp80ag_9ws.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp80ag_9ws.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp80ag_9ws.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp80ag_9ws.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp80ag_9ws.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp80ag_9ws.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp80ag_9ws.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp80ag_9ws.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp80ag_9ws.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp80ag_9ws.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80ag_9ws.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpakypu8d8.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpakypu8d8.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpakypu8d8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpakypu8d8.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpakypu8d8.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpakypu8d8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpakypu8d8.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpakypu8d8.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpakypu8d8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpakypu8d8.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpakypu8d8.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpakypu8d8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpakypu8d8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl9eyk6a8.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpl9eyk6a8.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9eyk6a8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl9eyk6a8.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl9eyk6a8.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9eyk6a8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl9eyk6a8.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl9eyk6a8.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9eyk6a8.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpl9eyk6a8.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl9eyk6a8.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9eyk6a8.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9eyk6a8.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2.0\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphmoev_ky.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmphmoev_ky.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphmoev_ky.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphmoev_ky.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphmoev_ky.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphmoev_ky.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphmoev_ky.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphmoev_ky.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphmoev_ky.jl:23\ntest set: Test\
    \ Failed at /tmp/tmphmoev_ky.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphmoev_ky.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphmoev_ky.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphmoev_ky.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp88cbvb0a.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp88cbvb0a.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88cbvb0a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp88cbvb0a.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp88cbvb0a.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88cbvb0a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp88cbvb0a.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp88cbvb0a.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88cbvb0a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp88cbvb0a.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp88cbvb0a.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88cbvb0a.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88cbvb0a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbn9dyg8b.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbn9dyg8b.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbn9dyg8b.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbn9dyg8b.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbn9dyg8b.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbn9dyg8b.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbn9dyg8b.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbn9dyg8b.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbn9dyg8b.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbn9dyg8b.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbn9dyg8b.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbn9dyg8b.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbn9dyg8b.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr1_uoe_5.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpr1_uoe_5.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1_uoe_5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1_uoe_5.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr1_uoe_5.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1_uoe_5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1_uoe_5.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr1_uoe_5.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1_uoe_5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr1_uoe_5.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr1_uoe_5.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr1_uoe_5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr1_uoe_5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgpe8jd3e.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmpgpe8jd3e.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpgpe8jd3e.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpgpe8jd3e.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpgpe8jd3e.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmpgpe8jd3e.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmpgpe8jd3e.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpgpe8jd3e.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmpgpe8jd3e.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjboyywgz.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjboyywgz.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjboyywgz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjboyywgz.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjboyywgz.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjboyywgz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjboyywgz.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjboyywgz.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjboyywgz.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpjboyywgz.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjboyywgz.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjboyywgz.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjboyywgz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp16n4es3b.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp16n4es3b.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp16n4es3b.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp16n4es3b.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp16n4es3b.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp16n4es3b.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp16n4es3b.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp16n4es3b.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp16n4es3b.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp16n4es3b.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp16n4es3b.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp16n4es3b.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp16n4es3b.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpogzng28t.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpogzng28t.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpogzng28t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpogzng28t.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpogzng28t.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpogzng28t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpogzng28t.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpogzng28t.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpogzng28t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpogzng28t.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpogzng28t.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpogzng28t.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpogzng28t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9i4en6kh.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9i4en6kh.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9i4en6kh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9i4en6kh.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9i4en6kh.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9i4en6kh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9i4en6kh.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9i4en6kh.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9i4en6kh.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9i4en6kh.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9i4en6kh.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9i4en6kh.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9i4en6kh.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqic6l0b0.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqic6l0b0.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqic6l0b0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqic6l0b0.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqic6l0b0.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqic6l0b0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqic6l0b0.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqic6l0b0.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqic6l0b0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqic6l0b0.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqic6l0b0.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqic6l0b0.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqic6l0b0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp43jfcjor.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp43jfcjor.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43jfcjor.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp43jfcjor.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp43jfcjor.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43jfcjor.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp43jfcjor.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp43jfcjor.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43jfcjor.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp43jfcjor.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp43jfcjor.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43jfcjor.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp43jfcjor.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvc0z6tnq.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvc0z6tnq.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvc0z6tnq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvc0z6tnq.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvc0z6tnq.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvc0z6tnq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvc0z6tnq.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvc0z6tnq.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvc0z6tnq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvc0z6tnq.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvc0z6tnq.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvc0z6tnq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvc0z6tnq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpisb3a0d1.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpisb3a0d1.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpisb3a0d1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpisb3a0d1.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpisb3a0d1.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpisb3a0d1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpisb3a0d1.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpisb3a0d1.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpisb3a0d1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpisb3a0d1.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpisb3a0d1.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpisb3a0d1.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpisb3a0d1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_laxg_jr.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_laxg_jr.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_laxg_jr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_laxg_jr.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_laxg_jr.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_laxg_jr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_laxg_jr.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_laxg_jr.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_laxg_jr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_laxg_jr.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_laxg_jr.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_laxg_jr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_laxg_jr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy8pzafbi.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpy8pzafbi.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy8pzafbi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy8pzafbi.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy8pzafbi.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy8pzafbi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy8pzafbi.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy8pzafbi.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy8pzafbi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpy8pzafbi.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy8pzafbi.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy8pzafbi.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy8pzafbi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr7opiuiq.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpr7opiuiq.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr7opiuiq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr7opiuiq.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr7opiuiq.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr7opiuiq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr7opiuiq.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr7opiuiq.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr7opiuiq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpr7opiuiq.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr7opiuiq.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr7opiuiq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr7opiuiq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5fw62fqv.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5fw62fqv.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fw62fqv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5fw62fqv.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5fw62fqv.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fw62fqv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5fw62fqv.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5fw62fqv.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fw62fqv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp5fw62fqv.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5fw62fqv.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fw62fqv.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5fw62fqv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpno6z0dh2.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpno6z0dh2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpno6z0dh2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpno6z0dh2.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpno6z0dh2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpno6z0dh2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpno6z0dh2.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpno6z0dh2.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpno6z0dh2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpno6z0dh2.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpno6z0dh2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpno6z0dh2.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpno6z0dh2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxza99cz_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxza99cz_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxza99cz_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxza99cz_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxza99cz_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxza99cz_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxza99cz_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxza99cz_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxza99cz_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxza99cz_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxza99cz_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxza99cz_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxza99cz_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyp92nyj_.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyp92nyj_.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyp92nyj_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyp92nyj_.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyp92nyj_.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyp92nyj_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyp92nyj_.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyp92nyj_.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyp92nyj_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyp92nyj_.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyp92nyj_.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyp92nyj_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyp92nyj_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpttkonhi1.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpttkonhi1.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttkonhi1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpttkonhi1.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpttkonhi1.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttkonhi1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpttkonhi1.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpttkonhi1.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttkonhi1.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpttkonhi1.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpttkonhi1.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttkonhi1.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpttkonhi1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n      \
    \  return -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmkdhw279.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmkdhw279.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmkdhw279.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmkdhw279.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmkdhw279.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmkdhw279.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmkdhw279.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmkdhw279.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmkdhw279.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmkdhw279.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmkdhw279.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmkdhw279.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmkdhw279.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2swvk8ai.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2swvk8ai.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2swvk8ai.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2swvk8ai.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2swvk8ai.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2swvk8ai.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2swvk8ai.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2swvk8ai.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2swvk8ai.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp2swvk8ai.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2swvk8ai.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2swvk8ai.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2swvk8ai.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuar742i9.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpuar742i9.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuar742i9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuar742i9.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuar742i9.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuar742i9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuar742i9.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuar742i9.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuar742i9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuar742i9.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuar742i9.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuar742i9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuar742i9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplxxhkl3c.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmplxxhkl3c.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplxxhkl3c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplxxhkl3c.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplxxhkl3c.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplxxhkl3c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplxxhkl3c.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplxxhkl3c.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplxxhkl3c.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplxxhkl3c.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplxxhkl3c.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplxxhkl3c.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplxxhkl3c.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        p = (a + b + c)\
    \ / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n        return round(area,\
    \ 2)\n    else\n        return -1\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = triangle_area;\n\t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1,\
    \ 2, 10) == -1)\n\t@test(candidate(4, 8, 5) == 8.18)\n\t@test(candidate(2, 2,\
    \ 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\t@test(candidate(10, 5, 7)\
    \ == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1, 1, 1) ==\
    \ 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp65qzs3cf.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(3, 4, 5) == 6.0\\n  MethodError: no method\
    \ matching round(::Float64, ::Int64)\\n  Closest candidates are:\\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at floatfuncs.jl:219\\\
    n    round(!Matched::Type{T}, ::Integer) where T<:Integer at int.jl:594\\n   \
    \ round(::Float64, !Matched::RoundingMode{:ToZero}) at float.jl:298\\n    ...\\\
    n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64, c::Int64)\\n     @ Main\
    \ /tmp/tmp65qzs3cf.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp65qzs3cf.jl:25\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp65qzs3cf.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp65qzs3cf.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched::RoundingMode{:ToZero})\
    \ at float.jl:298\\n    ...\\n  Stacktrace:\\n   [1] triangle_area(a::Int64, b::Int64,\
    \ c::Int64)\\n     @ Main /tmp/tmp65qzs3cf.jl:15\\n   [2] macro expansion\\n \
    \    @ /tmp/tmp65qzs3cf.jl:27 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp65qzs3cf.jl:24\\ntest set:\
    \ Error During Test at /tmp/tmp65qzs3cf.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\\n  Closest candidates are:\\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at floatfuncs.jl:219\\n    round(!Matched::Type{T}, ::Integer)\
    \ where T<:Integer at int.jl:594\\n    round(::Float64, !Matched:"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        -1\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3,\
    \ 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5)\
    \ == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) ==\
    \ -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\
    \t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpou4ys75l.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpou4ys75l.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpou4ys75l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpou4ys75l.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpou4ys75l.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpou4ys75l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpou4ys75l.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpou4ys75l.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpou4ys75l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpou4ys75l.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpou4ys75l.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpou4ys75l.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpou4ys75l.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        p = (a + b + c) / 2\n\
    \        return sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmwz4__47.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmwz4__47.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwz4__47.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmwz4__47.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmwz4__47.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwz4__47.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmwz4__47.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmwz4__47.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwz4__47.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpmwz4__47.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmwz4__47.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwz4__47.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwz4__47.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if (a + b > c) && (a + c > b) && (b + c > a)\n        return sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = triangle_area;\n\t@test(candidate(3, 4,\
    \ 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4, 8, 5) ==\
    \ 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2, 3) == -1)\n\
    \t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3) == -1)\n\t@test(candidate(1,\
    \ 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) == -1)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ja85rpp.jl:23\n  Test threw exception\n\
    \  Expression: candidate(3, 4, 5) == 6.0\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp1ja85rpp.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp1ja85rpp.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ja85rpp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1ja85rpp.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(4, 8, 5) == 8.18\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp1ja85rpp.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp1ja85rpp.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ja85rpp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1ja85rpp.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(2, 2, 2) == 1.73\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp1ja85rpp.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp1ja85rpp.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ja85rpp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1ja85rpp.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(10, 5, 7) == 16.25\n  UndefVarError: s not defined\n  Stacktrace:\n\
    \   [1] triangle_area(a::Int64, b::Int64, c::Int64)\n     @ Main /tmp/tmp1ja85rpp.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmp1ja85rpp.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ja85rpp.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp1ja85rpp.jl:30\n  Tes"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ja85rpp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsl9yx8gt.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpsl9yx8gt.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsl9yx8gt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsl9yx8gt.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsl9yx8gt.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsl9yx8gt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsl9yx8gt.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsl9yx8gt.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsl9yx8gt.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpsl9yx8gt.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsl9yx8gt.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsl9yx8gt.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsl9yx8gt.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n    than the third side.\n\
    \    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10)\
    \ == -1\n    \"\"\"\nfunction triangle_area(a::Int64, b::Int64, c::Int64)::Float64\
    \ \n    if a + b > c && a + c > b && b + c > a\n        s = (a + b + c) / 2\n\
    \        return sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return\
    \ -1\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = triangle_area;\n\
    \t@test(candidate(3, 4, 5) == 6.0)\n\t@test(candidate(1, 2, 10) == -1)\n\t@test(candidate(4,\
    \ 8, 5) == 8.18)\n\t@test(candidate(2, 2, 2) == 1.73)\n\t@test(candidate(1, 2,\
    \ 3) == -1)\n\t@test(candidate(10, 5, 7) == 16.25)\n\t@test(candidate(2, 6, 3)\
    \ == -1)\n\t@test(candidate(1, 1, 1) == 0.43)\n\t@test(candidate(2, 2, 10) ==\
    \ -1)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc8e2j85s.jl:26\n  Expression: candidate(4,\
    \ 8, 5) == 8.18\n   Evaluated: 8.181534085976786 == 8.18\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpc8e2j85s.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc8e2j85s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc8e2j85s.jl:27\n  Expression: candidate(2, 2, 2) == 1.73\n\
    \   Evaluated: 1.7320508075688772 == 1.73\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc8e2j85s.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc8e2j85s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc8e2j85s.jl:29\n  Expression: candidate(10, 5, 7) == 16.25\n\
    \   Evaluated: 16.24807680927192 == 16.25\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc8e2j85s.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc8e2j85s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc8e2j85s.jl:31\n  Expression: candidate(1, 1, 1) == 0.43\n\
    \   Evaluated: 0.4330127018922193 == 0.43\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc8e2j85s.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc8e2j85s.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     4      9\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc8e2j85s.jl:21\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_31_is_prime
language: julia
results:
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    # If n is less than 2, it is not prime\n\
    \    if n < 2\n        return false\n    end\n    # If n is 2, it is prime\n \
    \   if n == 2\n        return true\n    end\n    # If n is even, it is not prime\n\
    \    if n % 2 == 0\n        return false\n    end\n    # If n is odd, check if\
    \ it is prime\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t\
    @test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i = 2:n-1\n        if n % i == 0\n            return false\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_prime;\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61) == true)\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t@test(candidate(5)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17) == true)\n\t\
    @test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\t@test(candidate(255379)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i * i <= n\n        if n\
    \ % i == 0 || n % (i + 2) == 0\n            return false\n        end\n      \
    \  i += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:sqrt(n)\n        if n % i == 0\n          \
    \  return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n == 1 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2 || n == 3\n        return true\n\
    \    elseif n % 2 == 0 || n < 2\n        return false\n    else\n        for i\
    \ in 3:2:floor(Int64, sqrt(n))\n            if n % i == 0\n                return\
    \ false\n            end\n        end\n        return true\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i * i <= n\n        if n\
    \ % i == 0 || n % (i + 2) == 0\n            return false\n        end\n      \
    \  i += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2 \n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    if n == 2\n        return true\n    end\n    if n % 2 == 0\n        return\
    \ false\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        if n % i ==\
    \ 0\n            return false\n        end\n    end\n    return true\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\
    \t@test(candidate(101) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441)\
    \ == true)\n\t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t\
    @test(candidate(1) == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11)\
    \ == true)\n\t@test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t\
    @test(candidate(77) == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n <= 1\n        return false\n    end\n\
    \    if n <= 3\n        return true\n    end\n    if n % 2 == 0 || n % 3 == 0\n\
    \        return false\n    end\n    i = 5\n    while i * i <= n\n        if n\
    \ % i == 0 || n % (i + 2) == 0\n            return false\n        end\n      \
    \  i += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:sqrt(n)\n        if n % i == 0\n            return false\n   \
    \     end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n < 2\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 2\n        return true\n    elseif\
    \ n < 2 || n % 2 == 0\n        return false\n    else\n        for i in 3:2:floor(Int64,\
    \ sqrt(n))\n            if n % i == 0\n                return false\n        \
    \    end\n        end\n        return true\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101)\
    \ == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\
    \t@test(candidate(61) == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1)\
    \ == false)\n\t@test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t\
    @test(candidate(17) == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77)\
    \ == false)\n\t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return true if a given number is prime, and false otherwise.\n \
    \   >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n\
    \    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n\
    \    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n\
    function is_prime(n::Int64)::Bool \n    if n == 1\n        return false\n    end\n\
    \    for i in 2:n-1\n        if n % i == 0\n            return false\n       \
    \ end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_prime;\n\t@test(candidate(6) == false)\n\t@test(candidate(101) == true)\n\
    \t@test(candidate(11) == true)\n\t@test(candidate(13441) == true)\n\t@test(candidate(61)\
    \ == true)\n\t@test(candidate(4) == false)\n\t@test(candidate(1) == false)\n\t\
    @test(candidate(5) == true)\n\t@test(candidate(11) == true)\n\t@test(candidate(17)\
    \ == true)\n\t@test(candidate(85) == false)\n\t@test(candidate(77) == false)\n\
    \t@test(candidate(255379) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   13     13\n"
  exit_code: 0
  status: OK

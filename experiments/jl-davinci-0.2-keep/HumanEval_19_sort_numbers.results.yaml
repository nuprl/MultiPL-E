name: HumanEval_19_sort_numbers
language: julia
results:
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpu88ehzxs.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpu88ehzxs.jl:8\n   [3] macro expansion\n     @ /tmp/tmpu88ehzxs.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu88ehzxs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu88ehzxs.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpu88ehzxs.jl:8\n   [3] macro expansion\n     @ /tmp/tmpu88ehzxs.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu88ehzxs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu88ehzxs.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpu88ehzxs.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpu88ehzxs.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu88ehzxs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu88ehzxs.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpu88ehzxs.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu88ehzxs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    join(numbers_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv1lbccrp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv1lbccrp.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1lbccrp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv1lbccrp.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpv1lbccrp.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1lbccrp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv1lbccrp.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpv1lbccrp.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1lbccrp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv1lbccrp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(num) for num in nums_int]\n    return join(nums_str, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmptw3n869l.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptw3n869l.jl:9\n    [8] macro expansion\n      @ /tmp/tmptw3n869l.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmptw3n869l.jl:18\ntest set:\
    \ Error During Test at /tmp/tmptw3n869l.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmptw3n869l.jl:9\n    [8] macro expansion\n      @ /tmp/tmptw3n869l.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmptw3n869l.jl:18\ntest set:\
    \ Er"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptw3n869l.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpg6a4b7go.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg6a4b7go.jl:8\n   [3] macro expansion\n     @ /tmp/tmpg6a4b7go.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6a4b7go.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpg6a4b7go.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg6a4b7go.jl:8\n   [3] macro expansion\n     @ /tmp/tmpg6a4b7go.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6a4b7go.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpg6a4b7go.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpg6a4b7go.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpg6a4b7go.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6a4b7go.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpg6a4b7go.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg6a4b7go.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg6a4b7go.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn3n1bsf8.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpn3n1bsf8.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn3n1bsf8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn3n1bsf8.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpn3n1bsf8.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn3n1bsf8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn3n1bsf8.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpn3n1bsf8.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn3n1bsf8.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn3n1bsf8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq8itj9ei.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq8itj9ei.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8itj9ei.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq8itj9ei.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpq8itj9ei.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8itj9ei.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq8itj9ei.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpq8itj9ei.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8itj9ei.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8itj9ei.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxc2jx4ie.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxc2jx4ie.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxc2jx4ie.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxc2jx4ie.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxc2jx4ie.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxc2jx4ie.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxc2jx4ie.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxc2jx4ie.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxc2jx4ie.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxc2jx4ie.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqoxybc00.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqoxybc00.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqoxybc00.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqoxybc00.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqoxybc00.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqoxybc00.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqoxybc00.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqoxybc00.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqoxybc00.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqoxybc00.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    num_list\
    \ = split(numbers, \" \")\n    num_list = map(x -> num_dict[x], num_list)\n  \
    \  sort!(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n    return\
    \ join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3usfhlfd.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:482 [inlined]\n    [2] #1\n      @ /tmp/tmp3usfhlfd.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:695\n\
    \    [5] collect_similar\n      @ ./array.jl:606 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2294 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp3usfhlfd.jl:10\n    [8] macro expansion\n      @ /tmp/tmp3usfhlfd.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp3usfhlfd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3usfhlfd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:482\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmp3usfhlfd.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:695 [inlined]\n    [5] collect_similar\n      @ ./array.jl:606\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2294 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp3usfhlfd.jl:12\n    [8] macro expansion\n      @ /tmp/tmp3usfhlfd.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp3usfhlfd.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp3usfhlfd.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  KeyError: key 3 not\
    \ found\n  Stacktrace:\n    [1] getindex(h::Dict{String, Int64"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3usfhlfd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6l4z41rk.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6l4z41rk.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6l4z41rk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6l4z41rk.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6l4z41rk.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6l4z41rk.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6l4z41rk.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6l4z41rk.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6l4z41rk.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6l4z41rk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, x) for x in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(x) for x in nums_int]\n    return join(nums_str, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpx_weoq0u.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpx_weoq0u.jl:9\n    [8] macro expansion\n      @ /tmp/tmpx_weoq0u.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpx_weoq0u.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpx_weoq0u.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpx_weoq0u.jl:9\n    [8] macro expansion\n      @ /tmp/tmpx_weoq0u.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpx_weoq0u.jl:18\ntest set:\
    \ Er"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx_weoq0u.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp05p4b1ic.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp05p4b1ic.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp05p4b1ic.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp05p4b1ic.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp05p4b1ic.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp05p4b1ic.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp05p4b1ic.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp05p4b1ic.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp05p4b1ic.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp05p4b1ic.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpyurmbw85.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyurmbw85.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyurmbw85.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyurmbw85.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpyurmbw85.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyurmbw85.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyurmbw85.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpyurmbw85.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyurmbw85.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyurmbw85.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split()\n\
    \    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpko1x9kwk.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpko1x9kwk.jl:8\n   [3] macro expansion\n     @ /tmp/tmpko1x9kwk.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpko1x9kwk.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpko1x9kwk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpko1x9kwk.jl:8\n   [3] macro expansion\n     @ /tmp/tmpko1x9kwk.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpko1x9kwk.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpko1x9kwk.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpko1x9kwk.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpko1x9kwk.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpko1x9kwk.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpko1x9kwk.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpko1x9kwk.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpko1x9kwk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp57_3yy_5.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp57_3yy_5.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp57_3yy_5.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp57_3yy_5.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp57_3yy_5.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp57_3yy_5.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp57_3yy_5.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp57_3yy_5.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp57_3yy_5.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp57_3yy_5.jl:9\n   [2] macro expansion\n     @ /tmp/tmp57_3yy_5.jl:21\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp57_3yy_5.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp57_3yy_5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp57_3yy_5.jl:9\n   [2] macro expansion\n     @ /tmp/tmp57_3yy_5.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp57_3yy_5.jl:18\ntest set:\
    \ Error During Test at /tmp/tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp57_3yy_5.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87zr8hsi.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp87zr8hsi.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp87zr8hsi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp87zr8hsi.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp87zr8hsi.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp87zr8hsi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp87zr8hsi.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp87zr8hsi.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp87zr8hsi.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87zr8hsi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprucj0vxr.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprucj0vxr.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprucj0vxr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprucj0vxr.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprucj0vxr.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprucj0vxr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprucj0vxr.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprucj0vxr.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprucj0vxr.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprucj0vxr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp8srvak74.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8srvak74.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8srvak74.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8srvak74.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp8srvak74.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8srvak74.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8srvak74.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp8srvak74.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8srvak74.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8srvak74.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqktq2e5n.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqktq2e5n.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqktq2e5n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqktq2e5n.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpqktq2e5n.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqktq2e5n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqktq2e5n.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpqktq2e5n.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqktq2e5n.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqktq2e5n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpg7az_4_v.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg7az_4_v.jl:8\n   [3] macro expansion\n     @ /tmp/tmpg7az_4_v.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg7az_4_v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpg7az_4_v.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg7az_4_v.jl:8\n   [3] macro expansion\n     @ /tmp/tmpg7az_4_v.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg7az_4_v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpg7az_4_v.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpg7az_4_v.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpg7az_4_v.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg7az_4_v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpg7az_4_v.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpg7az_4_v.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7az_4_v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpych7u7y6.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpych7u7y6.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpych7u7y6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpych7u7y6.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpych7u7y6.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpych7u7y6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpych7u7y6.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpych7u7y6.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpych7u7y6.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpych7u7y6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmuk4bk_7.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmuk4bk_7.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmuk4bk_7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmuk4bk_7.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpmuk4bk_7.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmuk4bk_7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmuk4bk_7.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpmuk4bk_7.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmuk4bk_7.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmuk4bk_7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplq7jjj35.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplq7jjj35.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplq7jjj35.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplq7jjj35.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplq7jjj35.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplq7jjj35.jl:16\ntest set: Test\
    \ Failed at /tmp/tmplq7jjj35.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplq7jjj35.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplq7jjj35.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplq7jjj35.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcyvnvs_v.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcyvnvs_v.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcyvnvs_v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcyvnvs_v.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpcyvnvs_v.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcyvnvs_v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcyvnvs_v.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpcyvnvs_v.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcyvnvs_v.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcyvnvs_v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1b94x54x.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1b94x54x.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1b94x54x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1b94x54x.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp1b94x54x.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1b94x54x.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1b94x54x.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp1b94x54x.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1b94x54x.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1b94x54x.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7tyhoyus.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7tyhoyus.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7tyhoyus.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7tyhoyus.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7tyhoyus.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7tyhoyus.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7tyhoyus.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7tyhoyus.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7tyhoyus.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7tyhoyus.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyvxa8ymz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyvxa8ymz.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyvxa8ymz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyvxa8ymz.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpyvxa8ymz.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyvxa8ymz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyvxa8ymz.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpyvxa8ymz.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyvxa8ymz.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyvxa8ymz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into a vector of strings\n    num_vec = split(numbers, \" \")\n    # Convert\
    \ the vector of strings to a vector of integers\n    num_vec = parse.(Int, num_vec)\n\
    \    # Sort the vector of integers\n    sort!(num_vec)\n    # Convert the vector\
    \ of integers to a vector of strings\n    num_vec = string.(num_vec)\n    # Join\
    \ the vector of strings into a single string\n    num_vec = join(num_vec, \" \"\
    )\n    return num_vec\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5rf1aa4t.jl:25\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  ArgumentError: input string\
    \ is empty or only contains whitespace\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:109\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:648 [inlined]\\\
    n    [5] _broadcast_getindex\\n      @ ./broadcast.jl:631 [inlined]\\n    [6]\
    \ getindex\\n      @ ./broadcast.jl:575 [inlined]\\n    [7] macro expansion\\\
    n      @ ./broadcast.jl:984 [inlined]\\n    [8] macro expansion\\n      @ ./simdloop.jl:77\
    \ [inlined]\\n    [9] copyto!\\n      @ ./broadcast.jl:983 [inlined]\\n   [10]\
    \ copyto!\\n      @ ./broadcast.jl:936 [inlined]\\n   [11] copy\\n      @ ./broadcast.jl:908\
    \ [inlined]\\n   [12] materialize\\n      @ ./broadcast.jl:883 [inlined]\\n  \
    \ [13] sort_numbers(numbers::String)\\n      @ Main /tmp/tmp5rf1aa4t.jl:11\\n\
    \   [14] macro expansion\\n      @ /tmp/tmp5rf1aa4t.jl:25 [inlined]\\n   [15]\
    \ macro expansion\\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [16] top-level scope\\n      @ /tmp/tmp5rf1aa4t.jl:24\\ntest\
    \ set: Error During Test at /tmp/tmp5rf1aa4t.jl:26\\n  Test threw exception\\\
    n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError: invalid base\
    \ 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] _broadcast_getindex_evalf\\n      @ ./broadcast.jl:648 [inlined]\\\
    n    [5] _broadcast_getindex\\n      @ ./broadcast.jl:631 [inlined]\\n    [6]\
    \ getindex\\n      @ "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0nm2pwk4.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0nm2pwk4.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0nm2pwk4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0nm2pwk4.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0nm2pwk4.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0nm2pwk4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0nm2pwk4.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0nm2pwk4.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0nm2pwk4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0nm2pwk4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpgfhyw0go.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpgfhyw0go.jl:8\n   [3] macro expansion\n     @ /tmp/tmpgfhyw0go.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgfhyw0go.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgfhyw0go.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpgfhyw0go.jl:8\n   [3] macro expansion\n     @ /tmp/tmpgfhyw0go.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgfhyw0go.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgfhyw0go.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpgfhyw0go.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpgfhyw0go.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgfhyw0go.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpgfhyw0go.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpgfhyw0go.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgfhyw0go.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3dwr180d.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3dwr180d.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dwr180d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3dwr180d.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp3dwr180d.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dwr180d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3dwr180d.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp3dwr180d.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dwr180d.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3dwr180d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [string(num) for num in nums_int_sorted]\n\
    \    return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7tcpi279.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:109\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7tcpi279.jl:9\n    [8] macro expansion\n      @ /tmp/tmp7tcpi279.jl:19\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp7tcpi279.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7tcpi279.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't'\
    \ in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp7tcpi279.jl:9\n    [8] macro expansion\n      @ /tmp/tmp7tcpi279.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp7tcpi279.jl:18\ntest set:\
    \ Error During Test a"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7tcpi279.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7h0z2m4h.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7h0z2m4h.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7h0z2m4h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7h0z2m4h.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7h0z2m4h.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7h0z2m4h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7h0z2m4h.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7h0z2m4h.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7h0z2m4h.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7h0z2m4h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[num] for num in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [key for (key, value) in nums_dict if value\
    \ in nums_int_sorted]\n    return join(nums_sorted, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjdet0gza.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjdet0gza.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjdet0gza.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpjdet0gza.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjdet0gza.jl:23 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjdet0gza.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpjdet0gza.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjdet0gza.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjdet0gza.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjdet0gza.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp72lw_jbu.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp72lw_jbu.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp72lw_jbu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp72lw_jbu.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp72lw_jbu.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp72lw_jbu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp72lw_jbu.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp72lw_jbu.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp72lw_jbu.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp72lw_jbu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    sort!(nums_int)\n    nums_str\
    \ = [string(num) for num in nums_int]\n    return join(nums_str, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpm531m25b.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpm531m25b.jl:9\n    [8] macro expansion\n      @ /tmp/tmpm531m25b.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpm531m25b.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpm531m25b.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpm531m25b.jl:9\n    [8] macro expansion\n      @ /tmp/tmpm531m25b.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpm531m25b.jl:18\ntest set:\
    \ Er"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm531m25b.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprf2pcv7k.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprf2pcv7k.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprf2pcv7k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprf2pcv7k.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprf2pcv7k.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprf2pcv7k.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprf2pcv7k.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprf2pcv7k.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprf2pcv7k.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprf2pcv7k.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoztfvy37.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoztfvy37.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoztfvy37.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoztfvy37.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoztfvy37.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoztfvy37.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoztfvy37.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoztfvy37.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoztfvy37.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoztfvy37.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums_int = [parse(Int, x) for x in nums]\n    nums_int_sorted =\
    \ sort(nums_int)\n    nums_sorted = [string(x) for x in nums_int_sorted]\n   \
    \ return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpln896b63.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  ArgumentError: input string is empty\
    \ or only contains whitespace\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:109\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpln896b63.jl:9\n    [8] macro expansion\n      @ /tmp/tmpln896b63.jl:19\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpln896b63.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpln896b63.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  ArgumentError: invalid base 10 digit 't'\
    \ in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpln896b63.jl:9\n    [8] macro expansion\n      @ /tmp/tmpln896b63.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpln896b63.jl:18\ntest set:\
    \ Error During Test a"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpln896b63.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmpk479_i.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmpk479_i.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmpk479_i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmpk479_i.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpmpk479_i.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmpk479_i.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmpk479_i.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpmpk479_i.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmpk479_i.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmpk479_i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdn2012np.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpdn2012np.jl:8\n   [3] macro expansion\n     @ /tmp/tmpdn2012np.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdn2012np.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdn2012np.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpdn2012np.jl:8\n   [3] macro expansion\n     @ /tmp/tmpdn2012np.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdn2012np.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdn2012np.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpdn2012np.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpdn2012np.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdn2012np.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpdn2012np.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpdn2012np.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdn2012np.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split()\n\
    \    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq9ixjgrz.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpq9ixjgrz.jl:8\n   [3] macro expansion\n     @ /tmp/tmpq9ixjgrz.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq9ixjgrz.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq9ixjgrz.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpq9ixjgrz.jl:8\n   [3] macro expansion\n     @ /tmp/tmpq9ixjgrz.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq9ixjgrz.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq9ixjgrz.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpq9ixjgrz.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpq9ixjgrz.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq9ixjgrz.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpq9ixjgrz.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpq9ixjgrz.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq9ixjgrz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6r5by957.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6r5by957.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6r5by957.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6r5by957.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6r5by957.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6r5by957.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6r5by957.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6r5by957.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6r5by957.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6r5by957.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp17c79frb.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp17c79frb.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp17c79frb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp17c79frb.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp17c79frb.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp17c79frb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp17c79frb.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp17c79frb.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp17c79frb.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp17c79frb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4sm6cd70.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4sm6cd70.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4sm6cd70.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4sm6cd70.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp4sm6cd70.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4sm6cd70.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4sm6cd70.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp4sm6cd70.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4sm6cd70.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4sm6cd70.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfdu1tkaq.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfdu1tkaq.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfdu1tkaq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfdu1tkaq.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfdu1tkaq.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfdu1tkaq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfdu1tkaq.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfdu1tkaq.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfdu1tkaq.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfdu1tkaq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of strings\n    nums = split(numbers)\n    # Convert the strings\
    \ to integers\n    nums = map(x -> parse(Int, x), nums)\n    # Sort the integers\n\
    \    nums = sort(nums)\n    # Convert the integers to strings\n    nums = map(x\
    \ -> string(x), nums)\n    # Join the strings into a single string\n    nums =\
    \ join(nums, \" \")\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3xhdc1fq.jl:26\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp3xhdc1fq.jl:11 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:695\n    [7] collect_similar\n\
    \      @ ./array.jl:606 [inlined]\n    [8] map\n      @ ./abstractarray.jl:2294\
    \ [inlined]\n    [9] sort_numbers(numbers::String)\n      @ Main /tmp/tmp3xhdc1fq.jl:11\n\
    \   [10] macro expansion\n      @ /tmp/tmp3xhdc1fq.jl:26 [inlined]\n   [11] macro\
    \ expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp3xhdc1fq.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp3xhdc1fq.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ /tmp/tmp3xhdc1fq.jl:11 [inlined]\n    [5] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:695\n    [7] collect_similar\n\
    \      @"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3xhdc1fq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprhpv3uvm.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprhpv3uvm.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprhpv3uvm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprhpv3uvm.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprhpv3uvm.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprhpv3uvm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprhpv3uvm.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprhpv3uvm.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprhpv3uvm.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhpv3uvm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpube_h9j2.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpube_h9j2.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpube_h9j2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpube_h9j2.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpube_h9j2.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpube_h9j2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpube_h9j2.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpube_h9j2.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpube_h9j2.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpube_h9j2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split()\n\
    \    nums = sort(nums)\n    return \" \".join(nums)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4dwug1jg.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp4dwug1jg.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4dwug1jg.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4dwug1jg.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4dwug1jg.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp4dwug1jg.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4dwug1jg.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4dwug1jg.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4dwug1jg.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp4dwug1jg.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmp4dwug1jg.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4dwug1jg.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4dwug1jg.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp4dwug1jg.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4dwug1jg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprl24akak.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprl24akak.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprl24akak.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprl24akak.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprl24akak.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprl24akak.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprl24akak.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprl24akak.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprl24akak.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprl24akak.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a vector of strings\n    nums = split(numbers)\n    # convert the vector\
    \ of strings to a vector of integers\n    nums = parse.(Int, nums)\n    # sort\
    \ the vector of integers\n    sort!(nums)\n    # convert the vector of integers\
    \ to a vector of strings\n    nums = string.(nums)\n    # join the vector of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwigymawz.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:984\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:983 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:936 [inlined]\n   [11] copy\n      @ ./broadcast.jl:908 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:883 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpwigymawz.jl:11\n   [14] macro expansion\n      @ /tmp/tmpwigymawz.jl:25\
    \ [inlined]\n   [15] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [16] top-level scope\n      @ /tmp/tmpwigymawz.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpwigymawz.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwigymawz.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7xyme29v.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7xyme29v.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xyme29v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7xyme29v.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7xyme29v.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xyme29v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7xyme29v.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7xyme29v.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xyme29v.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xyme29v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpspjm5_u2.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpspjm5_u2.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpspjm5_u2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpspjm5_u2.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpspjm5_u2.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpspjm5_u2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpspjm5_u2.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpspjm5_u2.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpspjm5_u2.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpspjm5_u2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp06ukf9l6.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp06ukf9l6.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp06ukf9l6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp06ukf9l6.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp06ukf9l6.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp06ukf9l6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp06ukf9l6.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp06ukf9l6.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp06ukf9l6.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp06ukf9l6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppd2ncaf2.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppd2ncaf2.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppd2ncaf2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppd2ncaf2.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmppd2ncaf2.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppd2ncaf2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppd2ncaf2.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmppd2ncaf2.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppd2ncaf2.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppd2ncaf2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of strings\n    nums = split(numbers)\n    # Convert the array\
    \ of strings to an array of integers\n    nums = parse.(Int, nums)\n    # Sort\
    \ the array of integers\n    sort!(nums)\n    # Convert the array of integers\
    \ to an array of strings\n    nums = string.(nums)\n    # Join the array of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp4s4_a_w.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:984\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:983 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:936 [inlined]\n   [11] copy\n      @ ./broadcast.jl:908 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:883 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpp4s4_a_w.jl:11\n   [14] macro expansion\n      @ /tmp/tmpp4s4_a_w.jl:25\
    \ [inlined]\n   [15] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [16] top-level scope\n      @ /tmp/tmpp4s4_a_w.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpp4s4_a_w.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp4s4_a_w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_array = split(numbers)\n\
    \    num_array = sort(num_array)\n    return join(num_array)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4wmbsbh2.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4wmbsbh2.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4wmbsbh2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4wmbsbh2.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4wmbsbh2.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4wmbsbh2.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4wmbsbh2.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4wmbsbh2.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4wmbsbh2.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4wmbsbh2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0mhk0f3y.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0mhk0f3y.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0mhk0f3y.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0mhk0f3y.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0mhk0f3y.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0mhk0f3y.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0mhk0f3y.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0mhk0f3y.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0mhk0f3y.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0mhk0f3y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict('zero'\
    \ => 0, 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six'\
    \ => 6, 'seven' => 7, 'eight' => 8, 'nine' => 9)\n    num_list = [num_dict[x]\
    \ for x in split(numbers)]\n    return join([key for (key, value) in num_dict\
    \ if value in sort(num_list)], \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: character literal contains multiple characters\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmpw7udk6wz.jl:8\nin expression starting\
    \ at /tmp/tmpw7udk6wz.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpljdjamur.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpljdjamur.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljdjamur.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpljdjamur.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpljdjamur.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljdjamur.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpljdjamur.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpljdjamur.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljdjamur.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpljdjamur.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1twq8hcn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1twq8hcn.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1twq8hcn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1twq8hcn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp1twq8hcn.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1twq8hcn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1twq8hcn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp1twq8hcn.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1twq8hcn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1twq8hcn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjgq0rdr6.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjgq0rdr6.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjgq0rdr6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjgq0rdr6.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjgq0rdr6.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjgq0rdr6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjgq0rdr6.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjgq0rdr6.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjgq0rdr6.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjgq0rdr6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5nkumb6s.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5nkumb6s.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5nkumb6s.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5nkumb6s.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5nkumb6s.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5nkumb6s.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5nkumb6s.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5nkumb6s.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5nkumb6s.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5nkumb6s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwlr2fj9h.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwlr2fj9h.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwlr2fj9h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwlr2fj9h.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwlr2fj9h.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwlr2fj9h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwlr2fj9h.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwlr2fj9h.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwlr2fj9h.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwlr2fj9h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpb1ykhf7h.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb1ykhf7h.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb1ykhf7h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpb1ykhf7h.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpb1ykhf7h.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb1ykhf7h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpb1ykhf7h.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpb1ykhf7h.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb1ykhf7h.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb1ykhf7h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp17z4qy0d.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp17z4qy0d.jl:9\n    [8] macro expansion\n      @ /tmp/tmp17z4qy0d.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp17z4qy0d.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp17z4qy0d.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp17z4qy0d.jl:9\n    [8] macro expansion\n      @ /tmp/tmp17z4qy0d.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp17z4qy0d.jl:18\ntest set:\
    \ Er"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp17z4qy0d.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of strings\n    nums = split(numbers)\n    # Convert the array\
    \ of strings to an array of integers\n    nums = parse.(Int, nums)\n    # Sort\
    \ the array of integers\n    nums = sort(nums)\n    # Convert the array of integers\
    \ to an array of strings\n    nums = string.(nums)\n    # Join the array of strings\
    \ into a single string\n    nums = join(nums, \" \")\n    # Return the string\n\
    \    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbxk5tqvn.jl:27\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:984\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:983 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:936 [inlined]\n   [11] copy\n      @ ./broadcast.jl:908 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:883 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpbxk5tqvn.jl:11\n   [14] macro expansion\n      @ /tmp/tmpbxk5tqvn.jl:27\
    \ [inlined]\n   [15] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [16] top-level scope\n      @ /tmp/tmpbxk5tqvn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpbxk5tqvn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbxk5tqvn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9boadd84.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9boadd84.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9boadd84.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9boadd84.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp9boadd84.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9boadd84.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9boadd84.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp9boadd84.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9boadd84.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9boadd84.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[i] for i in nums]\n    nums_int_sorted\
    \ = sort(nums_int)\n    nums_sorted = [key for (key, value) in nums_dict if value\
    \ in nums_int_sorted]\n    return join(nums_sorted, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg9vxwqrl.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg9vxwqrl.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg9vxwqrl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpg9vxwqrl.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpg9vxwqrl.jl:23 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg9vxwqrl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpg9vxwqrl.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpg9vxwqrl.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg9vxwqrl.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg9vxwqrl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(n) for n in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(n) for n in nums_int_sorted]\n    return \" \".join(nums_sorted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp2wsc0a5j.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp2wsc0a5j.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2wsc0a5j.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2wsc0a5j.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2wsc0a5j.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp2wsc0a5j.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2wsc0a5j.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2wsc0a5j.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2wsc0a5j.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp2wsc0a5j.jl:9\n   [2] macro expansion\n     @ /tmp/tmp2wsc0a5j.jl:21\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2wsc0a5j.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2wsc0a5j.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp2wsc0a5j.jl:9\n   [2] macro expansion\n     @ /tmp/tmp2wsc0a5j.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2wsc0a5j.jl:18\ntest set:\
    \ Error During Test at /tmp/tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2wsc0a5j.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5vvxpz48.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5vvxpz48.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5vvxpz48.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5vvxpz48.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5vvxpz48.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5vvxpz48.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5vvxpz48.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5vvxpz48.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5vvxpz48.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5vvxpz48.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl1ac12ry.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl1ac12ry.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl1ac12ry.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl1ac12ry.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpl1ac12ry.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl1ac12ry.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl1ac12ry.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpl1ac12ry.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl1ac12ry.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl1ac12ry.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp94yl32ru.jl:20\n  Expression: candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\"\n  \
    \ Evaluated: \"five zero four seven nine eight\" == \"zero four five seven eight\
    \ nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp94yl32ru.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp94yl32ru.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp94yl32ru.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"six\
    \ five four three two one zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp94yl32ru.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp94yl32ru.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp94yl32ru.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmplvhg0576.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplvhg0576.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplvhg0576.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplvhg0576.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmplvhg0576.jl:18 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplvhg0576.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplvhg0576.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmplvhg0576.jl:19 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplvhg0576.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplvhg0576.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4oawwqm_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4oawwqm_.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4oawwqm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4oawwqm_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp4oawwqm_.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4oawwqm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4oawwqm_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp4oawwqm_.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4oawwqm_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4oawwqm_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ \" \")\n    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjcabhzpo.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjcabhzpo.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjcabhzpo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjcabhzpo.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjcabhzpo.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjcabhzpo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjcabhzpo.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjcabhzpo.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjcabhzpo.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjcabhzpo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvehvkmdz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvehvkmdz.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvehvkmdz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvehvkmdz.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpvehvkmdz.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvehvkmdz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpvehvkmdz.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpvehvkmdz.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvehvkmdz.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvehvkmdz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers,\
    \ \" \")\n    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdm4i22_h.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdm4i22_h.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdm4i22_h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdm4i22_h.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpdm4i22_h.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdm4i22_h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdm4i22_h.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpdm4i22_h.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdm4i22_h.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdm4i22_h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpx3mdts45.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx3mdts45.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx3mdts45.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpx3mdts45.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpx3mdts45.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx3mdts45.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpx3mdts45.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpx3mdts45.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx3mdts45.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3mdts45.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp2sjkvx6y.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp2sjkvx6y.jl:8\n   [3] macro expansion\n     @ /tmp/tmp2sjkvx6y.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2sjkvx6y.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2sjkvx6y.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp2sjkvx6y.jl:8\n   [3] macro expansion\n     @ /tmp/tmp2sjkvx6y.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2sjkvx6y.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2sjkvx6y.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp2sjkvx6y.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmp2sjkvx6y.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2sjkvx6y.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp2sjkvx6y.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp2sjkvx6y.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2sjkvx6y.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy1ou1zv5.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy1ou1zv5.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy1ou1zv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpy1ou1zv5.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpy1ou1zv5.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy1ou1zv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpy1ou1zv5.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpy1ou1zv5.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy1ou1zv5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy1ou1zv5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsxykp25i.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpsxykp25i.jl:8\n   [3] macro expansion\n     @ /tmp/tmpsxykp25i.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsxykp25i.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpsxykp25i.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpsxykp25i.jl:8\n   [3] macro expansion\n     @ /tmp/tmpsxykp25i.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsxykp25i.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpsxykp25i.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpsxykp25i.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpsxykp25i.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpsxykp25i.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpsxykp25i.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpsxykp25i.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsxykp25i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6f65a79h.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6f65a79h.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f65a79h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6f65a79h.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6f65a79h.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f65a79h.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6f65a79h.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6f65a79h.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f65a79h.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6f65a79h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp94y2gdli.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp94y2gdli.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp94y2gdli.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp94y2gdli.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp94y2gdli.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp94y2gdli.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp94y2gdli.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp94y2gdli.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp94y2gdli.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp94y2gdli.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8qh0nkg4.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8qh0nkg4.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qh0nkg4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8qh0nkg4.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp8qh0nkg4.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qh0nkg4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8qh0nkg4.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp8qh0nkg4.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qh0nkg4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qh0nkg4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqxeeikb4.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqxeeikb4.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqxeeikb4.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqxeeikb4.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpqxeeikb4.jl:18 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqxeeikb4.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqxeeikb4.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpqxeeikb4.jl:19 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqxeeikb4.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqxeeikb4.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpislfi9qh.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpislfi9qh.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpislfi9qh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpislfi9qh.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpislfi9qh.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpislfi9qh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpislfi9qh.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpislfi9qh.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpislfi9qh.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpislfi9qh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpu5q_ll_f.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpu5q_ll_f.jl:8\n   [3] macro expansion\n     @ /tmp/tmpu5q_ll_f.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu5q_ll_f.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu5q_ll_f.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpu5q_ll_f.jl:8\n   [3] macro expansion\n     @ /tmp/tmpu5q_ll_f.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu5q_ll_f.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu5q_ll_f.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpu5q_ll_f.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpu5q_ll_f.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu5q_ll_f.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpu5q_ll_f.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpu5q_ll_f.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5q_ll_f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoy09kb8s.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoy09kb8s.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoy09kb8s.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoy09kb8s.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoy09kb8s.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoy09kb8s.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoy09kb8s.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoy09kb8s.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoy09kb8s.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoy09kb8s.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwa8_2npj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwa8_2npj.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwa8_2npj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwa8_2npj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwa8_2npj.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwa8_2npj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwa8_2npj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwa8_2npj.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwa8_2npj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwa8_2npj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc2lu0v3a.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc2lu0v3a.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc2lu0v3a.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc2lu0v3a.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpc2lu0v3a.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc2lu0v3a.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpc2lu0v3a.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpc2lu0v3a.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc2lu0v3a.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2lu0v3a.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe3etrnun.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe3etrnun.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3etrnun.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpe3etrnun.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpe3etrnun.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3etrnun.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpe3etrnun.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpe3etrnun.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3etrnun.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3etrnun.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    sort!(num_list)\n    return join(num_list)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzy_67pmc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzy_67pmc.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzy_67pmc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzy_67pmc.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzy_67pmc.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzy_67pmc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzy_67pmc.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzy_67pmc.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzy_67pmc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzy_67pmc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjeg5p6q8.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjeg5p6q8.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjeg5p6q8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjeg5p6q8.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjeg5p6q8.jl:18 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjeg5p6q8.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjeg5p6q8.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjeg5p6q8.jl:19 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjeg5p6q8.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjeg5p6q8.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list_int = []\n    for num in num_list\n        push!(num_list_int,\
    \ number_to_int(num))\n    end\n    num_list_int = sort(num_list_int)\n    num_list_str\
    \ = []\n    for num in num_list_int\n        push!(num_list_str, int_to_number(num))\n\
    \    end\n    return join(num_list_str, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_35vu2yw.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_35vu2yw.jl:8\n   [3] macro expansion\n     @ /tmp/tmp_35vu2yw.jl:25\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_35vu2yw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_35vu2yw.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_35vu2yw.jl:8\n   [3] macro expansion\n     @ /tmp/tmp_35vu2yw.jl:26\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_35vu2yw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_35vu2yw.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp_35vu2yw.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmp_35vu2yw.jl:27 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_35vu2yw.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_35vu2yw.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_35vu2yw.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_35vu2yw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz992vv5d.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz992vv5d.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz992vv5d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz992vv5d.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpz992vv5d.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz992vv5d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz992vv5d.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpz992vv5d.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz992vv5d.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz992vv5d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj2jnwc1c.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2jnwc1c.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2jnwc1c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj2jnwc1c.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpj2jnwc1c.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2jnwc1c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj2jnwc1c.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpj2jnwc1c.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2jnwc1c.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj2jnwc1c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoggnswhn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoggnswhn.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoggnswhn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoggnswhn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoggnswhn.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoggnswhn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoggnswhn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoggnswhn.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoggnswhn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoggnswhn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwi7lglyp.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwi7lglyp.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwi7lglyp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwi7lglyp.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwi7lglyp.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwi7lglyp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwi7lglyp.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwi7lglyp.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwi7lglyp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwi7lglyp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    nums = join(nums, \" \")\n    return nums\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjw_zs733.jl:20\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjw_zs733.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjw_zs733.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjw_zs733.jl:21\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjw_zs733.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjw_zs733.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpjw_zs733.jl:22\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjw_zs733.jl:22 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjw_zs733.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjw_zs733.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp9ddb0t1.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp9ddb0t1.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp9ddb0t1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp9ddb0t1.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpp9ddb0t1.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp9ddb0t1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpp9ddb0t1.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpp9ddb0t1.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp9ddb0t1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp9ddb0t1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph0aylzpc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph0aylzpc.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph0aylzpc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph0aylzpc.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmph0aylzpc.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph0aylzpc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph0aylzpc.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmph0aylzpc.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph0aylzpc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph0aylzpc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpto22yuql.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpto22yuql.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpto22yuql.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpto22yuql.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpto22yuql.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpto22yuql.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpto22yuql.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpto22yuql.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpto22yuql.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpto22yuql.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = map(x -> parse(Int, x), nums)\n    nums = sort(nums)\n    nums = map(x\
    \ -> string(x), nums)\n    nums = join(nums, \" \")\n    return nums\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmphgc8i5gw.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmphgc8i5gw.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Base ./array.jl:695\\n    [7] collect_similar\\\
    n      @ ./array.jl:606 [inlined]\\n    [8] map\\n      @ ./abstractarray.jl:2294\
    \ [inlined]\\n    [9] sort_numbers(numbers::String)\\n      @ Main /tmp/tmphgc8i5gw.jl:9\\\
    n   [10] macro expansion\\n      @ /tmp/tmphgc8i5gw.jl:21 [inlined]\\n   [11]\
    \ macro expansion\\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [12] top-level scope\\n      @ /tmp/tmphgc8i5gw.jl:19\\ntest\
    \ set: Error During Test at /tmp/tmphgc8i5gw.jl:22\\n  Test threw exception\\\
    n  Expression: candidate(\"three five nine\") == \"three five nine\"\\n  ArgumentError:\
    \ invalid base 10 digit \\'t\\' in \"three\"\\n  Stacktrace:\\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\\\
    n      @ Base ./parse.jl:137\\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\\n      @ Base ./parse.jl:241\\n    [3] parse\\n      @ ./parse.jl:241\
    \ [inlined]\\n    [4] #1\\n      @ /tmp/tmphgc8i5gw.jl:9 [inlined]\\n    [5] iterate\\\
    n      @ ./generator.jl:47 [inlined]\\n    [6] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\\n      @ Bas"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg87dm546.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg87dm546.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg87dm546.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg87dm546.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpg87dm546.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg87dm546.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpg87dm546.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpg87dm546.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg87dm546.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg87dm546.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_gxojjse.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_gxojjse.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_gxojjse.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_gxojjse.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp_gxojjse.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_gxojjse.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_gxojjse.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp_gxojjse.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_gxojjse.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_gxojjse.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into an array of words\n    words = split(numbers)\n    # Convert the words\
    \ to numbers\n    numbers = [word2num(word) for word in words]\n    # Sort the\
    \ numbers\n    sorted_numbers = sort(numbers)\n    # Convert the numbers back\
    \ to words\n    words = [num2word(num) for num in sorted_numbers]\n    # Join\
    \ the words back into a string\n    return join(words)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfg7g6jah.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpfg7g6jah.jl:11\n\
    \   [2] macro expansion\n     @ /tmp/tmpfg7g6jah.jl:24 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfg7g6jah.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfg7g6jah.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: word2num not defined\n \
    \ Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpfg7g6jah.jl:11\n\
    \   [2] macro expansion\n     @ /tmp/tmpfg7g6jah.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfg7g6jah.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfg7g6jah.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: word2num\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmpfg7g6jah.jl:11\n   [2] macro expansion\n     @ /tmp/tmpfg7g6jah.jl:26\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfg7g6jah.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpfg7g6jah.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: word2num not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpfg7g6jah.jl:11\n   [2] macro expansion\n     @ /tmp/tmpfg7g6jah.jl:27\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfg7g6jah.jl:23\ntest set:\
    \ Erro"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfg7g6jah.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    sort!(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwimbnffx.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwimbnffx.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwimbnffx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwimbnffx.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwimbnffx.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwimbnffx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwimbnffx.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwimbnffx.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwimbnffx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwimbnffx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm089pjp4.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm089pjp4.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm089pjp4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm089pjp4.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpm089pjp4.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm089pjp4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpm089pjp4.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpm089pjp4.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm089pjp4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm089pjp4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp75q3v16z.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp75q3v16z.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp75q3v16z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp75q3v16z.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp75q3v16z.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp75q3v16z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp75q3v16z.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp75q3v16z.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp75q3v16z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp75q3v16z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6f47ebec.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6f47ebec.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f47ebec.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6f47ebec.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6f47ebec.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f47ebec.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6f47ebec.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6f47ebec.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f47ebec.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6f47ebec.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp7ncb5ose.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp7ncb5ose.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp7ncb5ose.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7ncb5ose.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7ncb5ose.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmp7ncb5ose.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp7ncb5ose.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7ncb5ose.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7ncb5ose.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmp7ncb5ose.jl:9\n   [2] macro expansion\n     @ /tmp/tmp7ncb5ose.jl:21\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7ncb5ose.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7ncb5ose.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp7ncb5ose.jl:9\n   [2] macro expansion\n     @ /tmp/tmp7ncb5ose.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7ncb5ose.jl:18\ntest set:\
    \ Error During Test at /tmp/tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ncb5ose.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpty4sl4oq.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpty4sl4oq.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpty4sl4oq.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpty4sl4oq.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpty4sl4oq.jl:18 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpty4sl4oq.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpty4sl4oq.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpty4sl4oq.jl:19 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpty4sl4oq.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpty4sl4oq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a vector of strings\n    nums = split(numbers)\n    # convert the vector\
    \ of strings to a vector of integers\n    nums = parse.(Int, nums)\n    # sort\
    \ the vector of integers\n    sort!(nums)\n    # convert the vector of integers\
    \ to a vector of strings\n    nums = string.(nums)\n    # join the vector of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpede5dvh3.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:984\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:983 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:936 [inlined]\n   [11] copy\n      @ ./broadcast.jl:908 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:883 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpede5dvh3.jl:11\n   [14] macro expansion\n      @ /tmp/tmpede5dvh3.jl:25\
    \ [inlined]\n   [15] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [16] top-level scope\n      @ /tmp/tmpede5dvh3.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpede5dvh3.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpede5dvh3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxzf0z2tf.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxzf0z2tf.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxzf0z2tf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxzf0z2tf.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxzf0z2tf.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxzf0z2tf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxzf0z2tf.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxzf0z2tf.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxzf0z2tf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxzf0z2tf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp81e887m1.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp81e887m1.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81e887m1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp81e887m1.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp81e887m1.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81e887m1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp81e887m1.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp81e887m1.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81e887m1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81e887m1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    num_list = join(num_list, \" \")\n \
    \   return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps81iy4x6.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmps81iy4x6.jl:8\n   [3] macro expansion\n     @ /tmp/tmps81iy4x6.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps81iy4x6.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps81iy4x6.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmps81iy4x6.jl:8\n   [3] macro expansion\n     @ /tmp/tmps81iy4x6.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps81iy4x6.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps81iy4x6.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmps81iy4x6.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmps81iy4x6.jl:20 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps81iy4x6.jl:17\ntest set:\
    \ Error During Test at /tmp/tmps81iy4x6.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmps81iy4x6.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps81iy4x6.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_dict = Dict()\n    num_dict[\"zero\"] = 0\n    num_dict[\"one\"] = 1\n\
    \    num_dict[\"two\"] = 2\n    num_dict[\"three\"] = 3\n    num_dict[\"four\"\
    ] = 4\n    num_dict[\"five\"] = 5\n    num_dict[\"six\"] = 6\n    num_dict[\"\
    seven\"] = 7\n    num_dict[\"eight\"] = 8\n    num_dict[\"nine\"] = 9\n    num_list\
    \ = map(num_dict, num_list)\n    num_list = sort(num_list)\n    num_list = map(num_dict,\
    \ num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxaq76_zx.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three\") == \"three\"\\n  MethodError:\
    \ objects of type Dict{Any, Any} are not callable\\n  Stacktrace:\\n   [1] iterate\\\
    n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:695\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:606 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2294 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpxaq76_zx.jl:20\\n   [6] macro expansion\\n     @ /tmp/tmpxaq76_zx.jl:31\
    \ [inlined]\\n   [7] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpxaq76_zx.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpxaq76_zx.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\\n  MethodError: objects\
    \ of type Dict{Any, Any} are not callable\\n  Stacktrace:\\n   [1] iterate\\n\
    \     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\n     @ ./array.jl:695\
    \ [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:606 [inlined]\\n   [4]\
    \ map\\n     @ ./abstractarray.jl:2294 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpxaq76_zx.jl:20\\n   [6] macro expansion\\n     @ /tmp/tmpxaq76_zx.jl:32\
    \ [inlined]\\n   [7] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpxaq76_zx.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpxaq76_zx.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\\n  MethodError: objects of type Dict{Any, Any} are not callable\\n \
    \ Stacktrace:\\n   [1] iterate\\n     @ ./generator.jl:47 [inlined]\\n   [2] _collect\\\
    n     @ ./array.jl:695 [inlined]\\n   [3] collect_similar\\n     @ ./array.jl:606\
    \ [inlined]\\n   [4] map\\n     @ ./abstractarray.jl:2294 [inlined]\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpxaq76_zx.jl:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgejd8l3g.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgejd8l3g.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgejd8l3g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgejd8l3g.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpgejd8l3g.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgejd8l3g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgejd8l3g.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpgejd8l3g.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgejd8l3g.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgejd8l3g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphawutliu.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphawutliu.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphawutliu.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphawutliu.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmphawutliu.jl:18 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphawutliu.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphawutliu.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmphawutliu.jl:19 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphawutliu.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphawutliu.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a list of words\n    words = split(numbers)\n    # convert the words to\
    \ numbers\n    numbers = [word2num(w) for w in words]\n    # sort the numbers\n\
    \    sorted_numbers = sort(numbers)\n    # convert the numbers back to words\n\
    \    sorted_words = [num2word(n) for n in sorted_numbers]\n    # join the words\
    \ back into a string\n    sorted_numbers = join(sorted_words, \" \")\n    return\
    \ sorted_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpieau8ut0.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpieau8ut0.jl:11\n\
    \   [2] macro expansion\n     @ /tmp/tmpieau8ut0.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpieau8ut0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpieau8ut0.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: word2num not defined\n \
    \ Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpieau8ut0.jl:11\n\
    \   [2] macro expansion\n     @ /tmp/tmpieau8ut0.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpieau8ut0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpieau8ut0.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: word2num\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmpieau8ut0.jl:11\n   [2] macro expansion\n     @ /tmp/tmpieau8ut0.jl:27\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpieau8ut0.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpieau8ut0.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: word2num not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpieau8ut0.jl:11\n   [2] macro expansion\n     @ /tmp/tmpieau8ut0.jl:28\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpieau8ut0.jl:24\ntest set:\
    \ Erro"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpieau8ut0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into an array of numbers\n    nums = split(numbers)\n    # convert the words\
    \ to numbers\n    nums = [word2num(n) for n in nums]\n    # sort the numbers\n\
    \    sort!(nums)\n    # convert the numbers back to words\n    nums = [num2word(n)\
    \ for n in nums]\n    # join the words back into a string\n    return join(nums,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmps6t71xxq.jl:24\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: word2num not defined\n\
    \  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmps6t71xxq.jl:11\n\
    \   [2] macro expansion\n     @ /tmp/tmps6t71xxq.jl:24 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps6t71xxq.jl:23\ntest set:\
    \ Error During Test at /tmp/tmps6t71xxq.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: word2num not defined\n \
    \ Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmps6t71xxq.jl:11\n\
    \   [2] macro expansion\n     @ /tmp/tmps6t71xxq.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps6t71xxq.jl:23\ntest set:\
    \ Error During Test at /tmp/tmps6t71xxq.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: word2num\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmps6t71xxq.jl:11\n   [2] macro expansion\n     @ /tmp/tmps6t71xxq.jl:26\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps6t71xxq.jl:23\ntest set:\
    \ Error During Test at /tmp/tmps6t71xxq.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: word2num not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmps6t71xxq.jl:11\n   [2] macro expansion\n     @ /tmp/tmps6t71xxq.jl:27\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps6t71xxq.jl:23\ntest set:\
    \ Erro"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps6t71xxq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6re4l0cg.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6re4l0cg.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6re4l0cg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6re4l0cg.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6re4l0cg.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6re4l0cg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6re4l0cg.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6re4l0cg.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6re4l0cg.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6re4l0cg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxbe2yl6z.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxbe2yl6z.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxbe2yl6z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxbe2yl6z.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxbe2yl6z.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxbe2yl6z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxbe2yl6z.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxbe2yl6z.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxbe2yl6z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxbe2yl6z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpansxyevt.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpansxyevt.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpansxyevt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpansxyevt.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpansxyevt.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpansxyevt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpansxyevt.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpansxyevt.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpansxyevt.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpansxyevt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers)\n    sort!(numbers_list)\n    return join(numbers_list, \"\
    \ \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp964rjt69.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp964rjt69.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp964rjt69.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp964rjt69.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp964rjt69.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp964rjt69.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp964rjt69.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp964rjt69.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp964rjt69.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp964rjt69.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8w28bi2z.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8w28bi2z.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8w28bi2z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8w28bi2z.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp8w28bi2z.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8w28bi2z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8w28bi2z.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp8w28bi2z.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8w28bi2z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8w28bi2z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5d8wj77p.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5d8wj77p.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5d8wj77p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5d8wj77p.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5d8wj77p.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5d8wj77p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5d8wj77p.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5d8wj77p.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5d8wj77p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5d8wj77p.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgw7zxsh5.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgw7zxsh5.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw7zxsh5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgw7zxsh5.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpgw7zxsh5.jl:18 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw7zxsh5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpgw7zxsh5.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpgw7zxsh5.jl:19 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw7zxsh5.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgw7zxsh5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0i5ju35d.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0i5ju35d.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0i5ju35d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0i5ju35d.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0i5ju35d.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0i5ju35d.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp0i5ju35d.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0i5ju35d.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0i5ju35d.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0i5ju35d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    sort!(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprtv93mav.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprtv93mav.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprtv93mav.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprtv93mav.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprtv93mav.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprtv93mav.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprtv93mav.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprtv93mav.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprtv93mav.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprtv93mav.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_dict = Dict(\"\
    zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\"\
    \ => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9)\n    num_list\
    \ = split(numbers, \" \")\n    num_list = map(x -> num_dict[x], num_list)\n  \
    \  num_list = sort(num_list)\n    num_list = map(x -> num_dict[x], num_list)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8yojl255.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"\" not found\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./dict.jl:482 [inlined]\n    [2] #1\n      @ /tmp/tmp8yojl255.jl:10\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{SubString{String}},\
    \ itr::Base.Generator{Vector{SubString{String}}, var\"#1#3\"{Dict{String, Int64}}},\
    \ #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @ Base ./array.jl:695\n\
    \    [5] collect_similar\n      @ ./array.jl:606 [inlined]\n    [6] map\n    \
    \  @ ./abstractarray.jl:2294 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp8yojl255.jl:10\n    [8] macro expansion\n      @ /tmp/tmp8yojl255.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp8yojl255.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8yojl255.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key 3 not found\n  Stacktrace:\n\
    \    [1] getindex(h::Dict{String, Int64}, key::Int64)\n      @ Base ./dict.jl:482\n\
    \    [2] (::var\"#2#4\"{Dict{String, Int64}})(x::Int64)\n      @ Main /tmp/tmp8yojl255.jl:12\n\
    \    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect\n    \
    \  @ ./array.jl:695 [inlined]\n    [5] collect_similar\n      @ ./array.jl:606\
    \ [inlined]\n    [6] map\n      @ ./abstractarray.jl:2294 [inlined]\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp8yojl255.jl:12\n    [8] macro expansion\n      @ /tmp/tmp8yojl255.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp8yojl255.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8yojl255.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  KeyError: key 3 not\
    \ found\n  Stacktrace:\n    [1] getindex(h::Dict{String, Int64"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8yojl255.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list.sort()\n    return \" \".join(num_list)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpodxvvq0q.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpodxvvq0q.jl:8\n   [3] macro expansion\n     @ /tmp/tmpodxvvq0q.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpodxvvq0q.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpodxvvq0q.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpodxvvq0q.jl:8\n   [3] macro expansion\n     @ /tmp/tmpodxvvq0q.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpodxvvq0q.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpodxvvq0q.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpodxvvq0q.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpodxvvq0q.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpodxvvq0q.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpodxvvq0q.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpodxvvq0q.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpodxvvq0q.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [int(x) for x in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(x) for x in nums_int_sorted]\n    return \" \".join(nums_sorted)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpnl3m02fr.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpnl3m02fr.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmpnl3m02fr.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnl3m02fr.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnl3m02fr.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] sort_numbers(numbers::String)\n     @ Main /tmp/tmpnl3m02fr.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmpnl3m02fr.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnl3m02fr.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnl3m02fr.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: int\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmpnl3m02fr.jl:9\n   [2] macro expansion\n     @ /tmp/tmpnl3m02fr.jl:21\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnl3m02fr.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpnl3m02fr.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: int not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpnl3m02fr.jl:9\n   [2] macro expansion\n     @ /tmp/tmpnl3m02fr.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnl3m02fr.jl:18\ntest set:\
    \ Error During Test at /tmp/tm"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnl3m02fr.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmprj7iogpp.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmprj7iogpp.jl:9\n    [8] macro expansion\n      @ /tmp/tmprj7iogpp.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmprj7iogpp.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprj7iogpp.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmprj7iogpp.jl:9\n    [8] macro expansion\n      @ /tmp/tmprj7iogpp.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmprj7iogpp.jl:18\ntest set:\
    \ Er"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprj7iogpp.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwwflawum.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwwflawum.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwflawum.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwwflawum.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwwflawum.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwflawum.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwwflawum.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwwflawum.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwflawum.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwwflawum.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjt3f6oc_.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjt3f6oc_.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjt3f6oc_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjt3f6oc_.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjt3f6oc_.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjt3f6oc_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjt3f6oc_.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjt3f6oc_.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjt3f6oc_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjt3f6oc_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7hc8hemb.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7hc8hemb.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hc8hemb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7hc8hemb.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7hc8hemb.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hc8hemb.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7hc8hemb.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp7hc8hemb.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hc8hemb.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7hc8hemb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" =>\
    \ 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" =>\
    \ 8, \"nine\" => 9)\n    nums_int = [nums_dict[x] for x in nums]\n    sort!(nums_int)\n\
    \    nums_str = [key for (key, value) in nums_dict if value in nums_int]\n   \
    \ return join(nums_str, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph7ekhk3c.jl:22\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph7ekhk3c.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph7ekhk3c.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph7ekhk3c.jl:23\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmph7ekhk3c.jl:23 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph7ekhk3c.jl:19\ntest set: Test\
    \ Failed at /tmp/tmph7ekhk3c.jl:24\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmph7ekhk3c.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph7ekhk3c.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7ekhk3c.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_o5p28mv.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_o5p28mv.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_o5p28mv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_o5p28mv.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_o5p28mv.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_o5p28mv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_o5p28mv.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_o5p28mv.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_o5p28mv.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_o5p28mv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict()\n    for num in nums\n        nums_dict[num] = get_number(num)\n\
    \    end\n    sorted_nums = sort(collect(keys(nums_dict)))\n    return join(sorted_nums,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpj2_tyvtx.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  UndefVarError: get_number\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmpj2_tyvtx.jl:11\n   [2] macro expansion\n     @ /tmp/tmpj2_tyvtx.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpj2_tyvtx.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpj2_tyvtx.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  UndefVarError: get_number\
    \ not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n     @ Main\
    \ /tmp/tmpj2_tyvtx.jl:11\n   [2] macro expansion\n     @ /tmp/tmpj2_tyvtx.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpj2_tyvtx.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpj2_tyvtx.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  UndefVarError: get_number not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpj2_tyvtx.jl:11\n   [2] macro expansion\n     @ /tmp/tmpj2_tyvtx.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpj2_tyvtx.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpj2_tyvtx.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"six five four three two one zero\") == \"zero one two three four\
    \ five six\"\n  UndefVarError: get_number not defined\n  Stacktrace:\n   [1] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpj2_tyvtx.jl:11\n   [2] macro expansion\n     @ /tmp/tmpj2_tyvtx.jl:25\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inli"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj2_tyvtx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return \" \".join(nums)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxuiia8g5.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpxuiia8g5.jl:8\n   [3] macro expansion\n     @ /tmp/tmpxuiia8g5.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxuiia8g5.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxuiia8g5.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpxuiia8g5.jl:8\n   [3] macro expansion\n     @ /tmp/tmpxuiia8g5.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxuiia8g5.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxuiia8g5.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpxuiia8g5.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpxuiia8g5.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxuiia8g5.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpxuiia8g5.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpxuiia8g5.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxuiia8g5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpqccc_0cb.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpqccc_0cb.jl:8\n   [3] macro expansion\n     @ /tmp/tmpqccc_0cb.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqccc_0cb.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqccc_0cb.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpqccc_0cb.jl:8\n   [3] macro expansion\n     @ /tmp/tmpqccc_0cb.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqccc_0cb.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqccc_0cb.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpqccc_0cb.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpqccc_0cb.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqccc_0cb.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpqccc_0cb.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpqccc_0cb.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqccc_0cb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    return join(sort(split(numbers)),\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmplg3akj51.jl:17\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplg3akj51.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplg3akj51.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplg3akj51.jl:18\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmplg3akj51.jl:18 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplg3akj51.jl:14\ntest set: Test\
    \ Failed at /tmp/tmplg3akj51.jl:19\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmplg3akj51.jl:19 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplg3akj51.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplg3akj51.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_uozznff.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_uozznff.jl:8\n   [3] macro expansion\n     @ /tmp/tmp_uozznff.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_uozznff.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp_uozznff.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_uozznff.jl:8\n   [3] macro expansion\n     @ /tmp/tmp_uozznff.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_uozznff.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp_uozznff.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp_uozznff.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmp_uozznff.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_uozznff.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp_uozznff.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp_uozznff.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_uozznff.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz8nz2961.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz8nz2961.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz8nz2961.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz8nz2961.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpz8nz2961.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz8nz2961.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpz8nz2961.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpz8nz2961.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz8nz2961.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz8nz2961.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqvw823tn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqvw823tn.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqvw823tn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqvw823tn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpqvw823tn.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqvw823tn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqvw823tn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpqvw823tn.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqvw823tn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqvw823tn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp65xdvcvo.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp65xdvcvo.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp65xdvcvo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp65xdvcvo.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp65xdvcvo.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp65xdvcvo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp65xdvcvo.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp65xdvcvo.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp65xdvcvo.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp65xdvcvo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdrr86tud.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdrr86tud.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdrr86tud.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdrr86tud.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpdrr86tud.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdrr86tud.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdrr86tud.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpdrr86tud.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdrr86tud.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdrr86tud.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiivw_xnh.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiivw_xnh.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiivw_xnh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiivw_xnh.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpiivw_xnh.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiivw_xnh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiivw_xnh.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpiivw_xnh.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiivw_xnh.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiivw_xnh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoybydimq.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoybydimq.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoybydimq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoybydimq.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoybydimq.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoybydimq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoybydimq.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoybydimq.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoybydimq.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoybydimq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_dict = Dict()\n    num_dict[\"zero\"] = 0\n    num_dict[\"one\"\
    ] = 1\n    num_dict[\"two\"] = 2\n    num_dict[\"three\"] = 3\n    num_dict[\"\
    four\"] = 4\n    num_dict[\"five\"] = 5\n    num_dict[\"six\"] = 6\n    num_dict[\"\
    seven\"] = 7\n    num_dict[\"eight\"] = 8\n    num_dict[\"nine\"] = 9\n    num_list\
    \ = sort(num_list, by=num_dict)\n    return join(num_list, \" \")\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpjzswkp8s.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"three five nine\") == \"three five nine\"\n  MethodError:\
    \ objects of type Dict{Any, Any} are not callable\n  Stacktrace:\n    [1] lt(o::Base.Order.By{Dict{Any,\
    \ Any}, Base.Order.ForwardOrdering}, a::SubString{String}, b::SubString{String})\n\
    \      @ Base.Order ./ordering.jl:111\n    [2] sort!\n      @ ./sort.jl:502 [inlined]\n\
    \    [3] sort!(v::Vector{SubString{String}}, lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg,\
    \ o::Base.Order.By{Dict{Any, Any}, Base.Order.ForwardOrdering}, t::Vector{SubString{String}})\n\
    \      @ Base.Sort ./sort.jl:587\n    [4] sort!\n      @ ./sort.jl:586 [inlined]\n\
    \    [5] sort!\n      @ ./sort.jl:659 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:719\
    \ [inlined]\n    [7] #sort#9\n      @ ./sort.jl:766 [inlined]\n    [8] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpjzswkp8s.jl:20\n    [9] macro expansion\n      @ /tmp/tmpjzswkp8s.jl:30\
    \ [inlined]\n   [10] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpjzswkp8s.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpjzswkp8s.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  MethodError: objects of type Dict{Any, Any} are not callable\n  Stacktrace:\n\
    \    [1] lt(o::Base.Order.By{Dict{Any, Any}, Base.Order.ForwardOrdering}, a::SubString{String},\
    \ b::SubString{String})\n      @ Base.Order ./ordering.jl:111\n    [2] sort!\n\
    \      @ ./sort.jl:502 [inlined]\n    [3] sort!(v::Vector{SubString{String}},\
    \ lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg, o::Base.Order.By{Dict{Any,\
    \ Any}, Base.Order.ForwardOrdering}, t::Vector{SubString{String}})\n      @ Base.Sort\
    \ ./sort.jl:587\n    [4] sort!\n      @ ./sort.jl:586 [inlined]\n    [5] sort!\n\
    \      @ ./sort.jl:659 [inlined]\n    [6] #sort!#8\n      @ ./sort.jl:719 [inlined]\n\
    \    [7] #sort#9\n      @ ./sort.jl:766 [inlined]\n    [8] sort_numbers(numbers::String)\n\
    \  "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjzswkp8s.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzwld42_l.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzwld42_l.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzwld42_l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzwld42_l.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpzwld42_l.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzwld42_l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzwld42_l.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpzwld42_l.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzwld42_l.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzwld42_l.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl5rdezxf.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl5rdezxf.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl5rdezxf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl5rdezxf.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpl5rdezxf.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl5rdezxf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl5rdezxf.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpl5rdezxf.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl5rdezxf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl5rdezxf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpbu_7sq6v.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpbu_7sq6v.jl:8\n   [3] macro expansion\n     @ /tmp/tmpbu_7sq6v.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbu_7sq6v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpbu_7sq6v.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpbu_7sq6v.jl:8\n   [3] macro expansion\n     @ /tmp/tmpbu_7sq6v.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbu_7sq6v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpbu_7sq6v.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpbu_7sq6v.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpbu_7sq6v.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbu_7sq6v.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpbu_7sq6v.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpbu_7sq6v.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbu_7sq6v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpyahqsigk.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpyahqsigk.jl:8\n   [3] macro expansion\n     @ /tmp/tmpyahqsigk.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyahqsigk.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpyahqsigk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpyahqsigk.jl:8\n   [3] macro expansion\n     @ /tmp/tmpyahqsigk.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyahqsigk.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpyahqsigk.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpyahqsigk.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpyahqsigk.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyahqsigk.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpyahqsigk.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpyahqsigk.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyahqsigk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9m77om0f.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9m77om0f.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9m77om0f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9m77om0f.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp9m77om0f.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9m77om0f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9m77om0f.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp9m77om0f.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9m77om0f.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9m77om0f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n       \
    \ \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"five\"\
    \ => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" =>\
    \ 8,\n        \"nine\" => 9\n    )\n    num_list = sort(num_list, by=num_dict)\n\
    \    return join(num_list, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw0aav99e.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(\"three five nine\") == \"three five nine\"\
    \\n  MethodError: objects of type Dict{String, Int64} are not callable\\n  Stacktrace:\\\
    n    [1] lt(o::Base.Order.By{Dict{String, Int64}, Base.Order.ForwardOrdering},\
    \ a::SubString{String}, b::SubString{String})\\n      @ Base.Order ./ordering.jl:111\\\
    n    [2] sort!\\n      @ ./sort.jl:502 [inlined]\\n    [3] sort!(v::Vector{SubString{String}},\
    \ lo::Int64, hi::Int64, a::Base.Sort.MergeSortAlg, o::Base.Order.By{Dict{String,\
    \ Int64}, Base.Order.ForwardOrdering}, t::Vector{SubString{String}})\\n      @\
    \ Base.Sort ./sort.jl:587\\n    [4] sort!\\n      @ ./sort.jl:586 [inlined]\\\
    n    [5] sort!\\n      @ ./sort.jl:659 [inlined]\\n    [6] #sort!#8\\n      @\
    \ ./sort.jl:719 [inlined]\\n    [7] #sort#9\\n      @ ./sort.jl:766 [inlined]\\\
    n    [8] sort_numbers(numbers::String)\\n      @ Main /tmp/tmpw0aav99e.jl:21\\\
    n    [9] macro expansion\\n      @ /tmp/tmpw0aav99e.jl:31 [inlined]\\n   [10]\
    \ macro expansion\\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [11] top-level scope\\n      @ /tmp/tmpw0aav99e.jl:28\\ntest\
    \ set: Error During Test at /tmp/tmpw0aav99e.jl:32\\n  Test threw exception\\\
    n  Expression: candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\"\\n  MethodError: objects of type Dict{String, Int64} are\
    \ not callable\\n  Stacktrace:\\n    [1] lt(o::Base.Order.By{Dict{String, Int64},\
    \ Base.Order.ForwardOrdering}, a::SubString{String}, b::SubString{String})\\n\
    \      @ Base.Order ./ordering.jl:111\\n    [2] sort!\\n      @ ./sort.jl:502\
    \ [inlined]\\n    [3] sort!(v::Vector{SubString{String}}, lo::Int64, hi::Int64,\
    \ a::Base.Sort.MergeSortAlg, o::Base.Order.By{Dict{String, Int64}, Base.Order.ForwardOrdering},\
    \ t::Vector{SubString{String}})\\n      @ Base.Sort ./sort.jl:587\\n    [4] sort!\\\
    n      @ ./sort.jl:586 [inlined]\\n    [5] sort!\\n      @ ./sort.jl:659 [inlined]\\\
    n    [6] #sort!#8\\n      @ ./sort.jl:719 [inlined]\\n    [7] #sor"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4zxaoy9t.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp4zxaoy9t.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4zxaoy9t.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4zxaoy9t.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4zxaoy9t.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp4zxaoy9t.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4zxaoy9t.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4zxaoy9t.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4zxaoy9t.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmp4zxaoy9t.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmp4zxaoy9t.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4zxaoy9t.jl:16\ntest set:\
    \ Error During Test at /tmp/tmp4zxaoy9t.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmp4zxaoy9t.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4zxaoy9t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp21ib5six.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp21ib5six.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp21ib5six.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp21ib5six.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp21ib5six.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp21ib5six.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp21ib5six.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp21ib5six.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp21ib5six.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp21ib5six.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2o8_w68z.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2o8_w68z.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2o8_w68z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2o8_w68z.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp2o8_w68z.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2o8_w68z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2o8_w68z.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp2o8_w68z.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2o8_w68z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2o8_w68z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpieth4my1.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpieth4my1.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpieth4my1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpieth4my1.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpieth4my1.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpieth4my1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpieth4my1.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpieth4my1.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpieth4my1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpieth4my1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl02wrmac.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl02wrmac.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl02wrmac.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl02wrmac.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpl02wrmac.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl02wrmac.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl02wrmac.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpl02wrmac.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl02wrmac.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl02wrmac.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6p35y7sh.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6p35y7sh.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6p35y7sh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6p35y7sh.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6p35y7sh.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6p35y7sh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6p35y7sh.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6p35y7sh.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6p35y7sh.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6p35y7sh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzxh0_nlr.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzxh0_nlr.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxh0_nlr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzxh0_nlr.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpzxh0_nlr.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxh0_nlr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzxh0_nlr.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpzxh0_nlr.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxh0_nlr.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxh0_nlr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers,\
    \ \" \")\n    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmputern9_0.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmputern9_0.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmputern9_0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmputern9_0.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmputern9_0.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmputern9_0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmputern9_0.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmputern9_0.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmputern9_0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmputern9_0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    nums = sort(nums)\n    return \" \".join(nums)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkpgi4cie.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpkpgi4cie.jl:8\n   [3] macro expansion\n     @ /tmp/tmpkpgi4cie.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpgi4cie.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkpgi4cie.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpkpgi4cie.jl:8\n   [3] macro expansion\n     @ /tmp/tmpkpgi4cie.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpgi4cie.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkpgi4cie.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpkpgi4cie.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpkpgi4cie.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpgi4cie.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkpgi4cie.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpkpgi4cie.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkpgi4cie.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl1_o89gc.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl1_o89gc.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl1_o89gc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl1_o89gc.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl1_o89gc.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl1_o89gc.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpl1_o89gc.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl1_o89gc.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl1_o89gc.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl1_o89gc.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers,\
    \ \" \")\n    num_dict = Dict(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\"\
    \ => 3, \"four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\"\
    \ => 8, \"nine\" => 9)\n    num_list = [num_dict[i] for i in num_list]\n    num_list\
    \ = sort(num_list)\n    num_list = [key for (key, value) in num_dict if value\
    \ in num_list]\n    return join(num_list, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpiyh9casa.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(\"\") == \"\"\\n  KeyError: key \"\" not\
    \ found\\n  Stacktrace:\\n   [1] getindex\\n     @ ./dict.jl:482 [inlined]\\n\
    \   [2] #1\\n     @ ./none:0 [inlined]\\n   [3] iterate\\n     @ ./generator.jl:47\
    \ [inlined]\\n   [4] collect(itr::Base.Generator{Vector{SubString{String}}, var\"\
    #1#4\"{Dict{String, Int64}}})\\n     @ Base ./array.jl:681\\n   [5] sort_numbers(numbers::String)\\\
    n     @ Main /tmp/tmpiyh9casa.jl:10\\n   [6] macro expansion\\n     @ /tmp/tmpiyh9casa.jl:20\
    \ [inlined]\\n   [7] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpiyh9casa.jl:19\\ntest set:\
    \ Test Failed at /tmp/tmpiyh9casa.jl:22\\n  Expression: candidate(\"three five\
    \ nine\") == \"three five nine\"\\n   Evaluated: \"nine three five\" == \"three\
    \ five nine\"\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpiyh9casa.jl:22\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpiyh9casa.jl:19\\ntest set: Test\
    \ Failed at /tmp/tmpiyh9casa.jl:23\\n  Expression: candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\"\\n   Evaluated: \"\
    zero four eight nine five seven\" == \"zero four five seven eight nine\"\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /tmp/tmpiyh9casa.jl:23 [inlined]\\n [2] macro expansion\\\
    n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpiyh9casa.jl:19\\ntest set: Test\
    \ Failed at /tmp/tmpiyh9casa.jl:24\\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /tmp/tmpiyh9casa.jl:24 [inlined]\\n [2] macro expansion\\\
    n   @ /buildworker/worker/package_linux64/build/usr/sha"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpltj4r934.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpltj4r934.jl:8\n   [3] macro expansion\n     @ /tmp/tmpltj4r934.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpltj4r934.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpltj4r934.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpltj4r934.jl:8\n   [3] macro expansion\n     @ /tmp/tmpltj4r934.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpltj4r934.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpltj4r934.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpltj4r934.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpltj4r934.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpltj4r934.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpltj4r934.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpltj4r934.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpltj4r934.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    return \" \".join(num_list)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three\
    \ five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmputz_omzs.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmputz_omzs.jl:8\n   [3] macro expansion\n     @ /tmp/tmputz_omzs.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmputz_omzs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmputz_omzs.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmputz_omzs.jl:8\n   [3] macro expansion\n     @ /tmp/tmputz_omzs.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmputz_omzs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmputz_omzs.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmputz_omzs.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmputz_omzs.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmputz_omzs.jl:16\ntest set:\
    \ Error During Test at /tmp/tmputz_omzs.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmputz_omzs.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmputz_omzs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5oe8js3v.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5oe8js3v.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5oe8js3v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5oe8js3v.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5oe8js3v.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5oe8js3v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp5oe8js3v.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5oe8js3v.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5oe8js3v.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5oe8js3v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five nine\"\
    ) == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine eight\"\
    ) == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcth71kvn.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"fiveninethree\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcth71kvn.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcth71kvn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcth71kvn.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eightfivefourninesevenzero\"\
    \ == \"zero four five seven eight nine\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpcth71kvn.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcth71kvn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcth71kvn.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"fivefouronesixthreetwozero\"\
    \ == \"zero one two three four five six\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpcth71kvn.jl:21 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcth71kvn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcth71kvn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpas2w56vj.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpas2w56vj.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpas2w56vj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpas2w56vj.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpas2w56vj.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpas2w56vj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpas2w56vj.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpas2w56vj.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpas2w56vj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpas2w56vj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnrjyz5tz.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnrjyz5tz.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnrjyz5tz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnrjyz5tz.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpnrjyz5tz.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnrjyz5tz.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnrjyz5tz.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpnrjyz5tz.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnrjyz5tz.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnrjyz5tz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoikty02w.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoikty02w.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoikty02w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoikty02w.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoikty02w.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoikty02w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoikty02w.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpoikty02w.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoikty02w.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoikty02w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpblergzk3.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpblergzk3.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpblergzk3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpblergzk3.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpblergzk3.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpblergzk3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpblergzk3.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpblergzk3.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpblergzk3.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpblergzk3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpisjsu36o.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpisjsu36o.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpisjsu36o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpisjsu36o.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpisjsu36o.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpisjsu36o.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpisjsu36o.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpisjsu36o.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpisjsu36o.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpisjsu36o.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsqb2vjid.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsqb2vjid.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqb2vjid.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsqb2vjid.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpsqb2vjid.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqb2vjid.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsqb2vjid.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpsqb2vjid.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqb2vjid.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqb2vjid.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmwoy7e76.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmwoy7e76.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwoy7e76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmwoy7e76.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpmwoy7e76.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwoy7e76.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmwoy7e76.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpmwoy7e76.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwoy7e76.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwoy7e76.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp48urh3sv.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp48urh3sv.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp48urh3sv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp48urh3sv.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp48urh3sv.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp48urh3sv.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp48urh3sv.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp48urh3sv.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp48urh3sv.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp48urh3sv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, n) for n in nums]\n    sorted_nums = sort(nums_int)\n\
    \    sorted_nums_str = [string(n) for n in sorted_nums]\n    return join(sorted_nums_str,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp42jrmc18.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp42jrmc18.jl:9\n    [8] macro expansion\n      @ /tmp/tmp42jrmc18.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp42jrmc18.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp42jrmc18.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmp42jrmc18.jl:9\n    [8] macro expansion\n      @ /tmp/tmp42jrmc18.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp42jrmc18.jl:18\ntest set:\
    \ Er"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp42jrmc18.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphxpm_7_g.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphxpm_7_g.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphxpm_7_g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphxpm_7_g.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmphxpm_7_g.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphxpm_7_g.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphxpm_7_g.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmphxpm_7_g.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphxpm_7_g.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphxpm_7_g.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxw0wo3tg.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxw0wo3tg.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw0wo3tg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxw0wo3tg.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxw0wo3tg.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw0wo3tg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpxw0wo3tg.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxw0wo3tg.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw0wo3tg.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxw0wo3tg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppds09dvt.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppds09dvt.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppds09dvt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppds09dvt.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmppds09dvt.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppds09dvt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppds09dvt.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmppds09dvt.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppds09dvt.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppds09dvt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3amd6bsh.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3amd6bsh.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3amd6bsh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3amd6bsh.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp3amd6bsh.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3amd6bsh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3amd6bsh.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp3amd6bsh.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3amd6bsh.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3amd6bsh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = numbers.split(\"\
    \ \")\n    sort!(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv1ezub70.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpv1ezub70.jl:8\n   [3] macro expansion\n     @ /tmp/tmpv1ezub70.jl:17\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv1ezub70.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpv1ezub70.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpv1ezub70.jl:8\n   [3] macro expansion\n     @ /tmp/tmpv1ezub70.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv1ezub70.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpv1ezub70.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmpv1ezub70.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmpv1ezub70.jl:19 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv1ezub70.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpv1ezub70.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmpv1ezub70.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv1ezub70.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpin1onag8.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpin1onag8.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpin1onag8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpin1onag8.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpin1onag8.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpin1onag8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpin1onag8.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpin1onag8.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpin1onag8.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpin1onag8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_int = [parse(Int, num) for num in nums]\n    nums_int_sorted = sort(nums_int)\n\
    \    nums_sorted = [string(num) for num in nums_int_sorted]\n    return join(nums_sorted,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdduzsllr.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpdduzsllr.jl:9\n    [8] macro expansion\n      @ /tmp/tmpdduzsllr.jl:20\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpdduzsllr.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpdduzsllr.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpdduzsllr.jl:9\n    [8] macro expansion\n      @ /tmp/tmpdduzsllr.jl:21\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpdduzsllr.jl:18\ntest set:\
    \ Er"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdduzsllr.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # split the string\
    \ into a vector of strings\n    nums = split(numbers)\n    # convert the vector\
    \ of strings to a vector of integers\n    nums = parse.(Int, nums)\n    # sort\
    \ the vector of integers\n    sort!(nums)\n    # convert the vector of integers\
    \ to a vector of strings\n    nums = string.(nums)\n    # join the vector of strings\
    \ into a single string\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqiqkio56.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] macro expansion\n      @ ./broadcast.jl:984\
    \ [inlined]\n    [8] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   \
    \ [9] copyto!\n      @ ./broadcast.jl:983 [inlined]\n   [10] copyto!\n      @\
    \ ./broadcast.jl:936 [inlined]\n   [11] copy\n      @ ./broadcast.jl:908 [inlined]\n\
    \   [12] materialize\n      @ ./broadcast.jl:883 [inlined]\n   [13] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpqiqkio56.jl:11\n   [14] macro expansion\n      @ /tmp/tmpqiqkio56.jl:25\
    \ [inlined]\n   [15] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [16] top-level scope\n      @ /tmp/tmpqiqkio56.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpqiqkio56.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] _broadcast_getindex_evalf\n      @ ./broadcast.jl:648 [inlined]\n\
    \    [5] _broadcast_getindex\n      @ ./broadcast.jl:631 [inlined]\n    [6] getindex\n\
    \      @ ./broadcast.jl:575 [inlined]\n    [7] mac"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqiqkio56.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n      \
    \  \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"\
    five\" => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\"\
    \ => 8,\n        \"nine\" => 9\n    )\n    nums_int = [nums_dict[n] for n in nums]\n\
    \    nums_int_sorted = sort(nums_int)\n    nums_sorted = [nums[i] for i in nums_int_sorted]\n\
    \    return join(nums_sorted, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpitfq7afv.jl:32\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  BoundsError: attempt to access\
    \ 1-element Vector{SubString{String}} at index [3]\n  Stacktrace:\n   [1] getindex\n\
    \     @ ./array.jl:805 [inlined]\n   [2] #2\n     @ ./none:0 [inlined]\n   [3]\
    \ iterate\n     @ ./generator.jl:47 [inlined]\n   [4] collect\n     @ ./array.jl:681\
    \ [inlined]\n   [5] sort_numbers(numbers::String)\n     @ Main /tmp/tmpitfq7afv.jl:23\n\
    \   [6] macro expansion\n     @ /tmp/tmpitfq7afv.jl:32 [inlined]\n   [7] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmpitfq7afv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpitfq7afv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  BoundsError: attempt\
    \ to access 3-element Vector{SubString{String}} at index [5]\n  Stacktrace:\n\
    \    [1] getindex\n      @ ./array.jl:805 [inlined]\n    [2] #2\n      @ ./none:0\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect_to!\n\
    \      @ ./array.jl:728 [inlined]\n    [5] collect_to_with_first!(dest::Vector{SubString{String}},\
    \ v1::SubString{String}, itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Vector{SubString{String}}}},\
    \ st::Int64)\n      @ Base ./array.jl:706\n    [6] collect\n      @ ./array.jl:687\
    \ [inlined]\n    [7] sort_numbers(numbers::String)\n      @ Main /tmp/tmpitfq7afv.jl:23\n\
    \    [8] macro expansion\n      @ /tmp/tmpitfq7afv.jl:33 [inlined]\n    [9] macro\
    \ expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpitfq7afv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpitfq7afv.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  BoundsError: attempt to access 6-element Vector{SubString{String}}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:805 [inlined]\n\
    \   [2]"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpitfq7afv.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers_list\
    \ = split(numbers, \" \")\n    numbers_list = sort(numbers_list)\n    return join(numbers_list,\
    \ \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"\
    three five nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1lbnat_w.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1lbnat_w.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1lbnat_w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1lbnat_w.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp1lbnat_w.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1lbnat_w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1lbnat_w.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp1lbnat_w.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1lbnat_w.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1lbnat_w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    num_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n       \
    \ \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"five\"\
    \ => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\" =>\
    \ 8,\n        \"nine\" => 9\n    )\n    nums = [num_dict[n] for n in nums]\n \
    \   nums = sort(nums)\n    nums = [key for key in num_dict if num_dict[key] in\
    \ nums]\n    return join(nums, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\"\
    ) == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five nine\"\
    )\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6vg21067.jl:31\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  KeyError: key \"zero\" => 0 not found\n\
    \  Stacktrace:\n    [1] getindex(h::Dict{String, Int64}, key::Pair{String, Int64})\n\
    \      @ Base ./dict.jl:482\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(key::Pair{String,\
    \ Int64})\n      @ Main ./none:0\n    [3] iterate\n      @ ./iterators.jl:451\
    \ [inlined]\n    [4] iterate\n      @ ./generator.jl:44 [inlined]\n    [5] grow_to!\n\
    \      @ ./array.jl:743 [inlined]\n    [6] collect\n      @ ./array.jl:678 [inlined]\n\
    \    [7] sort_numbers(numbers::String)\n      @ Main /tmp/tmp6vg21067.jl:23\n\
    \    [8] macro expansion\n      @ /tmp/tmp6vg21067.jl:31 [inlined]\n    [9] macro\
    \ expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp6vg21067.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp6vg21067.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  KeyError: key \"zero\" => 0 not found\n\
    \  Stacktrace:\n    [1] getindex(h::Dict{String, Int64}, key::Pair{String, Int64})\n\
    \      @ Base ./dict.jl:482\n    [2] (::var\"#2#4\"{Dict{String, Int64}})(key::Pair{String,\
    \ Int64})\n      @ Main ./none:0\n    [3] iterate\n      @ ./iterators.jl:451\
    \ [inlined]\n    [4] iterate\n      @ ./generator.jl:44 [inlined]\n    [5] grow_to!\n\
    \      @ ./array.jl:743 [inlined]\n    [6] collect\n      @ ./array.jl:678 [inlined]\n\
    \    [7] sort_numbers(numbers::String)\n      @ Main /tmp/tmp6vg21067.jl:23\n\
    \    [8] macro expansion\n      @ /tmp/tmp6vg21067.jl:32 [inlined]\n    [9] macro\
    \ expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp6vg21067.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp6vg21067.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  KeyError: key \"zero\"\
    \ => 0 not found\n  Stacktrace:\n    [1] getindex(h::Dict{String, Int64}, key::Pair{String,\
    \ Int64})\n      @ Base ./dic"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6vg21067.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums_dict = Dict(\n        \"zero\" => 0,\n        \"one\" => 1,\n      \
    \  \"two\" => 2,\n        \"three\" => 3,\n        \"four\" => 4,\n        \"\
    five\" => 5,\n        \"six\" => 6,\n        \"seven\" => 7,\n        \"eight\"\
    \ => 8,\n        \"nine\" => 9\n    )\n    nums_int = [nums_dict[x] for x in nums]\n\
    \    sort!(nums_int)\n    nums_str = [key for (key, value) in nums_dict if value\
    \ in nums_int]\n    return join(nums_str, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprrk75bkx.jl:33\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"nine three five\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprrk75bkx.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprrk75bkx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprrk75bkx.jl:34\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"zero four\
    \ eight nine five seven\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprrk75bkx.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprrk75bkx.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprrk75bkx.jl:35\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"zero\
    \ two four six one three five\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprrk75bkx.jl:35 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprrk75bkx.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprrk75bkx.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    numbers = split(numbers)\n\
    \    numbers = sort(numbers)\n    return join(numbers, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiswu68l9.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiswu68l9.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiswu68l9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiswu68l9.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpiswu68l9.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiswu68l9.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpiswu68l9.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpiswu68l9.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiswu68l9.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiswu68l9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = numbers.split(\"\
    \ \")\n    num_list = sort(num_list)\n    num_list = join(num_list, \" \")\n \
    \   return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = sort_numbers;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"three\") == \"three\")\n\
    \t@test(candidate(\"three five nine\") == \"three five nine\")\n\t@test(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\")\n\t\
    @test(candidate(\"six five four three two one zero\") == \"zero one two three\
    \ four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppf0go3p2.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmppf0go3p2.jl:8\n   [3] macro expansion\n     @ /tmp/tmppf0go3p2.jl:18\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppf0go3p2.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppf0go3p2.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"three\") == \"three\"\n  type String has no field split\n  Stacktrace:\n\
    \   [1] getproperty(x::String, f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmppf0go3p2.jl:8\n   [3] macro expansion\n     @ /tmp/tmppf0go3p2.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppf0go3p2.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppf0go3p2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  type String has no\
    \ field split\n  Stacktrace:\n   [1] getproperty(x::String, f::Symbol)\n     @\
    \ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n     @ Main /tmp/tmppf0go3p2.jl:8\n\
    \   [3] macro expansion\n     @ /tmp/tmppf0go3p2.jl:20 [inlined]\n   [4] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppf0go3p2.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppf0go3p2.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"five zero four seven nine eight\") == \"zero four five seven eight\
    \ nine\"\n  type String has no field split\n  Stacktrace:\n   [1] getproperty(x::String,\
    \ f::Symbol)\n     @ Base ./Base.jl:33\n   [2] sort_numbers(numbers::String)\n\
    \     @ Main /tmp/tmppf0go3p2.jl:8\n   [3] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppf0go3p2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    num_list = split(numbers)\n\
    \    num_list = sort(num_list)\n    return join(num_list, \" \")\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\"\
    )\n\t@test(candidate(\"three\") == \"three\")\n\t@test(candidate(\"three five\
    \ nine\") == \"three five nine\")\n\t@test(candidate(\"five zero four seven nine\
    \ eight\") == \"zero four five seven eight nine\")\n\t@test(candidate(\"six five\
    \ four three two one zero\") == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2voqqb84.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2voqqb84.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2voqqb84.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2voqqb84.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp2voqqb84.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2voqqb84.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2voqqb84.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp2voqqb84.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2voqqb84.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2voqqb84.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    nums = split(numbers)\n\
    \    nums = sort(nums)\n    return join(nums, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppui5igsy.jl:19\n  Expression: candidate(\"\
    three five nine\") == \"three five nine\"\n   Evaluated: \"five nine three\" ==\
    \ \"three five nine\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppui5igsy.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppui5igsy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppui5igsy.jl:20\n  Expression: candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\"\n   Evaluated: \"eight\
    \ five four nine seven zero\" == \"zero four five seven eight nine\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmppui5igsy.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppui5igsy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppui5igsy.jl:21\n  Expression: candidate(\"six five four three\
    \ two one zero\") == \"zero one two three four five six\"\n   Evaluated: \"five\
    \ four one six three two zero\" == \"zero one two three four five six\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmppui5igsy.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppui5igsy.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppui5igsy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    \    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers('three one five')\n    'one three five'\n \
    \   \"\"\"\nfunction sort_numbers(numbers::String)::String \n    # Split the string\
    \ into a vector of strings\n    numbers_vec = split(numbers)\n    # Convert the\
    \ vector of strings to a vector of integers\n    numbers_int = [parse(Int, x)\
    \ for x in numbers_vec]\n    # Sort the vector of integers\n    sort!(numbers_int)\n\
    \    # Convert the vector of integers to a vector of strings\n    numbers_str\
    \ = [string(x) for x in numbers_int]\n    # Join the vector of strings into a\
    \ single string\n    return join(numbers_str, \" \")\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sort_numbers;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    three\") == \"three\")\n\t@test(candidate(\"three five nine\") == \"three five\
    \ nine\")\n\t@test(candidate(\"five zero four seven nine eight\") == \"zero four\
    \ five seven eight nine\")\n\t@test(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb7wkj84v.jl:25\n  Test threw exception\n\
    \  Expression: candidate(\"three\") == \"three\"\n  ArgumentError: invalid base\
    \ 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpb7wkj84v.jl:11\n    [8] macro expansion\n      @ /tmp/tmpb7wkj84v.jl:25\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpb7wkj84v.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpb7wkj84v.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"three five nine\") == \"three five nine\"\n  ArgumentError: invalid\
    \ base 10 digit 't' in \"three\"\n  Stacktrace:\n    [1] tryparse_internal(#unused#::Type{Int64},\
    \ s::SubString{String}, startpos::Int64, endpos::Int64, base_::Int64, raise::Bool)\n\
    \      @ Base ./parse.jl:137\n    [2] parse(::Type{Int64}, s::SubString{String};\
    \ base::Nothing)\n      @ Base ./parse.jl:241\n    [3] parse\n      @ ./parse.jl:241\
    \ [inlined]\n    [4] #1\n      @ ./none:0 [inlined]\n    [5] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [6] collect(itr::Base.Generator{Vector{SubString{String}},\
    \ var\"#1#2\"})\n      @ Base ./array.jl:681\n    [7] sort_numbers(numbers::String)\n\
    \      @ Main /tmp/tmpb7wkj84v.jl:11\n    [8] macro expansion\n      @ /tmp/tmpb7wkj84v.jl:26\
    \ [inlined]\n    [9] macro expansion\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpb7wkj84v.jl:23\ntest set: "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb7wkj84v.jl:21\n"
  exit_code: 1
  status: SyntaxError

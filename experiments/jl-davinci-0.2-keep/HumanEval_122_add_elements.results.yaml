name: HumanEval_122_add_elements
language: julia
results:
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo1f_4mq4.jl:1\nin expression starting at /tmp/tmpo1f_4mq4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppn_wb8d3.jl:1\nin expression starting at /tmp/tmppn_wb8d3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1alolyz8.jl:1\nin expression starting at /tmp/tmp1alolyz8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0v46vvuj.jl:1\nin expression starting at /tmp/tmp0v46vvuj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn5vwigh5.jl:1\nin expression starting at /tmp/tmpn5vwigh5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsy1ffyg8.jl:1\nin expression starting at /tmp/tmpsy1ffyg8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2u38ajof.jl:1\nin expression starting at /tmp/tmp2u38ajof.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpck8f4ngb.jl:1\nin expression starting at /tmp/tmpck8f4ngb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxfncolyw.jl:1\nin expression starting at /tmp/tmpxfncolyw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppac_u7ih.jl:1\nin expression starting at /tmp/tmppac_u7ih.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2r_3ykou.jl:1\nin expression starting at /tmp/tmp2r_3ykou.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl2py5ksq.jl:1\nin expression starting at /tmp/tmpl2py5ksq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptc1edemc.jl:1\nin expression starting at /tmp/tmptc1edemc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcvemon94.jl:1\nin expression starting at /tmp/tmpcvemon94.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdbafwof_.jl:1\nin expression starting at /tmp/tmpdbafwof_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplupsjqb_.jl:1\nin expression starting at /tmp/tmplupsjqb_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7dqm3e3k.jl:1\nin expression starting at /tmp/tmp7dqm3e3k.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbv26av_d.jl:1\nin expression starting at /tmp/tmpbv26av_d.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpajf1nnig.jl:1\nin expression starting at /tmp/tmpajf1nnig.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp48nn0dm1.jl:1\nin expression starting at /tmp/tmp48nn0dm1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_csnh7p1.jl:1\nin expression starting at /tmp/tmp_csnh7p1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn2fxd487.jl:1\nin expression starting at /tmp/tmpn2fxd487.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplhyxr482.jl:1\nin expression starting at /tmp/tmplhyxr482.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcm5s_m6h.jl:1\nin expression starting at /tmp/tmpcm5s_m6h.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr_ytr3j1.jl:1\nin expression starting at /tmp/tmpr_ytr3j1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpakiwnc96.jl:1\nin expression starting at /tmp/tmpakiwnc96.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb9n4uxc8.jl:1\nin expression starting at /tmp/tmpb9n4uxc8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqgmhk1un.jl:1\nin expression starting at /tmp/tmpqgmhk1un.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9bcp40oi.jl:1\nin expression starting at /tmp/tmp9bcp40oi.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpebegat8d.jl:1\nin expression starting at /tmp/tmpebegat8d.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2fb2yv6j.jl:1\nin expression starting at /tmp/tmp2fb2yv6j.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps1668x8p.jl:1\nin expression starting at /tmp/tmps1668x8p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wz7wiq9.jl:1\nin expression starting at /tmp/tmp0wz7wiq9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfb469488.jl:1\nin expression starting at /tmp/tmpfb469488.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5k7o_qrm.jl:1\nin expression starting at /tmp/tmp5k7o_qrm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgklijq60.jl:1\nin expression starting at /tmp/tmpgklijq60.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpca4ptecm.jl:1\nin expression starting at /tmp/tmpca4ptecm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkvolpgrw.jl:1\nin expression starting at /tmp/tmpkvolpgrw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp737vkpdn.jl:1\nin expression starting at /tmp/tmp737vkpdn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpez7gj7jv.jl:1\nin expression starting at /tmp/tmpez7gj7jv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9jm0ajae.jl:1\nin expression starting at /tmp/tmp9jm0ajae.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp02ty2ll4.jl:1\nin expression starting at /tmp/tmp02ty2ll4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprz8yezub.jl:1\nin expression starting at /tmp/tmprz8yezub.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnlkyr7hc.jl:1\nin expression starting at /tmp/tmpnlkyr7hc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3t3v4u89.jl:1\nin expression starting at /tmp/tmp3t3v4u89.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpghpp5sfc.jl:1\nin expression starting at /tmp/tmpghpp5sfc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Returns the sum of the elements with at most\
    \ two digits from the first k elements of arr.\n    \"\"\"\n    total = 0\n  \
    \  for i in 1:k\n        if arr[i] < 100\n            total += arr[i]\n      \
    \  end\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1kqptus3.jl:1\nin expression starting at /tmp/tmp1kqptus3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr2oe2tci.jl:1\nin expression starting at /tmp/tmpr2oe2tci.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw1cy9e6w.jl:1\nin expression starting at /tmp/tmpw1cy9e6w.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9op6bv52.jl:1\nin expression starting at /tmp/tmp9op6bv52.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4gjo_fwh.jl:1\nin expression starting at /tmp/tmp4gjo_fwh.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4isl411j.jl:1\nin expression starting at /tmp/tmp4isl411j.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_7e6ovhu.jl:1\nin expression starting at /tmp/tmp_7e6ovhu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfmyaotdu.jl:1\nin expression starting at /tmp/tmpfmyaotdu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv6ye4ut8.jl:1\nin expression starting at /tmp/tmpv6ye4ut8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpylgiy_yj.jl:1\nin expression starting at /tmp/tmpylgiy_yj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwunh_u2p.jl:1\nin expression starting at /tmp/tmpwunh_u2p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp4ee2so6.jl:1\nin expression starting at /tmp/tmpp4ee2so6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcprmauou.jl:1\nin expression starting at /tmp/tmpcprmauou.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpys0k8ir7.jl:1\nin expression starting at /tmp/tmpys0k8ir7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp293hoib_.jl:1\nin expression starting at /tmp/tmp293hoib_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9sz5y_23.jl:1\nin expression starting at /tmp/tmp9sz5y_23.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tlfw_zc.jl:1\nin expression starting at /tmp/tmp7tlfw_zc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg9a32dwi.jl:1\nin expression starting at /tmp/tmpg9a32dwi.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu59ja4fu.jl:1\nin expression starting at /tmp/tmpu59ja4fu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc2ay1rc3.jl:1\nin expression starting at /tmp/tmpc2ay1rc3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkgup0hj4.jl:1\nin expression starting at /tmp/tmpkgup0hj4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa00_pzak.jl:1\nin expression starting at /tmp/tmpa00_pzak.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6dbr7yv8.jl:1\nin expression starting at /tmp/tmp6dbr7yv8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp79eg3d3m.jl:1\nin expression starting at /tmp/tmp79eg3d3m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphistacmy.jl:1\nin expression starting at /tmp/tmphistacmy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpupsobd3y.jl:1\nin expression starting at /tmp/tmpupsobd3y.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps1kmsl96.jl:1\nin expression starting at /tmp/tmps1kmsl96.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3jv4z0sf.jl:1\nin expression starting at /tmp/tmp3jv4z0sf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpshojmqpu.jl:1\nin expression starting at /tmp/tmpshojmqpu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4jgvcja9.jl:1\nin expression starting at /tmp/tmp4jgvcja9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1i8l0ltm.jl:1\nin expression starting at /tmp/tmp1i8l0ltm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwso1p5t0.jl:1\nin expression starting at /tmp/tmpwso1p5t0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6kkrjdui.jl:1\nin expression starting at /tmp/tmp6kkrjdui.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnw7i7p25.jl:1\nin expression starting at /tmp/tmpnw7i7p25.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5s51g16o.jl:1\nin expression starting at /tmp/tmp5s51g16o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpusewgse_.jl:1\nin expression starting at /tmp/tmpusewgse_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkfvgv22a.jl:1\nin expression starting at /tmp/tmpkfvgv22a.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpihkiimjm.jl:1\nin expression starting at /tmp/tmpihkiimjm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6z5hy5b6.jl:1\nin expression starting at /tmp/tmp6z5hy5b6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tg8ue27.jl:1\nin expression starting at /tmp/tmp7tg8ue27.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9r6r5p0u.jl:1\nin expression starting at /tmp/tmp9r6r5p0u.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9ujf4hsy.jl:1\nin expression starting at /tmp/tmp9ujf4hsy.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpar8ol_4x.jl:1\nin expression starting at /tmp/tmpar8ol_4x.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnkta69m2.jl:1\nin expression starting at /tmp/tmpnkta69m2.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Returns the sum of the elements with at most\
    \ two digits from the first k elements of arr.\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:k\n        if arr[i] < 100\n            sum += arr[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplsfwl8x7.jl:1\nin expression starting at /tmp/tmplsfwl8x7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7qfq_6do.jl:1\nin expression starting at /tmp/tmp7qfq_6do.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmporyybs6j.jl:1\nin expression starting at /tmp/tmporyybs6j.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvtmfizr5.jl:1\nin expression starting at /tmp/tmpvtmfizr5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjax7q_5i.jl:1\nin expression starting at /tmp/tmpjax7q_5i.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswvjwz29.jl:1\nin expression starting at /tmp/tmpswvjwz29.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8zj8h8go.jl:1\nin expression starting at /tmp/tmp8zj8h8go.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    total = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            total += arr[i]\n        end\n    end\n    return total\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2,\
    \ -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000,\
    \ 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\
    \t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1],\
    \ 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbxh34s1z.jl:1\nin expression starting at /tmp/tmpbxh34s1z.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqu6saott.jl:1\nin expression starting at /tmp/tmpqu6saott.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk7rsv1vi.jl:1\nin expression starting at /tmp/tmpk7rsv1vi.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyh466ymk.jl:1\nin expression starting at /tmp/tmpyh466ymk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3pchj1eb.jl:1\nin expression starting at /tmp/tmp3pchj1eb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9m7ejrdi.jl:1\nin expression starting at /tmp/tmp9m7ejrdi.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2610pdm0.jl:1\nin expression starting at /tmp/tmp2610pdm0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb8i9r8k8.jl:1\nin expression starting at /tmp/tmpb8i9r8k8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpszrpttr4.jl:1\nin expression starting at /tmp/tmpszrpttr4.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg5a66tdg.jl:1\nin expression starting at /tmp/tmpg5a66tdg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rpoiw6p.jl:1\nin expression starting at /tmp/tmp4rpoiw6p.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq4u4g_bt.jl:1\nin expression starting at /tmp/tmpq4u4g_bt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90nj4zjm.jl:1\nin expression starting at /tmp/tmp90nj4zjm.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1kbxbbm9.jl:1\nin expression starting at /tmp/tmp1kbxbbm9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2075y0gl.jl:1\nin expression starting at /tmp/tmp2075y0gl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8r3zwvsr.jl:1\nin expression starting at /tmp/tmp8r3zwvsr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppz0svq3_.jl:1\nin expression starting at /tmp/tmppz0svq3_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp49wihxt_.jl:1\nin expression starting at /tmp/tmp49wihxt_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7e000olv.jl:1\nin expression starting at /tmp/tmp7e000olv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpshw7f6c3.jl:1\nin expression starting at /tmp/tmpshw7f6c3.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp99ltvq6m.jl:1\nin expression starting at /tmp/tmp99ltvq6m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpphlqo8oe.jl:1\nin expression starting at /tmp/tmpphlqo8oe.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5iocvz5s.jl:1\nin expression starting at /tmp/tmp5iocvz5s.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdwudqghw.jl:1\nin expression starting at /tmp/tmpdwudqghw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdn4mhoeg.jl:1\nin expression starting at /tmp/tmpdn4mhoeg.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx34yzbnv.jl:1\nin expression starting at /tmp/tmpx34yzbnv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcv6hgek0.jl:1\nin expression starting at /tmp/tmpcv6hgek0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp72ulucx1.jl:1\nin expression starting at /tmp/tmp72ulucx1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwrkn_8jj.jl:1\nin expression starting at /tmp/tmpwrkn_8jj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp_e7rr0r.jl:1\nin expression starting at /tmp/tmpp_e7rr0r.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpac68ysk6.jl:1\nin expression starting at /tmp/tmpac68ysk6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb991g3t9.jl:1\nin expression starting at /tmp/tmpb991g3t9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpddpit29v.jl:1\nin expression starting at /tmp/tmpddpit29v.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqdj323ha.jl:1\nin expression starting at /tmp/tmpqdj323ha.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprb_t34sk.jl:1\nin expression starting at /tmp/tmprb_t34sk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjek283x7.jl:1\nin expression starting at /tmp/tmpjek283x7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphfy3vms8.jl:1\nin expression starting at /tmp/tmphfy3vms8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm1_juk48.jl:1\nin expression starting at /tmp/tmpm1_juk48.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2zg54x2h.jl:1\nin expression starting at /tmp/tmp2zg54x2h.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprvug4eb_.jl:1\nin expression starting at /tmp/tmprvug4eb_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp91p2veyr.jl:1\nin expression starting at /tmp/tmp91p2veyr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvsbwbvly.jl:1\nin expression starting at /tmp/tmpvsbwbvly.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl6qhtcd1.jl:1\nin expression starting at /tmp/tmpl6qhtcd1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i = 1:k\n        if arr[i] < 100\n \
    \           sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8laknsvo.jl:1\nin expression starting at /tmp/tmp8laknsvo.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcox4f6vo.jl:1\nin expression starting at /tmp/tmpcox4f6vo.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj7ygfyf9.jl:1\nin expression starting at /tmp/tmpj7ygfyf9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj6u5fgpq.jl:1\nin expression starting at /tmp/tmpj6u5fgpq.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplowzvnax.jl:1\nin expression starting at /tmp/tmplowzvnax.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8f6gcfvu.jl:1\nin expression starting at /tmp/tmp8f6gcfvu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjblwv5m6.jl:1\nin expression starting at /tmp/tmpjblwv5m6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdk_a5lzu.jl:1\nin expression starting at /tmp/tmpdk_a5lzu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8j_h865e.jl:1\nin expression starting at /tmp/tmp8j_h865e.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_nw48qh8.jl:1\nin expression starting at /tmp/tmp_nw48qh8.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 100\n\
    \            sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxqnhejpx.jl:1\nin expression starting at /tmp/tmpxqnhejpx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpttq3y3gk.jl:1\nin expression starting at /tmp/tmpttq3y3gk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9],\
    \ k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1\
    \ <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdnfx7ytp.jl:1\nin expression starting at /tmp/tmpdnfx7ytp.jl:1\n"
  exit_code: 1
  status: SyntaxError

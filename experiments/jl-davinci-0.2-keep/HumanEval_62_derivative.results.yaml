name: HumanEval_62_derivative
language: julia
results:
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn4q2c6sv.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn4q2c6sv.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn4q2c6sv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn4q2c6sv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpss183v08.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpss183v08.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpss183v08.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpss183v08.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpss183v08.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpss183v08.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpss183v08.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpss183v08.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpss183v08.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpss183v08.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpss183v08.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpss183v08.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpss183v08.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpss183v08.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpss183v08.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpss183v08.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9r8nirf4.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r8nirf4.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r8nirf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r8nirf4.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp9r8nirf4.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r8nirf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r8nirf4.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp9r8nirf4.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r8nirf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r8nirf4.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp9r8nirf4.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r8nirf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r8nirf4.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r8nirf4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r8nirf4.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9r8nirf4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqtq430e6.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpqtq430e6.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqtq430e6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqtq430e6.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpqtq430e6.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqtq430e6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqtq430e6.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpqtq430e6.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqtq430e6.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqtq430e6.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpqtq430e6.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqtq430e6.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtq430e6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    # YOUR CODE HERE\n    if length(xs) == 1\n        return [0]\n    else\n\
    \        return [xs[i] * i for i in 2:length(xs)]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxgj1xrqf.jl:22\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpxgj1xrqf.jl:22 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxgj1xrqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxgj1xrqf.jl:23\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpxgj1xrqf.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxgj1xrqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxgj1xrqf.jl:24\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpxgj1xrqf.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxgj1xrqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxgj1xrqf.jl:25\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpxgj1xrqf.jl:25 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxgj1xrqf.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxgj1xrqf.jl:26\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxgj1xrqf.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxgj1xrqf.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxgj1xrqf.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    # YOUR CODE HERE\n    return [i*xs[i] for i in 1:length(xs)-1]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzsy8twp8.jl:18\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpzsy8twp8.jl:18 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzsy8twp8.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpzsy8twp8.jl:19\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpzsy8twp8.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzsy8twp8.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpzsy8twp8.jl:20\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpzsy8twp8.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzsy8twp8.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpzsy8twp8.jl:21\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpzsy8twp8.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzsy8twp8.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzsy8twp8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8a0geivm.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp8a0geivm.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8a0geivm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8a0geivm.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8a0geivm.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8a0geivm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8a0geivm.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8a0geivm.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8a0geivm.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8a0geivm.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp8a0geivm.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8a0geivm.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8a0geivm.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpngbv9833.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpngbv9833.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpngbv9833.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpngbv9833.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpngbv9833.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpngbv9833.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpngbv9833.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpngbv9833.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpngbv9833.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpngbv9833.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpngbv9833.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpngbv9833.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpngbv9833.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpluxnmrci.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpluxnmrci.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpluxnmrci.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpluxnmrci.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpluxnmrci.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpluxnmrci.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpluxnmrci.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpluxnmrci.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpluxnmrci.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpluxnmrci.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpluxnmrci.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpluxnmrci.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpluxnmrci.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpluxnmrci.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpluxnmrci.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpluxnmrci.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs2 = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n      \
    \  xs2[i] = xs[i+1] * i\n    end\n    return xs2\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpatwa82tg.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpatwa82tg.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpatwa82tg.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpatwa82tg.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppwm2mbx4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmppwm2mbx4.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwm2mbx4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppwm2mbx4.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppwm2mbx4.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwm2mbx4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppwm2mbx4.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppwm2mbx4.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwm2mbx4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppwm2mbx4.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmppwm2mbx4.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwm2mbx4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwm2mbx4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6_n76zpx.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp6_n76zpx.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6_n76zpx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6_n76zpx.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6_n76zpx.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6_n76zpx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6_n76zpx.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6_n76zpx.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6_n76zpx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6_n76zpx.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp6_n76zpx.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6_n76zpx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6_n76zpx.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6_n76zpx.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6_n76zpx.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6_n76zpx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcguvzxh7.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpcguvzxh7.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcguvzxh7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcguvzxh7.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpcguvzxh7.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcguvzxh7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcguvzxh7.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpcguvzxh7.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcguvzxh7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpcguvzxh7.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpcguvzxh7.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcguvzxh7.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcguvzxh7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr69wofg3.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpr69wofg3.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr69wofg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpr69wofg3.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpr69wofg3.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr69wofg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpr69wofg3.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpr69wofg3.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr69wofg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpr69wofg3.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpr69wofg3.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr69wofg3.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr69wofg3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj7mbbsgp.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpj7mbbsgp.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj7mbbsgp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj7mbbsgp.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpj7mbbsgp.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj7mbbsgp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj7mbbsgp.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpj7mbbsgp.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj7mbbsgp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj7mbbsgp.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpj7mbbsgp.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj7mbbsgp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj7mbbsgp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbs738zad.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs738zad.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs738zad.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbs738zad.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbs738zad.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs738zad.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbs738zad.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbs738zad.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs738zad.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbs738zad.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpbs738zad.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs738zad.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbs738zad.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8hbi4paq.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp8hbi4paq.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8hbi4paq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8hbi4paq.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8hbi4paq.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8hbi4paq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8hbi4paq.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8hbi4paq.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8hbi4paq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8hbi4paq.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp8hbi4paq.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8hbi4paq.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8hbi4paq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_uxn7dh4.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp_uxn7dh4.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_uxn7dh4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_uxn7dh4.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp_uxn7dh4.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_uxn7dh4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_uxn7dh4.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp_uxn7dh4.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_uxn7dh4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_uxn7dh4.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp_uxn7dh4.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_uxn7dh4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_uxn7dh4.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_uxn7dh4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_uxn7dh4.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_uxn7dh4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv5tqcd45.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpv5tqcd45.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5tqcd45.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv5tqcd45.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpv5tqcd45.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5tqcd45.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv5tqcd45.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpv5tqcd45.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5tqcd45.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpv5tqcd45.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpv5tqcd45.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5tqcd45.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv5tqcd45.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp48njbue7.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp48njbue7.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp48njbue7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp48njbue7.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp48njbue7.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp48njbue7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp48njbue7.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp48njbue7.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp48njbue7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp48njbue7.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp48njbue7.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp48njbue7.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp48njbue7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmple_u4b0j.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmple_u4b0j.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmple_u4b0j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmple_u4b0j.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmple_u4b0j.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmple_u4b0j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmple_u4b0j.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmple_u4b0j.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmple_u4b0j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmple_u4b0j.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmple_u4b0j.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmple_u4b0j.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmple_u4b0j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvllh99qo.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvllh99qo.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvllh99qo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvllh99qo.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9jselcj0.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp9jselcj0.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9jselcj0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9jselcj0.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp9jselcj0.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9jselcj0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9jselcj0.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp9jselcj0.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9jselcj0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9jselcj0.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp9jselcj0.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9jselcj0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9jselcj0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpevw_rjgs.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpevw_rjgs.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpevw_rjgs.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpevw_rjgs.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpevw_rjgs.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpevw_rjgs.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpevw_rjgs.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpevw_rjgs.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpevw_rjgs.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpevw_rjgs.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpevw_rjgs.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpevw_rjgs.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpevw_rjgs.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghdvyjkf.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpghdvyjkf.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghdvyjkf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpghdvyjkf.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpghdvyjkf.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghdvyjkf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpghdvyjkf.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpghdvyjkf.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghdvyjkf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpghdvyjkf.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpghdvyjkf.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghdvyjkf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghdvyjkf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp__pcm02t.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp__pcm02t.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp__pcm02t.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp__pcm02t.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp__pcm02t.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp__pcm02t.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp__pcm02t.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp__pcm02t.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp__pcm02t.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp__pcm02t.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp__pcm02t.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp__pcm02t.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp__pcm02t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i + 1] * (i + 1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2hb8jhxn.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp2hb8jhxn.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2hb8jhxn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2hb8jhxn.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp2hb8jhxn.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2hb8jhxn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2hb8jhxn.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp2hb8jhxn.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2hb8jhxn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2hb8jhxn.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp2hb8jhxn.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2hb8jhxn.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2hb8jhxn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5qyv8zmb.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp5qyv8zmb.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5qyv8zmb.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5qyv8zmb.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp5qyv8zmb.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5qyv8zmb.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5qyv8zmb.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp5qyv8zmb.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5qyv8zmb.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5qyv8zmb.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp5qyv8zmb.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5qyv8zmb.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5qyv8zmb.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5qyv8zmb.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5qyv8zmb.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5qyv8zmb.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgg5f09sn.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpgg5f09sn.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgg5f09sn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgg5f09sn.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpgg5f09sn.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgg5f09sn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgg5f09sn.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpgg5f09sn.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgg5f09sn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgg5f09sn.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpgg5f09sn.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgg5f09sn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgg5f09sn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbbjv_5lo.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpbbjv_5lo.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbbjv_5lo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbbjv_5lo.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbbjv_5lo.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbbjv_5lo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbbjv_5lo.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbbjv_5lo.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbbjv_5lo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbbjv_5lo.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpbbjv_5lo.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbbjv_5lo.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbbjv_5lo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnzfpows0.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpnzfpows0.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnzfpows0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnzfpows0.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpnzfpows0.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnzfpows0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnzfpows0.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpnzfpows0.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnzfpows0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnzfpows0.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpnzfpows0.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnzfpows0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzfpows0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpthx6kboh.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpthx6kboh.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpthx6kboh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpthx6kboh.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpthx6kboh.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpthx6kboh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpthx6kboh.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpthx6kboh.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpthx6kboh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpthx6kboh.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpthx6kboh.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpthx6kboh.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpthx6kboh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8v8knlg3.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp8v8knlg3.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8v8knlg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8v8knlg3.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8v8knlg3.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8v8knlg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8v8knlg3.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8v8knlg3.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8v8knlg3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8v8knlg3.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp8v8knlg3.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8v8knlg3.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8v8knlg3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprm0cuaf4.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmprm0cuaf4.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprm0cuaf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprm0cuaf4.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprm0cuaf4.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprm0cuaf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprm0cuaf4.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprm0cuaf4.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprm0cuaf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprm0cuaf4.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmprm0cuaf4.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprm0cuaf4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprm0cuaf4.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprm0cuaf4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprm0cuaf4.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprm0cuaf4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprqf7hppv.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprqf7hppv.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprqf7hppv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprqf7hppv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i + 1] * (i + 1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp88u42gif.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp88u42gif.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88u42gif.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp88u42gif.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp88u42gif.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88u42gif.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp88u42gif.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp88u42gif.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88u42gif.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp88u42gif.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp88u42gif.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88u42gif.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88u42gif.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu6s9_ly1.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpu6s9_ly1.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu6s9_ly1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu6s9_ly1.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpu6s9_ly1.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu6s9_ly1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu6s9_ly1.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpu6s9_ly1.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu6s9_ly1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpu6s9_ly1.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpu6s9_ly1.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu6s9_ly1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu6s9_ly1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmponszfb9o.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmponszfb9o.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmponszfb9o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmponszfb9o.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmponszfb9o.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmponszfb9o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmponszfb9o.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmponszfb9o.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmponszfb9o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmponszfb9o.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmponszfb9o.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmponszfb9o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmponszfb9o.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmponszfb9o.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmponszfb9o.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmponszfb9o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgd6wriz7.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpgd6wriz7.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgd6wriz7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgd6wriz7.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpgd6wriz7.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgd6wriz7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgd6wriz7.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpgd6wriz7.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgd6wriz7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpgd6wriz7.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpgd6wriz7.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgd6wriz7.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgd6wriz7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjz2qsv7j.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpjz2qsv7j.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjz2qsv7j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjz2qsv7j.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpjz2qsv7j.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjz2qsv7j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjz2qsv7j.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpjz2qsv7j.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjz2qsv7j.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpjz2qsv7j.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpjz2qsv7j.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjz2qsv7j.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjz2qsv7j.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptsblwivp.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmptsblwivp.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptsblwivp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptsblwivp.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmptsblwivp.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptsblwivp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptsblwivp.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmptsblwivp.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptsblwivp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptsblwivp.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmptsblwivp.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptsblwivp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptsblwivp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7hnbsgs8.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp7hnbsgs8.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hnbsgs8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7hnbsgs8.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp7hnbsgs8.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hnbsgs8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7hnbsgs8.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp7hnbsgs8.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hnbsgs8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7hnbsgs8.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp7hnbsgs8.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hnbsgs8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7hnbsgs8.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7hnbsgs8.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7hnbsgs8.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7hnbsgs8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpylezlnax.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpylezlnax.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpylezlnax.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpylezlnax.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpylezlnax.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpylezlnax.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpylezlnax.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpylezlnax.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpylezlnax.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpylezlnax.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpylezlnax.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpylezlnax.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpylezlnax.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3onjdpub.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp3onjdpub.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3onjdpub.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3onjdpub.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3onjdpub.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3onjdpub.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3onjdpub.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3onjdpub.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3onjdpub.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3onjdpub.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp3onjdpub.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3onjdpub.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3onjdpub.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpahvfq3jo.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpahvfq3jo.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahvfq3jo.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpahvfq3jo.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpahvfq3jo.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahvfq3jo.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpahvfq3jo.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpahvfq3jo.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahvfq3jo.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpahvfq3jo.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpahvfq3jo.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahvfq3jo.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpahvfq3jo.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpahvfq3jo.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahvfq3jo.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahvfq3jo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_deriv = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_deriv)\n\
    \        xs_deriv[i] = xs[i+1] * (i+1)\n    end\n    return xs_deriv\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptbrj04n4.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmptbrj04n4.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptbrj04n4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptbrj04n4.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmptbrj04n4.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptbrj04n4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptbrj04n4.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmptbrj04n4.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptbrj04n4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptbrj04n4.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmptbrj04n4.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptbrj04n4.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptbrj04n4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyo6s0n6g.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpyo6s0n6g.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyo6s0n6g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpyo6s0n6g.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpyo6s0n6g.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyo6s0n6g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpyo6s0n6g.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpyo6s0n6g.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyo6s0n6g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpyo6s0n6g.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpyo6s0n6g.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyo6s0n6g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpyo6s0n6g.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyo6s0n6g.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyo6s0n6g.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyo6s0n6g.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbngrko8m.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpbngrko8m.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbngrko8m.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbngrko8m.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbngrko8m.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbngrko8m.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbngrko8m.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbngrko8m.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbngrko8m.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbngrko8m.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpbngrko8m.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbngrko8m.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbngrko8m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    dxs =\
    \ zeros(Int64, n-1)\n    for i in 1:n-1\n        dxs[i] = xs[i+1] * i\n    end\n\
    \    return dxs\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3dgr78x3.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3dgr78x3.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dgr78x3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3dgr78x3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpimr8w5mr.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpimr8w5mr.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpimr8w5mr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpimr8w5mr.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpimr8w5mr.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpimr8w5mr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpimr8w5mr.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpimr8w5mr.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpimr8w5mr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpimr8w5mr.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpimr8w5mr.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpimr8w5mr.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpimr8w5mr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpfimegk93.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpfimegk93.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfimegk93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfimegk93.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpfimegk93.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfimegk93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfimegk93.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpfimegk93.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfimegk93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfimegk93.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpfimegk93.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfimegk93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfimegk93.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfimegk93.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfimegk93.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfimegk93.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i = 1:n-1\n      \
    \  ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps7318jpy.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmps7318jpy.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps7318jpy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmps7318jpy.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmps7318jpy.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps7318jpy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmps7318jpy.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmps7318jpy.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps7318jpy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmps7318jpy.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmps7318jpy.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps7318jpy.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7318jpy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_yixgr5p.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp_yixgr5p.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_yixgr5p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_yixgr5p.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp_yixgr5p.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_yixgr5p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_yixgr5p.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp_yixgr5p.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_yixgr5p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_yixgr5p.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp_yixgr5p.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_yixgr5p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_yixgr5p.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_yixgr5p.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_yixgr5p.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_yixgr5p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph48dq_8l.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmph48dq_8l.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph48dq_8l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph48dq_8l.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmph48dq_8l.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph48dq_8l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph48dq_8l.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmph48dq_8l.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph48dq_8l.jl:16\ntest set: Test\
    \ Failed at /tmp/tmph48dq_8l.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmph48dq_8l.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph48dq_8l.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph48dq_8l.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n\
    \        xs_derivative[i] = xs[i+1] * (i+1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk1ug7zkf.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpk1ug7zkf.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk1ug7zkf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk1ug7zkf.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpk1ug7zkf.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk1ug7zkf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk1ug7zkf.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpk1ug7zkf.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk1ug7zkf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpk1ug7zkf.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpk1ug7zkf.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk1ug7zkf.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk1ug7zkf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs[2:end]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn5v31s5c.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpn5v31s5c.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5v31s5c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5v31s5c.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpn5v31s5c.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5v31s5c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5v31s5c.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpn5v31s5c.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5v31s5c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn5v31s5c.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpn5v31s5c.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5v31s5c.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5v31s5c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppwobfm8u.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmppwobfm8u.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwobfm8u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppwobfm8u.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppwobfm8u.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwobfm8u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppwobfm8u.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppwobfm8u.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwobfm8u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppwobfm8u.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmppwobfm8u.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwobfm8u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppwobfm8u.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppwobfm8u.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppwobfm8u.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppwobfm8u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i = 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf4bxf1qg.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpf4bxf1qg.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf4bxf1qg.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf4bxf1qg.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [xs[i] * i for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6a3ae830.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp6a3ae830.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6a3ae830.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6a3ae830.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6a3ae830.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6a3ae830.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6a3ae830.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6a3ae830.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6a3ae830.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp6a3ae830.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp6a3ae830.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6a3ae830.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6a3ae830.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs)\
    \ - 1\n        xs_derivative[i] = xs[i] * i\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnj0ivc4w.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpnj0ivc4w.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnj0ivc4w.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnj0ivc4w.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpnj0ivc4w.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnj0ivc4w.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnj0ivc4w.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpnj0ivc4w.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnj0ivc4w.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnj0ivc4w.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpnj0ivc4w.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnj0ivc4w.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnj0ivc4w.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpliv4vahg.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpliv4vahg.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpliv4vahg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpliv4vahg.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpliv4vahg.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpliv4vahg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpliv4vahg.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpliv4vahg.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpliv4vahg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpliv4vahg.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpliv4vahg.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpliv4vahg.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpliv4vahg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbfcapkss.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpbfcapkss.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfcapkss.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbfcapkss.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbfcapkss.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfcapkss.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbfcapkss.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpbfcapkss.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfcapkss.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpbfcapkss.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpbfcapkss.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbfcapkss.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbfcapkss.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = [i * xs[i] for i in 1:length(xs)-1]\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpitg08tzr.jl:18\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpitg08tzr.jl:18 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpitg08tzr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpitg08tzr.jl:19\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpitg08tzr.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpitg08tzr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpitg08tzr.jl:20\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpitg08tzr.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpitg08tzr.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpitg08tzr.jl:21\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpitg08tzr.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpitg08tzr.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpitg08tzr.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy15kho3v.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpy15kho3v.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy15kho3v.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy15kho3v.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj8y6xvxe.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpj8y6xvxe.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj8y6xvxe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj8y6xvxe.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpj8y6xvxe.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj8y6xvxe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj8y6xvxe.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpj8y6xvxe.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj8y6xvxe.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj8y6xvxe.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpj8y6xvxe.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj8y6xvxe.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj8y6xvxe.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp81oowxwu.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp81oowxwu.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81oowxwu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp81oowxwu.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp81oowxwu.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81oowxwu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp81oowxwu.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp81oowxwu.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81oowxwu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp81oowxwu.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp81oowxwu.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81oowxwu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp81oowxwu.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp81oowxwu.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp81oowxwu.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp81oowxwu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptxg5s99c.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmptxg5s99c.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptxg5s99c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptxg5s99c.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmptxg5s99c.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptxg5s99c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptxg5s99c.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmptxg5s99c.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptxg5s99c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmptxg5s99c.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmptxg5s99c.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptxg5s99c.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptxg5s99c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdh6a2elq.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpdh6a2elq.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdh6a2elq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdh6a2elq.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpdh6a2elq.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdh6a2elq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdh6a2elq.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpdh6a2elq.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdh6a2elq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpdh6a2elq.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpdh6a2elq.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdh6a2elq.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdh6a2elq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpumgx98d0.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpumgx98d0.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpumgx98d0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpumgx98d0.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpumgx98d0.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpumgx98d0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpumgx98d0.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpumgx98d0.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpumgx98d0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpumgx98d0.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpumgx98d0.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpumgx98d0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpumgx98d0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpr208r5ew.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpr208r5ew.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr208r5ew.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr208r5ew.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpr208r5ew.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr208r5ew.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr208r5ew.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpr208r5ew.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr208r5ew.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr208r5ew.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpr208r5ew.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr208r5ew.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr208r5ew.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr208r5ew.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr208r5ew.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr208r5ew.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp82632idt.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp82632idt.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82632idt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82632idt.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp82632idt.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82632idt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82632idt.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp82632idt.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82632idt.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82632idt.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp82632idt.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82632idt.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82632idt.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [xs[i]\
    \ * i for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp64wfqdug.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp64wfqdug.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64wfqdug.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp64wfqdug.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp64wfqdug.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64wfqdug.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp64wfqdug.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp64wfqdug.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64wfqdug.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp64wfqdug.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp64wfqdug.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64wfqdug.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp64wfqdug.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp64wfqdug.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64wfqdug.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64wfqdug.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9nepmlpx.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp9nepmlpx.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9nepmlpx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9nepmlpx.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp9nepmlpx.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9nepmlpx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9nepmlpx.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp9nepmlpx.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9nepmlpx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp9nepmlpx.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp9nepmlpx.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9nepmlpx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9nepmlpx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp63onzeog.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp63onzeog.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp63onzeog.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63onzeog.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1]*(i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpept6bwje.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpept6bwje.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpept6bwje.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpept6bwje.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpept6bwje.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpept6bwje.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpept6bwje.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpept6bwje.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpept6bwje.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpept6bwje.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpept6bwje.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpept6bwje.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpept6bwje.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = Int64[]\n    for i in 1:length(xs)-1\n        push!(xs_derivative,\
    \ i*xs[i+1])\n    end\n    return xs_derivative\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7u7_bd2p.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp7u7_bd2p.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7u7_bd2p.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7u7_bd2p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzzbys22p.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpzzbys22p.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzzbys22p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzzbys22p.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpzzbys22p.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzzbys22p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzzbys22p.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpzzbys22p.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzzbys22p.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzzbys22p.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpzzbys22p.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzzbys22p.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzbys22p.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87qrurt5.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp87qrurt5.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp87qrurt5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp87qrurt5.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp87qrurt5.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp87qrurt5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp87qrurt5.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp87qrurt5.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp87qrurt5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp87qrurt5.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp87qrurt5.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp87qrurt5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87qrurt5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn0pp0cqo.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpn0pp0cqo.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn0pp0cqo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn0pp0cqo.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpn0pp0cqo.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn0pp0cqo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn0pp0cqo.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpn0pp0cqo.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn0pp0cqo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn0pp0cqo.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpn0pp0cqo.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn0pp0cqo.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn0pp0cqo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4rin7svh.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp4rin7svh.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4rin7svh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4rin7svh.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp4rin7svh.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4rin7svh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4rin7svh.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp4rin7svh.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4rin7svh.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp4rin7svh.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp4rin7svh.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4rin7svh.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4rin7svh.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n   \
    \     xs_new[i] = i*xs[i+1]\n    end\n    return xs_new\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn4vk7ugf.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpn4vk7ugf.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn4vk7ugf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn4vk7ugf.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpn4vk7ugf.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn4vk7ugf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn4vk7ugf.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpn4vk7ugf.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn4vk7ugf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpn4vk7ugf.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpn4vk7ugf.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn4vk7ugf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn4vk7ugf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoh3kuxv1.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpoh3kuxv1.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3kuxv1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoh3kuxv1.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpoh3kuxv1.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3kuxv1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoh3kuxv1.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpoh3kuxv1.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3kuxv1.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoh3kuxv1.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpoh3kuxv1.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3kuxv1.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoh3kuxv1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw6vbp6gv.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpw6vbp6gv.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw6vbp6gv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw6vbp6gv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp601y9cg8.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp601y9cg8.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp601y9cg8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp601y9cg8.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp601y9cg8.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp601y9cg8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp601y9cg8.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp601y9cg8.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp601y9cg8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp601y9cg8.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp601y9cg8.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp601y9cg8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp601y9cg8.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp601y9cg8.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp601y9cg8.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp601y9cg8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp74nd56wq.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp74nd56wq.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp74nd56wq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp74nd56wq.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp74nd56wq.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp74nd56wq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp74nd56wq.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp74nd56wq.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp74nd56wq.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp74nd56wq.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp74nd56wq.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp74nd56wq.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp74nd56wq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_deriv = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n \
    \       xs_deriv[i] = xs[i+1] * (i+1)\n    end\n    return xs_deriv\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuh10l4ld.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpuh10l4ld.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuh10l4ld.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpuh10l4ld.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpuh10l4ld.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuh10l4ld.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpuh10l4ld.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpuh10l4ld.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuh10l4ld.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpuh10l4ld.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpuh10l4ld.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuh10l4ld.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuh10l4ld.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq2ywirm_.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpq2ywirm_.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq2ywirm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq2ywirm_.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpq2ywirm_.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq2ywirm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq2ywirm_.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpq2ywirm_.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq2ywirm_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpq2ywirm_.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpq2ywirm_.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq2ywirm_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq2ywirm_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_2rswjnu.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp_2rswjnu.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_2rswjnu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_2rswjnu.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp_2rswjnu.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_2rswjnu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_2rswjnu.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp_2rswjnu.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_2rswjnu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp_2rswjnu.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp_2rswjnu.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_2rswjnu.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_2rswjnu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = i * xs[i+1]\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkqdyjuqu.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkqdyjuqu.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkqdyjuqu.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkqdyjuqu.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 2:length(xs)]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5t2i1s6s.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp5t2i1s6s.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t2i1s6s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5t2i1s6s.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp5t2i1s6s.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t2i1s6s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5t2i1s6s.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp5t2i1s6s.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t2i1s6s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5t2i1s6s.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp5t2i1s6s.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t2i1s6s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5t2i1s6s.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5t2i1s6s.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t2i1s6s.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5t2i1s6s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqx0fvhsn.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpqx0fvhsn.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqx0fvhsn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqx0fvhsn.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpqx0fvhsn.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqx0fvhsn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqx0fvhsn.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpqx0fvhsn.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqx0fvhsn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpqx0fvhsn.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpqx0fvhsn.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqx0fvhsn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqx0fvhsn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i] * i\n    end\n    return xs_derivative\nend\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphlgv2kri.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmphlgv2kri.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlgv2kri.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphlgv2kri.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmphlgv2kri.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlgv2kri.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphlgv2kri.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmphlgv2kri.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlgv2kri.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphlgv2kri.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmphlgv2kri.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlgv2kri.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphlgv2kri.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3o96awv4.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp3o96awv4.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o96awv4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3o96awv4.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3o96awv4.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o96awv4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3o96awv4.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3o96awv4.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o96awv4.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3o96awv4.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp3o96awv4.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o96awv4.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3o96awv4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwqfwhpml.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpwqfwhpml.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwqfwhpml.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwqfwhpml.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpwqfwhpml.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwqfwhpml.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwqfwhpml.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpwqfwhpml.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwqfwhpml.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwqfwhpml.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpwqfwhpml.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwqfwhpml.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwqfwhpml.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwqfwhpml.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwqfwhpml.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwqfwhpml.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n   \
    \     xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ndszkl5.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ndszkl5.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ndszkl5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1ndszkl5.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp1ndszkl5.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ndszkl5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1ndszkl5.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp1ndszkl5.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ndszkl5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1ndszkl5.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp1ndszkl5.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ndszkl5.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ndszkl5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxjqfq52y.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpxjqfq52y.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxjqfq52y.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxjqfq52y.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpxjqfq52y.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxjqfq52y.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxjqfq52y.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpxjqfq52y.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxjqfq52y.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxjqfq52y.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpxjqfq52y.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxjqfq52y.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxjqfq52y.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxjqfq52y.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxjqfq52y.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxjqfq52y.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpello7_8j.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpello7_8j.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpello7_8j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpello7_8j.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpello7_8j.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpello7_8j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpello7_8j.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpello7_8j.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpello7_8j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpello7_8j.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpello7_8j.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpello7_8j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpello7_8j.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpello7_8j.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpello7_8j.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpello7_8j.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyfnjcwv7.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpyfnjcwv7.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyfnjcwv7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyfnjcwv7.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpyfnjcwv7.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyfnjcwv7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyfnjcwv7.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpyfnjcwv7.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyfnjcwv7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyfnjcwv7.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpyfnjcwv7.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyfnjcwv7.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfnjcwv7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphk9l9idp.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmphk9l9idp.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk9l9idp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphk9l9idp.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmphk9l9idp.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk9l9idp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphk9l9idp.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmphk9l9idp.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk9l9idp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphk9l9idp.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmphk9l9idp.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk9l9idp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphk9l9idp.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphk9l9idp.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk9l9idp.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphk9l9idp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmn5yzhlk.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmn5yzhlk.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmn5yzhlk.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmn5yzhlk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmt9miqmn.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpmt9miqmn.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmt9miqmn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmt9miqmn.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpmt9miqmn.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmt9miqmn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmt9miqmn.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpmt9miqmn.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmt9miqmn.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpmt9miqmn.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpmt9miqmn.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmt9miqmn.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmt9miqmn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* collect(1:length(xs)-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    dxs = zeros(Int64, n-1)\n    for i in 1:n-1\n    \
    \    dxs[i] = xs[i+1] * i\n    end\n    return dxs\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp43ionqn0.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp43ionqn0.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43ionqn0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp43ionqn0.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp43ionqn0.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43ionqn0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp43ionqn0.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp43ionqn0.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43ionqn0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp43ionqn0.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp43ionqn0.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp43ionqn0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp43ionqn0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpeb6irmnt.jl:17\\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\\\
    nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpeb6irmnt.jl:17 [inlined]\\\
    n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpeb6irmnt.jl:16\\ntest set: Test\
    \ Failed at /tmp/tmpeb6irmnt.jl:18\\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\\n   Evaluated: [1, 4] == [2, 6]\\nStacktrace:\\n [1] macro expansion\\n\
    \   @ /tmp/tmpeb6irmnt.jl:18 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpeb6irmnt.jl:16\\ntest set: Test\
    \ Failed at /tmp/tmpeb6irmnt.jl:19\\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\\n   Evaluated: [3, 4] == [2, 2]\\nStacktrace:\\n [1] macro expansion\\n\
    \   @ /tmp/tmpeb6irmnt.jl:19 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpeb6irmnt.jl:16\\ntest set: Test\
    \ Failed at /tmp/tmpeb6irmnt.jl:20\\n  Expression: candidate([3, 2, 1, 0, 4])\
    \ == [2, 2, 0, 16]\\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\\nStacktrace:\\\
    n [1] macro expansion\\n   @ /tmp/tmpeb6irmnt.jl:20 [inlined]\\n [2] macro expansion\\\
    n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpeb6irmnt.jl:16\\nTest Summary:\
    \ | Pass  Fail  Total\\ntest set      |    1     4      5\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpeb6irmnt.jl:14\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwvgo_hg7.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpwvgo_hg7.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvgo_hg7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwvgo_hg7.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpwvgo_hg7.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvgo_hg7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwvgo_hg7.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpwvgo_hg7.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvgo_hg7.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwvgo_hg7.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpwvgo_hg7.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwvgo_hg7.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwvgo_hg7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs[2:end]))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6f3p2o7_.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp6f3p2o7_.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f3p2o7_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6f3p2o7_.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6f3p2o7_.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f3p2o7_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6f3p2o7_.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6f3p2o7_.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f3p2o7_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6f3p2o7_.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp6f3p2o7_.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f3p2o7_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6f3p2o7_.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6f3p2o7_.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6f3p2o7_.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6f3p2o7_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp27pab84f.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp27pab84f.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp27pab84f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp27pab84f.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp27pab84f.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp27pab84f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp27pab84f.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp27pab84f.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp27pab84f.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp27pab84f.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp27pab84f.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp27pab84f.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27pab84f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzxd18wqg.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpzxd18wqg.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxd18wqg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzxd18wqg.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpzxd18wqg.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxd18wqg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzxd18wqg.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpzxd18wqg.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxd18wqg.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpzxd18wqg.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpzxd18wqg.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxd18wqg.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxd18wqg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppnhteymx.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmppnhteymx.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppnhteymx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppnhteymx.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppnhteymx.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppnhteymx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppnhteymx.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppnhteymx.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppnhteymx.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppnhteymx.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmppnhteymx.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppnhteymx.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppnhteymx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpchl5pr8z.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpchl5pr8z.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpchl5pr8z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpchl5pr8z.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpchl5pr8z.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpchl5pr8z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpchl5pr8z.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpchl5pr8z.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpchl5pr8z.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpchl5pr8z.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpchl5pr8z.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpchl5pr8z.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchl5pr8z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphk3kj6ri.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmphk3kj6ri.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk3kj6ri.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphk3kj6ri.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmphk3kj6ri.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk3kj6ri.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphk3kj6ri.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmphk3kj6ri.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk3kj6ri.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphk3kj6ri.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmphk3kj6ri.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphk3kj6ri.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphk3kj6ri.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp972k4j6c.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp972k4j6c.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp972k4j6c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp972k4j6c.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp972k4j6c.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp972k4j6c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp972k4j6c.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp972k4j6c.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp972k4j6c.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp972k4j6c.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp972k4j6c.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp972k4j6c.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp972k4j6c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [xs[i] * i for i in 2:n]\nend\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\
    \t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2,\
    \ 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpet57bzcu.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpet57bzcu.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpet57bzcu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpet57bzcu.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpet57bzcu.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpet57bzcu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpet57bzcu.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpet57bzcu.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpet57bzcu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpet57bzcu.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpet57bzcu.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpet57bzcu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpet57bzcu.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpet57bzcu.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpet57bzcu.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpet57bzcu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3o7xqmth.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp3o7xqmth.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o7xqmth.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3o7xqmth.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3o7xqmth.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o7xqmth.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3o7xqmth.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3o7xqmth.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o7xqmth.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp3o7xqmth.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp3o7xqmth.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3o7xqmth.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3o7xqmth.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpshfkkk_w.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpshfkkk_w.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpshfkkk_w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpshfkkk_w.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpshfkkk_w.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpshfkkk_w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpshfkkk_w.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpshfkkk_w.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpshfkkk_w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpshfkkk_w.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpshfkkk_w.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpshfkkk_w.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpshfkkk_w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwfbkg_oy.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpwfbkg_oy.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwfbkg_oy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwfbkg_oy.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpwfbkg_oy.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwfbkg_oy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwfbkg_oy.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpwfbkg_oy.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwfbkg_oy.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpwfbkg_oy.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpwfbkg_oy.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwfbkg_oy.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwfbkg_oy.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n\
    \        xs_derivative[i] = xs[i+1] * (i+1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplhvux6yg.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmplhvux6yg.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplhvux6yg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplhvux6yg.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmplhvux6yg.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplhvux6yg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplhvux6yg.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmplhvux6yg.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplhvux6yg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplhvux6yg.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmplhvux6yg.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplhvux6yg.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhvux6yg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2r45df19.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp2r45df19.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2r45df19.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2r45df19.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp2r45df19.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2r45df19.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2r45df19.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp2r45df19.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2r45df19.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp2r45df19.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp2r45df19.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2r45df19.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2r45df19.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    return xs[2:n] .* (1:n-1)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppzm08ei8.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmppzm08ei8.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppzm08ei8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppzm08ei8.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppzm08ei8.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppzm08ei8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppzm08ei8.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmppzm08ei8.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppzm08ei8.jl:16\ntest set: Test\
    \ Failed at /tmp/tmppzm08ei8.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmppzm08ei8.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppzm08ei8.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppzm08ei8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg4w9cs1n.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpg4w9cs1n.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg4w9cs1n.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg4w9cs1n.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn8x39dhl.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn8x39dhl.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn8x39dhl.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn8x39dhl.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7zz1oltf.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp7zz1oltf.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zz1oltf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7zz1oltf.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp7zz1oltf.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zz1oltf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7zz1oltf.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp7zz1oltf.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zz1oltf.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp7zz1oltf.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp7zz1oltf.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zz1oltf.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7zz1oltf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs) - 1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = i * xs[i + 1]\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = xs[i+1] * i\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe1jv8ew_.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpe1jv8ew_.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1jv8ew_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpe1jv8ew_.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpe1jv8ew_.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1jv8ew_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpe1jv8ew_.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpe1jv8ew_.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1jv8ew_.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpe1jv8ew_.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpe1jv8ew_.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe1jv8ew_.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe1jv8ew_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    # YOUR CODE HERE\n    return xs[2:end] .* (1:length(xs[2:end]))\nend\n\
    using Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_derivative = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_derivative)\n\
    \        xs_derivative[i] = xs[i+1] * (i+1)\n    end\n    return xs_derivative\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0tfxa7j_.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp0tfxa7j_.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0tfxa7j_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0tfxa7j_.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp0tfxa7j_.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0tfxa7j_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0tfxa7j_.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp0tfxa7j_.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0tfxa7j_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0tfxa7j_.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp0tfxa7j_.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0tfxa7j_.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0tfxa7j_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnp9dlbt0.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpnp9dlbt0.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnp9dlbt0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnp9dlbt0.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpnp9dlbt0.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnp9dlbt0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnp9dlbt0.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpnp9dlbt0.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnp9dlbt0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpnp9dlbt0.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpnp9dlbt0.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnp9dlbt0.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnp9dlbt0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = []\n    for i in 1:length(xs)-1\n        push!(xs_new, i*xs[i+1])\n\
    \    end\n    return xs_new\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprqm2vcpo.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmprqm2vcpo.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprqm2vcpo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprqm2vcpo.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprqm2vcpo.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprqm2vcpo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprqm2vcpo.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprqm2vcpo.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprqm2vcpo.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprqm2vcpo.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmprqm2vcpo.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprqm2vcpo.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprqm2vcpo.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprir60gid.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmprir60gid.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprir60gid.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprir60gid.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprir60gid.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprir60gid.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprir60gid.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprir60gid.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprir60gid.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprir60gid.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmprir60gid.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprir60gid.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprir60gid.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs)-1\n   \
    \     xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6y3liq0a.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp6y3liq0a.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6y3liq0a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6y3liq0a.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6y3liq0a.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6y3liq0a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6y3liq0a.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6y3liq0a.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6y3liq0a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6y3liq0a.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp6y3liq0a.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6y3liq0a.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6y3liq0a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i = 1:n-1\n      \
    \  ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz16le2zn.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpz16le2zn.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz16le2zn.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz16le2zn.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuluubpcr.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpuluubpcr.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuluubpcr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpuluubpcr.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpuluubpcr.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuluubpcr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpuluubpcr.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpuluubpcr.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuluubpcr.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpuluubpcr.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpuluubpcr.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuluubpcr.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuluubpcr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsxbjca8w.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpsxbjca8w.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsxbjca8w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsxbjca8w.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpsxbjca8w.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsxbjca8w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsxbjca8w.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpsxbjca8w.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsxbjca8w.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsxbjca8w.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpsxbjca8w.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsxbjca8w.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsxbjca8w.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp63wpjbv5.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp63wpjbv5.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp63wpjbv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp63wpjbv5.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp63wpjbv5.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp63wpjbv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp63wpjbv5.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp63wpjbv5.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp63wpjbv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp63wpjbv5.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp63wpjbv5.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp63wpjbv5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63wpjbv5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1pampxdi.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp1pampxdi.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1pampxdi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1pampxdi.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp1pampxdi.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1pampxdi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1pampxdi.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp1pampxdi.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1pampxdi.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp1pampxdi.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp1pampxdi.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1pampxdi.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1pampxdi.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp55uk1b92.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp55uk1b92.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp55uk1b92.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp55uk1b92.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp55uk1b92.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp55uk1b92.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp55uk1b92.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp55uk1b92.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp55uk1b92.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp55uk1b92.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp55uk1b92.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp55uk1b92.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55uk1b92.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    ys = zeros(Int64, n-1)\n    for i in 1:n-1\n     \
    \   ys[i] = i * xs[i+1]\n    end\n    return ys\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoc1kc8hj.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpoc1kc8hj.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoc1kc8hj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpoc1kc8hj.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpoc1kc8hj.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoc1kc8hj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpoc1kc8hj.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpoc1kc8hj.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoc1kc8hj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpoc1kc8hj.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpoc1kc8hj.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoc1kc8hj.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoc1kc8hj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 2:length(xs)]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj0unenaj.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpj0unenaj.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj0unenaj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj0unenaj.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpj0unenaj.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj0unenaj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj0unenaj.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpj0unenaj.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj0unenaj.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpj0unenaj.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpj0unenaj.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj0unenaj.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj0unenaj.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp15nmn0rp.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp15nmn0rp.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp15nmn0rp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp15nmn0rp.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp15nmn0rp.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp15nmn0rp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp15nmn0rp.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp15nmn0rp.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp15nmn0rp.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp15nmn0rp.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp15nmn0rp.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp15nmn0rp.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp15nmn0rp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyf8f__47.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpyf8f__47.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyf8f__47.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyf8f__47.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpyf8f__47.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyf8f__47.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyf8f__47.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpyf8f__47.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyf8f__47.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpyf8f__47.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpyf8f__47.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyf8f__47.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyf8f__47.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i + 1] for i in 1:length(xs) - 1]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp11p3rzim.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp11p3rzim.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11p3rzim.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp11p3rzim.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp11p3rzim.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11p3rzim.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp11p3rzim.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp11p3rzim.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11p3rzim.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp11p3rzim.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp11p3rzim.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11p3rzim.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp11p3rzim.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i = 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbdxgk2fo.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbdxgk2fo.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbdxgk2fo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbdxgk2fo.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return xs[2:end] .* (1:length(xs)-1)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    5      5\n"
  exit_code: 0
  status: OK
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    xs_new = zeros(Int64, length(xs)-1)\n    for i in 1:length(xs_new)\n \
    \       xs_new[i] = xs[i+1] * (i+1)\n    end\n    return xs_new\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5])\
    \ == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp86j54y7s.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [2, 6, 16, 25] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp86j54y7s.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp86j54y7s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp86j54y7s.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [4, 9] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp86j54y7s.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp86j54y7s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp86j54y7s.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [4, 3] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp86j54y7s.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp86j54y7s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp86j54y7s.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [4, 3, 0, 20] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp86j54y7s.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp86j54y7s.jl:20\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp86j54y7s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    return\
    \ [i * xs[i] for i in 1:n-1]\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1,\
    \ 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv8d1u4xa.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpv8d1u4xa.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv8d1u4xa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv8d1u4xa.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpv8d1u4xa.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv8d1u4xa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv8d1u4xa.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpv8d1u4xa.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv8d1u4xa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv8d1u4xa.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpv8d1u4xa.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv8d1u4xa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv8d1u4xa.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv8d1u4xa.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv8d1u4xa.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv8d1u4xa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsjy_76uu.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpsjy_76uu.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjy_76uu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsjy_76uu.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpsjy_76uu.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjy_76uu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsjy_76uu.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpsjy_76uu.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjy_76uu.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpsjy_76uu.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpsjy_76uu.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjy_76uu.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsjy_76uu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi9gn04jb.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpi9gn04jb.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi9gn04jb.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi9gn04jb.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp35cc_eaa.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp35cc_eaa.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp35cc_eaa.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp35cc_eaa.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp35cc_eaa.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp35cc_eaa.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp35cc_eaa.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp35cc_eaa.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp35cc_eaa.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp35cc_eaa.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp35cc_eaa.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp35cc_eaa.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp35cc_eaa.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(xs)\n    if n == 1\n        return [0]\n    end\n    ys = zeros(Int64,\
    \ n-1)\n    for i in 1:n-1\n        ys[i] = xs[i+1] * i\n    end\n    return ys\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = derivative;\n\t@test(candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t\
    @test(candidate([3, 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2,\
    \ 2, 0, 16])\n\t@test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplqa8zzan.jl:29\n  Expression: candidate([1])\
    \ == Vector{Int64}([])\n   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmplqa8zzan.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplqa8zzan.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     1      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplqa8zzan.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs) - 1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp82xxt673.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp82xxt673.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82xxt673.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82xxt673.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp82xxt673.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82xxt673.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82xxt673.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp82xxt673.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82xxt673.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp82xxt673.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp82xxt673.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp82xxt673.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp82xxt673.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    if length(xs) == 1\n        return [0]\n    else\n        return [i *\
    \ xs[i] for i in 1:length(xs) - 1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1, 4, 12, 20])\n\
    \t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3, 2, 1]) == [2, 2])\n\
    \t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t@test(candidate([1]) ==\
    \ Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvo1ind54.jl:21\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpvo1ind54.jl:21 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvo1ind54.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvo1ind54.jl:22\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpvo1ind54.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvo1ind54.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvo1ind54.jl:23\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpvo1ind54.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvo1ind54.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvo1ind54.jl:24\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpvo1ind54.jl:24 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvo1ind54.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvo1ind54.jl:25\n  Expression: candidate([1]) == Vector{Int64}([])\n\
    \   Evaluated: [0] == Int64[]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvo1ind54.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvo1ind54.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvo1ind54.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same\
    \ form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1,\
    \ 2, 3])\n    [2, 6]\n    \"\"\"\nfunction derivative(xs::Vector{Int64})::Vector{Int64}\
    \ \n    return [i * xs[i] for i in 1:length(xs)-1]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = derivative;\n\t@test(candidate([3, 1, 2, 4, 5]) == [1,\
    \ 4, 12, 20])\n\t@test(candidate([1, 2, 3]) == [2, 6])\n\t@test(candidate([3,\
    \ 2, 1]) == [2, 2])\n\t@test(candidate([3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\t\
    @test(candidate([1]) == Vector{Int64}([]))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp18bdgxv5.jl:17\n  Expression: candidate([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]\n   Evaluated: [3, 2, 6, 16] == [1, 4, 12, 20]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp18bdgxv5.jl:17 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp18bdgxv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp18bdgxv5.jl:18\n  Expression: candidate([1, 2, 3]) == [2,\
    \ 6]\n   Evaluated: [1, 4] == [2, 6]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp18bdgxv5.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp18bdgxv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp18bdgxv5.jl:19\n  Expression: candidate([3, 2, 1]) == [2,\
    \ 2]\n   Evaluated: [3, 4] == [2, 2]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp18bdgxv5.jl:19 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp18bdgxv5.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp18bdgxv5.jl:20\n  Expression: candidate([3, 2, 1, 0, 4]) ==\
    \ [2, 2, 0, 16]\n   Evaluated: [3, 4, 3, 0] == [2, 2, 0, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp18bdgxv5.jl:20 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp18bdgxv5.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp18bdgxv5.jl:14\n"
  exit_code: 1
  status: SyntaxError

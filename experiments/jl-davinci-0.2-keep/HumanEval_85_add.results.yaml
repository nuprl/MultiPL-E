name: HumanEval_85_add
language: julia
results:
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphu7tb5me.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphu7tb5me.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphu7tb5me.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphu7tb5me.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphu7tb5me.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphu7tb5me.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphu7tb5me.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphu7tb5me.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphu7tb5me.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphu7tb5me.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphu7tb5me.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphu7tb5me.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphu7tb5me.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1borgvop.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1borgvop.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1borgvop.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1borgvop.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1borgvop.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1borgvop.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1borgvop.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1borgvop.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1borgvop.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1borgvop.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1borgvop.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1borgvop.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1borgvop.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpceifmrzk.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpceifmrzk.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpceifmrzk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpceifmrzk.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpceifmrzk.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpceifmrzk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpceifmrzk.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpceifmrzk.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpceifmrzk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpceifmrzk.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpceifmrzk.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpceifmrzk.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpceifmrzk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptoq5qe3f.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptoq5qe3f.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoq5qe3f.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptoq5qe3f.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptoq5qe3f.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoq5qe3f.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptoq5qe3f.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptoq5qe3f.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoq5qe3f.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptoq5qe3f.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptoq5qe3f.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptoq5qe3f.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptoq5qe3f.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ovgjt86.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0ovgjt86.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ovgjt86.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp0ovgjt86.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0ovgjt86.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ovgjt86.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ovgjt86.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc2um8ys_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc2um8ys_.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc2um8ys_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpc2um8ys_.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc2um8ys_.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc2um8ys_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpc2um8ys_.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc2um8ys_.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc2um8ys_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpc2um8ys_.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc2um8ys_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc2um8ys_.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2um8ys_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp24ah_b_c.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp24ah_b_c.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp24ah_b_c.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp24ah_b_c.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp24ah_b_c.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp24ah_b_c.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp24ah_b_c.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp24ah_b_c.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp24ah_b_c.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp24ah_b_c.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp24ah_b_c.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp24ah_b_c.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp24ah_b_c.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1b4hwaaf.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1b4hwaaf.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1b4hwaaf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1b4hwaaf.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1b4hwaaf.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1b4hwaaf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1b4hwaaf.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1b4hwaaf.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1b4hwaaf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1b4hwaaf.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1b4hwaaf.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1b4hwaaf.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1b4hwaaf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphrz3fhi5.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphrz3fhi5.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphrz3fhi5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphrz3fhi5.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphrz3fhi5.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphrz3fhi5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphrz3fhi5.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphrz3fhi5.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphrz3fhi5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphrz3fhi5.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphrz3fhi5.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphrz3fhi5.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphrz3fhi5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1tiacmwv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1tiacmwv.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1tiacmwv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1tiacmwv.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1tiacmwv.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1tiacmwv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1tiacmwv.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1tiacmwv.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1tiacmwv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1tiacmwv.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1tiacmwv.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1tiacmwv.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1tiacmwv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiti7ujk0.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiti7ujk0.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiti7ujk0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiti7ujk0.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiti7ujk0.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiti7ujk0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiti7ujk0.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiti7ujk0.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiti7ujk0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiti7ujk0.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiti7ujk0.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiti7ujk0.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiti7ujk0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9kfh_36d.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9kfh_36d.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9kfh_36d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9kfh_36d.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9kfh_36d.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9kfh_36d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9kfh_36d.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9kfh_36d.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9kfh_36d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9kfh_36d.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9kfh_36d.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9kfh_36d.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9kfh_36d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplrdxugu2.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplrdxugu2.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplrdxugu2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplrdxugu2.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplrdxugu2.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplrdxugu2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplrdxugu2.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplrdxugu2.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplrdxugu2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplrdxugu2.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplrdxugu2.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplrdxugu2.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplrdxugu2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpln_i1gpv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpln_i1gpv.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpln_i1gpv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpln_i1gpv.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpln_i1gpv.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpln_i1gpv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpln_i1gpv.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpln_i1gpv.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpln_i1gpv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpln_i1gpv.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpln_i1gpv.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpln_i1gpv.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpln_i1gpv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf9hnqoit.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpf9hnqoit.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf9hnqoit.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpf9hnqoit.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf9hnqoit.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf9hnqoit.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf9hnqoit.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgo9ivx9i.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgo9ivx9i.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgo9ivx9i.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgo9ivx9i.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgo9ivx9i.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgo9ivx9i.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgo9ivx9i.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgo9ivx9i.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgo9ivx9i.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgo9ivx9i.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgo9ivx9i.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgo9ivx9i.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgo9ivx9i.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppi6hg0it.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppi6hg0it.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppi6hg0it.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppi6hg0it.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppi6hg0it.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppi6hg0it.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppi6hg0it.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppi6hg0it.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppi6hg0it.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppi6hg0it.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppi6hg0it.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppi6hg0it.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppi6hg0it.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe_9capzo.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe_9capzo.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe_9capzo.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpe_9capzo.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe_9capzo.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe_9capzo.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpe_9capzo.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe_9capzo.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe_9capzo.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpe_9capzo.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe_9capzo.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe_9capzo.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe_9capzo.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjw68xzs3.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjw68xzs3.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjw68xzs3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjw68xzs3.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjw68xzs3.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjw68xzs3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjw68xzs3.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjw68xzs3.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjw68xzs3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjw68xzs3.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjw68xzs3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjw68xzs3.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjw68xzs3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiosvs767.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiosvs767.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiosvs767.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiosvs767.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiosvs767.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiosvs767.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiosvs767.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiosvs767.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiosvs767.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiosvs767.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiosvs767.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiosvs767.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiosvs767.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphtbc7hmh.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmphtbc7hmh.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphtbc7hmh.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphtbc7hmh.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphtbc7hmh.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphtbc7hmh.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphtbc7hmh.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpulr1bo0o.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpulr1bo0o.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulr1bo0o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpulr1bo0o.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpulr1bo0o.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulr1bo0o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpulr1bo0o.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpulr1bo0o.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulr1bo0o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpulr1bo0o.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpulr1bo0o.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulr1bo0o.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpulr1bo0o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpair38xgj.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpair38xgj.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpair38xgj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpair38xgj.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpair38xgj.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpair38xgj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpair38xgj.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpair38xgj.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpair38xgj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpair38xgj.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpair38xgj.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpair38xgj.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpair38xgj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ivazrku.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3ivazrku.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ivazrku.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3ivazrku.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3ivazrku.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ivazrku.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3ivazrku.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3ivazrku.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ivazrku.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3ivazrku.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3ivazrku.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ivazrku.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ivazrku.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2qo1f458.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2qo1f458.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2qo1f458.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2qo1f458.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2qo1f458.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2qo1f458.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2qo1f458.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2qo1f458.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2qo1f458.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2qo1f458.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2qo1f458.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2qo1f458.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2qo1f458.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgsrzb3sc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsrzb3sc.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsrzb3sc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgsrzb3sc.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsrzb3sc.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsrzb3sc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgsrzb3sc.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsrzb3sc.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsrzb3sc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgsrzb3sc.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsrzb3sc.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsrzb3sc.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgsrzb3sc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2h7to1ju.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2h7to1ju.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2h7to1ju.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2h7to1ju.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2h7to1ju.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2h7to1ju.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2h7to1ju.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2h7to1ju.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2h7to1ju.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2h7to1ju.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2h7to1ju.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2h7to1ju.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2h7to1ju.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmmrarxw6.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmmrarxw6.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmrarxw6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmmrarxw6.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmmrarxw6.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmrarxw6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmmrarxw6.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmmrarxw6.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmrarxw6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmmrarxw6.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmmrarxw6.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmmrarxw6.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmrarxw6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbcre07l4.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbcre07l4.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcre07l4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbcre07l4.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbcre07l4.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcre07l4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbcre07l4.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbcre07l4.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcre07l4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbcre07l4.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbcre07l4.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcre07l4.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbcre07l4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6qf6y474.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6qf6y474.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qf6y474.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6qf6y474.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6qf6y474.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qf6y474.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6qf6y474.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6qf6y474.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qf6y474.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6qf6y474.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6qf6y474.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qf6y474.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qf6y474.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdphuggz5.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdphuggz5.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdphuggz5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdphuggz5.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdphuggz5.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdphuggz5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdphuggz5.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdphuggz5.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdphuggz5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdphuggz5.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdphuggz5.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdphuggz5.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdphuggz5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbak_hlmv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbak_hlmv.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbak_hlmv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbak_hlmv.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbak_hlmv.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbak_hlmv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbak_hlmv.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbak_hlmv.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbak_hlmv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbak_hlmv.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbak_hlmv.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbak_hlmv.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbak_hlmv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfc_8xg1q.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfc_8xg1q.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfc_8xg1q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfc_8xg1q.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfc_8xg1q.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfc_8xg1q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfc_8xg1q.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfc_8xg1q.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfc_8xg1q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpfc_8xg1q.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfc_8xg1q.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfc_8xg1q.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfc_8xg1q.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj2wxs0_z.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2wxs0_z.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2wxs0_z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpj2wxs0_z.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2wxs0_z.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2wxs0_z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpj2wxs0_z.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2wxs0_z.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2wxs0_z.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpj2wxs0_z.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2wxs0_z.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2wxs0_z.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj2wxs0_z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5cgqamaq.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cgqamaq.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cgqamaq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5cgqamaq.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cgqamaq.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cgqamaq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5cgqamaq.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cgqamaq.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cgqamaq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5cgqamaq.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cgqamaq.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cgqamaq.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5cgqamaq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpukscjokx.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpukscjokx.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpukscjokx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpukscjokx.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpukscjokx.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpukscjokx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpukscjokx.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpukscjokx.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpukscjokx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpukscjokx.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpukscjokx.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpukscjokx.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukscjokx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdq19oqgs.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdq19oqgs.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdq19oqgs.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdq19oqgs.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdq19oqgs.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdq19oqgs.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdq19oqgs.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdq19oqgs.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdq19oqgs.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdq19oqgs.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdq19oqgs.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdq19oqgs.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdq19oqgs.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprhd2joaq.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprhd2joaq.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprhd2joaq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprhd2joaq.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprhd2joaq.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprhd2joaq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprhd2joaq.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprhd2joaq.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprhd2joaq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmprhd2joaq.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprhd2joaq.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprhd2joaq.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhd2joaq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu9yfa5ee.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu9yfa5ee.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu9yfa5ee.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu9yfa5ee.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu9yfa5ee.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu9yfa5ee.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu9yfa5ee.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu9yfa5ee.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu9yfa5ee.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu9yfa5ee.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu9yfa5ee.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu9yfa5ee.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu9yfa5ee.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcvgmslqa.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcvgmslqa.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcvgmslqa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpcvgmslqa.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcvgmslqa.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcvgmslqa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpcvgmslqa.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcvgmslqa.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcvgmslqa.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpcvgmslqa.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcvgmslqa.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcvgmslqa.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcvgmslqa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8d6ouy_k.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8d6ouy_k.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8d6ouy_k.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8d6ouy_k.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8d6ouy_k.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8d6ouy_k.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8d6ouy_k.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8d6ouy_k.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8d6ouy_k.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8d6ouy_k.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8d6ouy_k.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8d6ouy_k.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8d6ouy_k.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbyctsb8a.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbyctsb8a.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyctsb8a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbyctsb8a.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbyctsb8a.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyctsb8a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbyctsb8a.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbyctsb8a.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyctsb8a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbyctsb8a.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbyctsb8a.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyctsb8a.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbyctsb8a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpof6q48dr.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpof6q48dr.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpof6q48dr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpof6q48dr.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpof6q48dr.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpof6q48dr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpof6q48dr.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpof6q48dr.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpof6q48dr.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpof6q48dr.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpof6q48dr.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpof6q48dr.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpof6q48dr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptwt10gcl.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptwt10gcl.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptwt10gcl.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptwt10gcl.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptwt10gcl.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptwt10gcl.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptwt10gcl.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptwt10gcl.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptwt10gcl.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptwt10gcl.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptwt10gcl.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptwt10gcl.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptwt10gcl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2vzywsmw.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2vzywsmw.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2vzywsmw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2vzywsmw.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2vzywsmw.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2vzywsmw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2vzywsmw.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2vzywsmw.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2vzywsmw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2vzywsmw.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2vzywsmw.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2vzywsmw.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2vzywsmw.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdcpjlqkk.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdcpjlqkk.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdcpjlqkk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdcpjlqkk.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdcpjlqkk.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdcpjlqkk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdcpjlqkk.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdcpjlqkk.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdcpjlqkk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpdcpjlqkk.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdcpjlqkk.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdcpjlqkk.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdcpjlqkk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9sk0z2t9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9sk0z2t9.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9sk0z2t9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9sk0z2t9.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9sk0z2t9.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9sk0z2t9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9sk0z2t9.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9sk0z2t9.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9sk0z2t9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9sk0z2t9.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9sk0z2t9.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9sk0z2t9.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9sk0z2t9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpprgt0kes.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpprgt0kes.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpprgt0kes.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpprgt0kes.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpprgt0kes.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpprgt0kes.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpprgt0kes.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7zlt2dyt.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7zlt2dyt.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zlt2dyt.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7zlt2dyt.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7zlt2dyt.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zlt2dyt.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7zlt2dyt.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7zlt2dyt.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zlt2dyt.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp7zlt2dyt.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7zlt2dyt.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7zlt2dyt.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7zlt2dyt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppagpizs6.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppagpizs6.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppagpizs6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppagpizs6.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppagpizs6.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppagpizs6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppagpizs6.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppagpizs6.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppagpizs6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppagpizs6.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppagpizs6.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppagpizs6.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppagpizs6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzjhrm06m.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzjhrm06m.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzjhrm06m.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzjhrm06m.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzjhrm06m.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzjhrm06m.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzjhrm06m.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzjhrm06m.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzjhrm06m.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzjhrm06m.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzjhrm06m.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzjhrm06m.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzjhrm06m.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkq49uy72.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkq49uy72.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkq49uy72.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkq49uy72.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkq49uy72.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkq49uy72.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkq49uy72.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkq49uy72.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkq49uy72.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkq49uy72.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkq49uy72.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkq49uy72.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkq49uy72.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ksi1ase.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ksi1ase.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ksi1ase.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4ksi1ase.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ksi1ase.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ksi1ase.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4ksi1ase.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ksi1ase.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ksi1ase.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4ksi1ase.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ksi1ase.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ksi1ase.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ksi1ase.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ = 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n \
    \       end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvtcepmft.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvtcepmft.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvtcepmft.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvtcepmft.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvtcepmft.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvtcepmft.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvtcepmft.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvtcepmft.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvtcepmft.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvtcepmft.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvtcepmft.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvtcepmft.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvtcepmft.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    \    sum = 0\n    for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n     \
    \       sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl9p3bkvq.jl:22\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl9p3bkvq.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9p3bkvq.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpl9p3bkvq.jl:23\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl9p3bkvq.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9p3bkvq.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpl9p3bkvq.jl:24\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl9p3bkvq.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9p3bkvq.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpl9p3bkvq.jl:25\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl9p3bkvq.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl9p3bkvq.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9p3bkvq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6ei1fzq4.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6ei1fzq4.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6ei1fzq4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6ei1fzq4.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6ei1fzq4.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6ei1fzq4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6ei1fzq4.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6ei1fzq4.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6ei1fzq4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6ei1fzq4.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6ei1fzq4.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6ei1fzq4.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ei1fzq4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwidxo5ow.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwidxo5ow.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwidxo5ow.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwidxo5ow.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwidxo5ow.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwidxo5ow.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwidxo5ow.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwidxo5ow.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwidxo5ow.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwidxo5ow.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwidxo5ow.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwidxo5ow.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwidxo5ow.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9r1rtwoe.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r1rtwoe.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r1rtwoe.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r1rtwoe.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r1rtwoe.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r1rtwoe.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r1rtwoe.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r1rtwoe.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r1rtwoe.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r1rtwoe.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r1rtwoe.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r1rtwoe.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9r1rtwoe.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp38pczzf5.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38pczzf5.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38pczzf5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp38pczzf5.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38pczzf5.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38pczzf5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp38pczzf5.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38pczzf5.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38pczzf5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp38pczzf5.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38pczzf5.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38pczzf5.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp38pczzf5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5vvdehpf.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5vvdehpf.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5vvdehpf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5vvdehpf.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5vvdehpf.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5vvdehpf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5vvdehpf.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5vvdehpf.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5vvdehpf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5vvdehpf.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5vvdehpf.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5vvdehpf.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5vvdehpf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpre0mtlus.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre0mtlus.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre0mtlus.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpre0mtlus.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre0mtlus.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre0mtlus.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpre0mtlus.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre0mtlus.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre0mtlus.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpre0mtlus.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre0mtlus.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre0mtlus.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpre0mtlus.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_bv58ua5.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_bv58ua5.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_bv58ua5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_bv58ua5.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_bv58ua5.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_bv58ua5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_bv58ua5.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_bv58ua5.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_bv58ua5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_bv58ua5.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_bv58ua5.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_bv58ua5.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_bv58ua5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxcosng2l.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxcosng2l.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcosng2l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxcosng2l.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxcosng2l.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcosng2l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxcosng2l.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxcosng2l.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcosng2l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpxcosng2l.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxcosng2l.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcosng2l.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxcosng2l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpijnoslkj.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpijnoslkj.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijnoslkj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpijnoslkj.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpijnoslkj.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijnoslkj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpijnoslkj.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpijnoslkj.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijnoslkj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpijnoslkj.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpijnoslkj.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpijnoslkj.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpijnoslkj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6fj6pgl_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6fj6pgl_.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6fj6pgl_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6fj6pgl_.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6fj6pgl_.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6fj6pgl_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6fj6pgl_.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6fj6pgl_.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6fj6pgl_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6fj6pgl_.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6fj6pgl_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6fj6pgl_.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6fj6pgl_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps_oees4d.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps_oees4d.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps_oees4d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmps_oees4d.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps_oees4d.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps_oees4d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmps_oees4d.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps_oees4d.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps_oees4d.jl:20\ntest set: Test\
    \ Failed at /tmp/tmps_oees4d.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps_oees4d.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps_oees4d.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps_oees4d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp04t7gzqf.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp04t7gzqf.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp04t7gzqf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp04t7gzqf.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp04t7gzqf.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp04t7gzqf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp04t7gzqf.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp04t7gzqf.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp04t7gzqf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp04t7gzqf.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp04t7gzqf.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp04t7gzqf.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp04t7gzqf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdqli9mji.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdqli9mji.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdqli9mji.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpdqli9mji.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdqli9mji.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdqli9mji.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdqli9mji.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8s9rgu3.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8s9rgu3.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8s9rgu3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_8s9rgu3.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8s9rgu3.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8s9rgu3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_8s9rgu3.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8s9rgu3.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8s9rgu3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_8s9rgu3.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8s9rgu3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8s9rgu3.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8s9rgu3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0pp28v0h.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0pp28v0h.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0pp28v0h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0pp28v0h.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0pp28v0h.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0pp28v0h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0pp28v0h.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0pp28v0h.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0pp28v0h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0pp28v0h.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0pp28v0h.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0pp28v0h.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0pp28v0h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptcsd2n9r.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptcsd2n9r.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcsd2n9r.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptcsd2n9r.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptcsd2n9r.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcsd2n9r.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptcsd2n9r.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptcsd2n9r.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcsd2n9r.jl:20\ntest set: Test\
    \ Failed at /tmp/tmptcsd2n9r.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptcsd2n9r.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptcsd2n9r.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptcsd2n9r.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppqaxj6u9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppqaxj6u9.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppqaxj6u9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppqaxj6u9.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppqaxj6u9.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppqaxj6u9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppqaxj6u9.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppqaxj6u9.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppqaxj6u9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppqaxj6u9.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppqaxj6u9.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppqaxj6u9.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppqaxj6u9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpou4b1u3r.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpou4b1u3r.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpou4b1u3r.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpou4b1u3r.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpou4b1u3r.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpou4b1u3r.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpou4b1u3r.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppo9xrga5.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppo9xrga5.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppo9xrga5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmppo9xrga5.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppo9xrga5.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppo9xrga5.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppo9xrga5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0bssc9yu.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0bssc9yu.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0bssc9yu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0bssc9yu.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0bssc9yu.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0bssc9yu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0bssc9yu.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0bssc9yu.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0bssc9yu.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0bssc9yu.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0bssc9yu.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0bssc9yu.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0bssc9yu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9bck6uqd.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9bck6uqd.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9bck6uqd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9bck6uqd.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9bck6uqd.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9bck6uqd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9bck6uqd.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9bck6uqd.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9bck6uqd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9bck6uqd.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9bck6uqd.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9bck6uqd.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9bck6uqd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb91oyufb.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpb91oyufb.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb91oyufb.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpb91oyufb.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb91oyufb.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb91oyufb.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb91oyufb.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkw8hjfrw.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkw8hjfrw.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkw8hjfrw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkw8hjfrw.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkw8hjfrw.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkw8hjfrw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkw8hjfrw.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkw8hjfrw.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkw8hjfrw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkw8hjfrw.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkw8hjfrw.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkw8hjfrw.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkw8hjfrw.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqe_xnba1.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqe_xnba1.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqe_xnba1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqe_xnba1.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqe_xnba1.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqe_xnba1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqe_xnba1.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqe_xnba1.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqe_xnba1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqe_xnba1.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqe_xnba1.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqe_xnba1.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqe_xnba1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqlhlv_8x.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqlhlv_8x.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhlv_8x.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqlhlv_8x.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqlhlv_8x.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhlv_8x.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqlhlv_8x.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqlhlv_8x.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhlv_8x.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqlhlv_8x.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqlhlv_8x.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhlv_8x.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqlhlv_8x.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3r93vmhj.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3r93vmhj.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3r93vmhj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3r93vmhj.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3r93vmhj.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3r93vmhj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3r93vmhj.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3r93vmhj.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3r93vmhj.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3r93vmhj.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3r93vmhj.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3r93vmhj.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3r93vmhj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp47j7fj7u.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp47j7fj7u.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp47j7fj7u.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp47j7fj7u.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp47j7fj7u.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp47j7fj7u.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp47j7fj7u.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8i0pyvc_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8i0pyvc_.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8i0pyvc_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8i0pyvc_.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8i0pyvc_.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8i0pyvc_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8i0pyvc_.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8i0pyvc_.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8i0pyvc_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8i0pyvc_.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8i0pyvc_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8i0pyvc_.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8i0pyvc_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnucia139.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnucia139.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnucia139.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnucia139.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnucia139.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnucia139.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnucia139.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnucia139.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnucia139.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnucia139.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnucia139.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnucia139.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnucia139.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyah4kfjx.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyah4kfjx.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyah4kfjx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpyah4kfjx.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyah4kfjx.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyah4kfjx.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyah4kfjx.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_zl3j84v.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_zl3j84v.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_zl3j84v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_zl3j84v.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_zl3j84v.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_zl3j84v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_zl3j84v.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_zl3j84v.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_zl3j84v.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_zl3j84v.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_zl3j84v.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_zl3j84v.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_zl3j84v.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5ucbzr5o.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5ucbzr5o.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ucbzr5o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5ucbzr5o.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5ucbzr5o.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ucbzr5o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5ucbzr5o.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5ucbzr5o.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ucbzr5o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5ucbzr5o.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5ucbzr5o.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5ucbzr5o.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ucbzr5o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3yr4f_dz.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3yr4f_dz.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3yr4f_dz.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3yr4f_dz.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3yr4f_dz.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3yr4f_dz.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3yr4f_dz.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3yr4f_dz.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3yr4f_dz.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp3yr4f_dz.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3yr4f_dz.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3yr4f_dz.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3yr4f_dz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpor7wr0tf.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpor7wr0tf.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpor7wr0tf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpor7wr0tf.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpor7wr0tf.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpor7wr0tf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpor7wr0tf.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpor7wr0tf.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpor7wr0tf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpor7wr0tf.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpor7wr0tf.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpor7wr0tf.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpor7wr0tf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvu8gfg5c.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvu8gfg5c.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvu8gfg5c.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvu8gfg5c.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvu8gfg5c.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvu8gfg5c.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvu8gfg5c.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvu8gfg5c.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvu8gfg5c.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvu8gfg5c.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvu8gfg5c.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvu8gfg5c.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvu8gfg5c.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2kb2ztu3.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2kb2ztu3.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2kb2ztu3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2kb2ztu3.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2kb2ztu3.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2kb2ztu3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2kb2ztu3.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2kb2ztu3.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2kb2ztu3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp2kb2ztu3.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2kb2ztu3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2kb2ztu3.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2kb2ztu3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp473_0mpx.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp473_0mpx.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp473_0mpx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp473_0mpx.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp473_0mpx.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp473_0mpx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp473_0mpx.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp473_0mpx.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp473_0mpx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp473_0mpx.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp473_0mpx.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp473_0mpx.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp473_0mpx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpiet2v54b.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiet2v54b.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiet2v54b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiet2v54b.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiet2v54b.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiet2v54b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiet2v54b.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiet2v54b.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiet2v54b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpiet2v54b.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiet2v54b.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiet2v54b.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiet2v54b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwe1fs_ie.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwe1fs_ie.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwe1fs_ie.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpwe1fs_ie.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwe1fs_ie.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwe1fs_ie.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwe1fs_ie.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_klk62r.jl:15\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph_klk62r.jl:15\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph_klk62r.jl:14\ntest set: Test\
    \ Failed at /tmp/tmph_klk62r.jl:16\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph_klk62r.jl:16\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph_klk62r.jl:14\ntest set: Test\
    \ Failed at /tmp/tmph_klk62r.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph_klk62r.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph_klk62r.jl:14\ntest set: Test\
    \ Failed at /tmp/tmph_klk62r.jl:18\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph_klk62r.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph_klk62r.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_klk62r.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkksl9d9b.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkksl9d9b.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkksl9d9b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkksl9d9b.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkksl9d9b.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkksl9d9b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkksl9d9b.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkksl9d9b.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkksl9d9b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpkksl9d9b.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkksl9d9b.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkksl9d9b.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkksl9d9b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphd3evjj4.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphd3evjj4.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphd3evjj4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphd3evjj4.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphd3evjj4.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphd3evjj4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphd3evjj4.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphd3evjj4.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphd3evjj4.jl:20\ntest set: Test\
    \ Failed at /tmp/tmphd3evjj4.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphd3evjj4.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphd3evjj4.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphd3evjj4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpntmh996j.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpntmh996j.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpntmh996j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpntmh996j.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpntmh996j.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpntmh996j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpntmh996j.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpntmh996j.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpntmh996j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpntmh996j.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpntmh996j.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpntmh996j.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpntmh996j.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv9y57e95.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv9y57e95.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv9y57e95.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv9y57e95.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv9y57e95.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv9y57e95.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv9y57e95.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv9y57e95.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv9y57e95.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv9y57e95.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv9y57e95.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv9y57e95.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9y57e95.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp89ioat9s.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp89ioat9s.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp89ioat9s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp89ioat9s.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp89ioat9s.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp89ioat9s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp89ioat9s.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp89ioat9s.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp89ioat9s.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp89ioat9s.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp89ioat9s.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp89ioat9s.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp89ioat9s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu2evguyp.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu2evguyp.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu2evguyp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu2evguyp.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu2evguyp.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu2evguyp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu2evguyp.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu2evguyp.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu2evguyp.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu2evguyp.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu2evguyp.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu2evguyp.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2evguyp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd9qz4ju1.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd9qz4ju1.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd9qz4ju1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd9qz4ju1.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd9qz4ju1.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd9qz4ju1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd9qz4ju1.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd9qz4ju1.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd9qz4ju1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd9qz4ju1.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd9qz4ju1.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd9qz4ju1.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9qz4ju1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9r2dw560.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r2dw560.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r2dw560.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r2dw560.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r2dw560.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r2dw560.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r2dw560.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r2dw560.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r2dw560.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9r2dw560.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9r2dw560.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9r2dw560.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9r2dw560.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6o5m27it.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6o5m27it.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6o5m27it.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6o5m27it.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6o5m27it.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6o5m27it.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6o5m27it.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6o5m27it.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6o5m27it.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6o5m27it.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6o5m27it.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6o5m27it.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6o5m27it.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1yrj05yf.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1yrj05yf.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1yrj05yf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1yrj05yf.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1yrj05yf.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1yrj05yf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1yrj05yf.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1yrj05yf.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1yrj05yf.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1yrj05yf.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1yrj05yf.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1yrj05yf.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1yrj05yf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8saf_p_l.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8saf_p_l.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8saf_p_l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8saf_p_l.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8saf_p_l.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8saf_p_l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8saf_p_l.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8saf_p_l.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8saf_p_l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8saf_p_l.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8saf_p_l.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8saf_p_l.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8saf_p_l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb5zjkys3.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5zjkys3.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5zjkys3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpb5zjkys3.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5zjkys3.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5zjkys3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpb5zjkys3.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5zjkys3.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5zjkys3.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpb5zjkys3.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5zjkys3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5zjkys3.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb5zjkys3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9x1x9ux7.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9x1x9ux7.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9x1x9ux7.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9x1x9ux7.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9x1x9ux7.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9x1x9ux7.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9x1x9ux7.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9x1x9ux7.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9x1x9ux7.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9x1x9ux7.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9x1x9ux7.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9x1x9ux7.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9x1x9ux7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_pkerae0.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_pkerae0.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_pkerae0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_pkerae0.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_pkerae0.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_pkerae0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_pkerae0.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_pkerae0.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_pkerae0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_pkerae0.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_pkerae0.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_pkerae0.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_pkerae0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu47o7l45.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu47o7l45.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu47o7l45.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu47o7l45.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu47o7l45.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu47o7l45.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu47o7l45.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu47o7l45.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu47o7l45.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpu47o7l45.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu47o7l45.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu47o7l45.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu47o7l45.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp88uhj_yy.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp88uhj_yy.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88uhj_yy.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp88uhj_yy.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp88uhj_yy.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88uhj_yy.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88uhj_yy.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcd_aa74u.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcd_aa74u.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcd_aa74u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpcd_aa74u.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcd_aa74u.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcd_aa74u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpcd_aa74u.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcd_aa74u.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcd_aa74u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpcd_aa74u.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcd_aa74u.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcd_aa74u.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcd_aa74u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ff2pcq_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9ff2pcq_.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ff2pcq_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9ff2pcq_.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9ff2pcq_.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ff2pcq_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9ff2pcq_.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9ff2pcq_.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ff2pcq_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9ff2pcq_.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9ff2pcq_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ff2pcq_.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ff2pcq_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv53s3bvw.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv53s3bvw.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv53s3bvw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv53s3bvw.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv53s3bvw.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv53s3bvw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv53s3bvw.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv53s3bvw.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv53s3bvw.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpv53s3bvw.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv53s3bvw.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv53s3bvw.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv53s3bvw.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr9ns3nlq.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr9ns3nlq.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9ns3nlq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr9ns3nlq.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr9ns3nlq.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9ns3nlq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr9ns3nlq.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr9ns3nlq.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9ns3nlq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpr9ns3nlq.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr9ns3nlq.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9ns3nlq.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9ns3nlq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsvskqh1q.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsvskqh1q.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsvskqh1q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsvskqh1q.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsvskqh1q.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsvskqh1q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsvskqh1q.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsvskqh1q.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsvskqh1q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsvskqh1q.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsvskqh1q.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsvskqh1q.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsvskqh1q.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjwzf__s9.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjwzf__s9.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwzf__s9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjwzf__s9.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjwzf__s9.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwzf__s9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjwzf__s9.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjwzf__s9.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwzf__s9.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjwzf__s9.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjwzf__s9.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwzf__s9.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjwzf__s9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4q9j7jf8.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4q9j7jf8.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4q9j7jf8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4q9j7jf8.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4q9j7jf8.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4q9j7jf8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4q9j7jf8.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4q9j7jf8.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4q9j7jf8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4q9j7jf8.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4q9j7jf8.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4q9j7jf8.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4q9j7jf8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa0rjs081.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa0rjs081.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa0rjs081.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpa0rjs081.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa0rjs081.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa0rjs081.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpa0rjs081.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa0rjs081.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa0rjs081.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpa0rjs081.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa0rjs081.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa0rjs081.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa0rjs081.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpydhguix1.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpydhguix1.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpydhguix1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpydhguix1.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpydhguix1.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpydhguix1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpydhguix1.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpydhguix1.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpydhguix1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpydhguix1.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpydhguix1.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpydhguix1.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpydhguix1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_fqq__9t.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_fqq__9t.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fqq__9t.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_fqq__9t.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_fqq__9t.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fqq__9t.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_fqq__9t.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_fqq__9t.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fqq__9t.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_fqq__9t.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_fqq__9t.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fqq__9t.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_fqq__9t.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzxo1wtja.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzxo1wtja.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxo1wtja.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzxo1wtja.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzxo1wtja.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxo1wtja.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzxo1wtja.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzxo1wtja.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxo1wtja.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzxo1wtja.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzxo1wtja.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzxo1wtja.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxo1wtja.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbk_2t94b.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbk_2t94b.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbk_2t94b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbk_2t94b.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbk_2t94b.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbk_2t94b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbk_2t94b.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbk_2t94b.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbk_2t94b.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbk_2t94b.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbk_2t94b.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbk_2t94b.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbk_2t94b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 2:2:length(lst)\n        sum += lst[i]\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\
    \t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7])\
    \ == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp69lxj_o.jl:20\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpp69lxj_o.jl:20 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp69lxj_o.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpp69lxj_o.jl:21\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp69lxj_o.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp69lxj_o.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp69lxj_o.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsfv_gm1o.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsfv_gm1o.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsfv_gm1o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsfv_gm1o.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsfv_gm1o.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsfv_gm1o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsfv_gm1o.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsfv_gm1o.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsfv_gm1o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpsfv_gm1o.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsfv_gm1o.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsfv_gm1o.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsfv_gm1o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprkw9xavp.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprkw9xavp.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprkw9xavp.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprkw9xavp.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprkw9xavp.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprkw9xavp.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprkw9xavp.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8uv2phmt.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8uv2phmt.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8uv2phmt.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8uv2phmt.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8uv2phmt.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8uv2phmt.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8uv2phmt.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8uv2phmt.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8uv2phmt.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp8uv2phmt.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8uv2phmt.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8uv2phmt.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8uv2phmt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb2lfzr93.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb2lfzr93.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb2lfzr93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpb2lfzr93.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb2lfzr93.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb2lfzr93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpb2lfzr93.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb2lfzr93.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb2lfzr93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpb2lfzr93.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb2lfzr93.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb2lfzr93.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2lfzr93.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1dxtnu1t.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1dxtnu1t.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1dxtnu1t.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1dxtnu1t.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1dxtnu1t.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1dxtnu1t.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1dxtnu1t.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1dxtnu1t.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1dxtnu1t.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp1dxtnu1t.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1dxtnu1t.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1dxtnu1t.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1dxtnu1t.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp97wckb5h.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97wckb5h.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97wckb5h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp97wckb5h.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97wckb5h.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97wckb5h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp97wckb5h.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97wckb5h.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97wckb5h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp97wckb5h.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97wckb5h.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97wckb5h.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97wckb5h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmnq576eq.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmnq576eq.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmnq576eq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmnq576eq.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmnq576eq.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmnq576eq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmnq576eq.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmnq576eq.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmnq576eq.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmnq576eq.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmnq576eq.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmnq576eq.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmnq576eq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5e9a2tj0.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5e9a2tj0.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5e9a2tj0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5e9a2tj0.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5e9a2tj0.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5e9a2tj0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5e9a2tj0.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5e9a2tj0.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5e9a2tj0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5e9a2tj0.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5e9a2tj0.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5e9a2tj0.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5e9a2tj0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz4fqvq95.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([4, 88]) == 88\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250\\\
    n    ...\\n  Stacktrace:\\n   [1] add(lst::Vector{Int64})\\n     @ Main /tmp/tmpz4fqvq95.jl:9\\\
    n   [2] macro expansion\\n     @ /tmp/tmpz4fqvq95.jl:15 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz4fqvq95.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpz4fqvq95.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Int64\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ add(lst::Vector{Int64})\\n     @ Main /tmp/tmpz4fqvq95.jl:9\\n   [2] macro expansion\\\
    n     @ /tmp/tmpz4fqvq95.jl:16 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz4fqvq95.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpz4fqvq95.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Mat"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjrulh66o.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjrulh66o.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrulh66o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjrulh66o.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjrulh66o.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrulh66o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjrulh66o.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjrulh66o.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrulh66o.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpjrulh66o.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjrulh66o.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrulh66o.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjrulh66o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxq1z1e9e.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxq1z1e9e.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxq1z1e9e.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpxq1z1e9e.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxq1z1e9e.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxq1z1e9e.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxq1z1e9e.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0 && lst[i] % 2 == 0\n            sum\
    \ += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_nlja39q.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nlja39q.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nlja39q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_nlja39q.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nlja39q.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nlja39q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_nlja39q.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nlja39q.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nlja39q.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_nlja39q.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nlja39q.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nlja39q.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_nlja39q.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp750bno3e.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp750bno3e.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp750bno3e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp750bno3e.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp750bno3e.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp750bno3e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp750bno3e.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp750bno3e.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp750bno3e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp750bno3e.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp750bno3e.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp750bno3e.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp750bno3e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp88ii82n8.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp88ii82n8.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88ii82n8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp88ii82n8.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp88ii82n8.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88ii82n8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp88ii82n8.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp88ii82n8.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88ii82n8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp88ii82n8.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp88ii82n8.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp88ii82n8.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88ii82n8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo4ad1k18.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo4ad1k18.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo4ad1k18.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo4ad1k18.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo4ad1k18.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo4ad1k18.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo4ad1k18.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo4ad1k18.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo4ad1k18.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo4ad1k18.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo4ad1k18.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo4ad1k18.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4ad1k18.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp11jsr_cl.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp11jsr_cl.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11jsr_cl.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp11jsr_cl.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp11jsr_cl.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11jsr_cl.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp11jsr_cl.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp11jsr_cl.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11jsr_cl.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp11jsr_cl.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp11jsr_cl.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp11jsr_cl.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp11jsr_cl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgsxxhqwm.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsxxhqwm.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsxxhqwm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgsxxhqwm.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsxxhqwm.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsxxhqwm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgsxxhqwm.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsxxhqwm.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsxxhqwm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgsxxhqwm.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgsxxhqwm.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgsxxhqwm.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgsxxhqwm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyfjkk6e6.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyfjkk6e6.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyfjkk6e6.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpyfjkk6e6.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyfjkk6e6.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyfjkk6e6.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfjkk6e6.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6bhmpf0i.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bhmpf0i.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bhmpf0i.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6bhmpf0i.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bhmpf0i.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bhmpf0i.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6bhmpf0i.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bhmpf0i.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bhmpf0i.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6bhmpf0i.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bhmpf0i.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bhmpf0i.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6bhmpf0i.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmply2kfr_1.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmply2kfr_1.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmply2kfr_1.jl:14\ntest set: Test\
    \ Failed at /tmp/tmply2kfr_1.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmply2kfr_1.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmply2kfr_1.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmply2kfr_1.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0hw6jtyc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0hw6jtyc.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0hw6jtyc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0hw6jtyc.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0hw6jtyc.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0hw6jtyc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0hw6jtyc.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0hw6jtyc.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0hw6jtyc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp0hw6jtyc.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0hw6jtyc.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0hw6jtyc.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0hw6jtyc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz3beeaxs.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz3beeaxs.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz3beeaxs.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz3beeaxs.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz3beeaxs.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz3beeaxs.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz3beeaxs.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz3beeaxs.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz3beeaxs.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpz3beeaxs.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz3beeaxs.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz3beeaxs.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz3beeaxs.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4k6w_udk.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4k6w_udk.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4k6w_udk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4k6w_udk.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4k6w_udk.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4k6w_udk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4k6w_udk.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4k6w_udk.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4k6w_udk.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4k6w_udk.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4k6w_udk.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4k6w_udk.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4k6w_udk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9hva80fz.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9hva80fz.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hva80fz.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9hva80fz.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9hva80fz.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hva80fz.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9hva80fz.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9hva80fz.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hva80fz.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp9hva80fz.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9hva80fz.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9hva80fz.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9hva80fz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmtlezlu2.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmtlezlu2.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmtlezlu2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmtlezlu2.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmtlezlu2.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmtlezlu2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmtlezlu2.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmtlezlu2.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmtlezlu2.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpmtlezlu2.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmtlezlu2.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmtlezlu2.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmtlezlu2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzb0hosqm.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzb0hosqm.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzb0hosqm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzb0hosqm.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzb0hosqm.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzb0hosqm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzb0hosqm.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzb0hosqm.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzb0hosqm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpzb0hosqm.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzb0hosqm.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzb0hosqm.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzb0hosqm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghewilhy.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpghewilhy.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghewilhy.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpghewilhy.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpghewilhy.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghewilhy.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpghewilhy.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpghewilhy.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghewilhy.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpghewilhy.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpghewilhy.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghewilhy.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghewilhy.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6bqyjqlb.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bqyjqlb.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bqyjqlb.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6bqyjqlb.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bqyjqlb.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bqyjqlb.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6bqyjqlb.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bqyjqlb.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bqyjqlb.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6bqyjqlb.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bqyjqlb.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bqyjqlb.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6bqyjqlb.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpubc3mgpt.jl:15\\n  Test threw\
    \ exception\\n  Expression: candidate([4, 88]) == 88\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250\\\
    n    ...\\n  Stacktrace:\\n   [1] add(lst::Vector{Int64})\\n     @ Main /tmp/tmpubc3mgpt.jl:9\\\
    n   [2] macro expansion\\n     @ /tmp/tmpubc3mgpt.jl:15 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpubc3mgpt.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpubc3mgpt.jl:16\\n  Test threw exception\\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\\n  MethodError: Cannot `convert` an\
    \ object of type Nothing to an object of type Int64\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ add(lst::Vector{Int64})\\n     @ Main /tmp/tmpubc3mgpt.jl:9\\n   [2] macro expansion\\\
    n     @ /tmp/tmpubc3mgpt.jl:16 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpubc3mgpt.jl:14\\ntest set:\
    \ Error During Test at /tmp/tmpubc3mgpt.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Mat"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg157ah1m.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg157ah1m.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg157ah1m.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpg157ah1m.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg157ah1m.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg157ah1m.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpg157ah1m.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg157ah1m.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg157ah1m.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpg157ah1m.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg157ah1m.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg157ah1m.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg157ah1m.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpscumybt3.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpscumybt3.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpscumybt3.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpscumybt3.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpscumybt3.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpscumybt3.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpscumybt3.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:length(lst)\n        if i % 2 != 0\n            if lst[i] % 2 == 0\n  \
    \              sum += lst[i]\n            end\n        end\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfwsjvin3.jl:23\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfwsjvin3.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwsjvin3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfwsjvin3.jl:24\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfwsjvin3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwsjvin3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfwsjvin3.jl:25\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfwsjvin3.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwsjvin3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpfwsjvin3.jl:26\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfwsjvin3.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwsjvin3.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfwsjvin3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpusedx870.jl:15\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpusedx870.jl:15\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpusedx870.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpusedx870.jl:16\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpusedx870.jl:16\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpusedx870.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpusedx870.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpusedx870.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpusedx870.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpusedx870.jl:18\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpusedx870.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpusedx870.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpusedx870.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplqz99vii.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplqz99vii.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplqz99vii.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplqz99vii.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplqz99vii.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplqz99vii.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplqz99vii.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplqz99vii.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplqz99vii.jl:20\ntest set: Test\
    \ Failed at /tmp/tmplqz99vii.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplqz99vii.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplqz99vii.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplqz99vii.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[1:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphvburqhk.jl:15\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphvburqhk.jl:15\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvburqhk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphvburqhk.jl:16\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphvburqhk.jl:16\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvburqhk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphvburqhk.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphvburqhk.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvburqhk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphvburqhk.jl:18\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphvburqhk.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvburqhk.jl:14\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphvburqhk.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwovse4o_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwovse4o_.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwovse4o_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwovse4o_.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwovse4o_.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwovse4o_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwovse4o_.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwovse4o_.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwovse4o_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpwovse4o_.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwovse4o_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwovse4o_.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwovse4o_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4bc9l6b0.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4bc9l6b0.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4bc9l6b0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4bc9l6b0.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4bc9l6b0.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4bc9l6b0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4bc9l6b0.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4bc9l6b0.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4bc9l6b0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4bc9l6b0.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4bc9l6b0.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4bc9l6b0.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4bc9l6b0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd_ud6rhv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd_ud6rhv.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd_ud6rhv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd_ud6rhv.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd_ud6rhv.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd_ud6rhv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd_ud6rhv.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd_ud6rhv.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd_ud6rhv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpd_ud6rhv.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd_ud6rhv.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd_ud6rhv.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd_ud6rhv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoag821n1.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoag821n1.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoag821n1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpoag821n1.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoag821n1.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoag821n1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpoag821n1.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoag821n1.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoag821n1.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpoag821n1.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoag821n1.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoag821n1.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoag821n1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpppgvvo5l.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpppgvvo5l.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpppgvvo5l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpppgvvo5l.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpppgvvo5l.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpppgvvo5l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpppgvvo5l.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpppgvvo5l.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpppgvvo5l.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpppgvvo5l.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpppgvvo5l.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpppgvvo5l.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpppgvvo5l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqu7en9k0.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqu7en9k0.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqu7en9k0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqu7en9k0.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqu7en9k0.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqu7en9k0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqu7en9k0.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqu7en9k0.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqu7en9k0.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpqu7en9k0.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqu7en9k0.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqu7en9k0.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqu7en9k0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgaiurclv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgaiurclv.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgaiurclv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgaiurclv.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgaiurclv.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgaiurclv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgaiurclv.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgaiurclv.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgaiurclv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgaiurclv.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgaiurclv.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgaiurclv.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgaiurclv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpns5639dn.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpns5639dn.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpns5639dn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpns5639dn.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpns5639dn.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpns5639dn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpns5639dn.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpns5639dn.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpns5639dn.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpns5639dn.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpns5639dn.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpns5639dn.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpns5639dn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw8zs9v3e.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw8zs9v3e.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw8zs9v3e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw8zs9v3e.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw8zs9v3e.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw8zs9v3e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw8zs9v3e.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw8zs9v3e.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw8zs9v3e.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpw8zs9v3e.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw8zs9v3e.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw8zs9v3e.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw8zs9v3e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeemsbhly.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeemsbhly.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeemsbhly.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpeemsbhly.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeemsbhly.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeemsbhly.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpeemsbhly.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeemsbhly.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeemsbhly.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpeemsbhly.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeemsbhly.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeemsbhly.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeemsbhly.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpen4rbuy6.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpen4rbuy6.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpen4rbuy6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpen4rbuy6.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpen4rbuy6.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpen4rbuy6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpen4rbuy6.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpen4rbuy6.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpen4rbuy6.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpen4rbuy6.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpen4rbuy6.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpen4rbuy6.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpen4rbuy6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_nmcko4a.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nmcko4a.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nmcko4a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_nmcko4a.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nmcko4a.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nmcko4a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_nmcko4a.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nmcko4a.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nmcko4a.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp_nmcko4a.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nmcko4a.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nmcko4a.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_nmcko4a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6d48zkr8.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6d48zkr8.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6d48zkr8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6d48zkr8.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6d48zkr8.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6d48zkr8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6d48zkr8.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6d48zkr8.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6d48zkr8.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp6d48zkr8.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6d48zkr8.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6d48zkr8.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6d48zkr8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5cjy5oyd.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cjy5oyd.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cjy5oyd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5cjy5oyd.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cjy5oyd.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cjy5oyd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5cjy5oyd.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cjy5oyd.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cjy5oyd.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp5cjy5oyd.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5cjy5oyd.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5cjy5oyd.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5cjy5oyd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp539tlams.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp539tlams.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp539tlams.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp539tlams.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp539tlams.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp539tlams.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp539tlams.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp539tlams.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp539tlams.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp539tlams.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp539tlams.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp539tlams.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp539tlams.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4dad6qz_.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4dad6qz_.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4dad6qz_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4dad6qz_.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4dad6qz_.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4dad6qz_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4dad6qz_.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4dad6qz_.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4dad6qz_.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp4dad6qz_.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4dad6qz_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4dad6qz_.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4dad6qz_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyx8lop_h.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyx8lop_h.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyx8lop_h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpyx8lop_h.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyx8lop_h.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyx8lop_h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpyx8lop_h.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyx8lop_h.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyx8lop_h.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpyx8lop_h.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyx8lop_h.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyx8lop_h.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyx8lop_h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnllz1_4u.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnllz1_4u.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnllz1_4u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnllz1_4u.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnllz1_4u.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnllz1_4u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnllz1_4u.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnllz1_4u.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnllz1_4u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpnllz1_4u.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnllz1_4u.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnllz1_4u.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnllz1_4u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgj8wwy2j.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgj8wwy2j.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgj8wwy2j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgj8wwy2j.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgj8wwy2j.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgj8wwy2j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgj8wwy2j.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgj8wwy2j.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgj8wwy2j.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgj8wwy2j.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgj8wwy2j.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgj8wwy2j.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgj8wwy2j.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgy5by720.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgy5by720.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgy5by720.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgy5by720.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgy5by720.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgy5by720.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgy5by720.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgy5by720.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgy5by720.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgy5by720.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgy5by720.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgy5by720.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgy5by720.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi2dzrjyi.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi2dzrjyi.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi2dzrjyi.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpi2dzrjyi.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi2dzrjyi.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi2dzrjyi.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpi2dzrjyi.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi2dzrjyi.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi2dzrjyi.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpi2dzrjyi.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi2dzrjyi.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi2dzrjyi.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi2dzrjyi.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    even_odd_sum = 0\n\
    \    for i in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            even_odd_sum\
    \ += lst[i]\n        end\n    end\n    return even_odd_sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf98acdvg.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf98acdvg.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf98acdvg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpf98acdvg.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf98acdvg.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf98acdvg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpf98acdvg.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf98acdvg.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf98acdvg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpf98acdvg.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf98acdvg.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf98acdvg.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf98acdvg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpflbe3h8u.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpflbe3h8u.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpflbe3h8u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpflbe3h8u.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpflbe3h8u.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpflbe3h8u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpflbe3h8u.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpflbe3h8u.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpflbe3h8u.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpflbe3h8u.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpflbe3h8u.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpflbe3h8u.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpflbe3h8u.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvvi9k8qm.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvvi9k8qm.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvvi9k8qm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvvi9k8qm.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvvi9k8qm.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvvi9k8qm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvvi9k8qm.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvvi9k8qm.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvvi9k8qm.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpvvi9k8qm.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvvi9k8qm.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvvi9k8qm.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvvi9k8qm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    # your code here\n\
    \    return 0\nend\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4,\
    \ 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjegxw2en.jl:16\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 0 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjegxw2en.jl:16\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjegxw2en.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpjegxw2en.jl:17\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 0 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjegxw2en.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjegxw2en.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpjegxw2en.jl:19\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 0 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjegxw2en.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjegxw2en.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     3      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjegxw2en.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpprqu1mx4.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpprqu1mx4.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpprqu1mx4.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpprqu1mx4.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpprqu1mx4.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpprqu1mx4.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpprqu1mx4.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpikr6a7_p.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpikr6a7_p.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpikr6a7_p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpikr6a7_p.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpikr6a7_p.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpikr6a7_p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpikr6a7_p.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpikr6a7_p.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpikr6a7_p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpikr6a7_p.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpikr6a7_p.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpikr6a7_p.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpikr6a7_p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpblj15i2g.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpblj15i2g.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpblj15i2g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpblj15i2g.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpblj15i2g.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpblj15i2g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpblj15i2g.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpblj15i2g.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpblj15i2g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpblj15i2g.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpblj15i2g.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpblj15i2g.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpblj15i2g.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpstwmojsy.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpstwmojsy.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpstwmojsy.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpstwmojsy.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpstwmojsy.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpstwmojsy.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpstwmojsy.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    evens = filter(x ->\
    \ x % 2 == 0, lst)\n    odds = filter(x -> x % 2 != 0, lst)\n    return sum(evens[odds])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpk9bd6xxk.jl:17\\n  Expression: candidate([4,\
    \ 88]) == 88\\n   Evaluated: 0 == 88\\nStacktrace:\\n [1] macro expansion\\n \
    \  @ /tmp/tmpk9bd6xxk.jl:17 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpk9bd6xxk.jl:16\\ntest set: Error\
    \ During Test at /tmp/tmpk9bd6xxk.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate([4, 5, 6, 7, 2, 122]) == 122\\n  BoundsError: attempt to access 4-element\
    \ Vector{Int64} at index [[5, 7]]\\n  Stacktrace:\\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\\n     @ Base ./abstractarray.jl:651\\n   [2] checkbounds\\\
    n     @ ./abstractarray.jl:616 [inlined]\\n   [3] _getindex\\n     @ ./multidimensional.jl:837\
    \ [inlined]\\n   [4] getindex\\n     @ ./abstractarray.jl:1170 [inlined]\\n  \
    \ [5] add(lst::Vector{Int64})\\n     @ Main /tmp/tmpk9bd6xxk.jl:10\\n   [6] macro\
    \ expansion\\n     @ /tmp/tmpk9bd6xxk.jl:18 [inlined]\\n   [7] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpk9bd6xxk.jl:16\\ntest set:\
    \ Error During Test at /tmp/tmpk9bd6xxk.jl:19\\n  Test threw exception\\n  Expression:\
    \ candidate([4, 0, 6, 7]) == 0\\n  BoundsError: attempt to access 3-element Vector{Int64}\
    \ at index [[7]]\\n  Stacktrace:\\n   [1] throw_boundserror(A::Vector{Int64},\
    \ I::Tuple{Vector{Int64}})\\n     @ Base ./abstractarray.jl:651\\n   [2] checkbounds\\\
    n     @ ./abstractarray.jl:616 [inlined]\\n   [3] _getindex\\n     @ ./multidimensional.jl:837\
    \ [inlined]\\n   [4] getindex\\n     @ ./abstractarray.jl:1170 [inlined]\\n  \
    \ [5] add(lst::Vector{Int64})\\n     @ Main /tmp/tmpk9bd6xxk.jl:10\\n   [6] macro\
    \ expansion\\n     @ /tmp/tmpk9bd6xxk.jl:19 [inlined]\\n   [7] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [8] top-level scope\\n     @ /tmp/tmpk9bd6xxk.jl:16\\ntest set:\
    \ Test Failed at /"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc0md0h7y.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpc0md0h7y.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc0md0h7y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpc0md0h7y.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc0md0h7y.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc0md0h7y.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc0md0h7y.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpglmj55bg.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpglmj55bg.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpglmj55bg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpglmj55bg.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpglmj55bg.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpglmj55bg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpglmj55bg.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpglmj55bg.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpglmj55bg.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpglmj55bg.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpglmj55bg.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpglmj55bg.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpglmj55bg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgu3xnknc.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgu3xnknc.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgu3xnknc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgu3xnknc.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgu3xnknc.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgu3xnknc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgu3xnknc.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgu3xnknc.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgu3xnknc.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpgu3xnknc.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgu3xnknc.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgu3xnknc.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgu3xnknc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbq3z1sqh.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbq3z1sqh.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbq3z1sqh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbq3z1sqh.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbq3z1sqh.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbq3z1sqh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbq3z1sqh.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbq3z1sqh.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbq3z1sqh.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpbq3z1sqh.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbq3z1sqh.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbq3z1sqh.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbq3z1sqh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6i268eqc.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6i268eqc.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6i268eqc.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6i268eqc.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6i268eqc.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6i268eqc.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6i268eqc.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuifiobnx.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuifiobnx.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuifiobnx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpuifiobnx.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuifiobnx.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuifiobnx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpuifiobnx.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuifiobnx.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuifiobnx.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpuifiobnx.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuifiobnx.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuifiobnx.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuifiobnx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppv98z87p.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppv98z87p.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppv98z87p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppv98z87p.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppv98z87p.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppv98z87p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppv98z87p.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppv98z87p.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppv98z87p.jl:20\ntest set: Test\
    \ Failed at /tmp/tmppv98z87p.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppv98z87p.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppv98z87p.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppv98z87p.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59a5ka93.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp59a5ka93.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp59a5ka93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp59a5ka93.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp59a5ka93.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp59a5ka93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp59a5ka93.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp59a5ka93.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp59a5ka93.jl:20\ntest set: Test\
    \ Failed at /tmp/tmp59a5ka93.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp59a5ka93.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp59a5ka93.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59a5ka93.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    return sum(lst[2:2:end])\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
    \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
    \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvwa88a0y.jl:16\n  Expression: candidate([4,\
    \ 5, 6, 7, 2, 122]) == 122\n   Evaluated: 134 == 122\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvwa88a0y.jl:16 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvwa88a0y.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpvwa88a0y.jl:17\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 7 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvwa88a0y.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvwa88a0y.jl:14\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     2      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvwa88a0y.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp17d91wv.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp17d91wv.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp17d91wv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpp17d91wv.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp17d91wv.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp17d91wv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpp17d91wv.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp17d91wv.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp17d91wv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpp17d91wv.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp17d91wv.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp17d91wv.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp17d91wv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2 \n\
    \    \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n    sum = 0\n    for i\
    \ in 1:2:length(lst)\n        if lst[i] % 2 == 0\n            sum += lst[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add;\n\t@test(candidate([4, 88]) == 88)\n\t@test(candidate([4, 5, 6, 7, 2,\
    \ 122]) == 122)\n\t@test(candidate([4, 0, 6, 7]) == 0)\n\t@test(candidate([4,\
    \ 4, 6, 8]) == 12)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo9slu02g.jl:21\n  Expression: candidate([4,\
    \ 88]) == 88\n   Evaluated: 4 == 88\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo9slu02g.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo9slu02g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo9slu02g.jl:22\n  Expression: candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n   Evaluated: 12 == 122\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo9slu02g.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo9slu02g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo9slu02g.jl:23\n  Expression: candidate([4, 0, 6, 7]) == 0\n\
    \   Evaluated: 10 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo9slu02g.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo9slu02g.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpo9slu02g.jl:24\n  Expression: candidate([4, 4, 6, 8]) == 12\n\
    \   Evaluated: 10 == 12\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo9slu02g.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo9slu02g.jl:20\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo9slu02g.jl:18\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_91_is_bored
language: julia
prompt: "\"\"\"\n    You'll be given a string of words, and your task is to count\
  \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
  \    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The\
  \ sun is shining. I love this weather\")\n    1\n    \"\"\"\nfunction is_bored(S::String)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
  Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
  I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
  \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
  You and I are going for a walk\") == 0)\nend\n"
completions: ["    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S,\
    \ r\"I\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", " \
    \   return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    count = 0\n    for s in split(S, \".\")\n   \
    \     if split(s, \" \")[1] == \"I\"\n            count += 1\n        end\n  \
    \  end\n    return count\nend", "    count = 0\n    for i in 1:length(S)\n   \
    \     if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    return length(split(S, r\"\\.\")) - 1\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend",
  "    return length(split(S, r\"[.!?]\")) - 1\nend", "    return length(split(S,\
    \ r\"\\.\")) - length(split(S, r\"\\.\\s*I\"))\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return length(split(S, r\"\\.\")) - 1\nend", "    count = 0\n    for i in\
    \ split(S, ['.', '?', '!'])\n        if i[1] == 'I'\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    return length(split(S, r\"\
    \\.\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "   \
    \ count = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S, r\"\\\
    .\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S, r\"[.!?]\"\
    )) - length(split(S, r\"[.!?] I\"))\nend", "    return length(split(S, r\"I\"\
    )) - 1\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    count\
    \ = 0\n    for s in split(S, \".\")\n        if s[1] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    return length(split(S,\
    \ r\"\\bI\\b\"))-1\nend", "    # Split the string into sentences\n    sentences\
    \ = split(S, r\"[.?!]\")\n    # Count the number of sentences that start with\
    \ \"I\"\n    return count(s -> startswith(s, \"I\"), sentences)\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.!?]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    # Split the string into sentences\n    sentences = split(S, r\"[.?!]\"\
    )\n    # Count the number of sentences that start with \"I\"\n    return count(s\
    \ -> startswith(s, \"I\"), sentences)\nend", "    return length(split(S, r\"\\\
    .\")) - 1\nend", "    boredoms = 0\n    sentences = split(S, r\"[.?!]\")\n   \
    \ for sentence in sentences\n        if startswith(sentence, \"I\")\n        \
    \    boredoms += 1\n        end\n    end\n    return boredoms\nend", "    count\
    \ = 0\n    for i in split(S, \".\")\n        if i[1] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   sentences = split(S, r\"[.?!]\")\n    boredoms = 0\n    for sentence in sentences\n\
    \        if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    return length(split(S, r\"\\bI\\b\"\
    )) - 1\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n  \
    \      if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    return length(split(S, r\"\\bI\\b\"\
    )) - 1\nend", "    boredoms = 0\n    for sentence in split(S, [\".\", \"?\", \"\
    !\"])\n        if startswith(sentence, \"I\")\n            boredoms += 1\n   \
    \     end\n    end\n    return boredoms\nend", "    return length(split(S, r\"\
    \\bI\\b\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", " \
    \   return length(split(S, r\"\\.\")) - 1\nend", "    count = 0\n    for i in\
    \ 1:length(S)\n        if S[i] == 'I'\n            count += 1\n        end\n \
    \   end\n    return count\nend", "    return length(split(S, r\"\\bI\\b\")) -\
    \ 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    count = 0\n    for i in 1:length(S)\n       \
    \ if S[i] == 'I'\n            count += 1\n        end\n    end\n    return count\n\
    end", "    boredoms = 0\n    for sentence in split(S, [\".\", \"?\", \"!\"])\n\
    \        if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    # Split the string into sentences\n\
    \    sentences = split(S, r\"[.?!]\")\n    # Count the number of sentences that\
    \ start with \"I\"\n    return count(s -> startswith(s, \"I\"), sentences)\nend",
  "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S,\
    \ r\"\\.\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend",
  "    return length(split(S,\"I\"))-1\nend", "    count = 0\n    for i in split(S,\
    \ ['.', '?', '!'])\n        if i[1] == 'I'\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    return length(split(S, r\"\\.|\\?|\\!\"\
    )) - 1\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n  \
    \      if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    for sentence in split(S,\
    \ r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    num_boredoms = 0\n\
    \    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"\
    I\")\n            num_boredoms += 1\n        end\n    end\n    return num_boredoms\n\
    end", "    return length(split(S, r\"\\s*[.?!]\\s*\")[1:end])\nend", "    count\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    # Split\
    \ the string into sentences\n    sentences = split(S, r\"[.?!]\")\n    # Count\
    \ the number of sentences that start with \"I\"\n    return length(filter(s ->\
    \ startswith(s, \"I\"), sentences))\nend", "    return length(split(S, r\"\\bI\\\
    b\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    return count(eachmatch(r\"I[^.!?]*[.!?]\", S))\n\
    end", "    words = split(S, r\"[.?!]\")\n    boredoms = 0\n    for word in words\n\
    \        if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    return length(split(S, r\"\\?|\\.|\\!\")) - 1\n\
    end", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    S = split(S, \".!?\")\n    count = 0\n    for\
    \ s in S\n        if s[1] == 'I'\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend",
  "    return length(split(S, r\"\\.|\\?|\\!\")) - 1\nend", "    count = 0\n    for\
    \ i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    return length(split(S, r\"\\bI\\b\")) -\
    \ 1\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n     \
    \   if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n \
    \   end\n    return boredoms\nend", "    boredoms = 0\n    for sentence in split(S,\
    \ r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend",
  "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    return length(split(S,\
    \ r\"\\.|\\?|\\!\")) - 1\nend", "    return count(split(S, r\"\\.|\\?|\\!\"))\
    \ do s\n        s[1] == 'I'\n    end\nend", "    return length(split(S, r\"\\\
    bI\\b\")) - 1\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i]\
    \ == 'I'\n            count += 1\n        end\n    end\n    return count\nend",
  "    return length(split(S, r\"\\.\")) - 1\nend", "    S = split(S, \".\")\n   \
    \ boredoms = 0\n    for sentence in S\n        if sentence[1] == 'I'\n       \
    \     boredoms += 1\n        end\n    end\n    return boredoms\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, [\".\", \"?\", \"!\"])\n        if startswith(sentence, \"I\")\n\
    \            boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   words = split(S, r\"[.?!]\")\n    boredoms = 0\n    for word in words\n  \
    \      if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n  \
    \  return boredoms\nend", "    boredoms = 0\n    for sentence in split(S, r\"\
    [.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    return length(split(S,\
    \ r\"\\bI\\b\"))-1\nend", "    return length(split(S, r\"\\bI\\b\"))-1\nend",
  "    return length(split(S, r\"\\bI\\b\"))-1\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    count = 0\n    for i in 1:length(S)\n       \
    \ if S[i] == 'I'\n            count += 1\n        end\n    end\n    return count\n\
    end", "    return count(x->x==\"I\", split(S, ['.', '?', '!']))\nend", "    boredoms\
    \ = 0\n    sentences = split(S, [\".\", \"?\", \"!\"])\n    for sentence in sentences\n\
    \        words = split(sentence)\n        if words[1] == \"I\"\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return length(split(S,\
    \ r\"\\.|\\?|\\!\")) - 1\nend", "    return length(split(S, r\"\\.\")) - 1\nend",
  "    # Split the string into sentences\n    sentences = split(S, r\"[.?!]\")\n \
    \   boredoms = 0\n    for sentence in sentences\n        # Split the sentence\
    \ into words\n        words = split(sentence)\n        if words[1] == \"I\"\n\
    \            boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return length(split(S, r\"\\.\")) - 1\nend", "    count = 0\n    for word\
    \ in split(S, ['.', '?', '!'])\n        if word[1] == 'I'\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    # Split the string into sentences\n    sentences\
    \ = split(S, r\"[.!?]\")\n    # Filter the sentences that start with \"I\"\n \
    \   boredoms = filter(x -> startswith(x, \"I\"), sentences)\n    # Return the\
    \ length of the filtered array\n    return length(boredoms)\nend", "    count\
    \ = 0\n    for i in split(S, \".\")\n        if split(i, \" \")[1] == \"I\"\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, r\"\\.|\\?|\\!\")) - 1\nend", "    count = 0\n    for word in\
    \ split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            count += 1\n  \
    \      end\n    end\n    return count\nend", "    count = 0\n    for i in 1:length(S)\n\
    \        if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    return length(split(S, r\"\\.\")) - 1\nend", "    # Split\
    \ the string into sentences\n    sentences = split(S, r\"[.?!]\")\n    # Count\
    \ the number of sentences that start with \"I\"\n    return count(s -> startswith(s,\
    \ \"I\"), sentences)\nend", "    boredoms = 0\n    for sentence in split(S, [\"\
    .\", \"?\", \"!\"])\n        if startswith(sentence, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return length(split(S,\
    \ r\"\\.\")) - 1\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i]\
    \ == 'I'\n            count += 1\n        end\n    end\n    return count\nend",
  "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    return length(split(S, r\"\\.\")) - 1\n\
    end", "    return length(split(S, r\"[.!?]\")) - length(split(S, r\"[.!?]I\"))\n\
    end", "    # your code here\n    return 0\nend", "    return length(split(S, r\"\
    \\bI\\b\")) - 1\nend", "    count = 0\n    for word in split(S, r\"[.?!]\")\n\
    \        if word[1] == 'I'\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\"\
    )\n        if startswith(sentence, \"I\")\n            boredoms += 1\n       \
    \ end\n    end\n    return boredoms\nend", "    count = 0\n    for i in 1:length(S)\n\
    \        if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    # Split\
    \ the string into sentences\n    sentences = split(S, r\"[.?!]\")\n    # Count\
    \ the number of sentences that start with \"I\"\n    return sum(starts_with(s,\
    \ \"I\") for s in sentences)\nend", "    n = 0\n    for s in split(S, r\"[.?!]\"\
    )\n        if startswith(s, \"I\")\n            n += 1\n        end\n    end\n\
    \    return n\nend", "    return length(split(S, r\"\\.\")) - 1\nend", "    return\
    \ length(split(S, r\"\\.|\\?|\\!\")) - 1\nend", "    return length(split(S, r\"\
    \\.\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "   \
    \ count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    count = 0\n    for\
    \ i in split(S, \".\")\n        if i[1] == 'I'\n            count += 1\n     \
    \   end\n    end\n    return count\nend", "    return length(split(S, r\"\\.|\\\
    ?|\\!\")) - 1\nend", "    count = 0\n    for i in split(S, ['.', '?', '!'])\n\
    \        if i[1] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    # split the string by '.', '?' or '!'\n    sentences = split(S,\
    \ r\"[.?!]\")\n    # filter out the sentences that start with 'I'\n    boredoms\
    \ = filter(x -> startswith(x, \"I\"), sentences)\n    # return the length of the\
    \ filtered array\n    return length(boredoms)\nend", "    # Split the string into\
    \ sentences\n    sentences = split(S, r\"[.?!]\")\n    # Count the number of sentences\
    \ that start with \"I\"\n    count = 0\n    for sentence in sentences\n      \
    \  if startswith(sentence, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    count = 0\n    for i in 1:length(S)\n        if\
    \ S[i] == 'I'\n            count += 1\n        end\n    end\n    return count\n\
    end", "    count = 0\n    for i in split(S, ['.', '?', '!'])\n        if i[1]\
    \ == 'I'\n            count += 1\n        end\n    end\n    return count\nend",
  "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S,\
    \ r\"\\.\")) - 1\nend", "    return length(split(S, r\"I\")) - 1\nend", "    return\
    \ length(split(S, r\"\\.\")) - 1\nend", "    # Split the string into sentences\n\
    \    sentences = split(S, \".\")\n    boredoms = 0\n    for sentence in sentences\n\
    \        words = split(sentence, \" \")\n        if words[1] == \"I\"\n      \
    \      boredoms += 1\n        end\n    end\n    return boredoms\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    # split the string into sentences\n\
    \    sentences = split(S, r\"[.?!]\")\n    # count the number of sentences that\
    \ start with \"I\"\n    return sum(s->startswith(s, \"I\") ? 1 : 0, sentences)\n\
    end", "    return length(split(S, r\"\\.\")) - 1\nend", "    return length(split(S,\
    \ r\"\\.\")) - 1\nend", "    sentences = split(S, r\"[.?!]\")\n    boredoms =\
    \ 0\n    for sentence in sentences\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S,\
    \ r\"\\.\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend",
  "    count = 0\n    for i in split(S, \".\")\n        if startswith(i, \"I\")\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.!?]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    n = 0\n\
    \    for s in split(S, ['.', '?', '!'])\n        if startswith(s, \"I\")\n   \
    \         n += 1\n        end\n    end\n    return n\nend", "    count = 0\n \
    \   for i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n   \
    \     end\n    end\n    return count\nend", "    return length(split(S, r\"\\\
    bI\\b\")) - 1\nend", "    return length(split(S, r\"\\.|\\?|\\!\")) - 1\nend",
  "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    # Split the string into\
    \ sentences\n    sentences = split(S, r\"[.?!]\")\n    # Count the number of sentences\
    \ that start with \"I\"\n    return count(s -> startswith(s, \"I\"), sentences)\n\
    end", "    count = 0\n    for word in split(S, \" \")\n        if word == \"I\"\
    \n            count += 1\n        end\n    end\n    return count\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, r\"[.?!]\")) - length(split(S, r\"[.?!]I\"))\nend", "    return\
    \ length(split(S, r\"\\.|\\?|\\!\")) - 1\nend", "    return length(split(S, r\"\
    \\.|\\?|\\!\")) - 1\nend", "    boredoms = 0\n    for sentence in split(S, r\"\
    [.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    return length(split(S,\
    \ \"I\")) - 1\nend", "    # Split the string into sentences\n    sentences = split(S,\
    \ r\"[.?!]\")\n    # Count the number of sentences that start with \"I\"\n   \
    \ return sum(s -> startswith(s, \"I\") ? 1 : 0, sentences)\nend", "    return\
    \ length(split(S, r\"\\bI\\b\"))-1\nend", "    return length(split(S, r\"\\bI\\\
    b\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    count\
    \ = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    return length(split(S,\
    \ r\"\\.\")) - 1\nend", "    n = 0\n    for i in split(S, \".\")\n        if i[1]\
    \ == 'I'\n            n += 1\n        end\n    end\n    return n\nend", "    #\
    \ your code here\n    return 0\nend", "    return length(split(S, r\"\\.\")) -\
    \ 1\nend", "    return length(split(S, \"I\")) - 1\nend", "    count = 0\n   \
    \ for word in split(S, ['.', '?', '!'])\n        if word[1] == 'I'\n         \
    \   count += 1\n        end\n    end\n    return count\nend", "    boredoms =\
    \ 0\n    for sentence in split(S, ['.', '?', '!'])\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    count = 0\n    for s in split(S,\
    \ ['.', '?', '!'])\n        if startswith(s, \"I\")\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    # your code here\n    return\
    \ 0\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    count\
    \ = 0\n    for i in split(S, \".\")\n        if startswith(i, \"I\")\n       \
    \     count += 1\n        end\n    end\n    return count\nend", "    count = 0\n\
    \    for i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n  \
    \      end\n    end\n    return count\nend", "    return length(split(S, r\"\\\
    bI\\b\")) - 1\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i]\
    \ == 'I' && S[i-1] == ' '\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, r\"\\bI\\b\")) - 1\nend", "    return length(split(S, r\"\\\
    bI\\b\")) - 1\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", " \
    \   return length(split(S, r\"\\bI\\b\")) - 1\nend", "    count = 0\n    for i\
    \ in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n        end\n\
    \    end\n    return count\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_75_is_multiply_prime
language: julia
results:
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n       \
    \     if isprime(i)\n                for j in 2:a-1\n                    if a\
    \ % j == 0\n                        if isprime(j)\n                          \
    \  for k in 2:a-1\n                                if a % k == 0\n           \
    \                         if isprime(k)\n                                    \
    \    if i * j * k == a\n                                            return true\n\
    \                                        end\n                               \
    \     end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd9k70rt_.jl:41\n  Test threw exception\n\
    \  Expression: candidate(30) == true\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpd9k70rt_.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpd9k70rt_.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd9k70rt_.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpd9k70rt_.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpd9k70rt_.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpd9k70rt_.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd9k70rt_.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpd9k70rt_.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpd9k70rt_.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpd9k70rt_.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd9k70rt_.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpd9k70rt_.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpd9k70rt_.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpd9k70rt_.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd9k70rt_.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpd9k70rt_.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(105) == true\n  Und"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9k70rt_.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp8iyay9wg.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp8iyay9wg.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8iyay9wg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8iyay9wg.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8iyay9wg.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8iyay9wg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8iyay9wg.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8iyay9wg.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8iyay9wg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8iyay9wg.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8iyay9wg.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8iyay9wg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp8iyay9wg.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8iyay9wg.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8iyay9wg.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8iyay9wg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 0 || a ==\
    \ 1\n        return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp704vrabp.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp704vrabp.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp704vrabp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp704vrabp.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp704vrabp.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp704vrabp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp704vrabp.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp704vrabp.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp704vrabp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp704vrabp.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp704vrabp.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp704vrabp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp704vrabp.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp704vrabp.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp704vrabp.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp704vrabp.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp704vrabp.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp704vrabp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpamo9_lq_.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpamo9_lq_.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamo9_lq_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpamo9_lq_.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpamo9_lq_.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamo9_lq_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpamo9_lq_.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpamo9_lq_.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamo9_lq_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpamo9_lq_.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpamo9_lq_.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamo9_lq_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpamo9_lq_.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpamo9_lq_.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamo9_lq_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpamo9_lq_.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpamo9_lq_.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpamo9_lq_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptocpyjgv.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmptocpyjgv.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptocpyjgv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptocpyjgv.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptocpyjgv.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptocpyjgv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptocpyjgv.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptocpyjgv.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptocpyjgv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptocpyjgv.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptocpyjgv.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptocpyjgv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptocpyjgv.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptocpyjgv.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptocpyjgv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptocpyjgv.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptocpyjgv.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptocpyjgv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a\n \
    \       if a%i == 0\n            for j in 2:a\n                if a%j == 0\n \
    \                   for k in 2:a\n                        if a%k == 0\n      \
    \                      return true\n                        end\n            \
    \        end\n                end\n            end\n        end\n    end\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5xf2x08e.jl:29\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp5xf2x08e.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5xf2x08e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5xf2x08e.jl:32\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5xf2x08e.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5xf2x08e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5xf2x08e.jl:35\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5xf2x08e.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5xf2x08e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5xf2x08e.jl:36\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5xf2x08e.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5xf2x08e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5xf2x08e.jl:37\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5xf2x08e.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5xf2x08e.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5xf2x08e.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if isprime(i)\n                for j in 2:a\n\
    \                    if isprime(j)\n                        for k in 2:a\n   \
    \                         if isprime(k)\n                                if i*j*k\
    \ == a\n                                    return true\n                    \
    \            end\n                            end\n                        end\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp68_wuo5o.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp68_wuo5o.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmp68_wuo5o.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp68_wuo5o.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp68_wuo5o.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp68_wuo5o.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp68_wuo5o.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp68_wuo5o.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp68_wuo5o.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp68_wuo5o.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp68_wuo5o.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp68_wuo5o.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp68_wuo5o.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp68_wuo5o.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp68_wuo5o.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp68_wuo5o.jl:32\\ntest set:\
    \ Test Failed at /tmp/tmp68_wuo5o.jl:37\\n  Expression: can"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    for i in 2:a\n        if a % i == 0\n         \
    \   if is_prime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if is_prime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if is_prime(k)\n                                        return\
    \ true\n                                    end\n                            \
    \    end\n                            end\n                        end\n     \
    \               end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpfm8qjqzk.jl:38\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: is_prime not defined\n\
    \  Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpfm8qjqzk.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpfm8qjqzk.jl:38 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfm8qjqzk.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfm8qjqzk.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpfm8qjqzk.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpfm8qjqzk.jl:39 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfm8qjqzk.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfm8qjqzk.jl:40\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpfm8qjqzk.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpfm8qjqzk.jl:40 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfm8qjqzk.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfm8qjqzk.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpfm8qjqzk.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpfm8qjqzk.jl:41 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfm8qjqzk.jl:37\ntest set:\
    \ Error During Test at /tmp/tmpfm8qjqzk.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfm8qjqzk.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a\n        if a % i == 0\n         \
    \   if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyah1iyh8.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpyah1iyh8.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpyah1iyh8.jl:40 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpyah1iyh8.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpyah1iyh8.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpyah1iyh8.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpyah1iyh8.jl:41 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpyah1iyh8.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpyah1iyh8.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpyah1iyh8.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpyah1iyh8.jl:42 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpyah1iyh8.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpyah1iyh8.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpyah1iyh8.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpyah1iyh8.jl:43 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpyah1iyh8.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpyah1iyh8.jl:44\\n  Test thre"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpyah1iyh8.jl:37\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a\n        if a % i == 0\n         \
    \   return is_multiply_prime(a/i)\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkc8a_3nv.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmpkc8a_3nv.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmpkc8a_3nv.jl:14\\n   [2] macro expansion\\n     @ /tmp/tmpkc8a_3nv.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkc8a_3nv.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpkc8a_3nv.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpkc8a_3nv.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpkc8a_3nv.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpkc8a_3nv.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkc8a_3nv.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpkc8a_3nv.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpkc8a_3nv.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpkc8a_3nv.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpkc8a_3nv.jl:26 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkc8a_3nv.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpkc8a_3nv.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n       \
    \     return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuvkm1s9_.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpuvkm1s9_.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvkm1s9_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuvkm1s9_.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvkm1s9_.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvkm1s9_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuvkm1s9_.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvkm1s9_.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvkm1s9_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuvkm1s9_.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvkm1s9_.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvkm1s9_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuvkm1s9_.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvkm1s9_.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvkm1s9_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuvkm1s9_.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvkm1s9_.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvkm1s9_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi9pk3za6.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpi9pk3za6.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi9pk3za6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi9pk3za6.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi9pk3za6.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi9pk3za6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi9pk3za6.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi9pk3za6.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi9pk3za6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi9pk3za6.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi9pk3za6.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi9pk3za6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi9pk3za6.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi9pk3za6.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi9pk3za6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpi9pk3za6.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi9pk3za6.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi9pk3za6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp36oi9n5p.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp36oi9n5p.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36oi9n5p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp36oi9n5p.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp36oi9n5p.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36oi9n5p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp36oi9n5p.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp36oi9n5p.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36oi9n5p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp36oi9n5p.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp36oi9n5p.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36oi9n5p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp36oi9n5p.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp36oi9n5p.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36oi9n5p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp36oi9n5p.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp36oi9n5p.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp36oi9n5p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n       \
    \     if isprime(i)\n                for j in 2:a-1\n                    if a\
    \ % j == 0\n                        if isprime(j)\n                          \
    \  for k in 2:a-1\n                                if a % k == 0\n           \
    \                         if isprime(k)\n                                    \
    \    if i * j * k == a\n                                            return true\n\
    \                                        end\n                               \
    \     end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj7k_yfh0.jl:41\n  Test threw exception\n\
    \  Expression: candidate(30) == true\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpj7k_yfh0.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpj7k_yfh0.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpj7k_yfh0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpj7k_yfh0.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpj7k_yfh0.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpj7k_yfh0.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpj7k_yfh0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpj7k_yfh0.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpj7k_yfh0.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpj7k_yfh0.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpj7k_yfh0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpj7k_yfh0.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpj7k_yfh0.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpj7k_yfh0.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpj7k_yfh0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpj7k_yfh0.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(105) == true\n  Und"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj7k_yfh0.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbc0_1adl.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpbc0_1adl.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbc0_1adl.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbc0_1adl.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbc0_1adl.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbc0_1adl.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbc0_1adl.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbc0_1adl.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbc0_1adl.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbc0_1adl.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbc0_1adl.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbc0_1adl.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbc0_1adl.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbc0_1adl.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbc0_1adl.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpbc0_1adl.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbc0_1adl.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbc0_1adl.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3affzjhg.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3affzjhg.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3affzjhg.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp3affzjhg.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3affzjhg.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3affzjhg.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp3affzjhg.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3affzjhg.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3affzjhg.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp3affzjhg.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3affzjhg.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3affzjhg.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp3affzjhg.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3affzjhg.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3affzjhg.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp3affzjhg.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3affzjhg.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3affzjhg.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            for j in 2:a-1\n                if a%j == 0\n\
    \                    for k in 2:a-1\n                        if a%k == 0\n   \
    \                         if i*j*k == a\n                                return\
    \ true\n                            end\n                        end\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmm0u2mlg.jl:37\n  Expression: candidate(126)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpmm0u2mlg.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmm0u2mlg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpmm0u2mlg.jl:38\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmm0u2mlg.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmm0u2mlg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpmm0u2mlg.jl:39\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmm0u2mlg.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmm0u2mlg.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmm0u2mlg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdb7j9k8b.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpdb7j9k8b.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdb7j9k8b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpdb7j9k8b.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdb7j9k8b.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdb7j9k8b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpdb7j9k8b.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdb7j9k8b.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdb7j9k8b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpdb7j9k8b.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdb7j9k8b.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdb7j9k8b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpdb7j9k8b.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdb7j9k8b.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdb7j9k8b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpdb7j9k8b.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdb7j9k8b.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdb7j9k8b.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp94lu5z3w.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp94lu5z3w.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp94lu5z3w.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp94lu5z3w.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp94lu5z3w.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp94lu5z3w.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp94lu5z3w.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp94lu5z3w.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp94lu5z3w.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpixk3v23v.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpixk3v23v.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpixk3v23v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpixk3v23v.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpixk3v23v.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpixk3v23v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpixk3v23v.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpixk3v23v.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpixk3v23v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpixk3v23v.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpixk3v23v.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpixk3v23v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpixk3v23v.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpixk3v23v.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpixk3v23v.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpixk3v23v.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpixk3v23v.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpixk3v23v.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a\n        if isprime(i) && a % i ==\
    \ 0\n            a = a / i\n            if a == 1\n                return true\n\
    \            end\n        end\n    end\n    return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw4oqiqnn.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw4oqiqnn.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpw4oqiqnn.jl:27 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw4oqiqnn.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpw4oqiqnn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw4oqiqnn.jl:13\n   [2]\
    \ macro expansion\n     @ /tmp/tmpw4oqiqnn.jl:28 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw4oqiqnn.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpw4oqiqnn.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw4oqiqnn.jl:13\n   [2]\
    \ macro expansion\n     @ /tmp/tmpw4oqiqnn.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw4oqiqnn.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpw4oqiqnn.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw4oqiqnn.jl:13\n   [2]\
    \ macro expansion\n     @ /tmp/tmpw4oqiqnn.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw4oqiqnn.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpw4oqiqnn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw4oqiqnn.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfiala45k.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpfiala45k.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfiala45k.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpfiala45k.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfiala45k.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfiala45k.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpfiala45k.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfiala45k.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfiala45k.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpfiala45k.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfiala45k.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfiala45k.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpfiala45k.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfiala45k.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfiala45k.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpfiala45k.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfiala45k.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfiala45k.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3 \n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp64div4n6.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp64div4n6.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64div4n6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64div4n6.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp64div4n6.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64div4n6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64div4n6.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp64div4n6.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64div4n6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64div4n6.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp64div4n6.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64div4n6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64div4n6.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp64div4n6.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp64div4n6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp64div4n6.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp64div4n6.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp64div4n6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       if a == i * j * k\n                                return\
    \ true\n                            end\n                        end\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97]\n    for i in primes\n        for j in primes\n            for k\
    \ in primes\n                if i*j*k == a\n                    return true\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    for\
    \ i in 2:a-1\n        if a % i == 0\n            return false\n        end\n \
    \   end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp97q5vja7.jl:27\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp97q5vja7.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97q5vja7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp97q5vja7.jl:28\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97q5vja7.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97q5vja7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp97q5vja7.jl:29\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97q5vja7.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97q5vja7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp97q5vja7.jl:31\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97q5vja7.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97q5vja7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp97q5vja7.jl:32\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97q5vja7.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97q5vja7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp97q5vja7.jl:36\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97q5vja7.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97q5vja7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvkx25b9e.jl:40\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvkx25b9e.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpvkx25b9e.jl:40 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvkx25b9e.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpvkx25b9e.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvkx25b9e.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpvkx25b9e.jl:41 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvkx25b9e.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpvkx25b9e.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvkx25b9e.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpvkx25b9e.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvkx25b9e.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpvkx25b9e.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvkx25b9e.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpvkx25b9e.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvkx25b9e.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpvkx25b9e.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvkx25b9e.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxtc9t0b6.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxtc9t0b6.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtc9t0b6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxtc9t0b6.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtc9t0b6.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtc9t0b6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxtc9t0b6.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtc9t0b6.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtc9t0b6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxtc9t0b6.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtc9t0b6.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtc9t0b6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxtc9t0b6.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtc9t0b6.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtc9t0b6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpxtc9t0b6.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtc9t0b6.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxtc9t0b6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    if a == 3\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return is_multiply_prime(a/2)\n    end\n    if a % 3 ==\
    \ 0\n        return is_multiply_prime(a/3)\n    end\n    if a % 5 == 0\n     \
    \   return is_multiply_prime(a/5)\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9yh82g0d.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmp9yh82g0d.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmp9yh82g0d.jl:22\\n   [2] macro expansion\\n     @ /tmp/tmp9yh82g0d.jl:31\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9yh82g0d.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp9yh82g0d.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmp9yh82g0d.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp9yh82g0d.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp9yh82g0d.jl:32 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9yh82g0d.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp9yh82g0d.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmp9yh82g0d.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp9yh82g0d.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp9yh82g0d.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9yh82g0d.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp9yh82g0d.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_a0lvis_.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp_a0lvis_.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp_a0lvis_.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_a0lvis_.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp_a0lvis_.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp_a0lvis_.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp_a0lvis_.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_a0lvis_.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp_a0lvis_.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a % 2 == 0\n        return false\n\
    \    end\n    if a % 3 == 0\n        return false\n    end\n    i = 5\n    while\
    \ i * i <= a\n        if a % i == 0\n            return false\n        end\n \
    \       if a % (i + 2) == 0\n            return false\n        end\n        i\
    \ += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7okak21g.jl:41\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp7okak21g.jl:41 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7okak21g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7okak21g.jl:42\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7okak21g.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7okak21g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7okak21g.jl:43\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7okak21g.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7okak21g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7okak21g.jl:45\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7okak21g.jl:45\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7okak21g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7okak21g.jl:46\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7okak21g.jl:46\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7okak21g.jl:40\ntest set: Test\
    \ Failed at /tmp/tmp7okak21g.jl:50\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7okak21g.jl:50\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7okak21g.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp38iy17np.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp38iy17np.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38iy17np.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp38iy17np.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38iy17np.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38iy17np.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp38iy17np.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38iy17np.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38iy17np.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp38iy17np.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38iy17np.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38iy17np.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp38iy17np.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38iy17np.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp38iy17np.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp38iy17np.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp38iy17np.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp38iy17np.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5q_ubon9.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp5q_ubon9.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5q_ubon9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5q_ubon9.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5q_ubon9.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5q_ubon9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5q_ubon9.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5q_ubon9.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5q_ubon9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5q_ubon9.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5q_ubon9.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5q_ubon9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp5q_ubon9.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5q_ubon9.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5q_ubon9.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5q_ubon9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if a % i == 0\n                for j in 2:a\n\
    \                    if a % j == 0\n                        for k in 2:a\n   \
    \                         if a % k == 0\n                                if a\
    \ == i * j * k\n                                    return true\n            \
    \                    end\n                            end\n                  \
    \      end\n                    end\n                end\n            end\n  \
    \      end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpct6oz4py.jl:37\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpct6oz4py.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpct6oz4py.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpct6oz4py.jl:38\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpct6oz4py.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpct6oz4py.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpct6oz4py.jl:42\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpct6oz4py.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpct6oz4py.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpct6oz4py.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            for j in 2:a-1\n                if a%j == 0\n\
    \                    for k in 2:a-1\n                        if a%k == 0\n   \
    \                         if isprime(i) && isprime(j) && isprime(k)\n        \
    \                        return true\n                            end\n      \
    \                  end\n                    end\n                end\n       \
    \     end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm20rtlmv.jl:32\n  Test threw exception\n\
    \  Expression: candidate(30) == true\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpm20rtlmv.jl:15\n\
    \   [2] macro expansion\n     @ /tmp/tmpm20rtlmv.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm20rtlmv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpm20rtlmv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpm20rtlmv.jl:15\n   [2]\
    \ macro expansion\n     @ /tmp/tmpm20rtlmv.jl:33 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm20rtlmv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpm20rtlmv.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpm20rtlmv.jl:15\n   [2]\
    \ macro expansion\n     @ /tmp/tmpm20rtlmv.jl:34 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm20rtlmv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpm20rtlmv.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpm20rtlmv.jl:15\n   [2]\
    \ macro expansion\n     @ /tmp/tmpm20rtlmv.jl:35 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm20rtlmv.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpm20rtlmv.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(105) == true\n  Und"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm20rtlmv.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzj6mpzyz.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpzj6mpzyz.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzj6mpzyz.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpzj6mpzyz.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzj6mpzyz.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzj6mpzyz.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpzj6mpzyz.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzj6mpzyz.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzj6mpzyz.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpzj6mpzyz.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzj6mpzyz.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzj6mpzyz.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpzj6mpzyz.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzj6mpzyz.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzj6mpzyz.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpzj6mpzyz.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzj6mpzyz.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzj6mpzyz.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpiea3poz2.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpiea3poz2.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiea3poz2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiea3poz2.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiea3poz2.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiea3poz2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiea3poz2.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiea3poz2.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiea3poz2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiea3poz2.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiea3poz2.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiea3poz2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiea3poz2.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiea3poz2.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpiea3poz2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpiea3poz2.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpiea3poz2.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiea3poz2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 6\n     \
    \   return false\n    end\n    if a % 2 == 0\n        return is_multiply_prime(a/2)\n\
    \    end\n    if a % 3 == 0\n        return is_multiply_prime(a/3)\n    end\n\
    \    if a % 5 == 0\n        return is_multiply_prime(a/5)\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk1zglyeu.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(30) == true\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmpk1zglyeu.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmpk1zglyeu.jl:13\\n   [2] macro expansion\\n     @ /tmp/tmpk1zglyeu.jl:29\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpk1zglyeu.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpk1zglyeu.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpk1zglyeu.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpk1zglyeu.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpk1zglyeu.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpk1zglyeu.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpk1zglyeu.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpk1zglyeu.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpk1zglyeu.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpk1zglyeu.jl:31 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpk1zglyeu.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpk1zglyeu.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(125) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3p0ytzaj.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3p0ytzaj.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3p0ytzaj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3p0ytzaj.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3p0ytzaj.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3p0ytzaj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3p0ytzaj.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3p0ytzaj.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3p0ytzaj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3p0ytzaj.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3p0ytzaj.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3p0ytzaj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3p0ytzaj.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3p0ytzaj.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3p0ytzaj.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3p0ytzaj.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmau03xrs.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpmau03xrs.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmau03xrs.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmau03xrs.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmau03xrs.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmau03xrs.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmau03xrs.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmau03xrs.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmau03xrs.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmau03xrs.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmau03xrs.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmau03xrs.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpmau03xrs.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmau03xrs.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmau03xrs.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmau03xrs.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a\n        if a % i == 0\n         \
    \   if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp10zp9kj9.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp10zp9kj9.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmp10zp9kj9.jl:40 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp10zp9kj9.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp10zp9kj9.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp10zp9kj9.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp10zp9kj9.jl:41 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp10zp9kj9.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp10zp9kj9.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp10zp9kj9.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp10zp9kj9.jl:42 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp10zp9kj9.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp10zp9kj9.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp10zp9kj9.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp10zp9kj9.jl:43 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp10zp9kj9.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp10zp9kj9.jl:44\\n  Test thre"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxw3rvq0u.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxw3rvq0u.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw3rvq0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxw3rvq0u.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxw3rvq0u.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw3rvq0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxw3rvq0u.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxw3rvq0u.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw3rvq0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxw3rvq0u.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxw3rvq0u.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw3rvq0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxw3rvq0u.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxw3rvq0u.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxw3rvq0u.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxw3rvq0u.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxw3rvq0u.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxw3rvq0u.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    return a % 2 ==\
    \ 0 && a % 3 == 0 && a % 5 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk162cd2g.jl:18\n  Expression: candidate(8)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpk162cd2g.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk162cd2g.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpk162cd2g.jl:20\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk162cd2g.jl:20\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk162cd2g.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpk162cd2g.jl:21\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk162cd2g.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk162cd2g.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpk162cd2g.jl:25\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk162cd2g.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk162cd2g.jl:15\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk162cd2g.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe89xmxh6.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpe89xmxh6.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe89xmxh6.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpe89xmxh6.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe89xmxh6.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe89xmxh6.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpe89xmxh6.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe89xmxh6.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe89xmxh6.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpe89xmxh6.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe89xmxh6.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe89xmxh6.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpe89xmxh6.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe89xmxh6.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe89xmxh6.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpe89xmxh6.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe89xmxh6.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe89xmxh6.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnt9ww03n.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpnt9ww03n.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt9ww03n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnt9ww03n.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnt9ww03n.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt9ww03n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnt9ww03n.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnt9ww03n.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt9ww03n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnt9ww03n.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnt9ww03n.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt9ww03n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnt9ww03n.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnt9ww03n.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt9ww03n.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnt9ww03n.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnt9ww03n.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnt9ww03n.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    if a % 2 == 0\n        return is_multiply_prime(a/2)\n\
    \    end\n    if a % 3 == 0\n        return is_multiply_prime(a/3)\n    end\n\
    \    if a % 5 == 0\n        return is_multiply_prime(a/5)\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe5w43xg8.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmpe5w43xg8.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmpe5w43xg8.jl:19\\n   [2] macro expansion\\n     @ /tmp/tmpe5w43xg8.jl:28\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe5w43xg8.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpe5w43xg8.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpe5w43xg8.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpe5w43xg8.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpe5w43xg8.jl:29 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe5w43xg8.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpe5w43xg8.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpe5w43xg8.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpe5w43xg8.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpe5w43xg8.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe5w43xg8.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpe5w43xg8.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm8nq6pn9.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpm8nq6pn9.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm8nq6pn9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm8nq6pn9.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm8nq6pn9.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm8nq6pn9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm8nq6pn9.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm8nq6pn9.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm8nq6pn9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm8nq6pn9.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm8nq6pn9.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm8nq6pn9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm8nq6pn9.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm8nq6pn9.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm8nq6pn9.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm8nq6pn9.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm8nq6pn9.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm8nq6pn9.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxq9cbbqh.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxq9cbbqh.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxq9cbbqh.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxq9cbbqh.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxq9cbbqh.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxq9cbbqh.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxq9cbbqh.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxq9cbbqh.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxq9cbbqh.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxq9cbbqh.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxq9cbbqh.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxq9cbbqh.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxq9cbbqh.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxq9cbbqh.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxq9cbbqh.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxq9cbbqh.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxq9cbbqh.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxq9cbbqh.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 1:a\n            if isprime(i) == true\n                for j in\
    \ 1:a\n                    if isprime(j) == true\n                        for\
    \ k in 1:a\n                            if isprime(k) == true\n              \
    \                  if i*j*k == a\n                                    return true\n\
    \                                end\n                            end\n      \
    \                  end\n                    end\n                end\n       \
    \     end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1e9neakc.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp1e9neakc.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmp1e9neakc.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1e9neakc.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp1e9neakc.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp1e9neakc.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp1e9neakc.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1e9neakc.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp1e9neakc.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp1e9neakc.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp1e9neakc.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1e9neakc.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp1e9neakc.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp1e9neakc.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp1e9neakc.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1e9neakc.jl:32\\ntest set:\
    \ Test Failed at /tmp/tmp1e9neakc.jl:37\\n  Expression: can"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a % 2 == 0\n\
    \        return false\n    end\n    for i in 3:2:a-1\n        if a % i == 0\n\
    \            return false\n        end\n    end\n    return true\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoh3k6_5l.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpoh3k6_5l.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3k6_5l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoh3k6_5l.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoh3k6_5l.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3k6_5l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoh3k6_5l.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoh3k6_5l.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3k6_5l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoh3k6_5l.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoh3k6_5l.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3k6_5l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoh3k6_5l.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoh3k6_5l.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoh3k6_5l.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpoh3k6_5l.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoh3k6_5l.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoh3k6_5l.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    if a % 2 == 0\n        return is_multiply_prime(a/2)\n\
    \    end\n    if a % 3 == 0\n        return is_multiply_prime(a/3)\n    end\n\
    \    if a % 5 == 0\n        return is_multiply_prime(a/5)\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq9q4oj3u.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmpq9q4oj3u.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmpq9q4oj3u.jl:19\\n   [2] macro expansion\\n     @ /tmp/tmpq9q4oj3u.jl:28\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq9q4oj3u.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpq9q4oj3u.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpq9q4oj3u.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpq9q4oj3u.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpq9q4oj3u.jl:29 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq9q4oj3u.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpq9q4oj3u.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpq9q4oj3u.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpq9q4oj3u.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpq9q4oj3u.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq9q4oj3u.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpq9q4oj3u.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8mziixid.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8mziixid.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmp8mziixid.jl:40 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8mziixid.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp8mziixid.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8mziixid.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp8mziixid.jl:41 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8mziixid.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp8mziixid.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8mziixid.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp8mziixid.jl:42 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8mziixid.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp8mziixid.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8mziixid.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp8mziixid.jl:43 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8mziixid.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmp8mziixid.jl:44\\n  Test thre"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            if isprime(i)\n                for j in 2:a-1\n\
    \                    if a%j == 0\n                        if isprime(j)\n    \
    \                        for k in 2:a-1\n                                if a%k\
    \ == 0\n                                    if isprime(k)\n                  \
    \                      if i*j*k == a\n                                       \
    \     return true\n                                        end\n             \
    \                       end\n                                end\n           \
    \                 end\n                        end\n                    end\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcfpgy51d.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(30) == true\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpcfpgy51d.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmpcfpgy51d.jl:38 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpcfpgy51d.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpcfpgy51d.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpcfpgy51d.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpcfpgy51d.jl:39 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpcfpgy51d.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpcfpgy51d.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpcfpgy51d.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpcfpgy51d.jl:40 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpcfpgy51d.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpcfpgy51d.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(125) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpcfpgy51d.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpcfpgy51d.jl:41 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpcfpgy51d.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpcfpgy51d.jl:42\\n  Test thr"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpcfpgy51d.jl:34\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 0 \n    \
    \    return false\n    end\n    if a == 0 \n        return true\n    end\n   \
    \ if a == 1 \n        return false\n    end\n    for i in 2:a-1\n        if a\
    \ % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqne4rroh.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpqne4rroh.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqne4rroh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqne4rroh.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqne4rroh.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqne4rroh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqne4rroh.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqne4rroh.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqne4rroh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqne4rroh.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqne4rroh.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqne4rroh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqne4rroh.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqne4rroh.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqne4rroh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqne4rroh.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqne4rroh.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqne4rroh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 0\n     \
    \   return false\n    end\n    if a == 0\n        return true\n    end\n    if\
    \ a == 1\n        return false\n    end\n    if a == 2\n        return true\n\
    \    end\n    if a == 3\n        return true\n    end\n    if a == 4\n       \
    \ return false\n    end\n    if a == 5\n        return true\n    end\n    if a\
    \ == 6\n        return false\n    end\n    if a == 7\n        return true\n  \
    \  end\n    if a == 8\n        return false\n    end\n    if a == 9\n        return\
    \ false\n    end\n    if a == 10\n        return false\n    end\n    if a == 11\n\
    \        return true\n    end\n    if a == 12\n        return false\n    end\n\
    \    if a == 13\n        return true\n    end\n    if a == 14\n        return\
    \ false\n    end\n    if a == 15\n        return false\n    end\n    if a == 16\n\
    \        return false\n    end\n    if a == 17\n        return true\n    end\n\
    \    if a == 18\n        return false\n    end\n    if a == 19\n        return\
    \ true\n    end\n    if a == 20\n        return false\n    end\n    if a == 21\n\
    \        return false\n    end\n    if a == 22\n        return false\n    end\n\
    \    if a == 23\n        return true\n    end\n    if a == 24\n        return\
    \ false\n    end\n    if a == 25\n        return false\n    end\n    if a == 26\n\
    \        return false\n    end\n    if a == 27\n        return false\n    end\n\
    \    if a == 28\n        return false\n    end\n    if a == 29\n        return\
    \ true\n    end\n    if a == 30\n        return false\n    end\n    if a == 31\n\
    \        return true\n    end\n    if a == 32\n        return false\n    end\n\
    \    if a == 33\n        return false\n    end\n    if a == 34\n        return\
    \ false\n    end\n    if a == 35\n        return false\n    end\n    if a == 36\n\
    \        return false\n    end\n    if a == 37\n        return true\n    end\n\
    \    if a ==\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_4jvwxr5.jl:1\nin expression starting at /tmp/tmp_4jvwxr5.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if a % i == 0\n                for j in 2:a\n\
    \                    if a % j == 0\n                        for k in 2:a\n   \
    \                         if a % k == 0\n                                if a\
    \ == i * j * k\n                                    return true\n            \
    \                    end\n                            end\n                  \
    \      end\n                    end\n                end\n            end\n  \
    \      end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_kwk2c41.jl:37\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmp_kwk2c41.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_kwk2c41.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_kwk2c41.jl:38\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_kwk2c41.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_kwk2c41.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_kwk2c41.jl:42\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_kwk2c41.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_kwk2c41.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_kwk2c41.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdxexdkj0.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpdxexdkj0.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpdxexdkj0.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdxexdkj0.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpdxexdkj0.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpdxexdkj0.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpdxexdkj0.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdxexdkj0.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpdxexdkj0.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n       \
    \     return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9irho2n7.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp9irho2n7.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9irho2n7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9irho2n7.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9irho2n7.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9irho2n7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9irho2n7.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9irho2n7.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9irho2n7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9irho2n7.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9irho2n7.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9irho2n7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9irho2n7.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9irho2n7.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9irho2n7.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp9irho2n7.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9irho2n7.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9irho2n7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxtgwn3iu.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxtgwn3iu.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtgwn3iu.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxtgwn3iu.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtgwn3iu.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtgwn3iu.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxtgwn3iu.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtgwn3iu.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtgwn3iu.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxtgwn3iu.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtgwn3iu.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtgwn3iu.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxtgwn3iu.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtgwn3iu.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxtgwn3iu.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxtgwn3iu.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxtgwn3iu.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxtgwn3iu.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if isprime(i) && isprime(a/i) && isprime(a/(i*(a/i)))\n\
    \                return true\n            end\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6zy9y9gm.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp6zy9y9gm.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmp6zy9y9gm.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6zy9y9gm.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp6zy9y9gm.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp6zy9y9gm.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp6zy9y9gm.jl:24 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6zy9y9gm.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp6zy9y9gm.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp6zy9y9gm.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp6zy9y9gm.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6zy9y9gm.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp6zy9y9gm.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp6zy9y9gm.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp6zy9y9gm.jl:26 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6zy9y9gm.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmp6zy9y9gm.jl:27\\n  Expression: can"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2smwr7d3.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp2smwr7d3.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2smwr7d3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp2smwr7d3.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2smwr7d3.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2smwr7d3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp2smwr7d3.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2smwr7d3.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2smwr7d3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp2smwr7d3.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2smwr7d3.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2smwr7d3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp2smwr7d3.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2smwr7d3.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2smwr7d3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp2smwr7d3.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2smwr7d3.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2smwr7d3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       if a == i * j * k\n                                return\
    \ true\n                            end\n                        end\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    if a == 3\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return is_multiply_prime(a/2)\n    end\n    if a % 3 ==\
    \ 0\n        return is_multiply_prime(a/3)\n    end\n    if a % 5 == 0\n     \
    \   return is_multiply_prime(a/5)\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpig85m11g.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmpig85m11g.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmpig85m11g.jl:22\\n   [2] macro expansion\\n     @ /tmp/tmpig85m11g.jl:31\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpig85m11g.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpig85m11g.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpig85m11g.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpig85m11g.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpig85m11g.jl:32 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpig85m11g.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpig85m11g.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpig85m11g.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpig85m11g.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpig85m11g.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpig85m11g.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpig85m11g.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpecsgl19l.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpecsgl19l.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpecsgl19l.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpecsgl19l.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpecsgl19l.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpecsgl19l.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpecsgl19l.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpecsgl19l.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpecsgl19l.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmplbp9hh5p.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmplbp9hh5p.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplbp9hh5p.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplbp9hh5p.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplbp9hh5p.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplbp9hh5p.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplbp9hh5p.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplbp9hh5p.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplbp9hh5p.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplbp9hh5p.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplbp9hh5p.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplbp9hh5p.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplbp9hh5p.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplbp9hh5p.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplbp9hh5p.jl:29\ntest set: Test\
    \ Failed at /tmp/tmplbp9hh5p.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplbp9hh5p.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplbp9hh5p.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphy1q02k6.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmphy1q02k6.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphy1q02k6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphy1q02k6.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphy1q02k6.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphy1q02k6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphy1q02k6.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphy1q02k6.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphy1q02k6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphy1q02k6.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphy1q02k6.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphy1q02k6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphy1q02k6.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphy1q02k6.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphy1q02k6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmphy1q02k6.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphy1q02k6.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphy1q02k6.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in primes(a)\n            for j in primes(a)\n                for\
    \ k in primes(a)\n                    if i*j*k == a\n                        return\
    \ true\n                    end\n                end\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc0yoru8o.jl:27\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: primes not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpc0yoru8o.jl:10\\\
    n   [2] macro expansion\\n     @ /tmp/tmpc0yoru8o.jl:27 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc0yoru8o.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpc0yoru8o.jl:28\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: primes not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpc0yoru8o.jl:10\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpc0yoru8o.jl:28 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc0yoru8o.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpc0yoru8o.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: primes not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpc0yoru8o.jl:10\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpc0yoru8o.jl:29 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc0yoru8o.jl:26\\ntest set:\
    \ Error During Test at /tmp/tmpc0yoru8o.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: primes not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpc0yoru8o.jl:10\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpc0yoru8o.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc0yoru8o.jl:26\\ntest set:\
    \ Test Failed at /tmp/tmpc0yoru8o.jl:31\\n  Expression: candida"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp80tumpbq.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp80tumpbq.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp80tumpbq.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp80tumpbq.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp80tumpbq.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp80tumpbq.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp80tumpbq.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp80tumpbq.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp80tumpbq.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a\n \
    \       if a%i == 0\n            for j in 2:a\n                if a%j == 0\n \
    \                   for k in 2:a\n                        if a%k == 0\n      \
    \                      return true\n                        end\n            \
    \        end\n                end\n            end\n        end\n    end\n   \
    \ return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzednchcz.jl:29\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpzednchcz.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzednchcz.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzednchcz.jl:32\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzednchcz.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzednchcz.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzednchcz.jl:35\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzednchcz.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzednchcz.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzednchcz.jl:36\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzednchcz.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzednchcz.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzednchcz.jl:37\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzednchcz.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzednchcz.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzednchcz.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2kt9o02j.jl:40\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2kt9o02j.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmp2kt9o02j.jl:40 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2kt9o02j.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2kt9o02j.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2kt9o02j.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2kt9o02j.jl:41 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2kt9o02j.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2kt9o02j.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2kt9o02j.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2kt9o02j.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2kt9o02j.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2kt9o02j.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2kt9o02j.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2kt9o02j.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2kt9o02j.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2kt9o02j.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2kt9o02j.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     return false\n    end\n    for i in 2:a\n        if a % i == 0\n       \
    \     for j in 2:a\n                if a % j == 0\n                    for k in\
    \ 2:a\n                        if a % k == 0\n                            return\
    \ true\n                        end\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfgxgbxap.jl:33\n  Expression: candidate(30)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpfgxgbxap.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfgxgbxap.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpfgxgbxap.jl:34\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfgxgbxap.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfgxgbxap.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpfgxgbxap.jl:38\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfgxgbxap.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfgxgbxap.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpfgxgbxap.jl:39\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfgxgbxap.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfgxgbxap.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpfgxgbxap.jl:40\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfgxgbxap.jl:40\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfgxgbxap.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfgxgbxap.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0c0vh8e_.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp0c0vh8e_.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp0c0vh8e_.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0c0vh8e_.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp0c0vh8e_.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp0c0vh8e_.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp0c0vh8e_.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0c0vh8e_.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp0c0vh8e_.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8wla90tk.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8wla90tk.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8wla90tk.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8wla90tk.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8wla90tk.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8wla90tk.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8wla90tk.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8wla90tk.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8wla90tk.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprb87wzm_.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmprb87wzm_.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprb87wzm_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprb87wzm_.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprb87wzm_.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprb87wzm_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprb87wzm_.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprb87wzm_.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprb87wzm_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprb87wzm_.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprb87wzm_.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprb87wzm_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprb87wzm_.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprb87wzm_.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprb87wzm_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprb87wzm_.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprb87wzm_.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprb87wzm_.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_ksa72_y.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_ksa72_y.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ksa72_y.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ksa72_y.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ksa72_y.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ksa72_y.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ksa72_y.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ksa72_y.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ksa72_y.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ksa72_y.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ksa72_y.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ksa72_y.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ksa72_y.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ksa72_y.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ksa72_y.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ksa72_y.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ksa72_y.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ksa72_y.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt1begwoo.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpt1begwoo.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt1begwoo.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpt1begwoo.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt1begwoo.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt1begwoo.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpt1begwoo.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt1begwoo.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt1begwoo.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpt1begwoo.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt1begwoo.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt1begwoo.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpt1begwoo.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt1begwoo.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt1begwoo.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpt1begwoo.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt1begwoo.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1begwoo.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwdoz55d7.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpwdoz55d7.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwdoz55d7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwdoz55d7.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwdoz55d7.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwdoz55d7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwdoz55d7.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwdoz55d7.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwdoz55d7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwdoz55d7.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwdoz55d7.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwdoz55d7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwdoz55d7.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwdoz55d7.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwdoz55d7.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwdoz55d7.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpee19nr98.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpee19nr98.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpee19nr98.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpee19nr98.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpee19nr98.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpee19nr98.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpee19nr98.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpee19nr98.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpee19nr98.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpee19nr98.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpee19nr98.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpee19nr98.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpee19nr98.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpee19nr98.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpee19nr98.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpee19nr98.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpee19nr98.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpee19nr98.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            for j in 2:a-1\n                if a%j == 0\n\
    \                    for k in 2:a-1\n                        if a%k == 0\n   \
    \                         if i*j*k == a\n                                return\
    \ true\n                            end\n                        end\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpuqewom43.jl:37\n  Expression: candidate(126)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpuqewom43.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuqewom43.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpuqewom43.jl:38\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuqewom43.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuqewom43.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpuqewom43.jl:39\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuqewom43.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuqewom43.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuqewom43.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4lrgwr1k.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp4lrgwr1k.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp4lrgwr1k.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4lrgwr1k.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp4lrgwr1k.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp4lrgwr1k.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp4lrgwr1k.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4lrgwr1k.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp4lrgwr1k.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in 1:length(prime_numbers)\n        for j in\
    \ 1:length(prime_numbers)\n            for k in 1:length(prime_numbers)\n    \
    \            if a == prime_numbers[i] * prime_numbers[j] * prime_numbers[k]\n\
    \                    return true\n                end\n            end\n     \
    \   end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5cf4ykm8.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp5cf4ykm8.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp5cf4ykm8.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5cf4ykm8.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp5cf4ykm8.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp5cf4ykm8.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp5cf4ykm8.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5cf4ykm8.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp5cf4ykm8.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpesi7g9l2.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpesi7g9l2.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpesi7g9l2.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpesi7g9l2.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpesi7g9l2.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpesi7g9l2.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpesi7g9l2.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpesi7g9l2.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpesi7g9l2.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp96zzfi40.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp96zzfi40.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp96zzfi40.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp96zzfi40.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp96zzfi40.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp96zzfi40.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp96zzfi40.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp96zzfi40.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp96zzfi40.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp96zzfi40.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp96zzfi40.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp96zzfi40.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp96zzfi40.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp96zzfi40.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp96zzfi40.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp96zzfi40.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp96zzfi40.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96zzfi40.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp875_yrg6.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp875_yrg6.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp875_yrg6.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp875_yrg6.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp875_yrg6.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp875_yrg6.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp875_yrg6.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp875_yrg6.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp875_yrg6.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpj2s6x_6a.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpj2s6x_6a.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2s6x_6a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj2s6x_6a.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2s6x_6a.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2s6x_6a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj2s6x_6a.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2s6x_6a.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2s6x_6a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj2s6x_6a.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2s6x_6a.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2s6x_6a.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj2s6x_6a.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj2s6x_6a.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj2s6x_6a.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj2s6x_6a.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97]\n    for i in primes\n        if a % i == 0\n            for j in\
    \ primes\n                if a % j == 0\n                    for k in primes\n\
    \                        if a % k == 0\n                            return true\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu1twh4mz.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpu1twh4mz.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu1twh4mz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpu1twh4mz.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu1twh4mz.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu1twh4mz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpu1twh4mz.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu1twh4mz.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu1twh4mz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpu1twh4mz.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu1twh4mz.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu1twh4mz.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpu1twh4mz.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu1twh4mz.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu1twh4mz.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu1twh4mz.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4p23x822.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp4p23x822.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp4p23x822.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4p23x822.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp4p23x822.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp4p23x822.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp4p23x822.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4p23x822.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp4p23x822.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    return is_multiply_prime(a/i)\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqldp4v28.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmpqldp4v28.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmpqldp4v28.jl:14\\n   [2] macro expansion\\n     @ /tmp/tmpqldp4v28.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqldp4v28.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpqldp4v28.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpqldp4v28.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpqldp4v28.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpqldp4v28.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqldp4v28.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpqldp4v28.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpqldp4v28.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpqldp4v28.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpqldp4v28.jl:26 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqldp4v28.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpqldp4v28.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    if a == 3\n        return true\n    end\n    for\
    \ i in 2:a-1\n        if a % i == 0\n            if is_prime(i)\n            \
    \    if is_prime(a/i)\n                    return true\n                end\n\
    \            end\n        end\n    end\n    return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyapp936u.jl:32\n  Test threw exception\n\
    \  Expression: candidate(30) == true\n  UndefVarError: is_prime not defined\n\
    \  Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpyapp936u.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmpyapp936u.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyapp936u.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyapp936u.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpyapp936u.jl:17\n   [2]\
    \ macro expansion\n     @ /tmp/tmpyapp936u.jl:33 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyapp936u.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyapp936u.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpyapp936u.jl:17\n   [2]\
    \ macro expansion\n     @ /tmp/tmpyapp936u.jl:34 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyapp936u.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyapp936u.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpyapp936u.jl:17\n   [2]\
    \ macro expansion\n     @ /tmp/tmpyapp936u.jl:35 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyapp936u.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpyapp936u.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(105) == true\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyapp936u.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ primes(a)\n    for i in 1:length(prime_numbers)\n        for j in 1:length(prime_numbers)\n\
    \            for k in 1:length(prime_numbers)\n                if prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a\n                    return true\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1uwh79nl.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp1uwh79nl.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp1uwh79nl.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1uwh79nl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1uwh79nl.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp1uwh79nl.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp1uwh79nl.jl:27 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1uwh79nl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1uwh79nl.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: primes not defined\n  Stacktrace:\n \
    \  [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp1uwh79nl.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp1uwh79nl.jl:28 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1uwh79nl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1uwh79nl.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: primes not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp1uwh79nl.jl:9\n   [2]\
    \ macro expansion\n     @ /tmp/tmp1uwh79nl.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1uwh79nl.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp1uwh79nl.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  UndefVarErro"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1uwh79nl.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp13k_4_aw.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp13k_4_aw.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp13k_4_aw.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp13k_4_aw.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp13k_4_aw.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp13k_4_aw.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp13k_4_aw.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp13k_4_aw.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp13k_4_aw.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpuvab0ndb.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpuvab0ndb.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvab0ndb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuvab0ndb.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvab0ndb.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvab0ndb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuvab0ndb.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvab0ndb.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvab0ndb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuvab0ndb.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvab0ndb.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvab0ndb.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpuvab0ndb.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuvab0ndb.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuvab0ndb.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvab0ndb.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxafubr3b.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxafubr3b.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxafubr3b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxafubr3b.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxafubr3b.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxafubr3b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxafubr3b.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxafubr3b.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxafubr3b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxafubr3b.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxafubr3b.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxafubr3b.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxafubr3b.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxafubr3b.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxafubr3b.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxafubr3b.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpylk6d9xi.jl:40\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpylk6d9xi.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpylk6d9xi.jl:40 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpylk6d9xi.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpylk6d9xi.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpylk6d9xi.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpylk6d9xi.jl:41 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpylk6d9xi.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpylk6d9xi.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpylk6d9xi.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpylk6d9xi.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpylk6d9xi.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpylk6d9xi.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpylk6d9xi.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpylk6d9xi.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpylk6d9xi.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpylk6d9xi.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpylk6d9xi.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpx13etikg.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpx13etikg.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx13etikg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx13etikg.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx13etikg.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx13etikg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx13etikg.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx13etikg.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx13etikg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx13etikg.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx13etikg.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx13etikg.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx13etikg.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx13etikg.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx13etikg.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx13etikg.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_37ser37.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_37ser37.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_37ser37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_37ser37.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_37ser37.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_37ser37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_37ser37.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_37ser37.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_37ser37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_37ser37.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_37ser37.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_37ser37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_37ser37.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_37ser37.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_37ser37.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_37ser37.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_37ser37.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_37ser37.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                return true\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpxdj2hse5.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpxdj2hse5.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpxdj2hse5.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxdj2hse5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxdj2hse5.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpxdj2hse5.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpxdj2hse5.jl:27 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxdj2hse5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxdj2hse5.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpxdj2hse5.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpxdj2hse5.jl:28 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxdj2hse5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxdj2hse5.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpxdj2hse5.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpxdj2hse5.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxdj2hse5.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpxdj2hse5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxdj2hse5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq9l_p9lw.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpq9l_p9lw.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq9l_p9lw.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpq9l_p9lw.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq9l_p9lw.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq9l_p9lw.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpq9l_p9lw.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq9l_p9lw.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq9l_p9lw.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpq9l_p9lw.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq9l_p9lw.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq9l_p9lw.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpq9l_p9lw.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq9l_p9lw.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq9l_p9lw.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpq9l_p9lw.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq9l_p9lw.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq9l_p9lw.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa3i2ayae.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpa3i2ayae.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3i2ayae.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa3i2ayae.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa3i2ayae.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3i2ayae.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa3i2ayae.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa3i2ayae.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3i2ayae.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa3i2ayae.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa3i2ayae.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3i2ayae.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa3i2ayae.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa3i2ayae.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3i2ayae.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpa3i2ayae.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa3i2ayae.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa3i2ayae.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n       \
    \     return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd8egwj9m.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpd8egwj9m.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd8egwj9m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd8egwj9m.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd8egwj9m.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd8egwj9m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd8egwj9m.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd8egwj9m.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd8egwj9m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd8egwj9m.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd8egwj9m.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd8egwj9m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd8egwj9m.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd8egwj9m.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd8egwj9m.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd8egwj9m.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd8egwj9m.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd8egwj9m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a <= 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if is_prime(i)\n                for j in 2:a\n                    if a %\
    \ j == 0\n                        if is_prime(j)\n                           \
    \ for k in 2:a\n                                if a % k == 0\n              \
    \                      if is_prime(k)\n                                      \
    \  if i * j * k == a\n                                            return true\n\
    \                                        end\n                               \
    \     end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmgqa2i24.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: is_prime\
    \ not defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main\
    \ /tmp/tmpmgqa2i24.jl:14\\n   [2] macro expansion\\n     @ /tmp/tmpmgqa2i24.jl:40\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmgqa2i24.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpmgqa2i24.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: is_prime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpmgqa2i24.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpmgqa2i24.jl:41 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmgqa2i24.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpmgqa2i24.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: is_prime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpmgqa2i24.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpmgqa2i24.jl:42 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmgqa2i24.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpmgqa2i24.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: is_prime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpmgqa2i24.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpmgqa2i24.jl:43 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmgqa2i24.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpmgqa2i24.jl:44\\n  Test "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            for j in 2:a\n                for k in 2:a\n \
    \                   if i*j*k == a\n                        return true\n     \
    \               end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0rqom93u.jl:31\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmp0rqom93u.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0rqom93u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0rqom93u.jl:32\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0rqom93u.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0rqom93u.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0rqom93u.jl:36\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0rqom93u.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0rqom93u.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0rqom93u.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a\n        if a % i == 0\n         \
    \   if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpto_s6i2h.jl:40\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpto_s6i2h.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpto_s6i2h.jl:40 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpto_s6i2h.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpto_s6i2h.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpto_s6i2h.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpto_s6i2h.jl:41 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpto_s6i2h.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpto_s6i2h.jl:42\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpto_s6i2h.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpto_s6i2h.jl:42 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpto_s6i2h.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpto_s6i2h.jl:43\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpto_s6i2h.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpto_s6i2h.jl:43 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpto_s6i2h.jl:39\\ntest set:\
    \ Error During Test at /tmp/tmpto_s6i2h.jl:44\\n  Test thre"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6pduwo_f.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp6pduwo_f.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp6pduwo_f.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6pduwo_f.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp6pduwo_f.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp6pduwo_f.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp6pduwo_f.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6pduwo_f.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp6pduwo_f.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprxa9g1gv.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmprxa9g1gv.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprxa9g1gv.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprxa9g1gv.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprxa9g1gv.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprxa9g1gv.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprxa9g1gv.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprxa9g1gv.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprxa9g1gv.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprxa9g1gv.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprxa9g1gv.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprxa9g1gv.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprxa9g1gv.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprxa9g1gv.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprxa9g1gv.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprxa9g1gv.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    for i in 2:a\n        if a % i == 0\n         \
    \   if is_prime(i)\n                if is_prime(a/i)\n                    return\
    \ true\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4zwcsc53.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: is_prime\
    \ not defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main\
    \ /tmp/tmp4zwcsc53.jl:14\\n   [2] macro expansion\\n     @ /tmp/tmp4zwcsc53.jl:28\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4zwcsc53.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp4zwcsc53.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: is_prime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp4zwcsc53.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp4zwcsc53.jl:29 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4zwcsc53.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp4zwcsc53.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: is_prime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp4zwcsc53.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp4zwcsc53.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4zwcsc53.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp4zwcsc53.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: is_prime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp4zwcsc53.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp4zwcsc53.jl:31 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4zwcsc53.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp4zwcsc53.jl:32\\n  Test "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdzx0ovz4.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpdzx0ovz4.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdzx0ovz4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdzx0ovz4.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdzx0ovz4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdzx0ovz4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdzx0ovz4.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdzx0ovz4.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdzx0ovz4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdzx0ovz4.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdzx0ovz4.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdzx0ovz4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdzx0ovz4.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdzx0ovz4.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdzx0ovz4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpdzx0ovz4.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdzx0ovz4.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdzx0ovz4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n       \
    \     return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ndzsx9t.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp4ndzsx9t.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ndzsx9t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4ndzsx9t.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ndzsx9t.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ndzsx9t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4ndzsx9t.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ndzsx9t.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ndzsx9t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4ndzsx9t.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ndzsx9t.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ndzsx9t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4ndzsx9t.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ndzsx9t.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ndzsx9t.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp4ndzsx9t.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4ndzsx9t.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ndzsx9t.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8s07e99b.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8s07e99b.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8s07e99b.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8s07e99b.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8s07e99b.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8s07e99b.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8s07e99b.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8s07e99b.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8s07e99b.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_0duxfx.jl:25\n  Expression: candidate(30)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpf_0duxfx.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_0duxfx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf_0duxfx.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_0duxfx.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_0duxfx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf_0duxfx.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_0duxfx.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_0duxfx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf_0duxfx.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_0duxfx.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_0duxfx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpf_0duxfx.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_0duxfx.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_0duxfx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_0duxfx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            if isprime(i)\n                for j in 2:a-1\n\
    \                    if a%j == 0\n                        if isprime(j)\n    \
    \                        for k in 2:a-1\n                                if a%k\
    \ == 0\n                                    if isprime(k)\n                  \
    \                      if i*j*k == a\n                                       \
    \     return true\n                                        end\n             \
    \                       end\n                                end\n           \
    \                 end\n                        end\n                    end\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7_nxu_xa.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate(30) == true\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp7_nxu_xa.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmp7_nxu_xa.jl:38 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7_nxu_xa.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp7_nxu_xa.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp7_nxu_xa.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp7_nxu_xa.jl:39 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7_nxu_xa.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp7_nxu_xa.jl:40\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp7_nxu_xa.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp7_nxu_xa.jl:40 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7_nxu_xa.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp7_nxu_xa.jl:41\\n  Test threw exception\\n  Expression:\
    \ candidate(125) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp7_nxu_xa.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmp7_nxu_xa.jl:41 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7_nxu_xa.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmp7_nxu_xa.jl:42\\n  Test thr"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzu_ybqy4.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpzu_ybqy4.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzu_ybqy4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzu_ybqy4.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzu_ybqy4.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzu_ybqy4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzu_ybqy4.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzu_ybqy4.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzu_ybqy4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzu_ybqy4.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzu_ybqy4.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzu_ybqy4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzu_ybqy4.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzu_ybqy4.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzu_ybqy4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzu_ybqy4.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzu_ybqy4.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzu_ybqy4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            for j in 2:a-1\n                if a%j == 0\n\
    \                    for k in 2:a-1\n                        if a%k == 0\n   \
    \                         if i*j*k == a\n                                return\
    \ true\n                            end\n                        end\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp83f3mr3y.jl:37\n  Expression: candidate(126)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp83f3mr3y.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp83f3mr3y.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp83f3mr3y.jl:38\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp83f3mr3y.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp83f3mr3y.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp83f3mr3y.jl:39\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp83f3mr3y.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp83f3mr3y.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp83f3mr3y.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqvv853wu.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpqvv853wu.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpqvv853wu.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqvv853wu.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpqvv853wu.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpqvv853wu.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpqvv853wu.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqvv853wu.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpqvv853wu.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2 \n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_k8weon2.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_k8weon2.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_k8weon2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_k8weon2.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_k8weon2.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_k8weon2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_k8weon2.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_k8weon2.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_k8weon2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_k8weon2.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_k8weon2.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_k8weon2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_k8weon2.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_k8weon2.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_k8weon2.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp_k8weon2.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_k8weon2.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_k8weon2.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2e0w535j.jl:22\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp2e0w535j.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2e0w535j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2e0w535j.jl:25\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2e0w535j.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2e0w535j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2e0w535j.jl:28\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2e0w535j.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2e0w535j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2e0w535j.jl:29\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2e0w535j.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2e0w535j.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp2e0w535j.jl:30\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2e0w535j.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2e0w535j.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2e0w535j.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    for\
    \ i in 2:a-1\n        if a % i == 0\n            return false\n        end\n \
    \   end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1ly_tsh7.jl:27\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp1ly_tsh7.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ly_tsh7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1ly_tsh7.jl:28\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ly_tsh7.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ly_tsh7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1ly_tsh7.jl:29\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ly_tsh7.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ly_tsh7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1ly_tsh7.jl:31\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ly_tsh7.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ly_tsh7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1ly_tsh7.jl:32\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ly_tsh7.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ly_tsh7.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp1ly_tsh7.jl:36\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ly_tsh7.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ly_tsh7.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                return true\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp10b5zvqt.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp10b5zvqt.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmp10b5zvqt.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp10b5zvqt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp10b5zvqt.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp10b5zvqt.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp10b5zvqt.jl:27 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp10b5zvqt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp10b5zvqt.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp10b5zvqt.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp10b5zvqt.jl:28 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp10b5zvqt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp10b5zvqt.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp10b5zvqt.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp10b5zvqt.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp10b5zvqt.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp10b5zvqt.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10b5zvqt.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppeodec1l.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmppeodec1l.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmppeodec1l.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmppeodec1l.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmppeodec1l.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmppeodec1l.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmppeodec1l.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmppeodec1l.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmppeodec1l.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    \"\"\"\n    is_multiply_prime(a::Int64)::Bool\n\
    \    \"\"\"\n    if a < 3\n        return false\n    end\n    if a % 2 == 0\n\
    \        return is_multiply_prime(a/2)\n    end\n    if a % 3 == 0\n        return\
    \ is_multiply_prime(a/3)\n    end\n    if a % 5 == 0\n        return is_multiply_prime(a/5)\n\
    \    end\n    if a % 7 == 0\n        return is_multiply_prime(a/7)\n    end\n\
    \    if a % 11 == 0\n        return is_multiply_prime(a/11)\n    end\n    if a\
    \ % 13 == 0\n        return is_multiply_prime(a/13)\n    end\n    if a % 17 ==\
    \ 0\n        return is_multiply_prime(a/17)\n    end\n    if a % 19 == 0\n   \
    \     return is_multiply_prime(a/19)\n    end\n    if a % 23 == 0\n        return\
    \ is_multiply_prime(a/23)\n    end\n    if a % 29 == 0\n        return is_multiply_prime(a/29)\n\
    \    end\n    if a % 31 == 0\n        return is_multiply_prime(a/31)\n    end\n\
    \    if a % 37 == 0\n        return is_multiply_prime(a/37)\n    end\n    if a\
    \ % 41 == 0\n        return is_multiply_prime(a/41)\n    end\n    if a % 43 ==\
    \ 0\n        return is_multiply_prime(a/43)\n    end\n    if a % 47 == 0\n   \
    \     return is_multiply_prime(a/47)\n    end\n    if a % 53 == 0\n        return\
    \ is_multiply_prime(a/53)\n    end\n    if a % 59 == 0\n        return is_multiply_prime(a/59)\n\
    \    end\n    if a % 61 == 0\n        return is_multiply_prime(a/61)\n    end\n\
    \    if a % 67 ==\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnfdxye4o.jl:1\nin expression starting at /tmp/tmpnfdxye4o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr77tpwkh.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpr77tpwkh.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr77tpwkh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpr77tpwkh.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr77tpwkh.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr77tpwkh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpr77tpwkh.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr77tpwkh.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr77tpwkh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpr77tpwkh.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr77tpwkh.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr77tpwkh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpr77tpwkh.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr77tpwkh.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr77tpwkh.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpr77tpwkh.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr77tpwkh.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr77tpwkh.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            for j in 2:a\n                for k in 2:a\n \
    \                   if i*j*k == a\n                        return true\n     \
    \               end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzwrqc27s.jl:31\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpzwrqc27s.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzwrqc27s.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzwrqc27s.jl:32\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzwrqc27s.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzwrqc27s.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpzwrqc27s.jl:36\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzwrqc27s.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzwrqc27s.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzwrqc27s.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1fd_scd6.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp1fd_scd6.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fd_scd6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1fd_scd6.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fd_scd6.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fd_scd6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1fd_scd6.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fd_scd6.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fd_scd6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1fd_scd6.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fd_scd6.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fd_scd6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1fd_scd6.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fd_scd6.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fd_scd6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1fd_scd6.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fd_scd6.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1fd_scd6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp54ia3vqc.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp54ia3vqc.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp54ia3vqc.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp54ia3vqc.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp54ia3vqc.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp54ia3vqc.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp54ia3vqc.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp54ia3vqc.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp54ia3vqc.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp54ia3vqc.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp54ia3vqc.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp54ia3vqc.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp54ia3vqc.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp54ia3vqc.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp54ia3vqc.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp54ia3vqc.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp54ia3vqc.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp54ia3vqc.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i==0\n            for j in 2:a-1\n                if a%j==0\n  \
    \                  for k in 2:a-1\n                        if a%k==0\n       \
    \                     if i*j*k==a\n                                return true\n\
    \                            end\n                        end\n              \
    \      end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvk8hnk6r.jl:37\n  Expression: candidate(126)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpvk8hnk6r.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk8hnk6r.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvk8hnk6r.jl:38\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvk8hnk6r.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk8hnk6r.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvk8hnk6r.jl:39\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvk8hnk6r.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk8hnk6r.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvk8hnk6r.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      if is_prime(i)\n                for j in 2:a-1\n                    if\
    \ a % j == 0\n                        if is_prime(j)\n                       \
    \     for k in 2:a-1\n                                if a % k == 0\n        \
    \                            if is_prime(k)\n                                \
    \        if i * j * k == a\n                                            return\
    \ true\n                                        end\n                        \
    \            end\n                                end\n                      \
    \      end\n                        end\n                    end\n           \
    \     end\n            end\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0ovgxvvb.jl:41\n  Test threw exception\n\
    \  Expression: candidate(30) == true\n  UndefVarError: is_prime not defined\n\
    \  Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp0ovgxvvb.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmp0ovgxvvb.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0ovgxvvb.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp0ovgxvvb.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp0ovgxvvb.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp0ovgxvvb.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0ovgxvvb.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp0ovgxvvb.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp0ovgxvvb.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp0ovgxvvb.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0ovgxvvb.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp0ovgxvvb.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp0ovgxvvb.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp0ovgxvvb.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0ovgxvvb.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp0ovgxvvb.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(105) == true\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ovgxvvb.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97]\n    for i in primes\n        for j in primes\n            for k\
    \ in primes\n                if i * j * k == a\n                    return true\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi8m1661a.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpi8m1661a.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpi8m1661a.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpi8m1661a.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpi8m1661a.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpi8m1661a.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpi8m1661a.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpi8m1661a.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpi8m1661a.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwjptvfu3.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpwjptvfu3.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpwjptvfu3.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwjptvfu3.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpwjptvfu3.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpwjptvfu3.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpwjptvfu3.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwjptvfu3.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpwjptvfu3.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            for j in 2:a-1\n                if a%j == 0\n\
    \                    for k in 2:a-1\n                        if a%k == 0\n   \
    \                         if i*j*k == a\n                                return\
    \ true\n                            end\n                        end\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpussowgww.jl:37\n  Expression: candidate(126)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpussowgww.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpussowgww.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpussowgww.jl:38\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpussowgww.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpussowgww.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpussowgww.jl:39\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpussowgww.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpussowgww.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpussowgww.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkrisop57.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpkrisop57.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpkrisop57.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkrisop57.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpkrisop57.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpkrisop57.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpkrisop57.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkrisop57.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpkrisop57.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64,sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpfkcce1r6.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpfkcce1r6.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkcce1r6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfkcce1r6.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfkcce1r6.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkcce1r6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfkcce1r6.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfkcce1r6.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkcce1r6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfkcce1r6.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfkcce1r6.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkcce1r6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfkcce1r6.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfkcce1r6.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkcce1r6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfkcce1r6.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfkcce1r6.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkcce1r6.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1ydfdwuu.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp1ydfdwuu.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ydfdwuu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ydfdwuu.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ydfdwuu.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ydfdwuu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ydfdwuu.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ydfdwuu.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ydfdwuu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ydfdwuu.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ydfdwuu.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ydfdwuu.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp1ydfdwuu.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ydfdwuu.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ydfdwuu.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ydfdwuu.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp44eykup4.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp44eykup4.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp44eykup4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp44eykup4.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp44eykup4.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp44eykup4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp44eykup4.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp44eykup4.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp44eykup4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp44eykup4.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp44eykup4.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp44eykup4.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp44eykup4.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp44eykup4.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp44eykup4.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp44eykup4.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpm88wr51c.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpm88wr51c.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm88wr51c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm88wr51c.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm88wr51c.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm88wr51c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm88wr51c.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm88wr51c.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm88wr51c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm88wr51c.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm88wr51c.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm88wr51c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm88wr51c.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm88wr51c.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm88wr51c.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpm88wr51c.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm88wr51c.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm88wr51c.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if a % i == 0\n                for j in 2:a\n\
    \                    if a % j == 0\n                        for k in 2:a\n   \
    \                         if a % k == 0\n                                if a\
    \ == i * j * k\n                                    return true\n            \
    \                    end\n                            end\n                  \
    \      end\n                    end\n                end\n            end\n  \
    \      end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp753n5diw.jl:37\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmp753n5diw.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp753n5diw.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp753n5diw.jl:38\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp753n5diw.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp753n5diw.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp753n5diw.jl:42\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp753n5diw.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp753n5diw.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp753n5diw.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7wq1_98r.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp7wq1_98r.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp7wq1_98r.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7wq1_98r.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp7wq1_98r.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp7wq1_98r.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp7wq1_98r.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7wq1_98r.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp7wq1_98r.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # Your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpn2f4v1n1.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpn2f4v1n1.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpn2f4v1n1.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpn2f4v1n1.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpn2f4v1n1.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpn2f4v1n1.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpn2f4v1n1.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpn2f4v1n1.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpn2f4v1n1.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97]\n    for i in primes\n        for j in primes\n            for k\
    \ in primes\n                if i * j * k == a\n                    return true\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     return false\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe8z2fvtk.jl:20\n  Expression: candidate(30)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpe8z2fvtk.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe8z2fvtk.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpe8z2fvtk.jl:21\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe8z2fvtk.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe8z2fvtk.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpe8z2fvtk.jl:25\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe8z2fvtk.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe8z2fvtk.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpe8z2fvtk.jl:26\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe8z2fvtk.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe8z2fvtk.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpe8z2fvtk.jl:27\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe8z2fvtk.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe8z2fvtk.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe8z2fvtk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                return true\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpw1r861e1.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw1r861e1.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpw1r861e1.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw1r861e1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpw1r861e1.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw1r861e1.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpw1r861e1.jl:27 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw1r861e1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpw1r861e1.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw1r861e1.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpw1r861e1.jl:28 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw1r861e1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpw1r861e1.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpw1r861e1.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpw1r861e1.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw1r861e1.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpw1r861e1.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1r861e1.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpurxuyzes.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpurxuyzes.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurxuyzes.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpurxuyzes.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpurxuyzes.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurxuyzes.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpurxuyzes.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpurxuyzes.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurxuyzes.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpurxuyzes.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpurxuyzes.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurxuyzes.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpurxuyzes.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpurxuyzes.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurxuyzes.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpurxuyzes.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpurxuyzes.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpurxuyzes.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpicxdymk9.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpicxdymk9.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpicxdymk9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpicxdymk9.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpicxdymk9.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpicxdymk9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpicxdymk9.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpicxdymk9.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpicxdymk9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpicxdymk9.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpicxdymk9.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpicxdymk9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpicxdymk9.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpicxdymk9.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpicxdymk9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpicxdymk9.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpicxdymk9.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpicxdymk9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if isprime(i)\n                for j in 2:a\n\
    \                    if isprime(j)\n                        for k in 2:a\n   \
    \                         if isprime(k)\n                                if i*j*k\
    \ == a\n                                    return true\n                    \
    \            end\n                            end\n                        end\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq6qujz6c.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpq6qujz6c.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmpq6qujz6c.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq6qujz6c.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpq6qujz6c.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpq6qujz6c.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpq6qujz6c.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq6qujz6c.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpq6qujz6c.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpq6qujz6c.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpq6qujz6c.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq6qujz6c.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpq6qujz6c.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpq6qujz6c.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpq6qujz6c.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq6qujz6c.jl:32\\ntest set:\
    \ Test Failed at /tmp/tmpq6qujz6c.jl:37\\n  Expression: can"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwz7yest4.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpwz7yest4.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwz7yest4.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpwz7yest4.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwz7yest4.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwz7yest4.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpwz7yest4.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwz7yest4.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwz7yest4.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpwz7yest4.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwz7yest4.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwz7yest4.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpwz7yest4.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwz7yest4.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwz7yest4.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpwz7yest4.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwz7yest4.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwz7yest4.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8ncqup4a.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8ncqup4a.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8ncqup4a.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8ncqup4a.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8ncqup4a.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8ncqup4a.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8ncqup4a.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8ncqup4a.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8ncqup4a.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb4x8u4b7.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpb4x8u4b7.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb4x8u4b7.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpb4x8u4b7.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb4x8u4b7.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb4x8u4b7.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpb4x8u4b7.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb4x8u4b7.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb4x8u4b7.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpb4x8u4b7.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb4x8u4b7.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb4x8u4b7.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpb4x8u4b7.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb4x8u4b7.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb4x8u4b7.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpb4x8u4b7.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb4x8u4b7.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb4x8u4b7.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpw7jdiq3s.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpw7jdiq3s.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw7jdiq3s.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw7jdiq3s.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw7jdiq3s.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw7jdiq3s.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw7jdiq3s.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw7jdiq3s.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw7jdiq3s.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw7jdiq3s.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw7jdiq3s.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw7jdiq3s.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw7jdiq3s.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw7jdiq3s.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw7jdiq3s.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw7jdiq3s.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    return is_multiply_prime(a/i)\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxpuszdnc.jl:24\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  MethodError: no method matching is_multiply_prime(::Float64)\n\
    \  Closest candidates are:\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpxpuszdnc.jl:8\n\
    \  Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpxpuszdnc.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpxpuszdnc.jl:24 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxpuszdnc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxpuszdnc.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  MethodError: no method matching is_multiply_prime(::Float64)\n\
    \  Closest candidates are:\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpxpuszdnc.jl:8\n\
    \  Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpxpuszdnc.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpxpuszdnc.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxpuszdnc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxpuszdnc.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  MethodError: no method matching is_multiply_prime(::Float64)\n\
    \  Closest candidates are:\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpxpuszdnc.jl:8\n\
    \  Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpxpuszdnc.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpxpuszdnc.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxpuszdnc.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpxpuszdnc.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  MethodError: no method matching is_multiply_prime(::Float64)\n\
    \  Closest candidates are:\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpxp"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxpuszdnc.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx5e23sgq.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpx5e23sgq.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx5e23sgq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx5e23sgq.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx5e23sgq.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx5e23sgq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx5e23sgq.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx5e23sgq.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx5e23sgq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx5e23sgq.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx5e23sgq.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx5e23sgq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx5e23sgq.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx5e23sgq.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx5e23sgq.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpx5e23sgq.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx5e23sgq.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5e23sgq.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwflkt67s.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpwflkt67s.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwflkt67s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwflkt67s.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwflkt67s.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwflkt67s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwflkt67s.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwflkt67s.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwflkt67s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwflkt67s.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwflkt67s.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwflkt67s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwflkt67s.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwflkt67s.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwflkt67s.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpwflkt67s.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwflkt67s.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwflkt67s.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    return is_multiply_prime(a/i)\n        end\n    end\n    return true\nend\n\
    using Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm5n59w9v.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: no method matching\
    \ is_multiply_prime(::Float64)\\n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64)\
    \ at /tmp/tmpm5n59w9v.jl:8\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\\
    n     @ Main /tmp/tmpm5n59w9v.jl:14\\n   [2] macro expansion\\n     @ /tmp/tmpm5n59w9v.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpm5n59w9v.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpm5n59w9v.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpm5n59w9v.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpm5n59w9v.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpm5n59w9v.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpm5n59w9v.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpm5n59w9v.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpm5n59w9v.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpm5n59w9v.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpm5n59w9v.jl:26 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpm5n59w9v.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmpm5n59w9v.jl:27\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                for j in 2:a\n                    if a % j\
    \ == 0\n                        if isprime(j)\n                            for\
    \ k in 2:a\n                                if a % k == 0\n                  \
    \                  if isprime(k)\n                                        if i\
    \ * j * k == a\n                                            return true\n    \
    \                                    end\n                                   \
    \ end\n                                end\n                            end\n\
    \                        end\n                    end\n                end\n \
    \           end\n        end\n    end\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t\
    @test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2zswese0.jl:40\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2zswese0.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmp2zswese0.jl:40 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2zswese0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2zswese0.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2zswese0.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2zswese0.jl:41 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2zswese0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2zswese0.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2zswese0.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2zswese0.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2zswese0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2zswese0.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp2zswese0.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp2zswese0.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2zswese0.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp2zswese0.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2zswese0.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a%i == 0\n     \
    \       for j in prime_numbers\n                if a%j == 0\n                \
    \    for k in prime_numbers\n                        if a%k == 0\n           \
    \                 if i*j*k == a\n                                return true\n\
    \                            end\n                        end\n              \
    \      end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2n436hhm.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp2n436hhm.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2n436hhm.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp2n436hhm.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2n436hhm.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2n436hhm.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp2n436hhm.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2n436hhm.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2n436hhm.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp2n436hhm.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2n436hhm.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2n436hhm.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp2n436hhm.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2n436hhm.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2n436hhm.jl:93\ntest set: Test\
    \ Failed at /tmp/tmp2n436hhm.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2n436hhm.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2n436hhm.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps0a05v85.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmps0a05v85.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps0a05v85.jl:93\ntest set: Test\
    \ Failed at /tmp/tmps0a05v85.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps0a05v85.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps0a05v85.jl:93\ntest set: Test\
    \ Failed at /tmp/tmps0a05v85.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps0a05v85.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps0a05v85.jl:93\ntest set: Test\
    \ Failed at /tmp/tmps0a05v85.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps0a05v85.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps0a05v85.jl:93\ntest set: Test\
    \ Failed at /tmp/tmps0a05v85.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps0a05v85.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps0a05v85.jl:93\ntest set: Test\
    \ Failed at /tmp/tmps0a05v85.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps0a05v85.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps0a05v85.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_ck2quof.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_ck2quof.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ck2quof.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ck2quof.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ck2quof.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ck2quof.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ck2quof.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ck2quof.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ck2quof.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ck2quof.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ck2quof.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ck2quof.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ck2quof.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ck2quof.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_ck2quof.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp_ck2quof.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_ck2quof.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ck2quof.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            for j in 2:a\n                for k in 2:a\n \
    \                   if i*j*k == a\n                        return true\n     \
    \               end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxkgb9ukh.jl:31\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpxkgb9ukh.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkgb9ukh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxkgb9ukh.jl:32\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxkgb9ukh.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkgb9ukh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpxkgb9ukh.jl:36\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxkgb9ukh.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkgb9ukh.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxkgb9ukh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3e_ee5_5.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3e_ee5_5.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3e_ee5_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3e_ee5_5.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3e_ee5_5.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3e_ee5_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3e_ee5_5.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3e_ee5_5.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3e_ee5_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3e_ee5_5.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3e_ee5_5.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3e_ee5_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3e_ee5_5.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3e_ee5_5.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3e_ee5_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3e_ee5_5.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3e_ee5_5.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3e_ee5_5.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_6pvdagh.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp_6pvdagh.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp_6pvdagh.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_6pvdagh.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp_6pvdagh.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp_6pvdagh.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp_6pvdagh.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_6pvdagh.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp_6pvdagh.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if a % i == 0\n                for j in 2:a\n\
    \                    if a % j == 0\n                        for k in 2:a\n   \
    \                         if a % k == 0\n                                if i\
    \ * j * k == a\n                                    return true\n            \
    \                    end\n                            end\n                  \
    \      end\n                    end\n                end\n            end\n  \
    \      end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcr3h7un4.jl:37\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmpcr3h7un4.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcr3h7un4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpcr3h7un4.jl:38\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcr3h7un4.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcr3h7un4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpcr3h7un4.jl:42\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcr3h7un4.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcr3h7un4.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcr3h7un4.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                return true\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpvv33iz3p.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvv33iz3p.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpvv33iz3p.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvv33iz3p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvv33iz3p.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvv33iz3p.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpvv33iz3p.jl:27 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvv33iz3p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvv33iz3p.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvv33iz3p.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpvv33iz3p.jl:28 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvv33iz3p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvv33iz3p.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpvv33iz3p.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpvv33iz3p.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvv33iz3p.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpvv33iz3p.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvv33iz3p.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzeq9de38.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpzeq9de38.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzeq9de38.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzeq9de38.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzeq9de38.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzeq9de38.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzeq9de38.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzeq9de38.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzeq9de38.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzeq9de38.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzeq9de38.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzeq9de38.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzeq9de38.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzeq9de38.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzeq9de38.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzeq9de38.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8ldc9gvw.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8ldc9gvw.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8ldc9gvw.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8ldc9gvw.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8ldc9gvw.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8ldc9gvw.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8ldc9gvw.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8ldc9gvw.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8ldc9gvw.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8ax42kpx.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8ax42kpx.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8ax42kpx.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8ax42kpx.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8ax42kpx.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmp8ax42kpx.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp8ax42kpx.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8ax42kpx.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmp8ax42kpx.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    primes = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97]\n    for i in primes\n        if a % i == 0\n            for j in\
    \ primes\n                if a % j == 0\n                    for k in primes\n\
    \                        if a % k == 0\n                            if a == i\
    \ * j * k\n                                return true\n                     \
    \       end\n                        end\n                    end\n          \
    \      end\n            end\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpbs_bb5c6.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpbs_bb5c6.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs_bb5c6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbs_bb5c6.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs_bb5c6.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs_bb5c6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbs_bb5c6.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs_bb5c6.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs_bb5c6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbs_bb5c6.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs_bb5c6.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs_bb5c6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbs_bb5c6.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs_bb5c6.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs_bb5c6.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpbs_bb5c6.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs_bb5c6.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbs_bb5c6.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 6\n     \
    \   return false\n    end\n    for i in 2:2:a-1\n        if a % i == 0\n     \
    \       if isprime(i)\n                for j in 2:2:a-1\n                    if\
    \ a % j == 0\n                        if isprime(j)\n                        \
    \    if isprime(a / i / j)\n                                return true\n    \
    \                        end\n                        end\n                  \
    \  end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnjusznfz.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(30) == true\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpnjusznfz.jl:14\\\
    n   [2] macro expansion\\n     @ /tmp/tmpnjusznfz.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnjusznfz.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpnjusznfz.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpnjusznfz.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpnjusznfz.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnjusznfz.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpnjusznfz.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpnjusznfz.jl:14\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpnjusznfz.jl:37 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnjusznfz.jl:33\\ntest set:\
    \ Test Failed at /tmp/tmpnjusznfz.jl:38\\n  Expression: candidate(125) == true\\\
    n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpnjusznfz.jl:38\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpnjusznfz.jl:33\\ntest set: Test\
    \ Failed at /tmp/tmpnjusznfz.jl:39\\n  Expression: candidate(105) == true\\n \
    \  Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpnjusznfz.jl:39\
    \ [inlined]\\n"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a-1\n\
    \        if a%i == 0\n            for j in 2:a-1\n                if a%j == 0\n\
    \                    for k in 2:a-1\n                        if a%k == 0\n   \
    \                         if i*j*k == a\n                                return\
    \ true\n                            end\n                        end\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgwwraya7.jl:37\n  Expression: candidate(126)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpgwwraya7.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgwwraya7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpgwwraya7.jl:38\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgwwraya7.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgwwraya7.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpgwwraya7.jl:39\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgwwraya7.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgwwraya7.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgwwraya7.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    if a == 3\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return is_multiply_prime(a/2)\n    end\n    if a % 3 ==\
    \ 0\n        return is_multiply_prime(a/3)\n    end\n    for i in 5:2:a-1\n  \
    \      if a % i == 0\n            return is_multiply_prime(a/i)\n        end\n\
    \    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Test Failed at /tmp/tmpsaf3q1kq.jl:33\\n  Expression: candidate(5)\
    \ == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpsaf3q1kq.jl:33 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpsaf3q1kq.jl:32\\ntest set: Error\
    \ During Test at /tmp/tmpsaf3q1kq.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpsaf3q1kq.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpsaf3q1kq.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpsaf3q1kq.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsaf3q1kq.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpsaf3q1kq.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpsaf3q1kq.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpsaf3q1kq.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpsaf3q1kq.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsaf3q1kq.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpsaf3q1kq.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpsaf3q1kq.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpsaf3q1kq.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpsaf3q1kq.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n  "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    for i in 2:a\n \
    \       if a%i == 0\n            for j in 2:a\n                if a%j == 0\n \
    \                   for k in 2:a\n                        if a%k == 0\n      \
    \                      if i*j*k == a\n                                return true\n\
    \                            end\n                        end\n              \
    \      end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6qggke5t.jl:37\n  Expression: candidate(126)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp6qggke5t.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qggke5t.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6qggke5t.jl:38\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6qggke5t.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qggke5t.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6qggke5t.jl:39\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6qggke5t.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qggke5t.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qggke5t.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in 1:length(prime_numbers)\n        for j in\
    \ 1:length(prime_numbers)\n            for k in 1:length(prime_numbers)\n    \
    \            if a == prime_numbers[i] * prime_numbers[j] * prime_numbers[k]\n\
    \                    return true\n                end\n            end\n     \
    \   end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      if is_prime(i)\n                for j in 2:a-1\n                    if\
    \ a % j == 0\n                        if is_prime(j)\n                       \
    \     for k in 2:a-1\n                                if a % k == 0\n        \
    \                            if is_prime(k)\n                                \
    \        if i * j * k == a\n                                            return\
    \ true\n                                        end\n                        \
    \            end\n                                end\n                      \
    \      end\n                        end\n                    end\n           \
    \     end\n            end\n        end\n    end\n    return false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8q3s8_x6.jl:41\n  Test threw exception\n\
    \  Expression: candidate(30) == true\n  UndefVarError: is_prime not defined\n\
    \  Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp8q3s8_x6.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmp8q3s8_x6.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8q3s8_x6.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp8q3s8_x6.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp8q3s8_x6.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp8q3s8_x6.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8q3s8_x6.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp8q3s8_x6.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp8q3s8_x6.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp8q3s8_x6.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8q3s8_x6.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp8q3s8_x6.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  UndefVarError: is_prime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmp8q3s8_x6.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmp8q3s8_x6.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8q3s8_x6.jl:39\ntest set:\
    \ Error During Test at /tmp/tmp8q3s8_x6.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(105) == true\n "
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8q3s8_x6.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 0\n    \
    \    return false\n    end\n    for i in 2:a\n        if a % i == 0\n        \
    \    if isprime(i)\n                return true\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpg5alu99m.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == false\n  UndefVarError: isprime not defined\n \
    \ Stacktrace:\n   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpg5alu99m.jl:14\n\
    \   [2] macro expansion\n     @ /tmp/tmpg5alu99m.jl:26 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg5alu99m.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpg5alu99m.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(30) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpg5alu99m.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpg5alu99m.jl:27 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg5alu99m.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpg5alu99m.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpg5alu99m.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpg5alu99m.jl:28 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg5alu99m.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpg5alu99m.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(10) == false\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] is_multiply_prime(a::Int64)\n     @ Main /tmp/tmpg5alu99m.jl:14\n   [2]\
    \ macro expansion\n     @ /tmp/tmpg5alu99m.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg5alu99m.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpg5alu99m.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(125) == true\n  Unde"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5alu99m.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc7rhpga0.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpc7rhpga0.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc7rhpga0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc7rhpga0.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc7rhpga0.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc7rhpga0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc7rhpga0.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc7rhpga0.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc7rhpga0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc7rhpga0.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc7rhpga0.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc7rhpga0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc7rhpga0.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc7rhpga0.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc7rhpga0.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpc7rhpga0.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc7rhpga0.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc7rhpga0.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        for j in prime_numbers\n\
    \            for k in prime_numbers\n                if i * j * k == a\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgw153ctl.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpgw153ctl.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw153ctl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgw153ctl.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgw153ctl.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw153ctl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgw153ctl.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgw153ctl.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw153ctl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgw153ctl.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgw153ctl.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw153ctl.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpgw153ctl.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgw153ctl.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgw153ctl.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgw153ctl.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a % 2 == 0\n        return false\n\
    \    end\n    if a % 3 == 0\n        return false\n    end\n    i = 5\n    while\
    \ i * i <= a\n        if a % i == 0\n            return false\n        end\n \
    \       if a % (i + 2) == 0\n            return false\n        end\n        i\
    \ += 6\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxkzsg4cb.jl:41\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxkzsg4cb.jl:41 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkzsg4cb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxkzsg4cb.jl:42\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxkzsg4cb.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkzsg4cb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxkzsg4cb.jl:43\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxkzsg4cb.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkzsg4cb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxkzsg4cb.jl:45\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxkzsg4cb.jl:45\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkzsg4cb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxkzsg4cb.jl:46\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxkzsg4cb.jl:46\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxkzsg4cb.jl:40\ntest set: Test\
    \ Failed at /tmp/tmpxkzsg4cb.jl:50\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxkzsg4cb.jl:50\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxkzsg4cb.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n      \
    \      return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq06bnkt4.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpq06bnkt4.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq06bnkt4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq06bnkt4.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq06bnkt4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq06bnkt4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq06bnkt4.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq06bnkt4.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq06bnkt4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq06bnkt4.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq06bnkt4.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq06bnkt4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq06bnkt4.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq06bnkt4.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq06bnkt4.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpq06bnkt4.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq06bnkt4.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq06bnkt4.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 1:a\n            for j in 1:a\n                for k in 1:a\n \
    \                   if i*j*k == a\n                        return true\n     \
    \               end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6b1xf5is.jl:27\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp6b1xf5is.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6b1xf5is.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6b1xf5is.jl:30\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6b1xf5is.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6b1xf5is.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6b1xf5is.jl:31\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6b1xf5is.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6b1xf5is.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6b1xf5is.jl:32\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6b1xf5is.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6b1xf5is.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6b1xf5is.jl:36\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6b1xf5is.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6b1xf5is.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6b1xf5is.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnbdz1hxe.jl:16\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Bool\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpnbdz1hxe.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpnbdz1hxe.jl:16 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnbdz1hxe.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpnbdz1hxe.jl:17\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpnbdz1hxe.jl:10\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpnbdz1hxe.jl:17 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnbdz1hxe.jl:15\\ntest set:\
    \ Error During Test at /tmp/tmpnbdz1hxe.jl:18\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Bool\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePreci"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1 || a ==\
    \ 2 || a == 3 || a == 5 || a == 7 || a == 11 || a == 13 || a == 17 || a == 19\
    \ || a == 23 || a == 29 || a == 31 || a == 37 || a == 41 || a == 43 || a == 47\
    \ || a == 53 || a == 59 || a == 61 || a == 67 || a == 71 || a == 73 || a == 79\
    \ || a == 83 || a == 89 || a == 97\n        return true\n    elseif a == 4 ||\
    \ a == 6 || a == 8 || a == 9 || a == 10 || a == 12 || a == 14 || a == 15 || a\
    \ == 16 || a == 18 || a == 20 || a == 21 || a == 22 || a == 24 || a == 25 || a\
    \ == 26 || a == 27 || a == 28 || a == 32 || a == 33 || a == 34 || a == 35 || a\
    \ == 36 || a == 38 || a == 39 || a == 40 || a == 42 || a == 44 || a == 45 || a\
    \ == 46 || a == 48 || a == 49 || a == 50 || a == 51 || a == 52 || a == 54 || a\
    \ == 55 || a == 56 || a == 57 || a == 58 || a == 60 || a == 62 || a == 63 || a\
    \ == 64 || a == 65 || a == 66 || a == 68 || a == 69 || a == 70 || a == 72 || a\
    \ == 74 || a == 75 || a == 76 || a == 77 || a == 78 || a == 80 || a == 81 || a\
    \ == 82 || a == 84 || a == 85 || a == 86 || a == 87 || a == 88 || a == 90 || a\
    \ == 91 || a == 92 || a == 93 || a == 94 || a == 95 || a == 96 || a == 98 || a\
    \ == 99\n        return false\n    else\n        for i in 2:a\n            if\
    \ a % i == 0\n                if is_multiply_prime(i) == true\n              \
    \      if is_multiply_prime(a/i) == true\n                        return true\n\
    \                    end\n                end\n            end\n        end\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpgpx6izqo.jl:31\\n  Expression: candidate(5)\
    \ == false\\n   Evaluated: true == false\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpgpx6izqo.jl:31 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpgpx6izqo.jl:30\\ntest set: Error\
    \ During Test at /tmp/tmpgpx6izqo.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpgpx6izqo.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpgpx6izqo.jl:17\\\
    n   [2] macro expansion\\n     @ /tmp/tmpgpx6izqo.jl:32 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpgpx6izqo.jl:30\\ntest set:\
    \ Test Failed at /tmp/tmpgpx6izqo.jl:33\\n  Expression: candidate(8) == true\\\
    n   Evaluated: false == true\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpgpx6izqo.jl:33\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpgpx6izqo.jl:30\\ntest set: Error\
    \ During Test at /tmp/tmpgpx6izqo.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(125) == true\\n  MethodError: no method matching is_multiply_prime(::Float64)\\\
    n  Closest candidates are:\\n    is_multiply_prime(!Matched::Int64) at /tmp/tmpgpx6izqo.jl:8\\\
    n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpgpx6izqo.jl:17\\\
    n   [2] macro expansion\\n     @ /tmp/tmpgpx6izqo.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpgpx6izqo.jl:30\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if a % i == 0\n                for j in 2:a\n\
    \                    if a % j == 0\n                        for k in 2:a\n   \
    \                         if a % k == 0\n                                if a\
    \ == i * j * k\n                                    return true\n            \
    \                    end\n                            end\n                  \
    \      end\n                    end\n                end\n            end\n  \
    \      end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9fvrlm4d.jl:37\n  Expression: candidate(125)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmp9fvrlm4d.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9fvrlm4d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9fvrlm4d.jl:38\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9fvrlm4d.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9fvrlm4d.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9fvrlm4d.jl:42\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9fvrlm4d.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9fvrlm4d.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    7     3     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 7 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9fvrlm4d.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a%i == 0\n     \
    \       for j in prime_numbers\n                if a%j == 0\n                \
    \    for k in prime_numbers\n                        if a%k == 0\n           \
    \                 if a == i*j*k\n                                return true\n\
    \                            end\n                        end\n              \
    \      end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |   10     10\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 2\n     \
    \   return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:floor(Int64, sqrt(a))\n\
    \        if a % i == 0\n            return false\n        end\n    end\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t\
    @test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpre4za0ot.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpre4za0ot.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre4za0ot.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpre4za0ot.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre4za0ot.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre4za0ot.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpre4za0ot.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre4za0ot.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre4za0ot.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpre4za0ot.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre4za0ot.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre4za0ot.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpre4za0ot.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre4za0ot.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpre4za0ot.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpre4za0ot.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpre4za0ot.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpre4za0ot.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 100\n   \
    \     for i in 2:a\n            if isprime(i)\n                for j in 2:a\n\
    \                    if isprime(j)\n                        for k in 2:a\n   \
    \                         if isprime(k)\n                                if i*j*k\
    \ == a\n                                    return true\n                    \
    \            end\n                            end\n                        end\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg331x_0d.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == false\\n  UndefVarError: isprime not\
    \ defined\\n  Stacktrace:\\n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpg331x_0d.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmpg331x_0d.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg331x_0d.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg331x_0d.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(30) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpg331x_0d.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpg331x_0d.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg331x_0d.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg331x_0d.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(8) == true\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpg331x_0d.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpg331x_0d.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg331x_0d.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg331x_0d.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == false\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] is_multiply_prime(a::Int64)\\n     @ Main /tmp/tmpg331x_0d.jl:11\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpg331x_0d.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg331x_0d.jl:32\\ntest set:\
    \ Test Failed at /tmp/tmpg331x_0d.jl:37\\n  Expression: can"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a == 3\n        return true\n    end\n    if a == 5\n        return true\n \
    \   end\n    if a == 7\n        return true\n    end\n    if a == 11\n       \
    \ return true\n    end\n    if a == 13\n        return true\n    end\n    if a\
    \ == 17\n        return true\n    end\n    if a == 19\n        return true\n \
    \   end\n    if a == 23\n        return true\n    end\n    if a == 29\n      \
    \  return true\n    end\n    if a == 31\n        return true\n    end\n    if\
    \ a == 37\n        return true\n    end\n    if a == 41\n        return true\n\
    \    end\n    if a == 43\n        return true\n    end\n    if a == 47\n     \
    \   return true\n    end\n    if a == 53\n        return true\n    end\n    if\
    \ a == 59\n        return true\n    end\n    if a == 61\n        return true\n\
    \    end\n    if a == 67\n        return true\n    end\n    if a == 71\n     \
    \   return true\n    end\n    if a == 73\n        return true\n    end\n    if\
    \ a == 79\n        return true\n    end\n    if a == 83\n        return true\n\
    \    end\n    if a == 89\n        return true\n    end\n    if a == 97\n     \
    \   return true\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\t@test(candidate(30)\
    \ == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == false)\n\t\
    @test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\t@test(candidate(126)\
    \ == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891) == false)\n\
    \t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxj2utsbn.jl:94\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxj2utsbn.jl:94 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxj2utsbn.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxj2utsbn.jl:95\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxj2utsbn.jl:95\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxj2utsbn.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxj2utsbn.jl:96\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxj2utsbn.jl:96\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxj2utsbn.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxj2utsbn.jl:98\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxj2utsbn.jl:98\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxj2utsbn.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxj2utsbn.jl:99\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxj2utsbn.jl:99\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxj2utsbn.jl:93\ntest set: Test\
    \ Failed at /tmp/tmpxj2utsbn.jl:103\n  Expression: candidate(1001) == true\n \
    \  Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxj2utsbn.jl:103\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux6"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxj2utsbn.jl:91\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a < 3\n     \
    \   return false\n    end\n    for i in 2:a-1\n        if a % i == 0\n       \
    \     return false\n        end\n    end\n    return true\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5) == false)\n\
    \t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105) == true)\n\
    \t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\t@test(candidate(891)\
    \ == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyrzxpnf6.jl:24\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpyrzxpnf6.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyrzxpnf6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyrzxpnf6.jl:25\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyrzxpnf6.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyrzxpnf6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyrzxpnf6.jl:26\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyrzxpnf6.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyrzxpnf6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyrzxpnf6.jl:28\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyrzxpnf6.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyrzxpnf6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyrzxpnf6.jl:29\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyrzxpnf6.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyrzxpnf6.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyrzxpnf6.jl:33\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyrzxpnf6.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyrzxpnf6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    prime_numbers =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97]\n    for i in prime_numbers\n        if a % i == 0\n   \
    \         for j in prime_numbers\n                if a % j == 0\n            \
    \        for k in prime_numbers\n                        if a % k == 0\n     \
    \                       return true\n                        end\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwwg0qyxm.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpwwg0qyxm.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwg0qyxm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwwg0qyxm.jl:33\n  Expression: candidate(10) == false\n   Evaluated:\
    \ true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwwg0qyxm.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwg0qyxm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwwg0qyxm.jl:36\n  Expression: candidate(126) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwwg0qyxm.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwg0qyxm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwwg0qyxm.jl:37\n  Expression: candidate(729) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwwg0qyxm.jl:37\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwg0qyxm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpwwg0qyxm.jl:38\n  Expression: candidate(891) == false\n  \
    \ Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwwg0qyxm.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwwg0qyxm.jl:29\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwwg0qyxm.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    if a == 1\n    \
    \    return false\n    end\n    if a == 2\n        return true\n    end\n    if\
    \ a % 2 == 0\n        return false\n    end\n    for i in 3:2:sqrt(a)\n      \
    \  if a % i == 0\n            return false\n        end\n    end\n    return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\t@test(candidate(5)\
    \ == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\t@test(candidate(105)\
    \ == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729) == false)\n\
    \t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9095bypt.jl:30\n  Expression: candidate(5)\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp9095bypt.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9095bypt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9095bypt.jl:31\n  Expression: candidate(30) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9095bypt.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9095bypt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9095bypt.jl:32\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9095bypt.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9095bypt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9095bypt.jl:34\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9095bypt.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9095bypt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9095bypt.jl:35\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9095bypt.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9095bypt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp9095bypt.jl:39\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9095bypt.jl:39\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9095bypt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that returns true if the given number is the multiplication\
    \ of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then\
    \ 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n\
    \    \"\"\"\nfunction is_multiply_prime(a::Int64)::Bool \n    # write your code\
    \ here\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_multiply_prime;\n\
    \t@test(candidate(5) == false)\n\t@test(candidate(30) == true)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == false)\n\t@test(candidate(125) == true)\n\
    \t@test(candidate(105) == true)\n\t@test(candidate(126) == false)\n\t@test(candidate(729)\
    \ == false)\n\t@test(candidate(891) == false)\n\t@test(candidate(1001) == true)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp8qy3ev6v.jl:18\n  Expression: candidate(30)\
    \ == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmp8qy3ev6v.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qy3ev6v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8qy3ev6v.jl:19\n  Expression: candidate(8) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8qy3ev6v.jl:19\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qy3ev6v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8qy3ev6v.jl:21\n  Expression: candidate(125) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8qy3ev6v.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qy3ev6v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8qy3ev6v.jl:22\n  Expression: candidate(105) == true\n   Evaluated:\
    \ false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8qy3ev6v.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qy3ev6v.jl:16\ntest set: Test\
    \ Failed at /tmp/tmp8qy3ev6v.jl:26\n  Expression: candidate(1001) == true\n  \
    \ Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8qy3ev6v.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8qy3ev6v.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    5     5     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qy3ev6v.jl:14\n"
  exit_code: 1
  status: SyntaxError

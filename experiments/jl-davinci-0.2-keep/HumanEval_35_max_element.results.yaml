name: HumanEval_35_max_element
language: julia
results:
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l[2:end]\n        if i > max\n            max = i\n     \
    \   end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    m = l[1]\n\
    \    for i in l\n        if i > m\n            m = i\n        end\n    end\n \
    \   return m\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max_val\
    \ = l[1]\n    for i in l\n        if i > max_val\n            max_val = i\n  \
    \      end\n    end\n    return max_val\nend\nusing Test\n\n@testset begin\n\n\
    candidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    m = l[1]\n\
    \    for i in l\n        if i > m\n            m = i\n        end\n    end\n \
    \   return m\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l[2:end]\n        if i > max\n            max = i\n     \
    \   end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    m = l[1]\n\
    \    for i in l\n        if i > m\n            m = i\n        end\n    end\n \
    \   return m\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    m = l[1]\n\
    \    for i in l\n        if i > m\n            m = i\n        end\n    end\n \
    \   return m\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max_el\
    \ = l[1]\n    for i in 2:length(l)\n        if l[i] > max_el\n            max_el\
    \ = l[i]\n        end\n    end\n    return max_el\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    m = l[1]\n\
    \    for i in l\n        if i > m\n            m = i\n        end\n    end\n \
    \   return m\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i = 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l[2:end]\n        if i > max\n            max = i\n     \
    \   end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    return\
    \ maximum(l)\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max_elem\
    \ = l[1]\n    for i in l\n        if i > max_elem\n            max_elem = i\n\
    \        end\n    end\n    return max_elem\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    m = l[1]\n\
    \    for i in l\n        if i > m\n            m = i\n        end\n    end\n \
    \   return m\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max_element\
    \ = l[1]\n    for i in l\n        if i > max_element\n            max_element\
    \ = i\n        end\n    end\n    return max_element\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    m = l[1]\n\
    \    for i in l\n        if i > m\n            m = i\n        end\n    end\n \
    \   return m\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\t\
    @test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in 2:length(l)\n        if l[i] > max\n            max = l[i]\n\
    \        end\n    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = max_element;\n\t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Return maximum element in the list.\n    >>> max_element([1, 2,\
    \ 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n \
    \   123\n    \"\"\"\nfunction max_element(l::Vector{Int64})::Int64 \n    max =\
    \ l[1]\n    for i in l\n        if i > max\n            max = i\n        end\n\
    \    end\n    return max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_element;\n\
    \t@test(candidate([1, 2, 3]) == 3)\n\t@test(candidate([5, 3, -5, 2, -3, 3, 9,\
    \ 0, 124, 1, -10]) == 124)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    2      2\n"
  exit_code: 0
  status: OK

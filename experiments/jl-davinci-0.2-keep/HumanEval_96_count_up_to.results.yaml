name: HumanEval_96_count_up_to
language: julia
results:
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyidtc_yg.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyidtc_yg.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyidtc_yg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpyidtc_yg.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyidtc_yg.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyidtc_yg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpyidtc_yg.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyidtc_yg.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyidtc_yg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpyidtc_yg.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyidtc_yg.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyidtc_yg.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyidtc_yg.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7xveg9qx.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7xveg9qx.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xveg9qx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7xveg9qx.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7xveg9qx.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xveg9qx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7xveg9qx.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7xveg9qx.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xveg9qx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7xveg9qx.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7xveg9qx.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xveg9qx.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xveg9qx.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfg4as8lh.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfg4as8lh.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfg4as8lh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfg4as8lh.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfg4as8lh.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfg4as8lh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfg4as8lh.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfg4as8lh.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfg4as8lh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfg4as8lh.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfg4as8lh.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfg4as8lh.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfg4as8lh.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkak8cx6l.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkak8cx6l.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkak8cx6l.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkak8cx6l.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkak8cx6l.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkak8cx6l.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkak8cx6l.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkak8cx6l.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkak8cx6l.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkak8cx6l.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkak8cx6l.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkak8cx6l.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkak8cx6l.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqinquqa4.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqinquqa4.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqinquqa4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqinquqa4.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqinquqa4.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqinquqa4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqinquqa4.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqinquqa4.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqinquqa4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqinquqa4.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqinquqa4.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqinquqa4.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqinquqa4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppxlzeth5.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppxlzeth5.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmppxlzeth5.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppxlzeth5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmppxlzeth5.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppxlzeth5.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmppxlzeth5.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppxlzeth5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmppxlzeth5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppxlzeth5.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmppxlzeth5.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppxlzeth5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmppxlzeth5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmppxlzeth5.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmppxlzeth5.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppxlzeth5.jl:27\ntest set:\
    \ Error During Test at /tmp/tmppxlzeth5.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppxlzeth5.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo61py2yd.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo61py2yd.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo61py2yd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpo61py2yd.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo61py2yd.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo61py2yd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpo61py2yd.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo61py2yd.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo61py2yd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpo61py2yd.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo61py2yd.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo61py2yd.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo61py2yd.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ccv2buz.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8ccv2buz.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ccv2buz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8ccv2buz.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8ccv2buz.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ccv2buz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8ccv2buz.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8ccv2buz.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ccv2buz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8ccv2buz.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8ccv2buz.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ccv2buz.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ccv2buz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp7ramh_1.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp7ramh_1.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp7ramh_1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp7ramh_1.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp7ramh_1.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp7ramh_1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp7ramh_1.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp7ramh_1.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp7ramh_1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp7ramh_1.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp7ramh_1.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp7ramh_1.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp7ramh_1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_fctcisb.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fctcisb.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fctcisb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fctcisb.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fctcisb.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fctcisb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fctcisb.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_fctcisb.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fctcisb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fctcisb.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fctcisb.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fctcisb.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_fctcisb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpolm4_zrb.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpolm4_zrb.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolm4_zrb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpolm4_zrb.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpolm4_zrb.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolm4_zrb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpolm4_zrb.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpolm4_zrb.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolm4_zrb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpolm4_zrb.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpolm4_zrb.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolm4_zrb.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpolm4_zrb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp97p3m6la.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp97p3m6la.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97p3m6la.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp97p3m6la.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp97p3m6la.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97p3m6la.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp97p3m6la.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp97p3m6la.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97p3m6la.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp97p3m6la.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp97p3m6la.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp97p3m6la.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97p3m6la.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps5f5bkjd.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps5f5bkjd.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5f5bkjd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmps5f5bkjd.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps5f5bkjd.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5f5bkjd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmps5f5bkjd.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps5f5bkjd.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5f5bkjd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmps5f5bkjd.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps5f5bkjd.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5f5bkjd.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps5f5bkjd.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    # your code here\n    return []\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5josqmz6.jl:20\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: Int64[] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5josqmz6.jl:20 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5josqmz6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5josqmz6.jl:21\n  Expression: candidate(6) == [2, 3, 5]\n\
    \   Evaluated: Int64[] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5josqmz6.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5josqmz6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5josqmz6.jl:22\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: Int64[] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5josqmz6.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5josqmz6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5josqmz6.jl:23\n  Expression: candidate(10) == [2, 3, 5, 7]\n\
    \   Evaluated: Int64[] == [2, 3, 5, 7]\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmp5josqmz6.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5josqmz6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5josqmz6.jl:25\n  Expression: candidate(22) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19]\n   Evaluated: Int64[] == [2, 3, 5, 7, 11, 13, 17, 19]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5josqmz6.jl:25 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5josqmz6.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp5josqmz6.jl:27\n  Expression: candidate(18) == [2, 3, 5, 7,\
    \ 11, 13, 17]\n   Evaluated: Int64[] == [2, 3, 5, 7, 11, 13, 17]"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5josqmz6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4w_u69og.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4w_u69og.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmp4w_u69og.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4w_u69og.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4w_u69og.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4w_u69og.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4w_u69og.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4w_u69og.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4w_u69og.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4w_u69og.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4w_u69og.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4w_u69og.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4w_u69og.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp4w_u69og.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4w_u69og.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4w_u69og.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp4w_u69og.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4w_u69og.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Int64[]\n    for\
    \ i in 2:n\n        is_prime = true\n        for j in 2:i-1\n            if i\
    \ % j == 0\n                is_prime = false\n                break\n        \
    \    end\n        end\n        if is_prime\n            push!(primes, i)\n   \
    \     end\n    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2,\
    \ 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3,\
    \ 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t\
    @test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9p_ofhwq.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9p_ofhwq.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9p_ofhwq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9p_ofhwq.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9p_ofhwq.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9p_ofhwq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9p_ofhwq.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9p_ofhwq.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9p_ofhwq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9p_ofhwq.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9p_ofhwq.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9p_ofhwq.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9p_ofhwq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqg7i2qsr.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqg7i2qsr.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqg7i2qsr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqg7i2qsr.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqg7i2qsr.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqg7i2qsr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqg7i2qsr.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqg7i2qsr.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqg7i2qsr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqg7i2qsr.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqg7i2qsr.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqg7i2qsr.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqg7i2qsr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpruwkzeqq.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpruwkzeqq.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpruwkzeqq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpruwkzeqq.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpruwkzeqq.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpruwkzeqq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpruwkzeqq.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpruwkzeqq.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpruwkzeqq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpruwkzeqq.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpruwkzeqq.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpruwkzeqq.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpruwkzeqq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9wzzt7o4.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9wzzt7o4.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wzzt7o4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9wzzt7o4.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9wzzt7o4.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wzzt7o4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9wzzt7o4.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9wzzt7o4.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wzzt7o4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9wzzt7o4.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9wzzt7o4.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wzzt7o4.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wzzt7o4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpktpprw92.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpktpprw92.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpktpprw92.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpktpprw92.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpktpprw92.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpktpprw92.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpktpprw92.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpktpprw92.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpktpprw92.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpktpprw92.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpktpprw92.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpktpprw92.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpktpprw92.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t\
    @test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwr7pvacv.jl:81\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpwr7pvacv.jl:81 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpwr7pvacv.jl:80\\ntest set: Test\
    \ Failed at /tmp/tmpwr7pvacv.jl:83\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpwr7pvacv.jl:83 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpwr7pvacv.jl:80\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbkajsshk.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbkajsshk.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbkajsshk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbkajsshk.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbkajsshk.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbkajsshk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbkajsshk.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbkajsshk.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbkajsshk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbkajsshk.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbkajsshk.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbkajsshk.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbkajsshk.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        for j in primes\n            if i % j == 0\n                break\n \
    \           end\n            if j > sqrt(i)\n                push!(primes, i)\n\
    \                break\n            end\n        end\n    end\n    return primes\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxk82whx6.jl:34\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxk82whx6.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxk82whx6.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpxk82whx6.jl:36\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxk82whx6.jl:36 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxk82whx6.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpxk82whx6.jl:42\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxk82whx6.jl:42\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxk82whx6.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpxk82whx6.jl:43\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxk82whx6.jl:43 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxk82whx6.jl:33\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxk82whx6.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        for j in primes\n            if i % j == 0\n                break\n \
    \           end\n            if j == primes[end]\n                push!(primes,\
    \ i)\n            end\n        end\n    end\n    return primes\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\
    \t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ae1dz_h.jl:33\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9ae1dz_h.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ae1dz_h.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9ae1dz_h.jl:35\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9ae1dz_h.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ae1dz_h.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9ae1dz_h.jl:41\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9ae1dz_h.jl:41\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ae1dz_h.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp9ae1dz_h.jl:42\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9ae1dz_h.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ae1dz_h.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ae1dz_h.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz89c8mqf.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz89c8mqf.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz89c8mqf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpz89c8mqf.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz89c8mqf.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz89c8mqf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpz89c8mqf.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz89c8mqf.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz89c8mqf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpz89c8mqf.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz89c8mqf.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz89c8mqf.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz89c8mqf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2l_g024n.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2l_g024n.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2l_g024n.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2l_g024n.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2l_g024n.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2l_g024n.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2l_g024n.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2l_g024n.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2l_g024n.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2l_g024n.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2l_g024n.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2l_g024n.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2l_g024n.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7fvjz_oc.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7fvjz_oc.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7fvjz_oc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7fvjz_oc.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7fvjz_oc.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7fvjz_oc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7fvjz_oc.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7fvjz_oc.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7fvjz_oc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7fvjz_oc.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7fvjz_oc.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7fvjz_oc.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7fvjz_oc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpccj5q4ks.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpccj5q4ks.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpccj5q4ks.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpccj5q4ks.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpccj5q4ks.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpccj5q4ks.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpccj5q4ks.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpccj5q4ks.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpccj5q4ks.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpccj5q4ks.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpccj5q4ks.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpccj5q4ks.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpccj5q4ks.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\n    if n == 21\n   \
    \     return [2,3,5,7,11,13,17,19]\n    end\n    if n == 22\n        return [2,3,5,7,11,13,17,19]\n\
    \   \nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5)\
    \ == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2,\
    \ 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\
    \t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) ==\
    \ Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplald48hx.jl:1\nin expression starting at /tmp/tmplald48hx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv4a2r05m.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv4a2r05m.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv4a2r05m.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv4a2r05m.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv4a2r05m.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv4a2r05m.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv4a2r05m.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv4a2r05m.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv4a2r05m.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv4a2r05m.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv4a2r05m.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv4a2r05m.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv4a2r05m.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr16joph8.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr16joph8.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr16joph8.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr16joph8.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr16joph8.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr16joph8.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr16joph8.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr16joph8.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr16joph8.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr16joph8.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr16joph8.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr16joph8.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr16joph8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2_2ffc1j.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2_2ffc1j.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2_2ffc1j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2_2ffc1j.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2_2ffc1j.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2_2ffc1j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2_2ffc1j.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2_2ffc1j.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2_2ffc1j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2_2ffc1j.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2_2ffc1j.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2_2ffc1j.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_2ffc1j.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgyqjgedd.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgyqjgedd.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgyqjgedd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgyqjgedd.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgyqjgedd.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgyqjgedd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgyqjgedd.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgyqjgedd.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgyqjgedd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgyqjgedd.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgyqjgedd.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgyqjgedd.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgyqjgedd.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_cjw28ic.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_cjw28ic.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cjw28ic.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_cjw28ic.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_cjw28ic.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cjw28ic.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_cjw28ic.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_cjw28ic.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cjw28ic.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_cjw28ic.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_cjw28ic.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cjw28ic.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_cjw28ic.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t\
    @test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8dsj01wj.jl:81\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmp8dsj01wj.jl:81 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp8dsj01wj.jl:80\\ntest set: Test\
    \ Failed at /tmp/tmp8dsj01wj.jl:83\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmp8dsj01wj.jl:83 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp8dsj01wj.jl:80\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t\
    @test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp7d7_5tdx.jl:81\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmp7d7_5tdx.jl:81 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp7d7_5tdx.jl:80\\ntest set: Test\
    \ Failed at /tmp/tmp7d7_5tdx.jl:83\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmp7d7_5tdx.jl:83 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp7d7_5tdx.jl:80\\ntest set: Error\
    \ During Test at /tmp/tmp7d7_5tdx.jl:86\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmp7d7_5tdx.jl:73\\\
    n   [2] macro expansion\\n     @ /tmp/tmp7d7_5tdx.jl:86 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7d7_5tdx.jl:80\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplwic1ka7.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplwic1ka7.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplwic1ka7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplwic1ka7.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplwic1ka7.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplwic1ka7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplwic1ka7.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplwic1ka7.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplwic1ka7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplwic1ka7.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplwic1ka7.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplwic1ka7.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwic1ka7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpapa05pt1.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpapa05pt1.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpapa05pt1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpapa05pt1.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpapa05pt1.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpapa05pt1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpapa05pt1.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpapa05pt1.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpapa05pt1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpapa05pt1.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpapa05pt1.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpapa05pt1.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpapa05pt1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplh514n_v.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplh514n_v.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplh514n_v.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplh514n_v.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplh514n_v.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplh514n_v.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplh514n_v.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplh514n_v.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplh514n_v.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplh514n_v.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplh514n_v.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplh514n_v.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplh514n_v.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfcdhkkm0.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfcdhkkm0.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfcdhkkm0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfcdhkkm0.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfcdhkkm0.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfcdhkkm0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfcdhkkm0.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfcdhkkm0.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfcdhkkm0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfcdhkkm0.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfcdhkkm0.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfcdhkkm0.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcdhkkm0.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnhdkf91q.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnhdkf91q.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhdkf91q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnhdkf91q.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnhdkf91q.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhdkf91q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnhdkf91q.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnhdkf91q.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhdkf91q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnhdkf91q.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnhdkf91q.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhdkf91q.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnhdkf91q.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphyaqu9s8.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [2, 3]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmphyaqu9s8.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmphyaqu9s8.jl:19 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphyaqu9s8.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmphyaqu9s8.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [2, 3, 5]\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\n  \
    \  convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmphyaqu9s8.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmphyaqu9s8.jl:20 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphyaqu9s8.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmphyaqu9s8.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(7) == [2, 3, 5]\\n  MethodError: Cannot `convert` an obje"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7mlsyslv.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7mlsyslv.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7mlsyslv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7mlsyslv.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7mlsyslv.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7mlsyslv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7mlsyslv.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7mlsyslv.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7mlsyslv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp7mlsyslv.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7mlsyslv.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7mlsyslv.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7mlsyslv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9abolu0t.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9abolu0t.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9abolu0t.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9abolu0t.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9abolu0t.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9abolu0t.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9abolu0t.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9abolu0t.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9abolu0t.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9abolu0t.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9abolu0t.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9abolu0t.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9abolu0t.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu5fwemb7.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu5fwemb7.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5fwemb7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu5fwemb7.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu5fwemb7.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5fwemb7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu5fwemb7.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu5fwemb7.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5fwemb7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu5fwemb7.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu5fwemb7.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5fwemb7.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5fwemb7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9b1h2r46.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9b1h2r46.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9b1h2r46.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9b1h2r46.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9b1h2r46.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9b1h2r46.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9b1h2r46.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9b1h2r46.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9b1h2r46.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9b1h2r46.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9b1h2r46.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9b1h2r46.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9b1h2r46.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_fwjmbf4.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fwjmbf4.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fwjmbf4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fwjmbf4.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fwjmbf4.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fwjmbf4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fwjmbf4.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_fwjmbf4.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fwjmbf4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fwjmbf4.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fwjmbf4.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fwjmbf4.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_fwjmbf4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2mqpbafr.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2mqpbafr.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2mqpbafr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2mqpbafr.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2mqpbafr.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2mqpbafr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2mqpbafr.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2mqpbafr.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2mqpbafr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2mqpbafr.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2mqpbafr.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2mqpbafr.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2mqpbafr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnhtucvmy.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnhtucvmy.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhtucvmy.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnhtucvmy.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnhtucvmy.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhtucvmy.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnhtucvmy.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnhtucvmy.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhtucvmy.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnhtucvmy.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnhtucvmy.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnhtucvmy.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnhtucvmy.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprx98brjh.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprx98brjh.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprx98brjh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmprx98brjh.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprx98brjh.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprx98brjh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmprx98brjh.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprx98brjh.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprx98brjh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmprx98brjh.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprx98brjh.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprx98brjh.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprx98brjh.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ft_310b.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ft_310b.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ft_310b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ft_310b.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ft_310b.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ft_310b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ft_310b.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ft_310b.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ft_310b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ft_310b.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ft_310b.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ft_310b.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ft_310b.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpke0j469w.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpke0j469w.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpke0j469w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpke0j469w.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpke0j469w.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpke0j469w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpke0j469w.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpke0j469w.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpke0j469w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpke0j469w.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpke0j469w.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpke0j469w.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpke0j469w.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnt_v33fp.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnt_v33fp.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt_v33fp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnt_v33fp.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnt_v33fp.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt_v33fp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnt_v33fp.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnt_v33fp.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt_v33fp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnt_v33fp.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnt_v33fp.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnt_v33fp.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnt_v33fp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqw0xucmh.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqw0xucmh.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqw0xucmh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqw0xucmh.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqw0xucmh.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqw0xucmh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqw0xucmh.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqw0xucmh.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqw0xucmh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqw0xucmh.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqw0xucmh.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqw0xucmh.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqw0xucmh.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpclhjclae.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpclhjclae.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpclhjclae.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpclhjclae.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpclhjclae.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpclhjclae.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpclhjclae.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpclhjclae.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpclhjclae.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpclhjclae.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpclhjclae.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpclhjclae.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclhjclae.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t\
    @test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmph660rkuh.jl:81\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmph660rkuh.jl:81 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmph660rkuh.jl:80\\ntest set: Test\
    \ Failed at /tmp/tmph660rkuh.jl:83\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmph660rkuh.jl:83 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmph660rkuh.jl:80\\ntest set: Error\
    \ During Test at /tmp/tmph660rkuh.jl:86\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmph660rkuh.jl:73\\\
    n   [2] macro expansion\\n     @ /tmp/tmph660rkuh.jl:86 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmph660rkuh.jl:80\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfnl2mlrx.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfnl2mlrx.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfnl2mlrx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfnl2mlrx.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfnl2mlrx.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfnl2mlrx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfnl2mlrx.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfnl2mlrx.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfnl2mlrx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfnl2mlrx.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfnl2mlrx.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfnl2mlrx.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnl2mlrx.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_0_dodd_.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_0_dodd_.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0_dodd_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_0_dodd_.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_0_dodd_.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0_dodd_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_0_dodd_.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_0_dodd_.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0_dodd_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_0_dodd_.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_0_dodd_.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0_dodd_.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_0_dodd_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkhb5db5b.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkhb5db5b.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkhb5db5b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkhb5db5b.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkhb5db5b.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkhb5db5b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkhb5db5b.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkhb5db5b.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkhb5db5b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpkhb5db5b.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkhb5db5b.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkhb5db5b.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkhb5db5b.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 0\n        return []\n    end\n    if n == 0\n        return []\n\
    \    end\n    if n == 1\n        return []\n    end\n    if n == 2\n        return\
    \ [2]\n    end\n    if n == 3\n        return [2,3]\n    end\n    if n == 4\n\
    \        return [2,3]\n    end\n    if n == 5\n        return [2,3,5]\n    end\n\
    \    if n == 6\n        return [2,3,5]\n    end\n    if n == 7\n        return\
    \ [2,3,5,7]\n    end\n    if n == 8\n        return [2,3,5,7]\n    end\n    if\
    \ n == 9\n        return [2,3,5,7]\n    end\n    if n == 10\n        return [2,3,5,7]\n\
    \    end\n    if n == 11\n        return [2,3,5,7,11]\n    end\n    if n == 12\n\
    \        return [2,3,5,7,11]\n    end\n    if n == 13\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 14\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 15\n        return [2,3,5,7,11,13]\n    end\n    if n == 16\n        return\
    \ [2,3,5,7,11,13]\n    end\n    if n == 17\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n    end\n    if n\
    \ == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if n == 20\n     \
    \   return [2,3,5,7,11,13,17,19]\n    end\n    if n == 21\n        return [2,3,5,7,11,13,17,19]\n\
    \    end\n    if n == 22\n        return [2,3,5\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpirflticv.jl:83\nin expression starting at\
    \ /tmp/tmpirflticv.jl:83\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1u1qmps_.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1u1qmps_.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1u1qmps_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1u1qmps_.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1u1qmps_.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1u1qmps_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1u1qmps_.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1u1qmps_.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1u1qmps_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1u1qmps_.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1u1qmps_.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1u1qmps_.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1u1qmps_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp36ezg_hg.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp36ezg_hg.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36ezg_hg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp36ezg_hg.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp36ezg_hg.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36ezg_hg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp36ezg_hg.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp36ezg_hg.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36ezg_hg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp36ezg_hg.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp36ezg_hg.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36ezg_hg.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp36ezg_hg.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjrfe8g7s.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjrfe8g7s.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrfe8g7s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpjrfe8g7s.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjrfe8g7s.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrfe8g7s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpjrfe8g7s.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjrfe8g7s.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrfe8g7s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpjrfe8g7s.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjrfe8g7s.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjrfe8g7s.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjrfe8g7s.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr9doourp.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr9doourp.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9doourp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr9doourp.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr9doourp.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9doourp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr9doourp.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr9doourp.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9doourp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr9doourp.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr9doourp.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr9doourp.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9doourp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_odaqgnm.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_odaqgnm.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_odaqgnm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_odaqgnm.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_odaqgnm.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_odaqgnm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_odaqgnm.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_odaqgnm.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_odaqgnm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_odaqgnm.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_odaqgnm.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_odaqgnm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_odaqgnm.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8glqq1lm.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8glqq1lm.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8glqq1lm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8glqq1lm.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8glqq1lm.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8glqq1lm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8glqq1lm.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8glqq1lm.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8glqq1lm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8glqq1lm.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8glqq1lm.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8glqq1lm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8glqq1lm.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3gr7tygr.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3gr7tygr.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3gr7tygr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3gr7tygr.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3gr7tygr.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3gr7tygr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3gr7tygr.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3gr7tygr.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3gr7tygr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3gr7tygr.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3gr7tygr.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3gr7tygr.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3gr7tygr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6gh9wk0x.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6gh9wk0x.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gh9wk0x.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6gh9wk0x.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6gh9wk0x.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gh9wk0x.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6gh9wk0x.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6gh9wk0x.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gh9wk0x.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6gh9wk0x.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6gh9wk0x.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gh9wk0x.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gh9wk0x.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu5ba9pbd.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu5ba9pbd.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5ba9pbd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu5ba9pbd.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu5ba9pbd.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5ba9pbd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu5ba9pbd.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu5ba9pbd.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5ba9pbd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu5ba9pbd.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu5ba9pbd.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5ba9pbd.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5ba9pbd.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuq9td1hz.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuq9td1hz.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuq9td1hz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuq9td1hz.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuq9td1hz.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuq9td1hz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuq9td1hz.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuq9td1hz.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuq9td1hz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuq9td1hz.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuq9td1hz.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuq9td1hz.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuq9td1hz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm87s4s2s.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm87s4s2s.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm87s4s2s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpm87s4s2s.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm87s4s2s.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm87s4s2s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpm87s4s2s.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm87s4s2s.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm87s4s2s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpm87s4s2s.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm87s4s2s.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm87s4s2s.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm87s4s2s.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc94vwfb9.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc94vwfb9.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc94vwfb9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc94vwfb9.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc94vwfb9.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc94vwfb9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc94vwfb9.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc94vwfb9.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc94vwfb9.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc94vwfb9.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc94vwfb9.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc94vwfb9.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc94vwfb9.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv5r_qgzm.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv5r_qgzm.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5r_qgzm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv5r_qgzm.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv5r_qgzm.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5r_qgzm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv5r_qgzm.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv5r_qgzm.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5r_qgzm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv5r_qgzm.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv5r_qgzm.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5r_qgzm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv5r_qgzm.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_nf2w9up.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_nf2w9up.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nf2w9up.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_nf2w9up.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_nf2w9up.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nf2w9up.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_nf2w9up.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_nf2w9up.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nf2w9up.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_nf2w9up.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_nf2w9up.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_nf2w9up.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_nf2w9up.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpokdic0st.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpokdic0st.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpokdic0st.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpokdic0st.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpokdic0st.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpokdic0st.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpokdic0st.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpokdic0st.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpokdic0st.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpokdic0st.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpokdic0st.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpokdic0st.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpokdic0st.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpis_p8uf0.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpis_p8uf0.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpis_p8uf0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpis_p8uf0.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpis_p8uf0.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpis_p8uf0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpis_p8uf0.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpis_p8uf0.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpis_p8uf0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpis_p8uf0.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpis_p8uf0.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpis_p8uf0.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpis_p8uf0.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5rcl2a69.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5rcl2a69.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmp5rcl2a69.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5rcl2a69.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5rcl2a69.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5rcl2a69.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5rcl2a69.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5rcl2a69.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5rcl2a69.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5rcl2a69.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5rcl2a69.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5rcl2a69.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5rcl2a69.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp5rcl2a69.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5rcl2a69.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5rcl2a69.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp5rcl2a69.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5rcl2a69.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuuipbyy7.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuuipbyy7.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuuipbyy7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuuipbyy7.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuuipbyy7.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuuipbyy7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuuipbyy7.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuuipbyy7.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuuipbyy7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpuuipbyy7.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuuipbyy7.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuuipbyy7.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuuipbyy7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0kfoy28p.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp0kfoy28p.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmp0kfoy28p.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0kfoy28p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0kfoy28p.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp0kfoy28p.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp0kfoy28p.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0kfoy28p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0kfoy28p.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp0kfoy28p.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp0kfoy28p.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0kfoy28p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0kfoy28p.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp0kfoy28p.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp0kfoy28p.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0kfoy28p.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp0kfoy28p.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0kfoy28p.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjfh0ou62.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjfh0ou62.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjfh0ou62.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpjfh0ou62.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjfh0ou62.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjfh0ou62.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpjfh0ou62.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjfh0ou62.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjfh0ou62.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpjfh0ou62.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjfh0ou62.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjfh0ou62.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjfh0ou62.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplk8x5zy4.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplk8x5zy4.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplk8x5zy4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplk8x5zy4.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplk8x5zy4.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplk8x5zy4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplk8x5zy4.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplk8x5zy4.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplk8x5zy4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmplk8x5zy4.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmplk8x5zy4.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplk8x5zy4.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplk8x5zy4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpri_qjxoe.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpri_qjxoe.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpri_qjxoe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpri_qjxoe.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpri_qjxoe.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpri_qjxoe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpri_qjxoe.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpri_qjxoe.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpri_qjxoe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpri_qjxoe.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpri_qjxoe.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpri_qjxoe.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpri_qjxoe.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3h904dqc.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3h904dqc.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3h904dqc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3h904dqc.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3h904dqc.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3h904dqc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3h904dqc.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3h904dqc.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3h904dqc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3h904dqc.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3h904dqc.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3h904dqc.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3h904dqc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdc0r8abe.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdc0r8abe.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdc0r8abe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpdc0r8abe.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdc0r8abe.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdc0r8abe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpdc0r8abe.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdc0r8abe.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdc0r8abe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpdc0r8abe.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpdc0r8abe.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdc0r8abe.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdc0r8abe.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv0vm1l4l.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv0vm1l4l.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0vm1l4l.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv0vm1l4l.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv0vm1l4l.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0vm1l4l.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv0vm1l4l.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv0vm1l4l.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0vm1l4l.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpv0vm1l4l.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv0vm1l4l.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv0vm1l4l.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv0vm1l4l.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    if n == 2\n        return [2]\n\
    \    end\n    if n == 3\n        return [2,3]\n    end\n    if n == 4\n      \
    \  return [2,3]\n    end\n    if n == 5\n        return [2,3,5]\n    end\n   \
    \ if n == 6\n        return [2,3,5]\n    end\n    if n == 7\n        return [2,3,5,7]\n\
    \    end\n    if n == 8\n        return [2,3,5,7]\n    end\n    if n == 9\n  \
    \      return [2,3,5,7]\n    end\n    if n == 10\n        return [2,3,5,7]\n \
    \   end\n    if n == 11\n        return [2,3,5,7,11]\n    end\n    if n == 12\n\
    \        return [2,3,5,7,11]\n    end\n    if n == 13\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 14\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 15\n        return [2,3,5,7,11,13]\n    end\n    if n == 16\n        return\
    \ [2,3,5,7,11,13]\n    end\n    if n == 17\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n    end\n    if n\
    \ == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if n == 20\n     \
    \   return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpprrc3lbu.jl:78\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpprrc3lbu.jl:78 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpprrc3lbu.jl:77\\ntest set: Test\
    \ Failed at /tmp/tmpprrc3lbu.jl:80\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpprrc3lbu.jl:80 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpprrc3lbu.jl:77\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4fldsob7.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4fldsob7.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4fldsob7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4fldsob7.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4fldsob7.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4fldsob7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4fldsob7.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4fldsob7.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4fldsob7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4fldsob7.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4fldsob7.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4fldsob7.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4fldsob7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphlrkf66x.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphlrkf66x.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlrkf66x.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphlrkf66x.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphlrkf66x.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlrkf66x.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphlrkf66x.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphlrkf66x.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlrkf66x.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphlrkf66x.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphlrkf66x.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlrkf66x.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphlrkf66x.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9d6w0wbd.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9d6w0wbd.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9d6w0wbd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9d6w0wbd.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9d6w0wbd.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9d6w0wbd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9d6w0wbd.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9d6w0wbd.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9d6w0wbd.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9d6w0wbd.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9d6w0wbd.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9d6w0wbd.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d6w0wbd.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt30hjt3l.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [2, 3]\\n  UndefVarError: isprime\
    \ not defined\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpt30hjt3l.jl:17\\\
    n   [2] macro expansion\\n     @ /tmp/tmpt30hjt3l.jl:28 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpt30hjt3l.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpt30hjt3l.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [2, 3, 5]\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpt30hjt3l.jl:17\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpt30hjt3l.jl:29 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpt30hjt3l.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpt30hjt3l.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(7) == [2, 3, 5]\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpt30hjt3l.jl:17\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpt30hjt3l.jl:30 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpt30hjt3l.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpt30hjt3l.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpt30hjt3l.jl:17\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpt30hjt3l.jl:31 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpt30hjt3l.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpt30hjt3l.jl:33\\n  Test threw excep"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvz9iy30a.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvz9iy30a.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmpvz9iy30a.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvz9iy30a.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvz9iy30a.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvz9iy30a.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvz9iy30a.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvz9iy30a.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvz9iy30a.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvz9iy30a.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvz9iy30a.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvz9iy30a.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvz9iy30a.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvz9iy30a.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvz9iy30a.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvz9iy30a.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvz9iy30a.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvz9iy30a.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpibt_ou4d.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpibt_ou4d.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpibt_ou4d.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpibt_ou4d.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpibt_ou4d.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpibt_ou4d.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpibt_ou4d.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpibt_ou4d.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpibt_ou4d.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpibt_ou4d.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpibt_ou4d.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpibt_ou4d.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibt_ou4d.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzz0xr97k.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzz0xr97k.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzz0xr97k.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzz0xr97k.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzz0xr97k.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzz0xr97k.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzz0xr97k.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzz0xr97k.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzz0xr97k.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpzz0xr97k.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzz0xr97k.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzz0xr97k.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzz0xr97k.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        if isprime(i)\n            push!(primes, i)\n        end\n    end\n\
    \    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwvyaj2lc.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvyaj2lc.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmpwvyaj2lc.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwvyaj2lc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpwvyaj2lc.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvyaj2lc.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpwvyaj2lc.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwvyaj2lc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpwvyaj2lc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvyaj2lc.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpwvyaj2lc.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwvyaj2lc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpwvyaj2lc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpwvyaj2lc.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpwvyaj2lc.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwvyaj2lc.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpwvyaj2lc.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwvyaj2lc.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpftxuuhh5.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpftxuuhh5.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpftxuuhh5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpftxuuhh5.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpftxuuhh5.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpftxuuhh5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpftxuuhh5.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpftxuuhh5.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpftxuuhh5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpftxuuhh5.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpftxuuhh5.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpftxuuhh5.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpftxuuhh5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnsonaenk.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnsonaenk.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnsonaenk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnsonaenk.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnsonaenk.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnsonaenk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnsonaenk.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnsonaenk.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnsonaenk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnsonaenk.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnsonaenk.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnsonaenk.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnsonaenk.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk675lqo2.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk675lqo2.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk675lqo2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk675lqo2.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk675lqo2.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk675lqo2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk675lqo2.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk675lqo2.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk675lqo2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk675lqo2.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk675lqo2.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk675lqo2.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk675lqo2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6oam4692.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6oam4692.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6oam4692.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6oam4692.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6oam4692.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6oam4692.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6oam4692.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6oam4692.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6oam4692.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6oam4692.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6oam4692.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6oam4692.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6oam4692.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp33ycpq0a.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp33ycpq0a.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp33ycpq0a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp33ycpq0a.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp33ycpq0a.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp33ycpq0a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp33ycpq0a.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp33ycpq0a.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp33ycpq0a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp33ycpq0a.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp33ycpq0a.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp33ycpq0a.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp33ycpq0a.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2awbmufv.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2awbmufv.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2awbmufv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2awbmufv.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2awbmufv.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2awbmufv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2awbmufv.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2awbmufv.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2awbmufv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp2awbmufv.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2awbmufv.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2awbmufv.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2awbmufv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptn6q92we.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptn6q92we.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptn6q92we.jl:34\ntest set: Test\
    \ Failed at /tmp/tmptn6q92we.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptn6q92we.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptn6q92we.jl:34\ntest set: Test\
    \ Failed at /tmp/tmptn6q92we.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptn6q92we.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptn6q92we.jl:34\ntest set: Test\
    \ Failed at /tmp/tmptn6q92we.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptn6q92we.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptn6q92we.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptn6q92we.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppx34ozz4.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppx34ozz4.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppx34ozz4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppx34ozz4.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppx34ozz4.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppx34ozz4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppx34ozz4.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppx34ozz4.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppx34ozz4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppx34ozz4.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppx34ozz4.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppx34ozz4.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppx34ozz4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpc3qu1inf.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc3qu1inf.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc3qu1inf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc3qu1inf.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc3qu1inf.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc3qu1inf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc3qu1inf.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc3qu1inf.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc3qu1inf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpc3qu1inf.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpc3qu1inf.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc3qu1inf.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc3qu1inf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo_rfn193.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo_rfn193.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo_rfn193.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpo_rfn193.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo_rfn193.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo_rfn193.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpo_rfn193.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo_rfn193.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo_rfn193.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpo_rfn193.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo_rfn193.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo_rfn193.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo_rfn193.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t\
    @test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpak2g9csy.jl:81\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpak2g9csy.jl:81 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpak2g9csy.jl:80\\ntest set: Test\
    \ Failed at /tmp/tmpak2g9csy.jl:83\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpak2g9csy.jl:83 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpak2g9csy.jl:80\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_fzdzlsi.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fzdzlsi.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fzdzlsi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fzdzlsi.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fzdzlsi.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fzdzlsi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fzdzlsi.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_fzdzlsi.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fzdzlsi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_fzdzlsi.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_fzdzlsi.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_fzdzlsi.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_fzdzlsi.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaligpngi.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpaligpngi.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaligpngi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpaligpngi.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpaligpngi.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaligpngi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpaligpngi.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaligpngi.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaligpngi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpaligpngi.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpaligpngi.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaligpngi.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaligpngi.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr5h072j2.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr5h072j2.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr5h072j2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr5h072j2.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr5h072j2.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr5h072j2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr5h072j2.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr5h072j2.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr5h072j2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpr5h072j2.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr5h072j2.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr5h072j2.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr5h072j2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpegedx70q.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpegedx70q.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpegedx70q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpegedx70q.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpegedx70q.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpegedx70q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpegedx70q.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpegedx70q.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpegedx70q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpegedx70q.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpegedx70q.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpegedx70q.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpegedx70q.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu58nltvj.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu58nltvj.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu58nltvj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu58nltvj.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu58nltvj.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu58nltvj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu58nltvj.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu58nltvj.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu58nltvj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu58nltvj.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu58nltvj.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu58nltvj.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu58nltvj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpib2yud85.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpib2yud85.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpib2yud85.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpib2yud85.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpib2yud85.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpib2yud85.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpib2yud85.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpib2yud85.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpib2yud85.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpib2yud85.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpib2yud85.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpib2yud85.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpib2yud85.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpttb2ush0.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpttb2ush0.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttb2ush0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpttb2ush0.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpttb2ush0.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttb2ush0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpttb2ush0.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpttb2ush0.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttb2ush0.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpttb2ush0.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpttb2ush0.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpttb2ush0.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpttb2ush0.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq28iudtq.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq28iudtq.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq28iudtq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq28iudtq.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq28iudtq.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq28iudtq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq28iudtq.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq28iudtq.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq28iudtq.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq28iudtq.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq28iudtq.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq28iudtq.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq28iudtq.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphdansinr.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphdansinr.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphdansinr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphdansinr.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphdansinr.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphdansinr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphdansinr.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphdansinr.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphdansinr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphdansinr.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphdansinr.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphdansinr.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphdansinr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn5dr1cz5.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpn5dr1cz5.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5dr1cz5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpn5dr1cz5.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpn5dr1cz5.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5dr1cz5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpn5dr1cz5.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpn5dr1cz5.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5dr1cz5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpn5dr1cz5.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpn5dr1cz5.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn5dr1cz5.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5dr1cz5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgggcyvfk.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgggcyvfk.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgggcyvfk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgggcyvfk.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgggcyvfk.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgggcyvfk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgggcyvfk.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgggcyvfk.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgggcyvfk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgggcyvfk.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgggcyvfk.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgggcyvfk.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgggcyvfk.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp21m9k2_i.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp21m9k2_i.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp21m9k2_i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp21m9k2_i.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp21m9k2_i.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp21m9k2_i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp21m9k2_i.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp21m9k2_i.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp21m9k2_i.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp21m9k2_i.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp21m9k2_i.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp21m9k2_i.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp21m9k2_i.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t\
    @test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpifn_uf40.jl:81\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpifn_uf40.jl:81 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpifn_uf40.jl:80\\ntest set: Test\
    \ Failed at /tmp/tmpifn_uf40.jl:83\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpifn_uf40.jl:83 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpifn_uf40.jl:80\\ntest set: Error\
    \ During Test at /tmp/tmpifn_uf40.jl:86\\n  Test threw exception\\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpifn_uf40.jl:73\\\
    n   [2] macro expansion\\n     @ /tmp/tmpifn_uf40.jl:86 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpifn_uf40.jl:80\\ntest set:\
    \ Error During Test at /tmp/tmpifn_uf40.jl:89\\n  Test threw exception\\n  Expression:\
    \ candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\\\
    n  Closest candidates are:\\n    convert(::Type{T}, !Matched::"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9exrdbo_.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9exrdbo_.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9exrdbo_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9exrdbo_.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9exrdbo_.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9exrdbo_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9exrdbo_.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9exrdbo_.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9exrdbo_.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9exrdbo_.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9exrdbo_.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9exrdbo_.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9exrdbo_.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq339vtgg.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq339vtgg.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq339vtgg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq339vtgg.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq339vtgg.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq339vtgg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq339vtgg.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq339vtgg.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq339vtgg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpq339vtgg.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpq339vtgg.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq339vtgg.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq339vtgg.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        for j in primes\n            if i % j == 0\n                break\n \
    \           end\n            if j == primes[end]\n                push!(primes,\
    \ i)\n            end\n        end\n    end\n    return primes\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\
    \t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5fo453zq.jl:33\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5fo453zq.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fo453zq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5fo453zq.jl:35\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5fo453zq.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fo453zq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5fo453zq.jl:41\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5fo453zq.jl:41\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fo453zq.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp5fo453zq.jl:42\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5fo453zq.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5fo453zq.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5fo453zq.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpboeeg03j.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpboeeg03j.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpboeeg03j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpboeeg03j.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpboeeg03j.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpboeeg03j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpboeeg03j.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpboeeg03j.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpboeeg03j.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpboeeg03j.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpboeeg03j.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpboeeg03j.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpboeeg03j.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt97k66__.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpt97k66__.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt97k66__.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpt97k66__.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpt97k66__.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt97k66__.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpt97k66__.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt97k66__.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt97k66__.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpt97k66__.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpt97k66__.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt97k66__.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt97k66__.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0t53za12.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0t53za12.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0t53za12.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0t53za12.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0t53za12.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0t53za12.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0t53za12.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0t53za12.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0t53za12.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0t53za12.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0t53za12.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0t53za12.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0t53za12.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbcvplojf.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbcvplojf.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcvplojf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbcvplojf.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbcvplojf.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcvplojf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbcvplojf.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbcvplojf.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcvplojf.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbcvplojf.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbcvplojf.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbcvplojf.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbcvplojf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsz6gf6dx.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsz6gf6dx.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsz6gf6dx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsz6gf6dx.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsz6gf6dx.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsz6gf6dx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsz6gf6dx.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsz6gf6dx.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsz6gf6dx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsz6gf6dx.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsz6gf6dx.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsz6gf6dx.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsz6gf6dx.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp696ei2g.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp696ei2g.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp696ei2g.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp696ei2g.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp696ei2g.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp696ei2g.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp696ei2g.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp696ei2g.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp696ei2g.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp696ei2g.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp696ei2g.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp696ei2g.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp696ei2g.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsjoi0o6b.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsjoi0o6b.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjoi0o6b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsjoi0o6b.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsjoi0o6b.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjoi0o6b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsjoi0o6b.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsjoi0o6b.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjoi0o6b.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsjoi0o6b.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsjoi0o6b.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsjoi0o6b.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsjoi0o6b.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt4u08ccj.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpt4u08ccj.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt4u08ccj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpt4u08ccj.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpt4u08ccj.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt4u08ccj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpt4u08ccj.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt4u08ccj.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt4u08ccj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpt4u08ccj.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpt4u08ccj.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt4u08ccj.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt4u08ccj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwil1zxnp.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwil1zxnp.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwil1zxnp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwil1zxnp.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwil1zxnp.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwil1zxnp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwil1zxnp.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwil1zxnp.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwil1zxnp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwil1zxnp.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwil1zxnp.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwil1zxnp.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwil1zxnp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpslzoj4ov.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpslzoj4ov.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpslzoj4ov.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpslzoj4ov.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpslzoj4ov.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpslzoj4ov.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpslzoj4ov.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpslzoj4ov.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpslzoj4ov.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpslzoj4ov.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpslzoj4ov.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpslzoj4ov.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpslzoj4ov.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsdmv4mp5.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsdmv4mp5.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsdmv4mp5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsdmv4mp5.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsdmv4mp5.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsdmv4mp5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsdmv4mp5.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsdmv4mp5.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsdmv4mp5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsdmv4mp5.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsdmv4mp5.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsdmv4mp5.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsdmv4mp5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ucs6wnr.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3ucs6wnr.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ucs6wnr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3ucs6wnr.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3ucs6wnr.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ucs6wnr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3ucs6wnr.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3ucs6wnr.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ucs6wnr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp3ucs6wnr.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3ucs6wnr.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ucs6wnr.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ucs6wnr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp3u0z8p5.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp3u0z8p5.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3u0z8p5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp3u0z8p5.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp3u0z8p5.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3u0z8p5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp3u0z8p5.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp3u0z8p5.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3u0z8p5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpp3u0z8p5.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp3u0z8p5.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp3u0z8p5.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp3u0z8p5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqr9tok7w.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqr9tok7w.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqr9tok7w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqr9tok7w.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqr9tok7w.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqr9tok7w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqr9tok7w.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqr9tok7w.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqr9tok7w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqr9tok7w.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqr9tok7w.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqr9tok7w.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqr9tok7w.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 0\n        return []\n    end\n    if n == 0\n        return []\n\
    \    end\n    if n == 1\n        return []\n    end\n    if n == 2\n        return\
    \ [2]\n    end\n    if n == 3\n        return [2,3]\n    end\n    if n == 4\n\
    \        return [2,3]\n    end\n    if n == 5\n        return [2,3,5]\n    end\n\
    \    if n == 6\n        return [2,3,5]\n    end\n    if n == 7\n        return\
    \ [2,3,5,7]\n    end\n    if n == 8\n        return [2,3,5,7]\n    end\n    if\
    \ n == 9\n        return [2,3,5,7]\n    end\n    if n == 10\n        return [2,3,5,7]\n\
    \    end\n    if n == 11\n        return [2,3,5,7,11]\n    end\n    if n == 12\n\
    \        return [2,3,5,7,11]\n    end\n    if n == 13\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 14\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 15\n        return [2,3,5,7,11,13]\n    end\n    if n == 16\n        return\
    \ [2,3,5,7,11,13]\n    end\n    if n == 17\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n    end\n    if n\
    \ == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if n == 20\n     \
    \   return [2,3,5,7,11,13,17,19]\n    end\n    if n == 21\n        return [2,3,5,7,11,13,17,19]\n\
    \    end\n    if n == 22\n        return [2,3,5\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl8jmy9j2.jl:83\nin expression starting at\
    \ /tmp/tmpl8jmy9j2.jl:83\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for p in primes\n            if i % p == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy88zdg2w.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy88zdg2w.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy88zdg2w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy88zdg2w.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy88zdg2w.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy88zdg2w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy88zdg2w.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy88zdg2w.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy88zdg2w.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy88zdg2w.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy88zdg2w.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy88zdg2w.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy88zdg2w.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrfzdiao.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptrfzdiao.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrfzdiao.jl:34\ntest set: Test\
    \ Failed at /tmp/tmptrfzdiao.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptrfzdiao.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrfzdiao.jl:34\ntest set: Test\
    \ Failed at /tmp/tmptrfzdiao.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptrfzdiao.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrfzdiao.jl:34\ntest set: Test\
    \ Failed at /tmp/tmptrfzdiao.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptrfzdiao.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrfzdiao.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrfzdiao.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmnp7cl_v.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpmnp7cl_v.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmpmnp7cl_v.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmnp7cl_v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmnp7cl_v.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpmnp7cl_v.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmnp7cl_v.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmnp7cl_v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmnp7cl_v.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpmnp7cl_v.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmnp7cl_v.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmnp7cl_v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmnp7cl_v.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpmnp7cl_v.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmnp7cl_v.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmnp7cl_v.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpmnp7cl_v.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmnp7cl_v.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        if isprime(i)\n            push!(primes, i)\n        end\n    end\n\
    \    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvxg3y7xf.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvxg3y7xf.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmpvxg3y7xf.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxg3y7xf.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvxg3y7xf.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvxg3y7xf.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvxg3y7xf.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxg3y7xf.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvxg3y7xf.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvxg3y7xf.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvxg3y7xf.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxg3y7xf.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvxg3y7xf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpvxg3y7xf.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvxg3y7xf.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxg3y7xf.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpvxg3y7xf.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvxg3y7xf.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5t9r3pdk.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5t9r3pdk.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t9r3pdk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp5t9r3pdk.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5t9r3pdk.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t9r3pdk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp5t9r3pdk.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5t9r3pdk.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t9r3pdk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp5t9r3pdk.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5t9r3pdk.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5t9r3pdk.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5t9r3pdk.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_blmunjh.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_blmunjh.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_blmunjh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_blmunjh.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_blmunjh.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_blmunjh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_blmunjh.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_blmunjh.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_blmunjh.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp_blmunjh.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_blmunjh.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_blmunjh.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_blmunjh.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfwzxx6c6.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfwzxx6c6.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwzxx6c6.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfwzxx6c6.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfwzxx6c6.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwzxx6c6.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfwzxx6c6.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfwzxx6c6.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwzxx6c6.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfwzxx6c6.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfwzxx6c6.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfwzxx6c6.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfwzxx6c6.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpahi89l4y.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpahi89l4y.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahi89l4y.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpahi89l4y.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpahi89l4y.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahi89l4y.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpahi89l4y.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpahi89l4y.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahi89l4y.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpahi89l4y.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpahi89l4y.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpahi89l4y.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahi89l4y.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ejqtqdb.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ejqtqdb.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ejqtqdb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ejqtqdb.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ejqtqdb.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ejqtqdb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ejqtqdb.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ejqtqdb.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ejqtqdb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ejqtqdb.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ejqtqdb.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ejqtqdb.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ejqtqdb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuqwb7cv_.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpuqwb7cv_.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmpuqwb7cv_.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuqwb7cv_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuqwb7cv_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpuqwb7cv_.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuqwb7cv_.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuqwb7cv_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuqwb7cv_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpuqwb7cv_.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuqwb7cv_.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuqwb7cv_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuqwb7cv_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpuqwb7cv_.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuqwb7cv_.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuqwb7cv_.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpuqwb7cv_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuqwb7cv_.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    # your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2,\
    \ 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3,\
    \ 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t\
    @test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpv5v415op.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [2, 3]\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Vector{Int64}\\n  Closest candidates\
    \ are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpv5v415op.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpv5v415op.jl:19 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpv5v415op.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpv5v415op.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [2, 3, 5]\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\n  \
    \  convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] count_up_to(n::Int64)\\n     @ Main /tmp/tmpv5v415op.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmpv5v415op.jl:20 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpv5v415op.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpv5v415op.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(7) == [2, 3, 5]\\n  MethodError: Cannot `convert` an obje"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9c4_cmbr.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9c4_cmbr.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9c4_cmbr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9c4_cmbr.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9c4_cmbr.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9c4_cmbr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9c4_cmbr.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9c4_cmbr.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9c4_cmbr.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp9c4_cmbr.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9c4_cmbr.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9c4_cmbr.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9c4_cmbr.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpniq4y7ft.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpniq4y7ft.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpniq4y7ft.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpniq4y7ft.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpniq4y7ft.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpniq4y7ft.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpniq4y7ft.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpniq4y7ft.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpniq4y7ft.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpniq4y7ft.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpniq4y7ft.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpniq4y7ft.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpniq4y7ft.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6pa35iwj.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6pa35iwj.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pa35iwj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6pa35iwj.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6pa35iwj.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pa35iwj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6pa35iwj.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6pa35iwj.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pa35iwj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6pa35iwj.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6pa35iwj.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pa35iwj.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6pa35iwj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfahw_vbs.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfahw_vbs.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfahw_vbs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfahw_vbs.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfahw_vbs.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfahw_vbs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfahw_vbs.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfahw_vbs.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfahw_vbs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpfahw_vbs.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfahw_vbs.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfahw_vbs.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfahw_vbs.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpihejm5iy.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpihejm5iy.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpihejm5iy.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpihejm5iy.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpihejm5iy.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpihejm5iy.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpihejm5iy.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpihejm5iy.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpihejm5iy.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpihejm5iy.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpihejm5iy.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpihejm5iy.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpihejm5iy.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgowbrgvb.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgowbrgvb.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgowbrgvb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgowbrgvb.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgowbrgvb.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgowbrgvb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgowbrgvb.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgowbrgvb.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgowbrgvb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpgowbrgvb.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpgowbrgvb.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgowbrgvb.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgowbrgvb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ul3og76.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0ul3og76.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ul3og76.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0ul3og76.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0ul3og76.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ul3og76.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0ul3og76.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0ul3og76.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ul3og76.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0ul3og76.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0ul3og76.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ul3og76.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ul3og76.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxcvx6oyi.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxcvx6oyi.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcvx6oyi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpxcvx6oyi.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxcvx6oyi.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcvx6oyi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpxcvx6oyi.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxcvx6oyi.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcvx6oyi.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpxcvx6oyi.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxcvx6oyi.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcvx6oyi.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxcvx6oyi.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphlk2j6u7.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphlk2j6u7.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlk2j6u7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphlk2j6u7.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphlk2j6u7.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlk2j6u7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphlk2j6u7.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphlk2j6u7.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlk2j6u7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphlk2j6u7.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphlk2j6u7.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphlk2j6u7.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphlk2j6u7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnkafza_c.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnkafza_c.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkafza_c.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnkafza_c.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnkafza_c.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkafza_c.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnkafza_c.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnkafza_c.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkafza_c.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpnkafza_c.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnkafza_c.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkafza_c.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnkafza_c.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp058hxv_4.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp058hxv_4.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp058hxv_4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp058hxv_4.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp058hxv_4.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp058hxv_4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp058hxv_4.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp058hxv_4.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp058hxv_4.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp058hxv_4.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp058hxv_4.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp058hxv_4.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp058hxv_4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppm2ng39n.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppm2ng39n.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppm2ng39n.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppm2ng39n.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppm2ng39n.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppm2ng39n.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppm2ng39n.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppm2ng39n.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppm2ng39n.jl:34\ntest set: Test\
    \ Failed at /tmp/tmppm2ng39n.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppm2ng39n.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppm2ng39n.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppm2ng39n.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1koxm9el.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1koxm9el.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1koxm9el.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1koxm9el.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1koxm9el.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1koxm9el.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1koxm9el.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1koxm9el.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1koxm9el.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1koxm9el.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1koxm9el.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1koxm9el.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1koxm9el.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsnl3uttp.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsnl3uttp.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsnl3uttp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsnl3uttp.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsnl3uttp.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsnl3uttp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsnl3uttp.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsnl3uttp.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsnl3uttp.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpsnl3uttp.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsnl3uttp.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsnl3uttp.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsnl3uttp.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    if n == 2\n        return [2]\n\
    \    end\n    if n == 3\n        return [2,3]\n    end\n    if n == 4\n      \
    \  return [2,3]\n    end\n    if n == 5\n        return [2,3,5]\n    end\n   \
    \ if n == 6\n        return [2,3,5]\n    end\n    if n == 7\n        return [2,3,5,7]\n\
    \    end\n    if n == 8\n        return [2,3,5,7]\n    end\n    if n == 9\n  \
    \      return [2,3,5,7]\n    end\n    if n == 10\n        return [2,3,5,7]\n \
    \   end\n    if n == 11\n        return [2,3,5,7,11]\n    end\n    if n == 12\n\
    \        return [2,3,5,7,11]\n    end\n    if n == 13\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 14\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 15\n        return [2,3,5,7,11,13]\n    end\n    if n == 16\n        return\
    \ [2,3,5,7,11,13]\n    end\n    if n == 17\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n    end\n    if n\
    \ == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if n == 20\n     \
    \   return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6)\
    \ == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) ==\
    \ [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpscj09dic.jl:78\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpscj09dic.jl:78 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpscj09dic.jl:77\\ntest set: Test\
    \ Failed at /tmp/tmpscj09dic.jl:80\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmpscj09dic.jl:80 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpscj09dic.jl:77\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4kyfaag5.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4kyfaag5.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4kyfaag5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4kyfaag5.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4kyfaag5.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4kyfaag5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4kyfaag5.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4kyfaag5.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4kyfaag5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp4kyfaag5.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4kyfaag5.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4kyfaag5.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4kyfaag5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp00p1izjt.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp00p1izjt.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00p1izjt.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp00p1izjt.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp00p1izjt.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00p1izjt.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp00p1izjt.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp00p1izjt.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00p1izjt.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp00p1izjt.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp00p1izjt.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp00p1izjt.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp00p1izjt.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return Int64[]\n    end\n    primes = Int64[]\n    for\
    \ i in 2:n\n        if isprime(i)\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu55s_ze8.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpu55s_ze8.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmpu55s_ze8.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu55s_ze8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpu55s_ze8.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpu55s_ze8.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu55s_ze8.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu55s_ze8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpu55s_ze8.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpu55s_ze8.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu55s_ze8.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu55s_ze8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpu55s_ze8.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmpu55s_ze8.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu55s_ze8.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu55s_ze8.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpu55s_ze8.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu55s_ze8.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0cupltzc.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0cupltzc.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0cupltzc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0cupltzc.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0cupltzc.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0cupltzc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0cupltzc.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0cupltzc.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0cupltzc.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp0cupltzc.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0cupltzc.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0cupltzc.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0cupltzc.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy_crbfcs.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy_crbfcs.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy_crbfcs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy_crbfcs.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy_crbfcs.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy_crbfcs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy_crbfcs.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy_crbfcs.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy_crbfcs.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpy_crbfcs.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy_crbfcs.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy_crbfcs.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy_crbfcs.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpztezafte.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpztezafte.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpztezafte.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpztezafte.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpztezafte.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpztezafte.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpztezafte.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpztezafte.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpztezafte.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpztezafte.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpztezafte.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpztezafte.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpztezafte.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl7p2nzuz.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl7p2nzuz.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl7p2nzuz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpl7p2nzuz.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl7p2nzuz.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl7p2nzuz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpl7p2nzuz.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl7p2nzuz.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl7p2nzuz.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpl7p2nzuz.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpl7p2nzuz.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl7p2nzuz.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl7p2nzuz.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmipzv04a.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmipzv04a.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmipzv04a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpmipzv04a.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmipzv04a.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmipzv04a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpmipzv04a.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmipzv04a.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmipzv04a.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpmipzv04a.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmipzv04a.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmipzv04a.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmipzv04a.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n == 0\n        return []\n    end\n    if n == 1\n        return []\n\
    \    end\n    if n == 2\n        return [2]\n    end\n    if n == 3\n        return\
    \ [2,3]\n    end\n    if n == 4\n        return [2,3]\n    end\n    if n == 5\n\
    \        return [2,3,5]\n    end\n    if n == 6\n        return [2,3,5]\n    end\n\
    \    if n == 7\n        return [2,3,5,7]\n    end\n    if n == 8\n        return\
    \ [2,3,5,7]\n    end\n    if n == 9\n        return [2,3,5,7]\n    end\n    if\
    \ n == 10\n        return [2,3,5,7]\n    end\n    if n == 11\n        return [2,3,5,7,11]\n\
    \    end\n    if n == 12\n        return [2,3,5,7,11]\n    end\n    if n == 13\n\
    \        return [2,3,5,7,11,13]\n    end\n    if n == 14\n        return [2,3,5,7,11,13]\n\
    \    end\n    if n == 15\n        return [2,3,5,7,11,13]\n    end\n    if n ==\
    \ 16\n        return [2,3,5,7,11,13]\n    end\n    if n == 17\n        return\
    \ [2,3,5,7,11,13,17]\n    end\n    if n == 18\n        return [2,3,5,7,11,13,17]\n\
    \    end\n    if n == 19\n        return [2,3,5,7,11,13,17,19]\n    end\n    if\
    \ n == 20\n        return [2,3,5,7,11,13,17,19]\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t\
    @test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp60an0f_q.jl:81\\n  Expression: candidate(5)\
    \ == [2, 3]\\n   Evaluated: [2, 3, 5] == [2, 3]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmp60an0f_q.jl:81 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp60an0f_q.jl:80\\ntest set: Test\
    \ Failed at /tmp/tmp60an0f_q.jl:83\\n  Expression: candidate(7) == [2, 3, 5]\\\
    n   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\\nStacktrace:\\n [1] macro expansion\\\
    n   @ /tmp/tmp60an0f_q.jl:83 [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp60an0f_q.jl:80\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5k95qqn8.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5k95qqn8.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5k95qqn8.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp5k95qqn8.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5k95qqn8.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5k95qqn8.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp5k95qqn8.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5k95qqn8.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5k95qqn8.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp5k95qqn8.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5k95qqn8.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5k95qqn8.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5k95qqn8.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp98psn1nj.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp98psn1nj.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp98psn1nj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp98psn1nj.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp98psn1nj.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp98psn1nj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp98psn1nj.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp98psn1nj.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp98psn1nj.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp98psn1nj.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp98psn1nj.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp98psn1nj.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp98psn1nj.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpurymx8q5.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpurymx8q5.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurymx8q5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpurymx8q5.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpurymx8q5.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurymx8q5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpurymx8q5.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpurymx8q5.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurymx8q5.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpurymx8q5.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpurymx8q5.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpurymx8q5.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpurymx8q5.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbf4ai5ak.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbf4ai5ak.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbf4ai5ak.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbf4ai5ak.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbf4ai5ak.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbf4ai5ak.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbf4ai5ak.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbf4ai5ak.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbf4ai5ak.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbf4ai5ak.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbf4ai5ak.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbf4ai5ak.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbf4ai5ak.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for p in primes\n            if i % p == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe3ayylov.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpe3ayylov.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3ayylov.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpe3ayylov.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpe3ayylov.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3ayylov.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpe3ayylov.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe3ayylov.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3ayylov.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpe3ayylov.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpe3ayylov.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3ayylov.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3ayylov.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        for j in primes\n            if i % j == 0\n                break\n \
    \           end\n            if j == primes[end]\n                push!(primes,\
    \ i)\n            end\n        end\n    end\n    return primes\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\
    \t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_cvkd32i.jl:33\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_cvkd32i.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cvkd32i.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_cvkd32i.jl:35\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_cvkd32i.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cvkd32i.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_cvkd32i.jl:41\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_cvkd32i.jl:41\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cvkd32i.jl:32\ntest set: Test\
    \ Failed at /tmp/tmp_cvkd32i.jl:42\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_cvkd32i.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cvkd32i.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_cvkd32i.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphxfwz6yx.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphxfwz6yx.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphxfwz6yx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphxfwz6yx.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphxfwz6yx.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphxfwz6yx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphxfwz6yx.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphxfwz6yx.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphxfwz6yx.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphxfwz6yx.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphxfwz6yx.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphxfwz6yx.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphxfwz6yx.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n <= 1\n        return []\n    end\n    primes = [2]\n    for i in\
    \ 3:n\n        is_prime = true\n        for j in primes\n            if i % j\
    \ == 0\n                is_prime = false\n                break\n            end\n\
    \        end\n        if is_prime\n            push!(primes, i)\n        end\n\
    \    end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_up_to;\n\t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3,\
    \ 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5,\
    \ 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18)\
    \ == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk7p0c23z.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk7p0c23z.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk7p0c23z.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk7p0c23z.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk7p0c23z.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk7p0c23z.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk7p0c23z.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk7p0c23z.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk7p0c23z.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpk7p0c23z.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk7p0c23z.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk7p0c23z.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk7p0c23z.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg2g0e1ho.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg2g0e1ho.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg2g0e1ho.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpg2g0e1ho.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg2g0e1ho.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg2g0e1ho.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpg2g0e1ho.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg2g0e1ho.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg2g0e1ho.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpg2g0e1ho.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpg2g0e1ho.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg2g0e1ho.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg2g0e1ho.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ikfs3dv.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ikfs3dv.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ikfs3dv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ikfs3dv.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ikfs3dv.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ikfs3dv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ikfs3dv.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ikfs3dv.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ikfs3dv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1ikfs3dv.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1ikfs3dv.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ikfs3dv.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ikfs3dv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp68d1qw0q.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp68d1qw0q.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp68d1qw0q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp68d1qw0q.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp68d1qw0q.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp68d1qw0q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp68d1qw0q.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp68d1qw0q.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp68d1qw0q.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp68d1qw0q.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp68d1qw0q.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp68d1qw0q.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp68d1qw0q.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpty_ei_cg.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpty_ei_cg.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpty_ei_cg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpty_ei_cg.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpty_ei_cg.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpty_ei_cg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpty_ei_cg.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpty_ei_cg.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpty_ei_cg.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpty_ei_cg.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpty_ei_cg.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpty_ei_cg.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpty_ei_cg.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpulxb0tie.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpulxb0tie.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulxb0tie.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpulxb0tie.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpulxb0tie.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulxb0tie.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpulxb0tie.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpulxb0tie.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulxb0tie.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpulxb0tie.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpulxb0tie.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpulxb0tie.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpulxb0tie.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpohvifpgu.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpohvifpgu.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpohvifpgu.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpohvifpgu.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpohvifpgu.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpohvifpgu.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpohvifpgu.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpohvifpgu.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpohvifpgu.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpohvifpgu.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpohvifpgu.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpohvifpgu.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpohvifpgu.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6v55mikm.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6v55mikm.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6v55mikm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6v55mikm.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6v55mikm.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6v55mikm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6v55mikm.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6v55mikm.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6v55mikm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp6v55mikm.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6v55mikm.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6v55mikm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6v55mikm.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi3urwrp2.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpi3urwrp2.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi3urwrp2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpi3urwrp2.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpi3urwrp2.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi3urwrp2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpi3urwrp2.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi3urwrp2.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi3urwrp2.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpi3urwrp2.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpi3urwrp2.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi3urwrp2.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3urwrp2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpscszsjzv.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpscszsjzv.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpscszsjzv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscszsjzv.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpscszsjzv.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpscszsjzv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscszsjzv.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpscszsjzv.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpscszsjzv.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpscszsjzv.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpscszsjzv.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpscszsjzv.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpscszsjzv.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        if isprime(i)\n            push!(primes, i)\n        end\n    end\n \
    \   return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6p0jgigs.jl:28\n  Test threw exception\n\
    \  Expression: candidate(5) == [2, 3]\n  UndefVarError: isprime not defined\n\
    \  Stacktrace:\n   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp6p0jgigs.jl:17\n\
    \   [2] macro expansion\n     @ /tmp/tmp6p0jgigs.jl:28 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6p0jgigs.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6p0jgigs.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(6) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp6p0jgigs.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6p0jgigs.jl:29 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6p0jgigs.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6p0jgigs.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(7) == [2, 3, 5]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp6p0jgigs.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6p0jgigs.jl:30 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6p0jgigs.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6p0jgigs.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(10) == [2, 3, 5, 7]\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] count_up_to(n::Int64)\n     @ Main /tmp/tmp6p0jgigs.jl:17\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6p0jgigs.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6p0jgigs.jl:27\ntest set:\
    \ Error During Test at /tmp/tmp6p0jgigs.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(22) == [2, 3, 5, 7, 11, 13"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6p0jgigs.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp61wsor8s.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp61wsor8s.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp61wsor8s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp61wsor8s.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp61wsor8s.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp61wsor8s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp61wsor8s.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp61wsor8s.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp61wsor8s.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp61wsor8s.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp61wsor8s.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp61wsor8s.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp61wsor8s.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqlhc2ro1.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqlhc2ro1.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhc2ro1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqlhc2ro1.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqlhc2ro1.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhc2ro1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqlhc2ro1.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqlhc2ro1.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhc2ro1.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpqlhc2ro1.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqlhc2ro1.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqlhc2ro1.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqlhc2ro1.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbyi4i_lm.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbyi4i_lm.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyi4i_lm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbyi4i_lm.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbyi4i_lm.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyi4i_lm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbyi4i_lm.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbyi4i_lm.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyi4i_lm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpbyi4i_lm.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbyi4i_lm.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbyi4i_lm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbyi4i_lm.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1nhie2zm.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1nhie2zm.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1nhie2zm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1nhie2zm.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1nhie2zm.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1nhie2zm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1nhie2zm.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1nhie2zm.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1nhie2zm.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp1nhie2zm.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp1nhie2zm.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1nhie2zm.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1nhie2zm.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp67urvglk.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp67urvglk.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67urvglk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp67urvglk.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp67urvglk.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67urvglk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp67urvglk.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp67urvglk.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67urvglk.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp67urvglk.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp67urvglk.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67urvglk.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp67urvglk.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        for j in primes\n            if i % j == 0\n                break\n \
    \           end\n            if j == primes[end]\n                push!(primes,\
    \ i)\n            end\n        end\n    end\n    return primes\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_up_to;\n\t@test(candidate(5) == [2, 3])\n\
    \t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7) == [2, 3, 5])\n\t@test(candidate(10)\
    \ == [2, 3, 5, 7])\n\t@test(candidate(0) == Vector{Int64}([]))\n\t@test(candidate(22)\
    \ == [2, 3, 5, 7, 11, 13, 17, 19])\n\t@test(candidate(1) == Vector{Int64}([]))\n\
    \t@test(candidate(18) == [2, 3, 5, 7, 11, 13, 17])\n\t@test(candidate(47) == [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43])\n\t@test(candidate(101) ==\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjwi7ecy4.jl:33\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjwi7ecy4.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwi7ecy4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpjwi7ecy4.jl:35\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjwi7ecy4.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwi7ecy4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpjwi7ecy4.jl:41\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjwi7ecy4.jl:41\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwi7ecy4.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpjwi7ecy4.jl:42\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjwi7ecy4.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwi7ecy4.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjwi7ecy4.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu7xcykol.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu7xcykol.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu7xcykol.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu7xcykol.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu7xcykol.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu7xcykol.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu7xcykol.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu7xcykol.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu7xcykol.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpu7xcykol.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu7xcykol.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu7xcykol.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu7xcykol.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpueqgsxo7.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpueqgsxo7.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpueqgsxo7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpueqgsxo7.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpueqgsxo7.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpueqgsxo7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpueqgsxo7.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpueqgsxo7.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpueqgsxo7.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpueqgsxo7.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpueqgsxo7.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpueqgsxo7.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpueqgsxo7.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8lam4gev.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8lam4gev.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8lam4gev.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8lam4gev.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8lam4gev.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8lam4gev.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8lam4gev.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8lam4gev.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8lam4gev.jl:34\ntest set: Test\
    \ Failed at /tmp/tmp8lam4gev.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8lam4gev.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8lam4gev.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8lam4gev.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphvarjebe.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphvarjebe.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvarjebe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphvarjebe.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphvarjebe.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvarjebe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphvarjebe.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphvarjebe.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvarjebe.jl:34\ntest set: Test\
    \ Failed at /tmp/tmphvarjebe.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphvarjebe.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphvarjebe.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphvarjebe.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n    integers that are prime numbers and less than n.\n\
    \    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n\
    \    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1)\
    \ => []\n    count_up_to(18) => [2,3,5,7,11,13,17]\n    \"\"\"\nfunction count_up_to(n::Int64)::Vector{Int64}\
    \ \n    if n < 2\n        return []\n    end\n    primes = [2]\n    for i in 3:n\n\
    \        is_prime = true\n        for j in primes\n            if i % j == 0\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime\n            push!(primes, i)\n        end\n \
    \   end\n    return primes\nend\nusing Test\n\n@testset begin\n\ncandidate = count_up_to;\n\
    \t@test(candidate(5) == [2, 3])\n\t@test(candidate(6) == [2, 3, 5])\n\t@test(candidate(7)\
    \ == [2, 3, 5])\n\t@test(candidate(10) == [2, 3, 5, 7])\n\t@test(candidate(0)\
    \ == Vector{Int64}([]))\n\t@test(candidate(22) == [2, 3, 5, 7, 11, 13, 17, 19])\n\
    \t@test(candidate(1) == Vector{Int64}([]))\n\t@test(candidate(18) == [2, 3, 5,\
    \ 7, 11, 13, 17])\n\t@test(candidate(47) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43])\n\t@test(candidate(101) == [2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwpi_hqeu.jl:35\n  Expression: candidate(5)\
    \ == [2, 3]\n   Evaluated: [2, 3, 5] == [2, 3]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwpi_hqeu.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwpi_hqeu.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwpi_hqeu.jl:37\n  Expression: candidate(7) == [2, 3, 5]\n\
    \   Evaluated: [2, 3, 5, 7] == [2, 3, 5]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwpi_hqeu.jl:37 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwpi_hqeu.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwpi_hqeu.jl:43\n  Expression: candidate(47) == [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]\n   Evaluated: [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwpi_hqeu.jl:43\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwpi_hqeu.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpwpi_hqeu.jl:44\n  Expression: candidate(101) == [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n   Evaluated: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026  59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101] == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29  \u2026\
    \  53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwpi_hqeu.jl:44 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwpi_hqeu.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     4     10\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwpi_hqeu.jl:32\n"
  exit_code: 1
  status: SyntaxError

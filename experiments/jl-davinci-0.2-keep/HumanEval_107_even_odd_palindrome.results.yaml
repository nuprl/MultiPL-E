name: HumanEval_107_even_odd_palindrome
language: julia
results:
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp41_jkjcz.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp41_jkjcz.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp41_jkjcz.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp41_jkjcz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp41_jkjcz.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp41_jkjcz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp41_jkjcz.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp41_jkjcz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp41_jkjcz.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp41_jkjcz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp41_jkjcz.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp41_jkjcz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp41_jkjcz.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp41_jkjcz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp41_jkjcz.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp41_jkjcz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp41_jkjcz.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp41_jkjcz.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjd58_opi.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjd58_opi.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpjd58_opi.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjd58_opi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjd58_opi.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjd58_opi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjd58_opi.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjd58_opi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjd58_opi.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjd58_opi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjd58_opi.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjd58_opi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjd58_opi.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjd58_opi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjd58_opi.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjd58_opi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjd58_opi.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjd58_opi.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxohwst_k.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxohwst_k.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpxohwst_k.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxohwst_k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxohwst_k.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxohwst_k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxohwst_k.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxohwst_k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxohwst_k.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxohwst_k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxohwst_k.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxohwst_k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxohwst_k.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxohwst_k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxohwst_k.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxohwst_k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxohwst_k.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxohwst_k.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpi74ov_vm.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpi74ov_vm.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpi74ov_vm.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi74ov_vm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpi74ov_vm.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpi74ov_vm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpi74ov_vm.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi74ov_vm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpi74ov_vm.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpi74ov_vm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpi74ov_vm.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi74ov_vm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpi74ov_vm.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpi74ov_vm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpi74ov_vm.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi74ov_vm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpi74ov_vm.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi74ov_vm.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_zs5xq_p.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_zs5xq_p.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp_zs5xq_p.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_zs5xq_p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_zs5xq_p.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_zs5xq_p.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_zs5xq_p.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_zs5xq_p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_zs5xq_p.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_zs5xq_p.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_zs5xq_p.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_zs5xq_p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_zs5xq_p.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_zs5xq_p.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_zs5xq_p.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_zs5xq_p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_zs5xq_p.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_zs5xq_p.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i = 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm7itunbd.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpm7itunbd.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpm7itunbd.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm7itunbd.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpm7itunbd.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpm7itunbd.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpm7itunbd.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm7itunbd.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpm7itunbd.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpm7itunbd.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpm7itunbd.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm7itunbd.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpm7itunbd.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpm7itunbd.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpm7itunbd.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm7itunbd.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpm7itunbd.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm7itunbd.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp84w_bxed.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp84w_bxed.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp84w_bxed.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp84w_bxed.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp84w_bxed.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp84w_bxed.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp84w_bxed.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp84w_bxed.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp84w_bxed.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp84w_bxed.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp84w_bxed.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp84w_bxed.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp84w_bxed.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp84w_bxed.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp84w_bxed.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp84w_bxed.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp84w_bxed.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp84w_bxed.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmps0n10bwj.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps0n10bwj.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmps0n10bwj.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps0n10bwj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps0n10bwj.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps0n10bwj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps0n10bwj.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps0n10bwj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps0n10bwj.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps0n10bwj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps0n10bwj.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps0n10bwj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps0n10bwj.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps0n10bwj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps0n10bwj.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps0n10bwj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps0n10bwj.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps0n10bwj.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4rs9i5fm.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4rs9i5fm.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp4rs9i5fm.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4rs9i5fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4rs9i5fm.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4rs9i5fm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4rs9i5fm.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4rs9i5fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4rs9i5fm.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4rs9i5fm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4rs9i5fm.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4rs9i5fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4rs9i5fm.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4rs9i5fm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4rs9i5fm.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4rs9i5fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4rs9i5fm.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4rs9i5fm.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0xmi64ba.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0xmi64ba.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp0xmi64ba.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0xmi64ba.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0xmi64ba.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0xmi64ba.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0xmi64ba.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0xmi64ba.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0xmi64ba.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0xmi64ba.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0xmi64ba.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0xmi64ba.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0xmi64ba.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0xmi64ba.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0xmi64ba.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0xmi64ba.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0xmi64ba.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0xmi64ba.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpub3v_0t8.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpub3v_0t8.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpub3v_0t8.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpub3v_0t8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpub3v_0t8.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpub3v_0t8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpub3v_0t8.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpub3v_0t8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpub3v_0t8.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpub3v_0t8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpub3v_0t8.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpub3v_0t8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpub3v_0t8.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpub3v_0t8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpub3v_0t8.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpub3v_0t8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpub3v_0t8.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpub3v_0t8.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy5wggnzx.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy5wggnzx.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpy5wggnzx.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5wggnzx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy5wggnzx.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy5wggnzx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy5wggnzx.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5wggnzx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy5wggnzx.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy5wggnzx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy5wggnzx.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5wggnzx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy5wggnzx.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy5wggnzx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy5wggnzx.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5wggnzx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy5wggnzx.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy5wggnzx.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp835g_wq7.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp835g_wq7.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp835g_wq7.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp835g_wq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp835g_wq7.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp835g_wq7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp835g_wq7.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp835g_wq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp835g_wq7.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp835g_wq7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp835g_wq7.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp835g_wq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp835g_wq7.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp835g_wq7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp835g_wq7.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp835g_wq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp835g_wq7.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp835g_wq7.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    # get the number of digits\n    digits = floor(log10(n)) + 1\n\
    \    # initialize the number of even and odd palindromes\n    even_palindromes\
    \ = 0\n    odd_palindromes = 0\n    # loop through the digits\n    for i in 1:digits\n\
    \        # get the number of palindromes with i digits\n        num_palindromes\
    \ = 10^(i-1)\n        # get the number of even and odd palindromes with i digits\n\
    \        even_palindromes += num_palindromes\n        odd_palindromes += num_palindromes\n\
    \        # if the number of digits is odd, then we have to add the middle digit\n\
    \        if i % 2 == 1\n            odd_palindromes += 9\n        end\n    end\n\
    \    # return the number of even and odd palindromes\n    return even_palindromes,\
    \ odd_palindromes\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmqn2_vrn.jl:49\n  Expression: candidate(123)\
    \ == (8, 13)\n   Evaluated: (111, 129) == (8, 13)\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmqn2_vrn.jl:49 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmqn2_vrn.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpmqn2_vrn.jl:50\n  Expression: candidate(12) == (4, 6)\n  \
    \ Evaluated: (11, 20) == (4, 6)\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmqn2_vrn.jl:50\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmqn2_vrn.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpmqn2_vrn.jl:51\n  Expression: candidate(3) == (1, 2)\n   Evaluated:\
    \ (1, 10) == (1, 2)\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmqn2_vrn.jl:51\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmqn2_vrn.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpmqn2_vrn.jl:52\n  Expression: candidate(63) == (6, 8)\n  \
    \ Evaluated: (11, 20) == (6, 8)\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmqn2_vrn.jl:52\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmqn2_vrn.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpmqn2_vrn.jl:53\n  Expression: candidate(25) == (5, 6)\n  \
    \ Evaluated: (11, 20) == (5, 6)\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmqn2_vrn.jl:53\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmqn2_vrn.jl:48\ntest set: Test\
    \ Failed at /tmp/tmpmqn2_vrn.jl:54\n  Expression: candidate(19) == (4, 6)\n  \
    \ Evaluated: (11, 20) == (4, 6)\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmqn2_vrn.jl:54\
    \ [inlined]\n [2] macro expansion"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 8 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmqn2_vrn.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvzupn5oc.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvzupn5oc.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpvzupn5oc.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvzupn5oc.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvzupn5oc.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvzupn5oc.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvzupn5oc.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvzupn5oc.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvzupn5oc.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvzupn5oc.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvzupn5oc.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvzupn5oc.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvzupn5oc.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvzupn5oc.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvzupn5oc.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvzupn5oc.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvzupn5oc.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvzupn5oc.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2r5h9jeh.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2r5h9jeh.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp2r5h9jeh.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2r5h9jeh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2r5h9jeh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2r5h9jeh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2r5h9jeh.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2r5h9jeh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2r5h9jeh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2r5h9jeh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2r5h9jeh.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2r5h9jeh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2r5h9jeh.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2r5h9jeh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2r5h9jeh.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2r5h9jeh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2r5h9jeh.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2r5h9jeh.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk0tzvo8w.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk0tzvo8w.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpk0tzvo8w.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk0tzvo8w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk0tzvo8w.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk0tzvo8w.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk0tzvo8w.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk0tzvo8w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk0tzvo8w.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk0tzvo8w.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk0tzvo8w.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk0tzvo8w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk0tzvo8w.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk0tzvo8w.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk0tzvo8w.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk0tzvo8w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk0tzvo8w.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk0tzvo8w.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpivc8mcan.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpivc8mcan.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpivc8mcan.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpivc8mcan.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpivc8mcan.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpivc8mcan.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpivc8mcan.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpivc8mcan.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpivc8mcan.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpivc8mcan.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpivc8mcan.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpivc8mcan.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpivc8mcan.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpivc8mcan.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpivc8mcan.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpivc8mcan.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpivc8mcan.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpivc8mcan.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome_count = 0\n    odd_palindrome_count = 0\n    for\
    \ i in 1:n\n        if is_palindrome(i)\n            if i % 2 == 0\n         \
    \       even_palindrome_count += 1\n            else\n                odd_palindrome_count\
    \ += 1\n            end\n        end\n    end\n    return even_palindrome_count,\
    \ odd_palindrome_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfy5r87fm.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfy5r87fm.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpfy5r87fm.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfy5r87fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfy5r87fm.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfy5r87fm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfy5r87fm.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfy5r87fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfy5r87fm.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfy5r87fm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfy5r87fm.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfy5r87fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfy5r87fm.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfy5r87fm.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfy5r87fm.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfy5r87fm.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfy5r87fm.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfy5r87fm.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpuujflri3.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuujflri3.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpuujflri3.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuujflri3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuujflri3.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuujflri3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuujflri3.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuujflri3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuujflri3.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuujflri3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuujflri3.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuujflri3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuujflri3.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuujflri3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuujflri3.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuujflri3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuujflri3.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuujflri3.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpafi0ttuw.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpafi0ttuw.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpafi0ttuw.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpafi0ttuw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpafi0ttuw.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpafi0ttuw.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpafi0ttuw.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpafi0ttuw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpafi0ttuw.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpafi0ttuw.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpafi0ttuw.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpafi0ttuw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpafi0ttuw.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpafi0ttuw.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpafi0ttuw.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpafi0ttuw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpafi0ttuw.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpafi0ttuw.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3uebpdqt.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3uebpdqt.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp3uebpdqt.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3uebpdqt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3uebpdqt.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3uebpdqt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3uebpdqt.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3uebpdqt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3uebpdqt.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3uebpdqt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3uebpdqt.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3uebpdqt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3uebpdqt.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3uebpdqt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3uebpdqt.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3uebpdqt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3uebpdqt.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3uebpdqt.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpbxazp5np.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbxazp5np.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpbxazp5np.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbxazp5np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbxazp5np.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbxazp5np.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbxazp5np.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbxazp5np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbxazp5np.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbxazp5np.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbxazp5np.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbxazp5np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbxazp5np.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbxazp5np.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbxazp5np.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbxazp5np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbxazp5np.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbxazp5np.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if is_even(i)\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprc5ko49x.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprc5ko49x.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmprc5ko49x.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprc5ko49x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprc5ko49x.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprc5ko49x.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprc5ko49x.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprc5ko49x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprc5ko49x.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprc5ko49x.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprc5ko49x.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprc5ko49x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprc5ko49x.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprc5ko49x.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprc5ko49x.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprc5ko49x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprc5ko49x.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprc5ko49x.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp59hv9kq7.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp59hv9kq7.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp59hv9kq7.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59hv9kq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp59hv9kq7.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp59hv9kq7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp59hv9kq7.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59hv9kq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp59hv9kq7.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp59hv9kq7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp59hv9kq7.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59hv9kq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp59hv9kq7.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp59hv9kq7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp59hv9kq7.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59hv9kq7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp59hv9kq7.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59hv9kq7.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome_count = 0\n    odd_palindrome_count = 0\n    for\
    \ i in 1:n\n        if is_palindrome(i)\n            if is_even(i)\n         \
    \       even_palindrome_count += 1\n            else\n                odd_palindrome_count\
    \ += 1\n            end\n        end\n    end\n    return even_palindrome_count,\
    \ odd_palindrome_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxhkkxnat.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxhkkxnat.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpxhkkxnat.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxhkkxnat.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxhkkxnat.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxhkkxnat.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxhkkxnat.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxhkkxnat.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxhkkxnat.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxhkkxnat.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxhkkxnat.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxhkkxnat.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxhkkxnat.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxhkkxnat.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxhkkxnat.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxhkkxnat.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxhkkxnat.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxhkkxnat.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeuyemgwo.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpeuyemgwo.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpeuyemgwo.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeuyemgwo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpeuyemgwo.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpeuyemgwo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpeuyemgwo.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeuyemgwo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpeuyemgwo.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpeuyemgwo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpeuyemgwo.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeuyemgwo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpeuyemgwo.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpeuyemgwo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpeuyemgwo.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeuyemgwo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpeuyemgwo.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeuyemgwo.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0y1womw0.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y1womw0.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp0y1womw0.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y1womw0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y1womw0.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y1womw0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0y1womw0.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y1womw0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y1womw0.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y1womw0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0y1womw0.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y1womw0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y1womw0.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y1womw0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0y1womw0.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y1womw0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y1womw0.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0y1womw0.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even = 0\n    odd = 0\n    for i in 1:n\n        if ispalindrome(i)\n\
    \            if i % 2 == 0\n                even += 1\n            else\n    \
    \            odd += 1\n            end\n        end\n    end\n    return (even,\
    \ odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps7mzp9xv.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps7mzp9xv.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmps7mzp9xv.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps7mzp9xv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps7mzp9xv.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps7mzp9xv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps7mzp9xv.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps7mzp9xv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps7mzp9xv.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps7mzp9xv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps7mzp9xv.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps7mzp9xv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps7mzp9xv.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps7mzp9xv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps7mzp9xv.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps7mzp9xv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps7mzp9xv.jl:46\n  Test threw exception\n  Expr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7mzp9xv.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_qy2w3m4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_qy2w3m4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp_qy2w3m4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_qy2w3m4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_qy2w3m4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_qy2w3m4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_qy2w3m4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_qy2w3m4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_qy2w3m4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_qy2w3m4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_qy2w3m4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_qy2w3m4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_qy2w3m4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_qy2w3m4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_qy2w3m4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_qy2w3m4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_qy2w3m4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_qy2w3m4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i = 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp88j631e8.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp88j631e8.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp88j631e8.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp88j631e8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp88j631e8.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp88j631e8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp88j631e8.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp88j631e8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp88j631e8.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp88j631e8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp88j631e8.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp88j631e8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp88j631e8.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp88j631e8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp88j631e8.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp88j631e8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp88j631e8.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp88j631e8.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1q4t6xiz.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1q4t6xiz.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp1q4t6xiz.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1q4t6xiz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1q4t6xiz.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1q4t6xiz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1q4t6xiz.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1q4t6xiz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1q4t6xiz.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1q4t6xiz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1q4t6xiz.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1q4t6xiz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1q4t6xiz.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1q4t6xiz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1q4t6xiz.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1q4t6xiz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1q4t6xiz.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1q4t6xiz.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc6dd5qhz.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc6dd5qhz.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpc6dd5qhz.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc6dd5qhz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc6dd5qhz.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc6dd5qhz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpc6dd5qhz.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc6dd5qhz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc6dd5qhz.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc6dd5qhz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpc6dd5qhz.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc6dd5qhz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc6dd5qhz.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc6dd5qhz.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpc6dd5qhz.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc6dd5qhz.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc6dd5qhz.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc6dd5qhz.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpju37ifen.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpju37ifen.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpju37ifen.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpju37ifen.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpju37ifen.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpju37ifen.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpju37ifen.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpju37ifen.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpju37ifen.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpju37ifen.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpju37ifen.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpju37ifen.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpju37ifen.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpju37ifen.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpju37ifen.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpju37ifen.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpju37ifen.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpju37ifen.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpmp14vf8h.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmp14vf8h.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpmp14vf8h.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmp14vf8h.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmp14vf8h.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmp14vf8h.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmp14vf8h.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmp14vf8h.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmp14vf8h.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmp14vf8h.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmp14vf8h.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmp14vf8h.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmp14vf8h.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmp14vf8h.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmp14vf8h.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmp14vf8h.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmp14vf8h.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmp14vf8h.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome_count = 0\n    odd_palindrome_count = 0\n    for\
    \ i in 1:n\n        if is_palindrome(i)\n            if i % 2 == 0\n         \
    \       even_palindrome_count += 1\n            else\n                odd_palindrome_count\
    \ += 1\n            end\n        end\n    end\n    return even_palindrome_count,\
    \ odd_palindrome_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxllleat6.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxllleat6.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpxllleat6.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxllleat6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxllleat6.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxllleat6.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxllleat6.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxllleat6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxllleat6.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxllleat6.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxllleat6.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxllleat6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxllleat6.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxllleat6.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxllleat6.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxllleat6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxllleat6.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxllleat6.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzkjt5da5.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpzkjt5da5.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpzkjt5da5.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzkjt5da5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpzkjt5da5.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpzkjt5da5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpzkjt5da5.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzkjt5da5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpzkjt5da5.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpzkjt5da5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpzkjt5da5.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzkjt5da5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpzkjt5da5.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpzkjt5da5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpzkjt5da5.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzkjt5da5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpzkjt5da5.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzkjt5da5.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpawg3oe9j.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpawg3oe9j.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpawg3oe9j.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpawg3oe9j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpawg3oe9j.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpawg3oe9j.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpawg3oe9j.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpawg3oe9j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpawg3oe9j.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpawg3oe9j.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpawg3oe9j.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpawg3oe9j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpawg3oe9j.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpawg3oe9j.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpawg3oe9j.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpawg3oe9j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpawg3oe9j.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpawg3oe9j.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_y1my0np.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_y1my0np.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp_y1my0np.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_y1my0np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_y1my0np.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_y1my0np.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_y1my0np.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_y1my0np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_y1my0np.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_y1my0np.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_y1my0np.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_y1my0np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_y1my0np.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_y1my0np.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_y1my0np.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_y1my0np.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_y1my0np.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_y1my0np.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmple5twjiu.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmple5twjiu.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmple5twjiu.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmple5twjiu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmple5twjiu.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmple5twjiu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmple5twjiu.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmple5twjiu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmple5twjiu.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmple5twjiu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmple5twjiu.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmple5twjiu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmple5twjiu.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmple5twjiu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmple5twjiu.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmple5twjiu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmple5twjiu.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmple5twjiu.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if is_even(i)\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9c_1l5tn.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9c_1l5tn.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp9c_1l5tn.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9c_1l5tn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9c_1l5tn.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9c_1l5tn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9c_1l5tn.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9c_1l5tn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9c_1l5tn.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9c_1l5tn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9c_1l5tn.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9c_1l5tn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9c_1l5tn.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9c_1l5tn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9c_1l5tn.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9c_1l5tn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9c_1l5tn.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9c_1l5tn.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9yugdthi.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9yugdthi.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp9yugdthi.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9yugdthi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9yugdthi.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9yugdthi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9yugdthi.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9yugdthi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9yugdthi.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9yugdthi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9yugdthi.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9yugdthi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9yugdthi.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9yugdthi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9yugdthi.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9yugdthi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9yugdthi.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9yugdthi.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4dvsf21w.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4dvsf21w.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp4dvsf21w.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4dvsf21w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4dvsf21w.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4dvsf21w.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4dvsf21w.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4dvsf21w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4dvsf21w.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4dvsf21w.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4dvsf21w.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4dvsf21w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4dvsf21w.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4dvsf21w.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4dvsf21w.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4dvsf21w.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4dvsf21w.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4dvsf21w.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_iqaph21.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_iqaph21.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp_iqaph21.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_iqaph21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_iqaph21.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_iqaph21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_iqaph21.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_iqaph21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_iqaph21.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_iqaph21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_iqaph21.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_iqaph21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_iqaph21.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_iqaph21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_iqaph21.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_iqaph21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_iqaph21.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_iqaph21.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmxe36cfb.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmxe36cfb.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpmxe36cfb.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmxe36cfb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmxe36cfb.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmxe36cfb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmxe36cfb.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmxe36cfb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmxe36cfb.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmxe36cfb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmxe36cfb.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmxe36cfb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmxe36cfb.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmxe36cfb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmxe36cfb.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmxe36cfb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmxe36cfb.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmxe36cfb.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_d9e49o4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_d9e49o4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp_d9e49o4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_d9e49o4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_d9e49o4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_d9e49o4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_d9e49o4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_d9e49o4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_d9e49o4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_d9e49o4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_d9e49o4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_d9e49o4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_d9e49o4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_d9e49o4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_d9e49o4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_d9e49o4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_d9e49o4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_d9e49o4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome_count = 0\n    odd_palindrome_count = 0\n    for\
    \ i in 1:n\n        if is_palindrome(i)\n            if i % 2 == 0\n         \
    \       even_palindrome_count += 1\n            else\n                odd_palindrome_count\
    \ += 1\n            end\n        end\n    end\n    return even_palindrome_count,\
    \ odd_palindrome_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpei1fb9yu.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpei1fb9yu.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpei1fb9yu.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpei1fb9yu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpei1fb9yu.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpei1fb9yu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpei1fb9yu.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpei1fb9yu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpei1fb9yu.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpei1fb9yu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpei1fb9yu.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpei1fb9yu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpei1fb9yu.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpei1fb9yu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpei1fb9yu.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpei1fb9yu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpei1fb9yu.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpei1fb9yu.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp316aq0u9.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp316aq0u9.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp316aq0u9.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp316aq0u9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp316aq0u9.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp316aq0u9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp316aq0u9.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp316aq0u9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp316aq0u9.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp316aq0u9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp316aq0u9.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp316aq0u9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp316aq0u9.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp316aq0u9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp316aq0u9.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp316aq0u9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp316aq0u9.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp316aq0u9.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjxqpfh85.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjxqpfh85.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpjxqpfh85.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjxqpfh85.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjxqpfh85.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjxqpfh85.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjxqpfh85.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjxqpfh85.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjxqpfh85.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjxqpfh85.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjxqpfh85.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjxqpfh85.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjxqpfh85.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjxqpfh85.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjxqpfh85.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjxqpfh85.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjxqpfh85.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjxqpfh85.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5zyww7xt.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5zyww7xt.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp5zyww7xt.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5zyww7xt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5zyww7xt.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5zyww7xt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5zyww7xt.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5zyww7xt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5zyww7xt.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5zyww7xt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5zyww7xt.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5zyww7xt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5zyww7xt.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5zyww7xt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5zyww7xt.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5zyww7xt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5zyww7xt.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5zyww7xt.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8x7n2dvk.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8x7n2dvk.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp8x7n2dvk.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8x7n2dvk.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8x7n2dvk.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8x7n2dvk.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8x7n2dvk.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8x7n2dvk.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8x7n2dvk.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8x7n2dvk.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8x7n2dvk.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8x7n2dvk.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8x7n2dvk.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8x7n2dvk.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8x7n2dvk.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8x7n2dvk.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8x7n2dvk.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8x7n2dvk.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8txfd6rj.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8txfd6rj.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp8txfd6rj.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8txfd6rj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8txfd6rj.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8txfd6rj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8txfd6rj.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8txfd6rj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8txfd6rj.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8txfd6rj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8txfd6rj.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8txfd6rj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8txfd6rj.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8txfd6rj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8txfd6rj.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8txfd6rj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8txfd6rj.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8txfd6rj.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp2jmvg9am.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2jmvg9am.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp2jmvg9am.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2jmvg9am.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2jmvg9am.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2jmvg9am.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2jmvg9am.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2jmvg9am.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2jmvg9am.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2jmvg9am.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2jmvg9am.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2jmvg9am.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2jmvg9am.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2jmvg9am.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2jmvg9am.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2jmvg9am.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2jmvg9am.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2jmvg9am.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptmvjjllr.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptmvjjllr.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmptmvjjllr.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptmvjjllr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptmvjjllr.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptmvjjllr.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptmvjjllr.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptmvjjllr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptmvjjllr.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptmvjjllr.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptmvjjllr.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptmvjjllr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptmvjjllr.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptmvjjllr.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptmvjjllr.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptmvjjllr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptmvjjllr.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptmvjjllr.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmqbrxpcp.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmqbrxpcp.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpmqbrxpcp.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmqbrxpcp.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmqbrxpcp.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmqbrxpcp.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmqbrxpcp.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmqbrxpcp.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmqbrxpcp.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmqbrxpcp.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmqbrxpcp.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmqbrxpcp.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmqbrxpcp.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmqbrxpcp.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmqbrxpcp.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmqbrxpcp.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmqbrxpcp.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmqbrxpcp.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp7wt1zefx.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7wt1zefx.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp7wt1zefx.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7wt1zefx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7wt1zefx.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7wt1zefx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7wt1zefx.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7wt1zefx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7wt1zefx.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7wt1zefx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7wt1zefx.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7wt1zefx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7wt1zefx.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7wt1zefx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7wt1zefx.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7wt1zefx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7wt1zefx.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7wt1zefx.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnmnq7iww.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnmnq7iww.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpnmnq7iww.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnmnq7iww.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnmnq7iww.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnmnq7iww.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnmnq7iww.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnmnq7iww.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnmnq7iww.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnmnq7iww.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnmnq7iww.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnmnq7iww.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnmnq7iww.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnmnq7iww.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnmnq7iww.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnmnq7iww.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnmnq7iww.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmnq7iww.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1zokmm7j.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokmm7j.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp1zokmm7j.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokmm7j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokmm7j.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokmm7j.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1zokmm7j.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokmm7j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokmm7j.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokmm7j.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1zokmm7j.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokmm7j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokmm7j.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokmm7j.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1zokmm7j.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokmm7j.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokmm7j.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1zokmm7j.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6n5k630k.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6n5k630k.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp6n5k630k.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6n5k630k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6n5k630k.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6n5k630k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp6n5k630k.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6n5k630k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6n5k630k.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6n5k630k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp6n5k630k.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6n5k630k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6n5k630k.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6n5k630k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp6n5k630k.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6n5k630k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6n5k630k.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6n5k630k.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_xyr1yo_.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_xyr1yo_.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp_xyr1yo_.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_xyr1yo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_xyr1yo_.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_xyr1yo_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_xyr1yo_.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_xyr1yo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_xyr1yo_.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_xyr1yo_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_xyr1yo_.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_xyr1yo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_xyr1yo_.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_xyr1yo_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_xyr1yo_.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_xyr1yo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_xyr1yo_.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_xyr1yo_.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1ime5x_b.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1ime5x_b.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp1ime5x_b.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ime5x_b.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1ime5x_b.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1ime5x_b.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1ime5x_b.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ime5x_b.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1ime5x_b.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1ime5x_b.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1ime5x_b.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ime5x_b.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1ime5x_b.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1ime5x_b.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1ime5x_b.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1ime5x_b.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1ime5x_b.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ime5x_b.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpywdaruy9.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpywdaruy9.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpywdaruy9.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpywdaruy9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpywdaruy9.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpywdaruy9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpywdaruy9.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpywdaruy9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpywdaruy9.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpywdaruy9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpywdaruy9.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpywdaruy9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpywdaruy9.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpywdaruy9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpywdaruy9.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpywdaruy9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpywdaruy9.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpywdaruy9.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4vxyf5xb.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4vxyf5xb.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp4vxyf5xb.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4vxyf5xb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4vxyf5xb.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4vxyf5xb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4vxyf5xb.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4vxyf5xb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4vxyf5xb.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4vxyf5xb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4vxyf5xb.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4vxyf5xb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4vxyf5xb.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4vxyf5xb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4vxyf5xb.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4vxyf5xb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4vxyf5xb.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4vxyf5xb.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjz_s50ma.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjz_s50ma.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpjz_s50ma.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjz_s50ma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjz_s50ma.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjz_s50ma.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjz_s50ma.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjz_s50ma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjz_s50ma.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjz_s50ma.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjz_s50ma.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjz_s50ma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjz_s50ma.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjz_s50ma.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjz_s50ma.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjz_s50ma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjz_s50ma.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjz_s50ma.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpl9kitckv.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl9kitckv.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpl9kitckv.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl9kitckv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl9kitckv.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl9kitckv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl9kitckv.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl9kitckv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl9kitckv.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl9kitckv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl9kitckv.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl9kitckv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl9kitckv.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl9kitckv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl9kitckv.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl9kitckv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl9kitckv.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9kitckv.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpphpudad8.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpphpudad8.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpphpudad8.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpphpudad8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpphpudad8.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpphpudad8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpphpudad8.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpphpudad8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpphpudad8.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpphpudad8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpphpudad8.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpphpudad8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpphpudad8.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpphpudad8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpphpudad8.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpphpudad8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpphpudad8.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpphpudad8.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpkyw65zn2.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkyw65zn2.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpkyw65zn2.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkyw65zn2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkyw65zn2.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkyw65zn2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkyw65zn2.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkyw65zn2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkyw65zn2.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkyw65zn2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkyw65zn2.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkyw65zn2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkyw65zn2.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkyw65zn2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkyw65zn2.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkyw65zn2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkyw65zn2.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkyw65zn2.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplgmwujl9.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplgmwujl9.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmplgmwujl9.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplgmwujl9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplgmwujl9.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplgmwujl9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplgmwujl9.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplgmwujl9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplgmwujl9.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplgmwujl9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplgmwujl9.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplgmwujl9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplgmwujl9.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplgmwujl9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplgmwujl9.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplgmwujl9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplgmwujl9.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplgmwujl9.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphkz9b0dv.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmphkz9b0dv.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmphkz9b0dv.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphkz9b0dv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmphkz9b0dv.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmphkz9b0dv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmphkz9b0dv.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphkz9b0dv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmphkz9b0dv.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmphkz9b0dv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmphkz9b0dv.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphkz9b0dv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmphkz9b0dv.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmphkz9b0dv.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmphkz9b0dv.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphkz9b0dv.jl:41\ntest set:\
    \ Error During Test at /tmp/tmphkz9b0dv.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphkz9b0dv.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsizzl4fb.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpsizzl4fb.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpsizzl4fb.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpsizzl4fb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpsizzl4fb.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpsizzl4fb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpsizzl4fb.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpsizzl4fb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpsizzl4fb.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpsizzl4fb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpsizzl4fb.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpsizzl4fb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpsizzl4fb.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpsizzl4fb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpsizzl4fb.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpsizzl4fb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpsizzl4fb.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsizzl4fb.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmprn4hq0c4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprn4hq0c4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmprn4hq0c4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprn4hq0c4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprn4hq0c4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprn4hq0c4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprn4hq0c4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprn4hq0c4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprn4hq0c4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprn4hq0c4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprn4hq0c4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprn4hq0c4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprn4hq0c4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprn4hq0c4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprn4hq0c4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprn4hq0c4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprn4hq0c4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprn4hq0c4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy0zggovx.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy0zggovx.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpy0zggovx.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy0zggovx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy0zggovx.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy0zggovx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy0zggovx.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy0zggovx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy0zggovx.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy0zggovx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy0zggovx.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy0zggovx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy0zggovx.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy0zggovx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy0zggovx.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy0zggovx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy0zggovx.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy0zggovx.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpks1voacx.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpks1voacx.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpks1voacx.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpks1voacx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpks1voacx.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpks1voacx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpks1voacx.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpks1voacx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpks1voacx.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpks1voacx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpks1voacx.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpks1voacx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpks1voacx.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpks1voacx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpks1voacx.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpks1voacx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpks1voacx.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpks1voacx.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa7zxwlo4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa7zxwlo4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpa7zxwlo4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa7zxwlo4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa7zxwlo4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa7zxwlo4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpa7zxwlo4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa7zxwlo4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa7zxwlo4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa7zxwlo4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpa7zxwlo4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa7zxwlo4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa7zxwlo4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa7zxwlo4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpa7zxwlo4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa7zxwlo4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa7zxwlo4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa7zxwlo4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx15no7g3.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx15no7g3.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpx15no7g3.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx15no7g3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx15no7g3.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx15no7g3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpx15no7g3.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx15no7g3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx15no7g3.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx15no7g3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpx15no7g3.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx15no7g3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx15no7g3.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx15no7g3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpx15no7g3.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx15no7g3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx15no7g3.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx15no7g3.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb0ihbbre.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpb0ihbbre.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpb0ihbbre.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb0ihbbre.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpb0ihbbre.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpb0ihbbre.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpb0ihbbre.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb0ihbbre.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpb0ihbbre.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpb0ihbbre.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpb0ihbbre.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb0ihbbre.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpb0ihbbre.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpb0ihbbre.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpb0ihbbre.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb0ihbbre.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpb0ihbbre.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb0ihbbre.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjv5jy94q.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjv5jy94q.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpjv5jy94q.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjv5jy94q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjv5jy94q.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjv5jy94q.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjv5jy94q.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjv5jy94q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjv5jy94q.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjv5jy94q.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjv5jy94q.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjv5jy94q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjv5jy94q.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjv5jy94q.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjv5jy94q.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjv5jy94q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjv5jy94q.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjv5jy94q.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i = 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpvq3llyuy.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvq3llyuy.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpvq3llyuy.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvq3llyuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvq3llyuy.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvq3llyuy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvq3llyuy.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvq3llyuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvq3llyuy.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvq3llyuy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvq3llyuy.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvq3llyuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvq3llyuy.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvq3llyuy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvq3llyuy.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvq3llyuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvq3llyuy.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvq3llyuy.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                even_count += 1\n            else\n\
    \                odd_count += 1\n            end\n        end\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp54pyks6x.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp54pyks6x.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmp54pyks6x.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp54pyks6x.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp54pyks6x.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp54pyks6x.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmp54pyks6x.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp54pyks6x.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp54pyks6x.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp54pyks6x.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmp54pyks6x.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp54pyks6x.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp54pyks6x.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp54pyks6x.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmp54pyks6x.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp54pyks6x.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp54pyks6x.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp54pyks6x.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgetob1hn.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgetob1hn.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpgetob1hn.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgetob1hn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgetob1hn.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgetob1hn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpgetob1hn.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgetob1hn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgetob1hn.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgetob1hn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpgetob1hn.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgetob1hn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgetob1hn.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgetob1hn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpgetob1hn.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgetob1hn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgetob1hn.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgetob1hn.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptphzb5ef.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptphzb5ef.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmptphzb5ef.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptphzb5ef.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptphzb5ef.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptphzb5ef.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptphzb5ef.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptphzb5ef.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptphzb5ef.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptphzb5ef.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptphzb5ef.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptphzb5ef.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptphzb5ef.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptphzb5ef.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptphzb5ef.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptphzb5ef.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptphzb5ef.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptphzb5ef.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkcmgts04.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkcmgts04.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpkcmgts04.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkcmgts04.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkcmgts04.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkcmgts04.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkcmgts04.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkcmgts04.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkcmgts04.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkcmgts04.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkcmgts04.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkcmgts04.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkcmgts04.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkcmgts04.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkcmgts04.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkcmgts04.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkcmgts04.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkcmgts04.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc1ub5omx.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc1ub5omx.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpc1ub5omx.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc1ub5omx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc1ub5omx.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc1ub5omx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpc1ub5omx.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc1ub5omx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc1ub5omx.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc1ub5omx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpc1ub5omx.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc1ub5omx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc1ub5omx.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpc1ub5omx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpc1ub5omx.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc1ub5omx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpc1ub5omx.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc1ub5omx.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdmc1imaq.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdmc1imaq.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpdmc1imaq.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdmc1imaq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdmc1imaq.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdmc1imaq.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdmc1imaq.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdmc1imaq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdmc1imaq.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdmc1imaq.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdmc1imaq.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdmc1imaq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdmc1imaq.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdmc1imaq.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdmc1imaq.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdmc1imaq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdmc1imaq.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdmc1imaq.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz2q34yuo.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpz2q34yuo.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpz2q34yuo.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpz2q34yuo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpz2q34yuo.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpz2q34yuo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpz2q34yuo.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpz2q34yuo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpz2q34yuo.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpz2q34yuo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpz2q34yuo.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpz2q34yuo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpz2q34yuo.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpz2q34yuo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpz2q34yuo.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpz2q34yuo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpz2q34yuo.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz2q34yuo.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfgbnv77v.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfgbnv77v.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpfgbnv77v.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfgbnv77v.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfgbnv77v.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfgbnv77v.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfgbnv77v.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfgbnv77v.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfgbnv77v.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfgbnv77v.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfgbnv77v.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfgbnv77v.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfgbnv77v.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfgbnv77v.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfgbnv77v.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfgbnv77v.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfgbnv77v.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfgbnv77v.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmcvd1o31.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmcvd1o31.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpmcvd1o31.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmcvd1o31.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmcvd1o31.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmcvd1o31.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmcvd1o31.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmcvd1o31.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmcvd1o31.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmcvd1o31.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmcvd1o31.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmcvd1o31.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmcvd1o31.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmcvd1o31.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmcvd1o31.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmcvd1o31.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmcvd1o31.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmcvd1o31.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5ih79eyy.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5ih79eyy.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp5ih79eyy.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5ih79eyy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5ih79eyy.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5ih79eyy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5ih79eyy.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5ih79eyy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5ih79eyy.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5ih79eyy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5ih79eyy.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5ih79eyy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5ih79eyy.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5ih79eyy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5ih79eyy.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5ih79eyy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5ih79eyy.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ih79eyy.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnhgnzylo.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnhgnzylo.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpnhgnzylo.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnhgnzylo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnhgnzylo.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnhgnzylo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnhgnzylo.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnhgnzylo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnhgnzylo.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnhgnzylo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnhgnzylo.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnhgnzylo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnhgnzylo.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnhgnzylo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnhgnzylo.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnhgnzylo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnhgnzylo.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnhgnzylo.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3y4hy9bt.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3y4hy9bt.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp3y4hy9bt.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3y4hy9bt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3y4hy9bt.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3y4hy9bt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3y4hy9bt.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3y4hy9bt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3y4hy9bt.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3y4hy9bt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3y4hy9bt.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3y4hy9bt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3y4hy9bt.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3y4hy9bt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3y4hy9bt.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3y4hy9bt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3y4hy9bt.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3y4hy9bt.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl462u_9l.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl462u_9l.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpl462u_9l.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl462u_9l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl462u_9l.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl462u_9l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl462u_9l.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl462u_9l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl462u_9l.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl462u_9l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl462u_9l.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl462u_9l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl462u_9l.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl462u_9l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl462u_9l.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl462u_9l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl462u_9l.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl462u_9l.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2z1okjp6.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2z1okjp6.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp2z1okjp6.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2z1okjp6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2z1okjp6.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2z1okjp6.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2z1okjp6.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2z1okjp6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2z1okjp6.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2z1okjp6.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2z1okjp6.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2z1okjp6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2z1okjp6.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2z1okjp6.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2z1okjp6.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2z1okjp6.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2z1okjp6.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2z1okjp6.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplpcl0xo7.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplpcl0xo7.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmplpcl0xo7.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplpcl0xo7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplpcl0xo7.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplpcl0xo7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplpcl0xo7.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplpcl0xo7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplpcl0xo7.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplpcl0xo7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplpcl0xo7.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplpcl0xo7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplpcl0xo7.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplpcl0xo7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplpcl0xo7.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplpcl0xo7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplpcl0xo7.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplpcl0xo7.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if is_even(i)\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcl09zabs.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpcl09zabs.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpcl09zabs.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcl09zabs.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpcl09zabs.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpcl09zabs.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpcl09zabs.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcl09zabs.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpcl09zabs.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpcl09zabs.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpcl09zabs.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcl09zabs.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpcl09zabs.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpcl09zabs.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpcl09zabs.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcl09zabs.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpcl09zabs.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcl09zabs.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9mzohups.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9mzohups.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp9mzohups.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9mzohups.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9mzohups.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9mzohups.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9mzohups.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9mzohups.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9mzohups.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9mzohups.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9mzohups.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9mzohups.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9mzohups.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9mzohups.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9mzohups.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9mzohups.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9mzohups.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9mzohups.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5sjcqr_f.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5sjcqr_f.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp5sjcqr_f.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5sjcqr_f.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5sjcqr_f.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5sjcqr_f.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5sjcqr_f.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5sjcqr_f.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5sjcqr_f.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5sjcqr_f.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5sjcqr_f.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5sjcqr_f.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5sjcqr_f.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5sjcqr_f.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5sjcqr_f.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5sjcqr_f.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5sjcqr_f.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5sjcqr_f.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd6h9pa6i.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd6h9pa6i.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpd6h9pa6i.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd6h9pa6i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd6h9pa6i.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd6h9pa6i.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpd6h9pa6i.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd6h9pa6i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd6h9pa6i.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd6h9pa6i.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpd6h9pa6i.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd6h9pa6i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd6h9pa6i.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd6h9pa6i.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpd6h9pa6i.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd6h9pa6i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd6h9pa6i.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd6h9pa6i.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprf9mpi8p.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprf9mpi8p.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmprf9mpi8p.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprf9mpi8p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprf9mpi8p.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprf9mpi8p.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprf9mpi8p.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprf9mpi8p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprf9mpi8p.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprf9mpi8p.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprf9mpi8p.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprf9mpi8p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprf9mpi8p.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprf9mpi8p.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprf9mpi8p.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprf9mpi8p.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprf9mpi8p.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprf9mpi8p.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps4dwnka9.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps4dwnka9.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmps4dwnka9.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps4dwnka9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps4dwnka9.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps4dwnka9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps4dwnka9.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps4dwnka9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps4dwnka9.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps4dwnka9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps4dwnka9.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps4dwnka9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps4dwnka9.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmps4dwnka9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmps4dwnka9.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps4dwnka9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmps4dwnka9.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4dwnka9.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph7pp6vxt.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph7pp6vxt.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmph7pp6vxt.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph7pp6vxt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmph7pp6vxt.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph7pp6vxt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmph7pp6vxt.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph7pp6vxt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmph7pp6vxt.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph7pp6vxt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmph7pp6vxt.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph7pp6vxt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmph7pp6vxt.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph7pp6vxt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmph7pp6vxt.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph7pp6vxt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmph7pp6vxt.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7pp6vxt.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                even_count += 1\n            else\n\
    \                odd_count += 1\n            end\n        end\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjq2wtday.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjq2wtday.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmpjq2wtday.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjq2wtday.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjq2wtday.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjq2wtday.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjq2wtday.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjq2wtday.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjq2wtday.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjq2wtday.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjq2wtday.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjq2wtday.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjq2wtday.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjq2wtday.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjq2wtday.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjq2wtday.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjq2wtday.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjq2wtday.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp87hrpn73.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp87hrpn73.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp87hrpn73.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp87hrpn73.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp87hrpn73.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp87hrpn73.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp87hrpn73.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp87hrpn73.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp87hrpn73.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp87hrpn73.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp87hrpn73.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp87hrpn73.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp87hrpn73.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp87hrpn73.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp87hrpn73.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp87hrpn73.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp87hrpn73.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87hrpn73.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx3wt25x7.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx3wt25x7.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpx3wt25x7.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx3wt25x7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx3wt25x7.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx3wt25x7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpx3wt25x7.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx3wt25x7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx3wt25x7.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx3wt25x7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpx3wt25x7.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx3wt25x7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx3wt25x7.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpx3wt25x7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpx3wt25x7.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx3wt25x7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpx3wt25x7.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx3wt25x7.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ijrq0in.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4ijrq0in.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp4ijrq0in.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4ijrq0in.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4ijrq0in.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4ijrq0in.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4ijrq0in.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4ijrq0in.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4ijrq0in.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4ijrq0in.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4ijrq0in.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4ijrq0in.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4ijrq0in.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4ijrq0in.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4ijrq0in.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4ijrq0in.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4ijrq0in.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ijrq0in.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if is_even(i)\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmkqvtsgh.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmkqvtsgh.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpmkqvtsgh.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmkqvtsgh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmkqvtsgh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmkqvtsgh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmkqvtsgh.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmkqvtsgh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmkqvtsgh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmkqvtsgh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmkqvtsgh.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmkqvtsgh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmkqvtsgh.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpmkqvtsgh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpmkqvtsgh.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmkqvtsgh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpmkqvtsgh.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmkqvtsgh.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpue2iuwq4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpue2iuwq4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpue2iuwq4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpue2iuwq4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpue2iuwq4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpue2iuwq4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpue2iuwq4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpue2iuwq4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpue2iuwq4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpue2iuwq4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpue2iuwq4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpue2iuwq4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpue2iuwq4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpue2iuwq4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpue2iuwq4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpue2iuwq4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpue2iuwq4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpue2iuwq4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpobgv08m0.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpobgv08m0.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpobgv08m0.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpobgv08m0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpobgv08m0.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpobgv08m0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpobgv08m0.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpobgv08m0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpobgv08m0.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpobgv08m0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpobgv08m0.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpobgv08m0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpobgv08m0.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpobgv08m0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpobgv08m0.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpobgv08m0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpobgv08m0.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpobgv08m0.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1quzbw1m.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1quzbw1m.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp1quzbw1m.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1quzbw1m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1quzbw1m.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1quzbw1m.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1quzbw1m.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1quzbw1m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1quzbw1m.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1quzbw1m.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1quzbw1m.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1quzbw1m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1quzbw1m.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1quzbw1m.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1quzbw1m.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1quzbw1m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1quzbw1m.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1quzbw1m.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk1uojxi9.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk1uojxi9.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpk1uojxi9.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk1uojxi9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk1uojxi9.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk1uojxi9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk1uojxi9.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk1uojxi9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk1uojxi9.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk1uojxi9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk1uojxi9.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk1uojxi9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk1uojxi9.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk1uojxi9.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk1uojxi9.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk1uojxi9.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk1uojxi9.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk1uojxi9.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp9pustuic.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9pustuic.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp9pustuic.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9pustuic.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9pustuic.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9pustuic.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9pustuic.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9pustuic.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9pustuic.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9pustuic.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9pustuic.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9pustuic.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9pustuic.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9pustuic.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9pustuic.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9pustuic.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9pustuic.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9pustuic.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp8u9f8gnh.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8u9f8gnh.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp8u9f8gnh.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8u9f8gnh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8u9f8gnh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8u9f8gnh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8u9f8gnh.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8u9f8gnh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8u9f8gnh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8u9f8gnh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8u9f8gnh.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8u9f8gnh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8u9f8gnh.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8u9f8gnh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8u9f8gnh.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8u9f8gnh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8u9f8gnh.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8u9f8gnh.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7l85onjn.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7l85onjn.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp7l85onjn.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7l85onjn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7l85onjn.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7l85onjn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7l85onjn.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7l85onjn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7l85onjn.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7l85onjn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7l85onjn.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7l85onjn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7l85onjn.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7l85onjn.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7l85onjn.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7l85onjn.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7l85onjn.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7l85onjn.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpew518ktx.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpew518ktx.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpew518ktx.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpew518ktx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpew518ktx.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpew518ktx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpew518ktx.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpew518ktx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpew518ktx.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpew518ktx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpew518ktx.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpew518ktx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpew518ktx.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpew518ktx.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpew518ktx.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpew518ktx.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpew518ktx.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpew518ktx.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5djcfv21.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5djcfv21.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp5djcfv21.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5djcfv21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5djcfv21.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5djcfv21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5djcfv21.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5djcfv21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5djcfv21.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5djcfv21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5djcfv21.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5djcfv21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5djcfv21.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5djcfv21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5djcfv21.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5djcfv21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5djcfv21.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5djcfv21.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw55zs69u.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw55zs69u.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpw55zs69u.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw55zs69u.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw55zs69u.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw55zs69u.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpw55zs69u.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw55zs69u.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw55zs69u.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw55zs69u.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpw55zs69u.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw55zs69u.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw55zs69u.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw55zs69u.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpw55zs69u.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw55zs69u.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw55zs69u.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw55zs69u.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2eake2zu.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2eake2zu.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp2eake2zu.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2eake2zu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2eake2zu.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2eake2zu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2eake2zu.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2eake2zu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2eake2zu.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2eake2zu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2eake2zu.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2eake2zu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2eake2zu.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2eake2zu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2eake2zu.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2eake2zu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2eake2zu.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2eake2zu.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6d1t7lk1.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6d1t7lk1.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp6d1t7lk1.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6d1t7lk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6d1t7lk1.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6d1t7lk1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp6d1t7lk1.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6d1t7lk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6d1t7lk1.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6d1t7lk1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp6d1t7lk1.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6d1t7lk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6d1t7lk1.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp6d1t7lk1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp6d1t7lk1.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6d1t7lk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp6d1t7lk1.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6d1t7lk1.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwnip8l_c.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwnip8l_c.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpwnip8l_c.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwnip8l_c.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwnip8l_c.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwnip8l_c.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwnip8l_c.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwnip8l_c.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwnip8l_c.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwnip8l_c.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwnip8l_c.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwnip8l_c.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwnip8l_c.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwnip8l_c.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwnip8l_c.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwnip8l_c.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwnip8l_c.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwnip8l_c.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5jrfp2ft.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5jrfp2ft.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp5jrfp2ft.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5jrfp2ft.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5jrfp2ft.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5jrfp2ft.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5jrfp2ft.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5jrfp2ft.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5jrfp2ft.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5jrfp2ft.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5jrfp2ft.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5jrfp2ft.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5jrfp2ft.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5jrfp2ft.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5jrfp2ft.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5jrfp2ft.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5jrfp2ft.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5jrfp2ft.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg644m4ta.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg644m4ta.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpg644m4ta.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg644m4ta.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg644m4ta.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg644m4ta.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpg644m4ta.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg644m4ta.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg644m4ta.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg644m4ta.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpg644m4ta.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg644m4ta.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg644m4ta.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg644m4ta.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpg644m4ta.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg644m4ta.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg644m4ta.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg644m4ta.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0o8scwfw.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0o8scwfw.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp0o8scwfw.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0o8scwfw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0o8scwfw.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0o8scwfw.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0o8scwfw.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0o8scwfw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0o8scwfw.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0o8scwfw.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0o8scwfw.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0o8scwfw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0o8scwfw.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0o8scwfw.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0o8scwfw.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0o8scwfw.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0o8scwfw.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0o8scwfw.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp180tyshj.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp180tyshj.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp180tyshj.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp180tyshj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp180tyshj.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp180tyshj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp180tyshj.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp180tyshj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp180tyshj.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp180tyshj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp180tyshj.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp180tyshj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp180tyshj.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp180tyshj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp180tyshj.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp180tyshj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp180tyshj.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp180tyshj.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                even += 1\n            else\n    \
    \            odd += 1\n            end\n        end\n    end\n    return even,\
    \ odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpahwsv1fp.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpahwsv1fp.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmpahwsv1fp.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpahwsv1fp.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpahwsv1fp.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpahwsv1fp.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpahwsv1fp.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpahwsv1fp.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpahwsv1fp.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpahwsv1fp.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpahwsv1fp.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpahwsv1fp.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpahwsv1fp.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpahwsv1fp.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpahwsv1fp.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpahwsv1fp.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpahwsv1fp.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahwsv1fp.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpw514qtgb.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw514qtgb.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpw514qtgb.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw514qtgb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw514qtgb.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw514qtgb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpw514qtgb.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw514qtgb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw514qtgb.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw514qtgb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpw514qtgb.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw514qtgb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw514qtgb.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpw514qtgb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpw514qtgb.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw514qtgb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpw514qtgb.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw514qtgb.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp44jmcko2.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp44jmcko2.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp44jmcko2.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp44jmcko2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp44jmcko2.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp44jmcko2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp44jmcko2.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp44jmcko2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp44jmcko2.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp44jmcko2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp44jmcko2.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp44jmcko2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp44jmcko2.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp44jmcko2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp44jmcko2.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp44jmcko2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp44jmcko2.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp44jmcko2.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp436_3of.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpp436_3of.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpp436_3of.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpp436_3of.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpp436_3of.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpp436_3of.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpp436_3of.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpp436_3of.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpp436_3of.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpp436_3of.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpp436_3of.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpp436_3of.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpp436_3of.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpp436_3of.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpp436_3of.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpp436_3of.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpp436_3of.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp436_3of.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvxd1zc20.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvxd1zc20.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpvxd1zc20.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxd1zc20.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvxd1zc20.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvxd1zc20.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvxd1zc20.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxd1zc20.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvxd1zc20.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvxd1zc20.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvxd1zc20.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxd1zc20.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvxd1zc20.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvxd1zc20.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvxd1zc20.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvxd1zc20.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvxd1zc20.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvxd1zc20.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd3e66g8q.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd3e66g8q.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpd3e66g8q.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd3e66g8q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd3e66g8q.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd3e66g8q.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpd3e66g8q.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd3e66g8q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd3e66g8q.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd3e66g8q.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpd3e66g8q.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd3e66g8q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd3e66g8q.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpd3e66g8q.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpd3e66g8q.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd3e66g8q.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpd3e66g8q.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd3e66g8q.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9qbmblav.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9qbmblav.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp9qbmblav.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9qbmblav.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9qbmblav.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9qbmblav.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9qbmblav.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9qbmblav.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9qbmblav.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9qbmblav.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9qbmblav.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9qbmblav.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9qbmblav.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9qbmblav.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9qbmblav.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9qbmblav.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9qbmblav.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9qbmblav.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                even_count += 1\n            else\n\
    \                odd_count += 1\n            end\n        end\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmph5gv5tln.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph5gv5tln.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmph5gv5tln.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph5gv5tln.jl:40\ntest set:\
    \ Error During Test at /tmp/tmph5gv5tln.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph5gv5tln.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmph5gv5tln.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph5gv5tln.jl:40\ntest set:\
    \ Error During Test at /tmp/tmph5gv5tln.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph5gv5tln.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmph5gv5tln.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph5gv5tln.jl:40\ntest set:\
    \ Error During Test at /tmp/tmph5gv5tln.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmph5gv5tln.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmph5gv5tln.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph5gv5tln.jl:40\ntest set:\
    \ Error During Test at /tmp/tmph5gv5tln.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph5gv5tln.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl90mdr47.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl90mdr47.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpl90mdr47.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl90mdr47.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl90mdr47.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl90mdr47.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl90mdr47.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl90mdr47.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl90mdr47.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl90mdr47.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl90mdr47.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl90mdr47.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl90mdr47.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpl90mdr47.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpl90mdr47.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl90mdr47.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpl90mdr47.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl90mdr47.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaxo62fo_.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpaxo62fo_.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpaxo62fo_.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaxo62fo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpaxo62fo_.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpaxo62fo_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpaxo62fo_.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaxo62fo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpaxo62fo_.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpaxo62fo_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpaxo62fo_.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaxo62fo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpaxo62fo_.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpaxo62fo_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpaxo62fo_.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaxo62fo_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpaxo62fo_.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaxo62fo_.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt143ygsy.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpt143ygsy.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpt143ygsy.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt143ygsy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpt143ygsy.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpt143ygsy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpt143ygsy.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt143ygsy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpt143ygsy.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpt143ygsy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpt143ygsy.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt143ygsy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpt143ygsy.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpt143ygsy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpt143ygsy.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt143ygsy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpt143ygsy.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt143ygsy.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxt79x6j2.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxt79x6j2.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpxt79x6j2.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxt79x6j2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxt79x6j2.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxt79x6j2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxt79x6j2.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxt79x6j2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxt79x6j2.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxt79x6j2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxt79x6j2.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxt79x6j2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxt79x6j2.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxt79x6j2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxt79x6j2.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxt79x6j2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxt79x6j2.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxt79x6j2.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa1de7kwh.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa1de7kwh.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpa1de7kwh.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa1de7kwh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa1de7kwh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa1de7kwh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpa1de7kwh.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa1de7kwh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa1de7kwh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa1de7kwh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpa1de7kwh.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa1de7kwh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa1de7kwh.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpa1de7kwh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpa1de7kwh.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa1de7kwh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpa1de7kwh.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa1de7kwh.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe5hpdxbh.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpe5hpdxbh.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpe5hpdxbh.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe5hpdxbh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpe5hpdxbh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpe5hpdxbh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpe5hpdxbh.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe5hpdxbh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpe5hpdxbh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpe5hpdxbh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpe5hpdxbh.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe5hpdxbh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpe5hpdxbh.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpe5hpdxbh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpe5hpdxbh.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe5hpdxbh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpe5hpdxbh.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5hpdxbh.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbh1cy7uj.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbh1cy7uj.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpbh1cy7uj.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbh1cy7uj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbh1cy7uj.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbh1cy7uj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbh1cy7uj.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbh1cy7uj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbh1cy7uj.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbh1cy7uj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbh1cy7uj.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbh1cy7uj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbh1cy7uj.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbh1cy7uj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbh1cy7uj.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbh1cy7uj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbh1cy7uj.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbh1cy7uj.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnqqdktp2.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnqqdktp2.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpnqqdktp2.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnqqdktp2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnqqdktp2.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnqqdktp2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnqqdktp2.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnqqdktp2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnqqdktp2.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnqqdktp2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnqqdktp2.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnqqdktp2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnqqdktp2.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnqqdktp2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnqqdktp2.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnqqdktp2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnqqdktp2.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqqdktp2.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg1hek1je.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg1hek1je.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpg1hek1je.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg1hek1je.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg1hek1je.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg1hek1je.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpg1hek1je.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg1hek1je.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg1hek1je.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg1hek1je.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpg1hek1je.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg1hek1je.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg1hek1je.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpg1hek1je.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpg1hek1je.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg1hek1je.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpg1hek1je.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg1hek1je.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9d24k429.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9d24k429.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp9d24k429.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9d24k429.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9d24k429.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9d24k429.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9d24k429.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9d24k429.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9d24k429.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9d24k429.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9d24k429.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9d24k429.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9d24k429.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9d24k429.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9d24k429.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9d24k429.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9d24k429.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d24k429.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp34z806g2.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp34z806g2.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp34z806g2.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp34z806g2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp34z806g2.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp34z806g2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp34z806g2.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp34z806g2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp34z806g2.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp34z806g2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp34z806g2.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp34z806g2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp34z806g2.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp34z806g2.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp34z806g2.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp34z806g2.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp34z806g2.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp34z806g2.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2_kkj2i_.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2_kkj2i_.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp2_kkj2i_.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_kkj2i_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2_kkj2i_.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2_kkj2i_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2_kkj2i_.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_kkj2i_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2_kkj2i_.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2_kkj2i_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2_kkj2i_.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_kkj2i_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2_kkj2i_.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2_kkj2i_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2_kkj2i_.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2_kkj2i_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2_kkj2i_.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_kkj2i_.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxs_xitb4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxs_xitb4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpxs_xitb4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxs_xitb4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxs_xitb4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxs_xitb4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxs_xitb4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxs_xitb4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxs_xitb4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxs_xitb4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxs_xitb4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxs_xitb4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxs_xitb4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxs_xitb4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxs_xitb4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxs_xitb4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxs_xitb4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxs_xitb4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbuk4vfox.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbuk4vfox.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpbuk4vfox.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbuk4vfox.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbuk4vfox.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbuk4vfox.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbuk4vfox.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbuk4vfox.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbuk4vfox.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbuk4vfox.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbuk4vfox.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbuk4vfox.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbuk4vfox.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbuk4vfox.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbuk4vfox.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbuk4vfox.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbuk4vfox.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbuk4vfox.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome_count = 0\n    odd_palindrome_count = 0\n    for\
    \ i in 1:n\n        if is_palindrome(i)\n            if i % 2 == 0\n         \
    \       even_palindrome_count += 1\n            else\n                odd_palindrome_count\
    \ += 1\n            end\n        end\n    end\n    return even_palindrome_count,\
    \ odd_palindrome_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwr5nfpkj.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwr5nfpkj.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpwr5nfpkj.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwr5nfpkj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwr5nfpkj.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwr5nfpkj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwr5nfpkj.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwr5nfpkj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwr5nfpkj.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwr5nfpkj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwr5nfpkj.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwr5nfpkj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwr5nfpkj.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwr5nfpkj.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwr5nfpkj.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwr5nfpkj.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwr5nfpkj.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwr5nfpkj.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpui467w44.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpui467w44.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpui467w44.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpui467w44.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpui467w44.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpui467w44.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpui467w44.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpui467w44.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpui467w44.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpui467w44.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpui467w44.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpui467w44.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpui467w44.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpui467w44.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpui467w44.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpui467w44.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpui467w44.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpui467w44.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprutyzbgr.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprutyzbgr.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmprutyzbgr.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprutyzbgr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprutyzbgr.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprutyzbgr.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprutyzbgr.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprutyzbgr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprutyzbgr.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprutyzbgr.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprutyzbgr.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprutyzbgr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprutyzbgr.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprutyzbgr.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprutyzbgr.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprutyzbgr.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprutyzbgr.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprutyzbgr.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if is_even(i)\n                even_count += 1\n            else\n\
    \                odd_count += 1\n            end\n        end\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3313x79e.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3313x79e.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmp3313x79e.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3313x79e.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp3313x79e.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3313x79e.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3313x79e.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3313x79e.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp3313x79e.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3313x79e.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3313x79e.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3313x79e.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp3313x79e.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3313x79e.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3313x79e.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3313x79e.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp3313x79e.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3313x79e.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpox2zp2v4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpox2zp2v4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpox2zp2v4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpox2zp2v4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpox2zp2v4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpox2zp2v4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpox2zp2v4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpox2zp2v4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpox2zp2v4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpox2zp2v4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpox2zp2v4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpox2zp2v4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpox2zp2v4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpox2zp2v4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpox2zp2v4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpox2zp2v4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpox2zp2v4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpox2zp2v4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even, odd = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                even += 1\n            else\n    \
    \            odd += 1\n            end\n        end\n    end\n    return even,\
    \ odd\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqavgkj9b.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpqavgkj9b.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmpqavgkj9b.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqavgkj9b.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpqavgkj9b.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpqavgkj9b.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpqavgkj9b.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqavgkj9b.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpqavgkj9b.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpqavgkj9b.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpqavgkj9b.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqavgkj9b.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpqavgkj9b.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpqavgkj9b.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpqavgkj9b.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqavgkj9b.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpqavgkj9b.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqavgkj9b.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplt6zy0ly.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplt6zy0ly.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmplt6zy0ly.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplt6zy0ly.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplt6zy0ly.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplt6zy0ly.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplt6zy0ly.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplt6zy0ly.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplt6zy0ly.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplt6zy0ly.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplt6zy0ly.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplt6zy0ly.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplt6zy0ly.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmplt6zy0ly.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmplt6zy0ly.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplt6zy0ly.jl:41\ntest set:\
    \ Error During Test at /tmp/tmplt6zy0ly.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplt6zy0ly.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpievej85a.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpievej85a.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpievej85a.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpievej85a.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpievej85a.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpievej85a.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpievej85a.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpievej85a.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpievej85a.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpievej85a.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpievej85a.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpievej85a.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpievej85a.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpievej85a.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpievej85a.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpievej85a.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpievej85a.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpievej85a.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3445qbml.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3445qbml.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp3445qbml.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3445qbml.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3445qbml.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3445qbml.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3445qbml.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3445qbml.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3445qbml.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3445qbml.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3445qbml.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3445qbml.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3445qbml.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3445qbml.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3445qbml.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3445qbml.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3445qbml.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3445qbml.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3ofy3sr5.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3ofy3sr5.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp3ofy3sr5.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3ofy3sr5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3ofy3sr5.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3ofy3sr5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3ofy3sr5.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3ofy3sr5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3ofy3sr5.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3ofy3sr5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3ofy3sr5.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3ofy3sr5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3ofy3sr5.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3ofy3sr5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3ofy3sr5.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3ofy3sr5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3ofy3sr5.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ofy3sr5.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2tfihj2x.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2tfihj2x.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp2tfihj2x.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2tfihj2x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2tfihj2x.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2tfihj2x.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2tfihj2x.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2tfihj2x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2tfihj2x.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2tfihj2x.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2tfihj2x.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2tfihj2x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2tfihj2x.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp2tfihj2x.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp2tfihj2x.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2tfihj2x.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp2tfihj2x.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2tfihj2x.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptiol3nhb.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptiol3nhb.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmptiol3nhb.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptiol3nhb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptiol3nhb.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptiol3nhb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptiol3nhb.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptiol3nhb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptiol3nhb.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptiol3nhb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptiol3nhb.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptiol3nhb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptiol3nhb.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmptiol3nhb.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmptiol3nhb.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptiol3nhb.jl:41\ntest set:\
    \ Error During Test at /tmp/tmptiol3nhb.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptiol3nhb.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnfc1zkif.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnfc1zkif.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpnfc1zkif.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnfc1zkif.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnfc1zkif.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnfc1zkif.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnfc1zkif.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnfc1zkif.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnfc1zkif.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnfc1zkif.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnfc1zkif.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnfc1zkif.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnfc1zkif.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnfc1zkif.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnfc1zkif.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnfc1zkif.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnfc1zkif.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnfc1zkif.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmprevyvugh.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprevyvugh.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmprevyvugh.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprevyvugh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprevyvugh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprevyvugh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprevyvugh.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprevyvugh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprevyvugh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprevyvugh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprevyvugh.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprevyvugh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprevyvugh.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmprevyvugh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmprevyvugh.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprevyvugh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmprevyvugh.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprevyvugh.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3_qbeux4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3_qbeux4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp3_qbeux4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3_qbeux4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3_qbeux4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3_qbeux4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3_qbeux4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3_qbeux4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3_qbeux4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3_qbeux4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3_qbeux4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3_qbeux4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3_qbeux4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp3_qbeux4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp3_qbeux4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3_qbeux4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp3_qbeux4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3_qbeux4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpgaxzuz15.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgaxzuz15.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpgaxzuz15.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgaxzuz15.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgaxzuz15.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgaxzuz15.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpgaxzuz15.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgaxzuz15.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgaxzuz15.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgaxzuz15.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpgaxzuz15.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgaxzuz15.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgaxzuz15.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpgaxzuz15.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpgaxzuz15.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgaxzuz15.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpgaxzuz15.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgaxzuz15.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdsn9bxdo.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdsn9bxdo.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpdsn9bxdo.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdsn9bxdo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdsn9bxdo.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdsn9bxdo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdsn9bxdo.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdsn9bxdo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdsn9bxdo.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdsn9bxdo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdsn9bxdo.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdsn9bxdo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdsn9bxdo.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdsn9bxdo.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdsn9bxdo.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdsn9bxdo.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdsn9bxdo.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdsn9bxdo.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ ispalindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbs7thk8l.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbs7thk8l.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpbs7thk8l.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbs7thk8l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbs7thk8l.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbs7thk8l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbs7thk8l.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbs7thk8l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbs7thk8l.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbs7thk8l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbs7thk8l.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbs7thk8l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbs7thk8l.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpbs7thk8l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpbs7thk8l.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbs7thk8l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpbs7thk8l.jl:46\n  Test threw exception\n  Expr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbs7thk8l.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv6po5fi4.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpv6po5fi4.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpv6po5fi4.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv6po5fi4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpv6po5fi4.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpv6po5fi4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpv6po5fi4.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv6po5fi4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpv6po5fi4.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpv6po5fi4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpv6po5fi4.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv6po5fi4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpv6po5fi4.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpv6po5fi4.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpv6po5fi4.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv6po5fi4.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpv6po5fi4.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv6po5fi4.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpde1txuc8.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpde1txuc8.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpde1txuc8.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpde1txuc8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpde1txuc8.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpde1txuc8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpde1txuc8.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpde1txuc8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpde1txuc8.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpde1txuc8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpde1txuc8.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpde1txuc8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpde1txuc8.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpde1txuc8.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpde1txuc8.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpde1txuc8.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpde1txuc8.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpde1txuc8.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4p4uspuy.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4p4uspuy.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp4p4uspuy.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4p4uspuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4p4uspuy.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4p4uspuy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4p4uspuy.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4p4uspuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4p4uspuy.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4p4uspuy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4p4uspuy.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4p4uspuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4p4uspuy.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4p4uspuy.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4p4uspuy.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4p4uspuy.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4p4uspuy.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4p4uspuy.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4_e63s21.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_e63s21.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp4_e63s21.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_e63s21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_e63s21.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_e63s21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4_e63s21.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_e63s21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_e63s21.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_e63s21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4_e63s21.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_e63s21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_e63s21.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_e63s21.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4_e63s21.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_e63s21.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_e63s21.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_e63s21.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvflih_gi.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvflih_gi.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpvflih_gi.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvflih_gi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvflih_gi.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvflih_gi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvflih_gi.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvflih_gi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvflih_gi.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvflih_gi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvflih_gi.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvflih_gi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvflih_gi.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpvflih_gi.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpvflih_gi.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvflih_gi.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpvflih_gi.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvflih_gi.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpra2mitv3.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpra2mitv3.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpra2mitv3.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpra2mitv3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpra2mitv3.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpra2mitv3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpra2mitv3.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpra2mitv3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpra2mitv3.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpra2mitv3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpra2mitv3.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpra2mitv3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpra2mitv3.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpra2mitv3.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpra2mitv3.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpra2mitv3.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpra2mitv3.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpra2mitv3.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpday8a9ns.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpday8a9ns.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpday8a9ns.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpday8a9ns.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpday8a9ns.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpday8a9ns.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpday8a9ns.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpday8a9ns.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpday8a9ns.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpday8a9ns.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpday8a9ns.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpday8a9ns.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpday8a9ns.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpday8a9ns.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpday8a9ns.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpday8a9ns.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpday8a9ns.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpday8a9ns.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwpc5jz5m.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwpc5jz5m.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpwpc5jz5m.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwpc5jz5m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwpc5jz5m.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwpc5jz5m.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwpc5jz5m.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwpc5jz5m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwpc5jz5m.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwpc5jz5m.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwpc5jz5m.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwpc5jz5m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwpc5jz5m.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpwpc5jz5m.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpwpc5jz5m.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwpc5jz5m.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpwpc5jz5m.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwpc5jz5m.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8cd68jm7.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8cd68jm7.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp8cd68jm7.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8cd68jm7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8cd68jm7.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8cd68jm7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8cd68jm7.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8cd68jm7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8cd68jm7.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8cd68jm7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8cd68jm7.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8cd68jm7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8cd68jm7.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8cd68jm7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8cd68jm7.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8cd68jm7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8cd68jm7.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8cd68jm7.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    \"\"\"\n    Given a positive integer n, return a tuple that has\
    \ the number of even and odd\n    integer palindromes that fall within the range(1,\
    \ n), inclusive.\n    \"\"\"\n    even_count = 0\n    odd_count = 0\n    for i\
    \ in 1:n\n        if is_palindrome(i)\n            if i % 2 == 0\n           \
    \     even_count += 1\n            else\n                odd_count += 1\n    \
    \        end\n        end\n    end\n    return (even_count, odd_count)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp91votaql.jl:46\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp91votaql.jl:31\n\
    \   [2] macro expansion\n     @ /tmp/tmp91votaql.jl:46 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp91votaql.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp91votaql.jl:47\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp91votaql.jl:31\n  \
    \ [2] macro expansion\n     @ /tmp/tmp91votaql.jl:47 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp91votaql.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp91votaql.jl:48\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp91votaql.jl:31\n  \
    \ [2] macro expansion\n     @ /tmp/tmp91votaql.jl:48 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp91votaql.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp91votaql.jl:49\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp91votaql.jl:31\n  \
    \ [2] macro expansion\n     @ /tmp/tmp91votaql.jl:49 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp91votaql.jl:45\ntest set:\
    \ Error During Test at /tmp/tmp91votaql.jl:50\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91votaql.jl:43\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                even_count += 1\n            else\n\
    \                odd_count += 1\n            end\n        end\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxjnayw9c.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxjnayw9c.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmpxjnayw9c.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxjnayw9c.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpxjnayw9c.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxjnayw9c.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxjnayw9c.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxjnayw9c.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpxjnayw9c.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxjnayw9c.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxjnayw9c.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxjnayw9c.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpxjnayw9c.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxjnayw9c.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxjnayw9c.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxjnayw9c.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpxjnayw9c.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxjnayw9c.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxgh7s92n.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxgh7s92n.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpxgh7s92n.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxgh7s92n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxgh7s92n.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxgh7s92n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxgh7s92n.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxgh7s92n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxgh7s92n.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxgh7s92n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxgh7s92n.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxgh7s92n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxgh7s92n.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpxgh7s92n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpxgh7s92n.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxgh7s92n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpxgh7s92n.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxgh7s92n.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf3l0nw87.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpf3l0nw87.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpf3l0nw87.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf3l0nw87.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpf3l0nw87.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpf3l0nw87.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpf3l0nw87.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf3l0nw87.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpf3l0nw87.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpf3l0nw87.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpf3l0nw87.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf3l0nw87.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpf3l0nw87.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpf3l0nw87.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpf3l0nw87.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf3l0nw87.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpf3l0nw87.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf3l0nw87.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0y9l3vp0.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y9l3vp0.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp0y9l3vp0.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y9l3vp0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y9l3vp0.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y9l3vp0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0y9l3vp0.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y9l3vp0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y9l3vp0.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y9l3vp0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0y9l3vp0.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y9l3vp0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y9l3vp0.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp0y9l3vp0.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp0y9l3vp0.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0y9l3vp0.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp0y9l3vp0.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0y9l3vp0.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppln9ip4n.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmppln9ip4n.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmppln9ip4n.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppln9ip4n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmppln9ip4n.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmppln9ip4n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmppln9ip4n.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppln9ip4n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmppln9ip4n.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmppln9ip4n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmppln9ip4n.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppln9ip4n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmppln9ip4n.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmppln9ip4n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmppln9ip4n.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppln9ip4n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmppln9ip4n.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppln9ip4n.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ ispalindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy7zgl2mh.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: ispalindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy7zgl2mh.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpy7zgl2mh.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy7zgl2mh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy7zgl2mh.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy7zgl2mh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy7zgl2mh.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy7zgl2mh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy7zgl2mh.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy7zgl2mh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy7zgl2mh.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy7zgl2mh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy7zgl2mh.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: ispalindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpy7zgl2mh.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy7zgl2mh.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy7zgl2mh.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpy7zgl2mh.jl:46\n  Test threw exception\n  Expr"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy7zgl2mh.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5e16vlma.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5e16vlma.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp5e16vlma.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5e16vlma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5e16vlma.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5e16vlma.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5e16vlma.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5e16vlma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5e16vlma.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5e16vlma.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5e16vlma.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5e16vlma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5e16vlma.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5e16vlma.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5e16vlma.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5e16vlma.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5e16vlma.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5e16vlma.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk8p25o5k.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk8p25o5k.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpk8p25o5k.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk8p25o5k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk8p25o5k.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk8p25o5k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk8p25o5k.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk8p25o5k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk8p25o5k.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk8p25o5k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk8p25o5k.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk8p25o5k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk8p25o5k.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpk8p25o5k.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpk8p25o5k.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpk8p25o5k.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpk8p25o5k.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk8p25o5k.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuny3eth5.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuny3eth5.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpuny3eth5.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuny3eth5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuny3eth5.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuny3eth5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuny3eth5.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuny3eth5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuny3eth5.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuny3eth5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuny3eth5.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuny3eth5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuny3eth5.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuny3eth5.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuny3eth5.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuny3eth5.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuny3eth5.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuny3eth5.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    num_even = 0\n    num_odd = 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                num_even += 1\n            else\n\
    \                num_odd += 1\n            end\n        end\n    end\n    return\
    \ (num_even, num_odd)\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkdsxyj4o.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkdsxyj4o.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpkdsxyj4o.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkdsxyj4o.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkdsxyj4o.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkdsxyj4o.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkdsxyj4o.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkdsxyj4o.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkdsxyj4o.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkdsxyj4o.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkdsxyj4o.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkdsxyj4o.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkdsxyj4o.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkdsxyj4o.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkdsxyj4o.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkdsxyj4o.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkdsxyj4o.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkdsxyj4o.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu3dupd5l.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpu3dupd5l.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpu3dupd5l.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu3dupd5l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpu3dupd5l.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpu3dupd5l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpu3dupd5l.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu3dupd5l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpu3dupd5l.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpu3dupd5l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpu3dupd5l.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu3dupd5l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpu3dupd5l.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpu3dupd5l.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpu3dupd5l.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu3dupd5l.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpu3dupd5l.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3dupd5l.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if i % 2 == 0\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return (even_palindrome, odd_palindrome)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp7qrkp76i.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7qrkp76i.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp7qrkp76i.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7qrkp76i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7qrkp76i.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7qrkp76i.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7qrkp76i.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7qrkp76i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7qrkp76i.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7qrkp76i.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7qrkp76i.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7qrkp76i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7qrkp76i.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7qrkp76i.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7qrkp76i.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7qrkp76i.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7qrkp76i.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7qrkp76i.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmped50bqwq.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmped50bqwq.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmped50bqwq.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmped50bqwq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmped50bqwq.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmped50bqwq.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmped50bqwq.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmped50bqwq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmped50bqwq.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmped50bqwq.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmped50bqwq.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmped50bqwq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmped50bqwq.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmped50bqwq.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmped50bqwq.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmped50bqwq.jl:41\ntest set:\
    \ Error During Test at /tmp/tmped50bqwq.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmped50bqwq.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuwj7ixsa.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuwj7ixsa.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpuwj7ixsa.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuwj7ixsa.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuwj7ixsa.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuwj7ixsa.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuwj7ixsa.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuwj7ixsa.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuwj7ixsa.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuwj7ixsa.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuwj7ixsa.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuwj7ixsa.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuwj7ixsa.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpuwj7ixsa.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpuwj7ixsa.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuwj7ixsa.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpuwj7ixsa.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuwj7ixsa.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count, odd_count = 0, 0\n    for i in 1:n\n        if is_palindrome(i)\n\
    \            if i % 2 == 0\n                even_count += 1\n            else\n\
    \                odd_count += 1\n            end\n        end\n    end\n    return\
    \ even_count, odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\
    \t@test(candidate(123) == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3)\
    \ == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\
    \t@test(candidate(19) == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1)\
    \ == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjpj014kx.jl:41\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjpj014kx.jl:26\n\
    \   [2] macro expansion\n     @ /tmp/tmpjpj014kx.jl:41 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjpj014kx.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjpj014kx.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjpj014kx.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjpj014kx.jl:42 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjpj014kx.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjpj014kx.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjpj014kx.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjpj014kx.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjpj014kx.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjpj014kx.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjpj014kx.jl:26\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjpj014kx.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjpj014kx.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpjpj014kx.jl:45\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjpj014kx.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5mg11711.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5mg11711.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp5mg11711.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5mg11711.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5mg11711.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5mg11711.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5mg11711.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5mg11711.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5mg11711.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5mg11711.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5mg11711.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5mg11711.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5mg11711.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp5mg11711.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp5mg11711.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5mg11711.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp5mg11711.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5mg11711.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9po0m4ar.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9po0m4ar.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp9po0m4ar.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9po0m4ar.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9po0m4ar.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9po0m4ar.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9po0m4ar.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9po0m4ar.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9po0m4ar.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9po0m4ar.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9po0m4ar.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9po0m4ar.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9po0m4ar.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp9po0m4ar.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp9po0m4ar.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9po0m4ar.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp9po0m4ar.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9po0m4ar.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4_6oiq7n.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_6oiq7n.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp4_6oiq7n.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_6oiq7n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_6oiq7n.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_6oiq7n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4_6oiq7n.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_6oiq7n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_6oiq7n.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_6oiq7n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4_6oiq7n.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_6oiq7n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_6oiq7n.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp4_6oiq7n.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp4_6oiq7n.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4_6oiq7n.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp4_6oiq7n.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_6oiq7n.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkm7_d72t.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkm7_d72t.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpkm7_d72t.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkm7_d72t.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkm7_d72t.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkm7_d72t.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkm7_d72t.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkm7_d72t.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkm7_d72t.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkm7_d72t.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkm7_d72t.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkm7_d72t.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkm7_d72t.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpkm7_d72t.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpkm7_d72t.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkm7_d72t.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpkm7_d72t.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkm7_d72t.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i = 1:n\n        if\
    \ is_palindrome(i)\n            if is_even(i)\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8qkxj48r.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8qkxj48r.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp8qkxj48r.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qkxj48r.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8qkxj48r.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8qkxj48r.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8qkxj48r.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qkxj48r.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8qkxj48r.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8qkxj48r.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8qkxj48r.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qkxj48r.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8qkxj48r.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp8qkxj48r.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp8qkxj48r.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qkxj48r.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp8qkxj48r.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qkxj48r.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1zokkwz1.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokkwz1.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp1zokkwz1.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokkwz1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokkwz1.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokkwz1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1zokkwz1.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokkwz1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokkwz1.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokkwz1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1zokkwz1.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokkwz1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokkwz1.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp1zokkwz1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp1zokkwz1.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1zokkwz1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp1zokkwz1.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1zokkwz1.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfnonpblu.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfnonpblu.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpfnonpblu.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfnonpblu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfnonpblu.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfnonpblu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfnonpblu.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfnonpblu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfnonpblu.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfnonpblu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfnonpblu.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfnonpblu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfnonpblu.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfnonpblu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfnonpblu.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfnonpblu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfnonpblu.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfnonpblu.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdkqkuqne.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdkqkuqne.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpdkqkuqne.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdkqkuqne.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdkqkuqne.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdkqkuqne.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdkqkuqne.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdkqkuqne.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdkqkuqne.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdkqkuqne.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdkqkuqne.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdkqkuqne.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdkqkuqne.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpdkqkuqne.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpdkqkuqne.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdkqkuqne.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpdkqkuqne.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdkqkuqne.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjwtdsfk1.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjwtdsfk1.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpjwtdsfk1.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjwtdsfk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjwtdsfk1.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjwtdsfk1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjwtdsfk1.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjwtdsfk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjwtdsfk1.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjwtdsfk1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjwtdsfk1.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjwtdsfk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjwtdsfk1.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpjwtdsfk1.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpjwtdsfk1.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjwtdsfk1.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpjwtdsfk1.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjwtdsfk1.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i = 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7dpjv5u_.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7dpjv5u_.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp7dpjv5u_.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7dpjv5u_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7dpjv5u_.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7dpjv5u_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7dpjv5u_.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7dpjv5u_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7dpjv5u_.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7dpjv5u_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7dpjv5u_.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7dpjv5u_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7dpjv5u_.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp7dpjv5u_.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp7dpjv5u_.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7dpjv5u_.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp7dpjv5u_.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7dpjv5u_.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnjnbd4jt.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnjnbd4jt.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpnjnbd4jt.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnjnbd4jt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnjnbd4jt.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnjnbd4jt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnjnbd4jt.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnjnbd4jt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnjnbd4jt.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnjnbd4jt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnjnbd4jt.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnjnbd4jt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnjnbd4jt.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpnjnbd4jt.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpnjnbd4jt.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnjnbd4jt.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpnjnbd4jt.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnjnbd4jt.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_count = 0\n    odd_count = 0\n    for i in 1:n\n        if\
    \ is_palindrome(i)\n            if i % 2 == 0\n                even_count += 1\n\
    \            else\n                odd_count += 1\n            end\n        end\n\
    \    end\n    return (even_count, odd_count)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = even_odd_palindrome;\n\t@test(candidate(123) == (8, 13))\n\t@test(candidate(12)\
    \ == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\t@test(candidate(63) == (6, 8))\n\
    \t@test(candidate(25) == (5, 6))\n\t@test(candidate(19) == (4, 6))\n\t@test(candidate(9)\
    \ == (4, 5))\n\t@test(candidate(1) == (0, 1))\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_ik221c7.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_ik221c7.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmp_ik221c7.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_ik221c7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_ik221c7.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_ik221c7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_ik221c7.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_ik221c7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_ik221c7.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_ik221c7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_ik221c7.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_ik221c7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_ik221c7.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmp_ik221c7.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmp_ik221c7.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_ik221c7.jl:41\ntest set:\
    \ Error During Test at /tmp/tmp_ik221c7.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ik221c7.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, return a tuple that has the number\
    \ of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\
    \n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n\
    \        Integer palindrome are 1, 2, 3. one of them is even, and two of them\
    \ are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n  \
    \      Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1\
    \ <= n <= 10^3\n        2. returned tuple has the number of even and odd integer\
    \ palindromes respectively.\n    \"\"\"\nfunction even_odd_palindrome(n::Int64)::Tuple{Int64,\
    \ Int64} \n    even_palindrome = 0\n    odd_palindrome = 0\n    for i in 1:n\n\
    \        if is_palindrome(i)\n            if is_even(i)\n                even_palindrome\
    \ += 1\n            else\n                odd_palindrome += 1\n            end\n\
    \        end\n    end\n    return even_palindrome, odd_palindrome\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = even_odd_palindrome;\n\t@test(candidate(123)\
    \ == (8, 13))\n\t@test(candidate(12) == (4, 6))\n\t@test(candidate(3) == (1, 2))\n\
    \t@test(candidate(63) == (6, 8))\n\t@test(candidate(25) == (5, 6))\n\t@test(candidate(19)\
    \ == (4, 6))\n\t@test(candidate(9) == (4, 5))\n\t@test(candidate(1) == (0, 1))\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpfi4qdxsu.jl:42\n  Test threw exception\n\
    \  Expression: candidate(123) == (8, 13)\n  UndefVarError: is_palindrome not defined\n\
    \  Stacktrace:\n   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfi4qdxsu.jl:27\n\
    \   [2] macro expansion\n     @ /tmp/tmpfi4qdxsu.jl:42 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfi4qdxsu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfi4qdxsu.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(12) == (4, 6)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfi4qdxsu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfi4qdxsu.jl:43 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfi4qdxsu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfi4qdxsu.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(3) == (1, 2)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfi4qdxsu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfi4qdxsu.jl:44 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfi4qdxsu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfi4qdxsu.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(63) == (6, 8)\n  UndefVarError: is_palindrome not defined\n  Stacktrace:\n\
    \   [1] even_odd_palindrome(n::Int64)\n     @ Main /tmp/tmpfi4qdxsu.jl:27\n  \
    \ [2] macro expansion\n     @ /tmp/tmpfi4qdxsu.jl:45 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfi4qdxsu.jl:41\ntest set:\
    \ Error During Test at /tmp/tmpfi4qdxsu.jl:46\n  Test threw exception\n  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfi4qdxsu.jl:39\n"
  exit_code: 1
  status: SyntaxError

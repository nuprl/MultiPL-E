name: HumanEval_84_solve
language: julia
results:
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, 2)\n    # convert to string\n    binary_string\
    \ = string(binary)\n    # split string into characters\n    binary_char = split(binary_string)\n\
    \    # sum the characters\n    sum = 0\n    for i in binary_char\n        sum\
    \ += parse(Int, i)\n    end\n    # return the sum\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"\
    1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\
    \t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpobi0rjo9.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at boot.jl:752\\n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpobi0rjo9.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpobi0rjo9.jl:34 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpobi0rjo9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpobi0rjo9.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\\\
    n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpobi0rjo9.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpobi0rjo9.jl:35 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpobi0rjo9.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpobi0rjo9.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\\\
    n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpobi0rjo9.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpobi0rjo9.jl:36 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlin"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = Int(digits(N, base=2))\n    # convert binary to string\n\
    \    binary_str = string(binary)\n    # initialize sum\n    sum = 0\n    # iterate\
    \ over binary_str\n    for i in binary_str\n        # add to sum\n        sum\
    \ += parse(Int, i)\n    end\n    # return sum\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq2t_558a.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Vector{Int64})\\n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpq2t_558a.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpq2t_558a.jl:34 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq2t_558a.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpq2t_558a.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Vector{Int64})\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpq2t_558a.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpq2t_558a.jl:35 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq2t_558a.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpq2t_558a.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Vector{Int64})\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Typ"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = Int(string(N, base=2))\n    # convert binary to string\n\
    \    binary = string(binary)\n    # sum all digits in binary\n    sum = 0\n  \
    \  for i in binary\n        sum += parse(Int, i)\n    end\n    return string(sum)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2bsk_828.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::String)\\n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmp2bsk_828.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmp2bsk_828.jl:31 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2bsk_828.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp2bsk_828.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmp2bsk_828.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmp2bsk_828.jl:32 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2bsk_828.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp2bsk_828.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(digits(N, base=2))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsvptkg8y.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpsvptkg8y.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmpsvptkg8y.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsvptkg8y.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpsvptkg8y.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpsvptkg8y.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpsvptkg8y.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsvptkg8y.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpsvptkg8y.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr29eu67q.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr29eu67q.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr29eu67q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr29eu67q.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr29eu67q.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr29eu67q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr29eu67q.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr29eu67q.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr29eu67q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr29eu67q.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr29eu67q.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr29eu67q.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpr29eu67q.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr29eu67q.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr29eu67q.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr29eu67q.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin_N = convert(Int64, string(N, base=2))\n    # convert to string\n\
    \    str_bin_N = string(bin_N)\n    # sum the digits\n    sum_digits = sum(parse.(Int64,\
    \ str_bin_N))\n    # convert to string\n    str_sum_digits = string(sum_digits)\n\
    \    return str_sum_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpibbm1e1r.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type String to an object of type Int64\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpibbm1e1r.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpibbm1e1r.jl:30 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpibbm1e1r.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpibbm1e1r.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpibbm1e1r.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpibbm1e1r.jl:31 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpibbm1e1r.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpibbm1e1r.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Nu"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the number to binary\n    binary = convert(Int64, N, base=2)\n    # convert\
    \ the number to string\n    binary_string = string(binary)\n    # convert the\
    \ string to array of characters\n    binary_array = collect(binary_string)\n \
    \   # convert the array of characters to array of integers\n    binary_array_int\
    \ = [parse(Int64, x) for x in binary_array]\n    # sum the array of integers\n\
    \    sum_binary = sum(binary_array_int)\n    # convert the sum to string\n   \
    \ sum_binary_string = string(sum_binary)\n    # return the string\n    return\
    \ sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz1_tav52.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpz1_tav52.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpz1_tav52.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz1_tav52.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpz1_tav52.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpz1_tav52.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpz1_tav52.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz1_tav52.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpz1_tav52.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    sum = 0\n\
    \    while N > 0\n        sum += N % 2\n        N = div(N, 2)\n    end\n    return\
    \ string(sum)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpma4t9qgg.jl:27\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpma4t9qgg.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpma4t9qgg.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpma4t9qgg.jl:28\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpma4t9qgg.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpma4t9qgg.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpma4t9qgg.jl:29\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpma4t9qgg.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpma4t9qgg.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpma4t9qgg.jl:30\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpma4t9qgg.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpma4t9qgg.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpma4t9qgg.jl:31\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpma4t9qgg.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpma4t9qgg.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpma4t9qgg.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_9twepz5.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp_9twepz5.jl:15\n   [2] macro expansion\n     @ /tmp/tmp_9twepz5.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_9twepz5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_9twepz5.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp_9twepz5.jl:15\n   [2] macro expansion\n     @ /tmp/tmp_9twepz5.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_9twepz5.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_9twepz5.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp_9twepz5.jl:15\n   [2] macro expansion\n     @ /tmp/tmp_9twepz5.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_9twepz5.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_9twepz5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return(sum(digits(N,\
    \ base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaq9vk3wc.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpaq9vk3wc.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmpaq9vk3wc.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpaq9vk3wc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpaq9vk3wc.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpaq9vk3wc.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpaq9vk3wc.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpaq9vk3wc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpaq9vk3wc.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmncuqxnc.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpmncuqxnc.jl:15\n   [2] macro expansion\n     @ /tmp/tmpmncuqxnc.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmncuqxnc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpmncuqxnc.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpmncuqxnc.jl:15\n   [2] macro expansion\n     @ /tmp/tmpmncuqxnc.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmncuqxnc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpmncuqxnc.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpmncuqxnc.jl:15\n   [2] macro expansion\n     @ /tmp/tmpmncuqxnc.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmncuqxnc.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmncuqxnc.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ binary_string))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjcunix0d.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpjcunix0d.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpjcunix0d.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjcunix0d.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpjcunix0d.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpjcunix0d.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpjcunix0d.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjcunix0d.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpjcunix0d.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_str = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ binary_str))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_str = string(sum_digits_binary)\n\
    \    return sum_digits_binary_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc620wzg5.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpc620wzg5.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpc620wzg5.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc620wzg5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpc620wzg5.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpc620wzg5.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpc620wzg5.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc620wzg5.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpc620wzg5.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(String, N)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsg3acong.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpsg3acong.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmpsg3acong.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsg3acong.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpsg3acong.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpsg3acong.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpsg3acong.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsg3acong.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpsg3acong.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = Int(string(N, base=2))\n    # convert binary to string\n\
    \    binary_string = string(binary)\n    # sum the digits of the binary number\n\
    \    sum_digits = sum(int(i) for i in binary_string)\n    # return the sum of\
    \ digits\n    return sum_digits\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm8hys2gr.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::String)\\n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpm8hys2gr.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpm8hys2gr.jl:29 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpm8hys2gr.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpm8hys2gr.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpm8hys2gr.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpm8hys2gr.jl:30 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpm8hys2gr.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpm8hys2gr.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base."
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(digits(N, base=2))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp96951oxv.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp96951oxv.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmp96951oxv.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp96951oxv.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp96951oxv.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp96951oxv.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmp96951oxv.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp96951oxv.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp96951oxv.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo844sy2f.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo844sy2f.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo844sy2f.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo844sy2f.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo844sy2f.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo844sy2f.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo844sy2f.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo844sy2f.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo844sy2f.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo844sy2f.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo844sy2f.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo844sy2f.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpo844sy2f.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo844sy2f.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo844sy2f.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo844sy2f.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf9ts2gc_.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpf9ts2gc_.jl:15\n   [2] macro expansion\n     @ /tmp/tmpf9ts2gc_.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf9ts2gc_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpf9ts2gc_.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpf9ts2gc_.jl:15\n   [2] macro expansion\n     @ /tmp/tmpf9ts2gc_.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf9ts2gc_.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpf9ts2gc_.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpf9ts2gc_.jl:15\n   [2] macro expansion\n     @ /tmp/tmpf9ts2gc_.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf9ts2gc_.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf9ts2gc_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = string(N, base=2)\n    # sum of digits\n    sum_digits\
    \ = sum(parse.(Int64, collect(binary)))\n    # convert to binary\n    binary_sum\
    \ = string(sum_digits, base=2)\n    return binary_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptv5y4tkh.jl:28\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"110\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptv5y4tkh.jl:28 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptv5y4tkh.jl:27\ntest set: Test\
    \ Failed at /tmp/tmptv5y4tkh.jl:29\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"100\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptv5y4tkh.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptv5y4tkh.jl:27\ntest set: Test\
    \ Failed at /tmp/tmptv5y4tkh.jl:30\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"100\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptv5y4tkh.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptv5y4tkh.jl:27\ntest set: Test\
    \ Failed at /tmp/tmptv5y4tkh.jl:31\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"101\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptv5y4tkh.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptv5y4tkh.jl:27\ntest set: Test\
    \ Failed at /tmp/tmptv5y4tkh.jl:32\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"110\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptv5y4tkh.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptv5y4tkh.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptv5y4tkh.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe3by2lrr.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpe3by2lrr.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3by2lrr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpe3by2lrr.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe3by2lrr.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3by2lrr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpe3by2lrr.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe3by2lrr.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3by2lrr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpe3by2lrr.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe3by2lrr.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3by2lrr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpe3by2lrr.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpe3by2lrr.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe3by2lrr.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3by2lrr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    binary\
    \ = bin(N)\n    sum_digits = 0\n    for i in binary\n        if i == '1'\n   \
    \         sum_digits += 1\n        end\n    end\n    return sum_digits\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplngwpmdv.jl:29\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmplngwpmdv.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmplngwpmdv.jl:29 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplngwpmdv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplngwpmdv.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmplngwpmdv.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmplngwpmdv.jl:30 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplngwpmdv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplngwpmdv.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmplngwpmdv.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmplngwpmdv.jl:31 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplngwpmdv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplngwpmdv.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmplngwpmdv.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmplngwpmdv.jl:32 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplngwpmdv.jl:28\ntest set:\
    \ Error During Test at /tmp/tmplngwpmdv.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solv"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplngwpmdv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6gjh1dwr.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp6gjh1dwr.jl:15\n   [2] macro expansion\n     @ /tmp/tmp6gjh1dwr.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6gjh1dwr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp6gjh1dwr.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp6gjh1dwr.jl:15\n   [2] macro expansion\n     @ /tmp/tmp6gjh1dwr.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6gjh1dwr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp6gjh1dwr.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp6gjh1dwr.jl:15\n   [2] macro expansion\n     @ /tmp/tmp6gjh1dwr.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6gjh1dwr.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gjh1dwr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(digits(N, base=2))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpztdunwnt.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpztdunwnt.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmpztdunwnt.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpztdunwnt.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpztdunwnt.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpztdunwnt.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpztdunwnt.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpztdunwnt.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpztdunwnt.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    N_bin =\
    \ Int(string(N, base=2))\n    return string(sum(digits(N_bin)))\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwbq0f5al.jl:23\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpwbq0f5al.jl:15\n   [2] macro expansion\n     @ /tmp/tmpwbq0f5al.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwbq0f5al.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpwbq0f5al.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpwbq0f5al.jl:15\n   [2] macro expansion\n     @ /tmp/tmpwbq0f5al.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwbq0f5al.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpwbq0f5al.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twicepreci"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwbq0f5al.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ to binary\n    bin_N = convert(Int64, N, base=2)\n    # Convert to string\n\
    \    str_bin_N = string(bin_N)\n    # Convert to array of characters\n    arr_str_bin_N\
    \ = collect(str_bin_N)\n    # Convert to array of integers\n    arr_int_str_bin_N\
    \ = [parse(Int64, i) for i in arr_str_bin_N]\n    # Sum all elements in the array\n\
    \    sum_arr_int_str_bin_N = sum(arr_int_str_bin_N)\n    # Convert to string\n\
    \    str_sum_arr_int_str_bin_N = string(sum_arr_int_str_bin_N)\n    # Return the\
    \ string\n    return str_sum_arr_int_str_bin_N\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7fpty_s2.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp7fpty_s2.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp7fpty_s2.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7fpty_s2.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp7fpty_s2.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp7fpty_s2.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp7fpty_s2.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7fpty_s2.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp7fpty_s2.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # convert string to array\n\
    \    binary_array = [parse(Int64, x) for x in binary_string]\n    # sum the array\n\
    \    sum_binary = sum(binary_array)\n    # convert sum to string\n    sum_binary_string\
    \ = string(sum_binary)\n    # return the string\n    return sum_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvq8s7acw.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpvq8s7acw.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpvq8s7acw.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvq8s7acw.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpvq8s7acw.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpvq8s7acw.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvq8s7acw.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvq8s7acw.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpvq8s7acw.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = convert(Int64, N, base=2)\n    # convert\
    \ the binary to string\n    binary_string = string(binary)\n    # convert the\
    \ string to array of characters\n    binary_array = collect(binary_string)\n \
    \   # convert the array of characters to array of integers\n    binary_array_int\
    \ = map(x -> parse(Int64, x), binary_array)\n    # sum the array of integers\n\
    \    sum_binary = sum(binary_array_int)\n    # convert the sum to string\n   \
    \ sum_binary_string = string(sum_binary)\n    # return the string\n    return\
    \ sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_i7_sft1.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp_i7_sft1.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp_i7_sft1.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_i7_sft1.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp_i7_sft1.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp_i7_sft1.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp_i7_sft1.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_i7_sft1.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp_i7_sft1.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyr478zo5.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpyr478zo5.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyr478zo5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyr478zo5.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyr478zo5.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyr478zo5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyr478zo5.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyr478zo5.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyr478zo5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyr478zo5.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyr478zo5.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyr478zo5.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpyr478zo5.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyr478zo5.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyr478zo5.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyr478zo5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8lee9pn2.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp8lee9pn2.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmp8lee9pn2.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8lee9pn2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp8lee9pn2.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp8lee9pn2.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp8lee9pn2.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8lee9pn2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp8lee9pn2.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp8lee9pn2.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp8lee9pn2.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(digits(N, base=2))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpao7wporc.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpao7wporc.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmpao7wporc.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpao7wporc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpao7wporc.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpao7wporc.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpao7wporc.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpao7wporc.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpao7wporc.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = Int(N, 2)\n    # convert binary to string\n    binary_string\
    \ = string(binary)\n    # sum of digits\n    sum = 0\n    # loop through the string\n\
    \    for i in binary_string\n        # add the digit to sum\n        sum += parse(Int,\
    \ i)\n    end\n    # return the sum\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwwlmuv1t.jl:34\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpwwlmuv1t.jl:16\n   [2] macro expansion\n     @ /tmp/tmpwwlmuv1t.jl:34\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwwlmuv1t.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwwlmuv1t.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpwwlmuv1t.jl:16\n   [2] macro expansion\n     @ /tmp/tmpwwlmuv1t.jl:35\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwwlmuv1t.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpwwlmuv1t.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpwwlmuv1t.jl:16\n   [2] macro expansion\n     @ /tmp/tmpwwlmuv1t.jl:36\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwwlmu"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwwlmuv1t.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # convert to array\n    binary_array\
    \ = split(binary_string, \"\")\n    # sum the array\n    sum_array = sum(parse.(Int64,\
    \ binary_array))\n    # convert to string\n    sum_string = string(sum_array)\n\
    \    return sum_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvcobvcab.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpvcobvcab.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpvcobvcab.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvcobvcab.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpvcobvcab.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpvcobvcab.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvcobvcab.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvcobvcab.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpvcobvcab.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    return sum_digits\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmjn1ov96.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpmjn1ov96.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpmjn1ov96.jl:28\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmjn1ov96.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpmjn1ov96.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpmjn1ov96.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpmjn1ov96.jl:29 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmjn1ov96.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpmjn1ov96.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    N = N\n\
    \    sum = 0\n    while N > 0\n        sum += N % 2\n        N = div(N, 2)\n \
    \   end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp94czd7v4.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp94czd7v4.jl:21\\\
    n   [2] macro expansion\\n     @ /tmp/tmp94czd7v4.jl:28 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp94czd7v4.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp94czd7v4.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp94czd7v4.jl:21\\n   [2] macro expansion\\\
    n     @ /tmp/tmp94czd7v4.jl:29 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp94czd7v4.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp94czd7v4.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    bin = convert(Int64, base(N, 2))\n    # convert the\
    \ binary to string\n    bin_str = string(bin)\n    # sum the digits of the binary\n\
    \    sum = 0\n    for i in bin_str\n        sum += parse(Int64, i)\n    end\n\
    \    # return the sum\n    return string(sum)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv5ugfhoh.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: base not defined\n \
    \ Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpv5ugfhoh.jl:16\n  \
    \ [2] macro expansion\n     @ /tmp/tmpv5ugfhoh.jl:32 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv5ugfhoh.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpv5ugfhoh.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpv5ugfhoh.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpv5ugfhoh.jl:33 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv5ugfhoh.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpv5ugfhoh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpv5ugfhoh.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpv5ugfhoh.jl:34 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv5ugfhoh.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpv5ugfhoh.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpv5ugfhoh.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpv5ugfhoh.jl:35 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpv5ugfhoh.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpv5ugfhoh.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv5ugfhoh.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8qgxisom.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp8qgxisom.jl:15\n   [2] macro expansion\n     @ /tmp/tmp8qgxisom.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qgxisom.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp8qgxisom.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp8qgxisom.jl:15\n   [2] macro expansion\n     @ /tmp/tmp8qgxisom.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qgxisom.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp8qgxisom.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp8qgxisom.jl:15\n   [2] macro expansion\n     @ /tmp/tmp8qgxisom.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qgxisom.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qgxisom.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqn3bqntr.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqn3bqntr.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqn3bqntr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqn3bqntr.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqn3bqntr.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqn3bqntr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqn3bqntr.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqn3bqntr.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqn3bqntr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqn3bqntr.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqn3bqntr.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqn3bqntr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqn3bqntr.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqn3bqntr.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqn3bqntr.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqn3bqntr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = Int(N, 2)\n    # convert the binary to string\n\
    \    binary_string = string(binary)\n    # convert the string to array\n    binary_array\
    \ = split(binary_string, \"\")\n    # convert the array to integer\n    binary_array_int\
    \ = map(x -> parse(Int, x), binary_array)\n    # sum the array\n    sum_binary\
    \ = sum(binary_array_int)\n    # convert the sum to string\n    sum_binary_string\
    \ = string(sum_binary)\n    # return the string\n    return sum_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkwnis3rl.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpkwnis3rl.jl:16\n   [2] macro expansion\n     @ /tmp/tmpkwnis3rl.jl:35\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkwnis3rl.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkwnis3rl.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpkwnis3rl.jl:16\n   [2] macro expansion\n     @ /tmp/tmpkwnis3rl.jl:36\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkwnis3rl.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpkwnis3rl.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpkwnis3rl.jl:16\n   [2] macro expansion\n     @ /tmp/tmpkwnis3rl.jl:37\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkwnis"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkwnis3rl.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert to string\n\
    \    str_bin_N = string(bin_N)\n    # sum the digits\n    sum_digits = sum(parse.(Int64,\
    \ str_bin_N))\n    # convert to string\n    str_sum_digits = string(sum_digits)\n\
    \    # return the string\n    return str_sum_digits\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2_d6ftyi.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp2_d6ftyi.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp2_d6ftyi.jl:31\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2_d6ftyi.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp2_d6ftyi.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp2_d6ftyi.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp2_d6ftyi.jl:32 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2_d6ftyi.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmp2_d6ftyi.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoyovb60k.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpoyovb60k.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoyovb60k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpoyovb60k.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoyovb60k.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoyovb60k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpoyovb60k.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoyovb60k.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoyovb60k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpoyovb60k.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoyovb60k.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoyovb60k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpoyovb60k.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoyovb60k.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoyovb60k.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoyovb60k.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkvojgi4g.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpkvojgi4g.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpkvojgi4g.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkvojgi4g.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpkvojgi4g.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpkvojgi4g.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpkvojgi4g.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkvojgi4g.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpkvojgi4g.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp75fug9_9.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp75fug9_9.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmp75fug9_9.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp75fug9_9.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp75fug9_9.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp75fug9_9.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp75fug9_9.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp75fug9_9.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp75fug9_9.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp75fug9_9.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp75fug9_9.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0hzzc4z9.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp0hzzc4z9.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmp0hzzc4z9.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0hzzc4z9.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp0hzzc4z9.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp0hzzc4z9.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp0hzzc4z9.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0hzzc4z9.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp0hzzc4z9.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp0hzzc4z9.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp0hzzc4z9.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptpffugga.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmptpffugga.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmptpffugga.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptpffugga.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmptpffugga.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmptpffugga.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmptpffugga.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptpffugga.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmptpffugga.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmptpffugga.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmptpffugga.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphn23dn26.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmphn23dn26.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmphn23dn26.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphn23dn26.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmphn23dn26.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmphn23dn26.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmphn23dn26.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphn23dn26.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmphn23dn26.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmphn23dn26.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmphn23dn26.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ the integer to binary\n    binary = convert(Int64, base(N, 2))\n    # Convert\
    \ the binary to string\n    binary_string = string(binary)\n    # Convert the\
    \ string to array\n    binary_array = collect(binary_string)\n    # Convert the\
    \ array to integer\n    binary_array_int = [parse(Int64, i) for i in binary_array]\n\
    \    # Sum the array\n    binary_sum = sum(binary_array_int)\n    # Convert the\
    \ sum to string\n    binary_sum_string = string(binary_sum)\n    # Return the\
    \ string\n    return binary_sum_string\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwqu8qj_5.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  UndefVarError: base not\
    \ defined\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpwqu8qj_5.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpwqu8qj_5.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwqu8qj_5.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpwqu8qj_5.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  UndefVarError: base not defined\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpwqu8qj_5.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpwqu8qj_5.jl:36 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwqu8qj_5.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpwqu8qj_5.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  UndefVarError: base not defined\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpwqu8qj_5.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpwqu8qj_5.jl:37 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwqu8qj_5.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpwqu8qj_5.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(333) == \"1001\"\\n  UndefVarError: base not defined\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpwqu8qj_5.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpwqu8qj_5.jl:38 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwqu8qj_5.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpwqu8qj_5.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(963) == \"10010"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpwqu8qj_5.jl:32\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ binary(N)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps16dmujb.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmps16dmujb.jl:15\n \
    \  [2] macro expansion\n     @ /tmp/tmps16dmujb.jl:22 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps16dmujb.jl:21\ntest set:\
    \ Error During Test at /tmp/tmps16dmujb.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmps16dmujb.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmps16dmujb.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps16dmujb.jl:21\ntest set:\
    \ Error During Test at /tmp/tmps16dmujb.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmps16dmujb.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmps16dmujb.jl:24 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps16dmujb.jl:21\ntest set:\
    \ Error During Test at /tmp/tmps16dmujb.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmps16dmujb.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmps16dmujb.jl:25 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps16dmujb.jl:21\ntest set:\
    \ Error During Test at /tmp/tmps16dmujb.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: binary not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps16dmujb.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_str = string(binary)\n    # sum the digits\n    sum_digits\
    \ = sum(parse.(Int64, collect(binary_str)))\n    # convert sum to binary\n   \
    \ sum_digits_binary = convert(Int64, sum_digits, base=2)\n    # convert sum to\
    \ string\n    sum_digits_binary_str = string(sum_digits_binary)\n    return sum_digits_binary_str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9hba4rp3.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp9hba4rp3.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp9hba4rp3.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9hba4rp3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp9hba4rp3.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp9hba4rp3.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp9hba4rp3.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9hba4rp3.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp9hba4rp3.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    bin_N_str = string(bin_N)\n    # sum the digits\n    sum_digits\
    \ = sum(parse.(Int64, bin_N_str))\n    # convert sum to binary\n    bin_sum =\
    \ convert(Int64, sum_digits, base=2)\n    # convert binary to string\n    bin_sum_str\
    \ = string(bin_sum)\n    # return the string\n    return bin_sum_str\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"\
    1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\
    \t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkfy_280p.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpkfy_280p.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpkfy_280p.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkfy_280p.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpkfy_280p.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpkfy_280p.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpkfy_280p.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkfy_280p.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpkfy_280p.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw64qmpv2.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpw64qmpv2.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw64qmpv2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpw64qmpv2.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw64qmpv2.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw64qmpv2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpw64qmpv2.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw64qmpv2.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw64qmpv2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpw64qmpv2.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw64qmpv2.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw64qmpv2.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpw64qmpv2.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw64qmpv2.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw64qmpv2.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw64qmpv2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary_N = string(N, base=2)\n    # sum of digits\n    sum_digits\
    \ = sum(parse.(Int64, collect(binary_N)))\n    # convert to binary\n    binary_sum\
    \ = string(sum_digits, base=2)\n    return binary_sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeb1jql_4.jl:28\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"110\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpeb1jql_4.jl:28 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeb1jql_4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpeb1jql_4.jl:29\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"100\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeb1jql_4.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeb1jql_4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpeb1jql_4.jl:30\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"100\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeb1jql_4.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeb1jql_4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpeb1jql_4.jl:31\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"101\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeb1jql_4.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeb1jql_4.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpeb1jql_4.jl:32\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"110\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpeb1jql_4.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeb1jql_4.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeb1jql_4.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # convert string to array of\
    \ characters\n    binary_array = split(binary_string, \"\")\n    # convert array\
    \ of characters to array of integers\n    binary_array_int = [parse(Int64, x)\
    \ for x in binary_array]\n    # sum the array of integers\n    sum_binary = sum(binary_array_int)\n\
    \    # convert sum to string\n    sum_binary_string = string(sum_binary)\n   \
    \ return sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl4a5lcs5.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpl4a5lcs5.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpl4a5lcs5.jl:34\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl4a5lcs5.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpl4a5lcs5.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpl4a5lcs5.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpl4a5lcs5.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl4a5lcs5.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpl4a5lcs5.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert bin_N to string\n\
    \    bin_N_str = string(bin_N)\n    # convert bin_N_str to array of chars\n  \
    \  bin_N_arr = collect(bin_N_str)\n    # convert bin_N_arr to array of integers\n\
    \    bin_N_int = parse.(Int64, bin_N_arr)\n    # sum the integers\n    sum_bin_N\
    \ = sum(bin_N_int)\n    # convert sum_bin_N to string\n    sum_bin_N_str = string(sum_bin_N)\n\
    \    # return sum_bin_N_str\n    return sum_bin_N_str\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp27aas8bi.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp27aas8bi.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp27aas8bi.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp27aas8bi.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp27aas8bi.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp27aas8bi.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp27aas8bi.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp27aas8bi.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp27aas8bi.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(String, N)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxggg52me.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpxggg52me.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmpxggg52me.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxggg52me.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpxggg52me.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpxggg52me.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpxggg52me.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxggg52me.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpxggg52me.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ the integer to binary\n    binary = convert(Int64, binary(N))\n    # Convert\
    \ the binary to string\n    binary = string(binary)\n    # Initialize the sum\
    \ of digits\n    sum = 0\n    # Loop through the string\n    for i in 1:length(binary)\n\
    \        # Add the digits to the sum\n        sum += parse(Int64, binary[i])\n\
    \    end\n    # Return the sum\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkhprwdr6.jl:34\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpkhprwdr6.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpkhprwdr6.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkhprwdr6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpkhprwdr6.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpkhprwdr6.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpkhprwdr6.jl:35 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkhprwdr6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpkhprwdr6.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpkhprwdr6.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpkhprwdr6.jl:36 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkhprwdr6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpkhprwdr6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpkhprwdr6.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpkhprwdr6.jl:37 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkhprwdr6.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpkhprwdr6.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: binary not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkhprwdr6.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4e0k8rz8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp4e0k8rz8.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmp4e0k8rz8.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4e0k8rz8.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp4e0k8rz8.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp4e0k8rz8.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp4e0k8rz8.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4e0k8rz8.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp4e0k8rz8.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp4e0k8rz8.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp4e0k8rz8.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin_N = Int(string(N, base=2))\n    # convert binary to string\n\
    \    str_bin_N = string(bin_N)\n    # sum of digits\n    sum_digits = sum(parse.(Int,\
    \ str_bin_N))\n    # convert sum to binary\n    bin_sum = Int(string(sum_digits,\
    \ base=2))\n    # convert binary to string\n    str_bin_sum = string(bin_sum)\n\
    \    return str_bin_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjdor81q4.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::String)\\n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpjdor81q4.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpjdor81q4.jl:32 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjdor81q4.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpjdor81q4.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpjdor81q4.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpjdor81q4.jl:33 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjdor81q4.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpjdor81q4.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base."
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin = Int(base(N,2))\n    # convert to string\n    bin_str =\
    \ string(bin)\n    # sum of digits\n    sum = 0\n    for i in bin_str\n      \
    \  sum += parse(Int,i)\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy5pt25r_.jl:31\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: base not defined\n \
    \ Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpy5pt25r_.jl:16\n  \
    \ [2] macro expansion\n     @ /tmp/tmpy5pt25r_.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5pt25r_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpy5pt25r_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpy5pt25r_.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpy5pt25r_.jl:32 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5pt25r_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpy5pt25r_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpy5pt25r_.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpy5pt25r_.jl:33 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5pt25r_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpy5pt25r_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpy5pt25r_.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpy5pt25r_.jl:34 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy5pt25r_.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpy5pt25r_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy5pt25r_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ to binary\n    binary = convert(Int64, binary(N))\n    # Convert to string\n\
    \    binary = string(binary)\n    # Convert to array\n    binary = split(binary,\
    \ \"\")\n    # Sum the digits\n    sum = 0\n    for i in binary\n        sum +=\
    \ parse(Int64, i)\n    end\n    # Return the sum\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdc2lxntl.jl:34\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpdc2lxntl.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpdc2lxntl.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdc2lxntl.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpdc2lxntl.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpdc2lxntl.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpdc2lxntl.jl:35 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdc2lxntl.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpdc2lxntl.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpdc2lxntl.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpdc2lxntl.jl:36 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdc2lxntl.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpdc2lxntl.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpdc2lxntl.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpdc2lxntl.jl:37 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdc2lxntl.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpdc2lxntl.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: binary not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdc2lxntl.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert\
    \ the binary to string\n    bin_N_str = string(bin_N)\n    # convert the string\
    \ to array of characters\n    bin_N_arr = collect(bin_N_str)\n    # convert the\
    \ array of characters to array of integers\n    bin_N_arr_int = map(x -> parse(Int64,\
    \ x), bin_N_arr)\n    # sum the array of integers\n    sum_bin_N = sum(bin_N_arr_int)\n\
    \    # convert the sum to string\n    sum_bin_N_str = string(sum_bin_N)\n    #\
    \ return the string\n    return sum_bin_N_str\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp20vrgf7j.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp20vrgf7j.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp20vrgf7j.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp20vrgf7j.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp20vrgf7j.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp20vrgf7j.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp20vrgf7j.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp20vrgf7j.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp20vrgf7j.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(Int64, sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpeh8fcm9w.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpeh8fcm9w.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpeh8fcm9w.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpeh8fcm9w.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpeh8fcm9w.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpeh8fcm9w.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpeh8fcm9w.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpeh8fcm9w.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpeh8fcm9w.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpeh8fcm9w.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpeh8fcm9w.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum the digits\n    sum_digits\
    \ = sum(parse.(Int64, binary_string))\n    # convert sum to binary\n    sum_binary\
    \ = convert(Int64, sum_digits, base=2)\n    # convert sum_binary to string\n \
    \   sum_binary_string = string(sum_binary)\n    return sum_binary_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxbhyi48w.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpxbhyi48w.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpxbhyi48w.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxbhyi48w.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxbhyi48w.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpxbhyi48w.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpxbhyi48w.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxbhyi48w.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxbhyi48w.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4iq_9rsb.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4iq_9rsb.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iq_9rsb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4iq_9rsb.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4iq_9rsb.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iq_9rsb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4iq_9rsb.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4iq_9rsb.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iq_9rsb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4iq_9rsb.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4iq_9rsb.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iq_9rsb.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4iq_9rsb.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4iq_9rsb.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iq_9rsb.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4iq_9rsb.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ to binary\n    bin_N = convert(Int64, N, base=2)\n    # Convert to string\n\
    \    str_bin_N = string(bin_N)\n    # Convert to array of chars\n    arr_bin_N\
    \ = collect(str_bin_N)\n    # Convert to array of integers\n    arr_bin_N = map(x\
    \ -> parse(Int64, x), arr_bin_N)\n    # Sum the array\n    sum_bin_N = sum(arr_bin_N)\n\
    \    # Convert to string\n    str_sum_bin_N = string(sum_bin_N)\n    # Return\
    \ the string\n    return str_sum_bin_N\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4jx2ts24.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp4jx2ts24.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmp4jx2ts24.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4jx2ts24.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp4jx2ts24.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp4jx2ts24.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmp4jx2ts24.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4jx2ts24.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp4jx2ts24.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4jx2ts24.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the number to binary\n    binary = convert(Int64, N, base=2)\n    # convert\
    \ the number to string\n    binary_str = string(binary)\n    # convert the string\
    \ to array of characters\n    binary_arr = collect(binary_str)\n    # convert\
    \ the array of characters to array of integers\n    binary_arr_int = [parse(Int64,\
    \ x) for x in binary_arr]\n    # sum the array of integers\n    sum_binary = sum(binary_arr_int)\n\
    \    # convert the sum to string\n    sum_binary_str = string(sum_binary)\n  \
    \  # return the sum of binary digits\n    return sum_binary_str\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpicp9bteg.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpicp9bteg.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpicp9bteg.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpicp9bteg.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpicp9bteg.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpicp9bteg.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpicp9bteg.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpicp9bteg.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpicp9bteg.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpicp9bteg.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # Convert to string\n\
    \    binary = string(binary)\n    # Convert to array of characters\n    binary\
    \ = split(binary, \"\")\n    # Convert to array of integers\n    binary = map(x\
    \ -> parse(Int64, x), binary)\n    # Sum\n    binary = sum(binary)\n    # Convert\
    \ to string\n    binary = string(binary)\n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjnbcj_iw.jl:34\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpjnbcj_iw.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpjnbcj_iw.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjnbcj_iw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjnbcj_iw.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpjnbcj_iw.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpjnbcj_iw.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjnbcj_iw.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpjnbcj_iw.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjnbcj_iw.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # your\
    \ code here\n    return \"0\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu93jkavh.jl:23\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"0\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu93jkavh.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu93jkavh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu93jkavh.jl:24\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"0\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu93jkavh.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu93jkavh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu93jkavh.jl:25\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"0\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu93jkavh.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu93jkavh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu93jkavh.jl:26\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"0\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu93jkavh.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu93jkavh.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu93jkavh.jl:27\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"0\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu93jkavh.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu93jkavh.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu93jkavh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1ko6stnv.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp1ko6stnv.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp1ko6stnv.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1ko6stnv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1ko6stnv.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp1ko6stnv.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp1ko6stnv.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1ko6stnv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp1ko6stnv.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(string(N, base=2))\n    # convert to string\n  \
    \  binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(Int.(binary_string))\n\
    \    # convert to binary\n    sum_digits_binary = Int(string(sum_digits, base=2))\n\
    \    # convert to string\n    sum_digits_binary_string = string(sum_digits_binary)\n\
    \    return sum_digits_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2v3past9.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmp2v3past9.jl:16\n   [2] macro expansion\n     @ /tmp/tmp2v3past9.jl:32\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2v3past9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp2v3past9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmp2v3past9.jl:16\n   [2] macro expansion\n     @ /tmp/tmp2v3past9.jl:33\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2v3past9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp2v3past9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twicepreci"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2v3past9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6wlx2qtz.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6wlx2qtz.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wlx2qtz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6wlx2qtz.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6wlx2qtz.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wlx2qtz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6wlx2qtz.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6wlx2qtz.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wlx2qtz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6wlx2qtz.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6wlx2qtz.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wlx2qtz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp6wlx2qtz.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6wlx2qtz.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6wlx2qtz.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6wlx2qtz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_o43wgkc.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp_o43wgkc.jl:15\n   [2] macro expansion\n     @ /tmp/tmp_o43wgkc.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_o43wgkc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_o43wgkc.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp_o43wgkc.jl:15\n   [2] macro expansion\n     @ /tmp/tmp_o43wgkc.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_o43wgkc.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_o43wgkc.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp_o43wgkc.jl:15\n   [2] macro expansion\n     @ /tmp/tmp_o43wgkc.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_o43wgkc.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_o43wgkc.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp36y1raj7.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp36y1raj7.jl:15\n   [2] macro expansion\n     @ /tmp/tmp36y1raj7.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp36y1raj7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp36y1raj7.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp36y1raj7.jl:15\n   [2] macro expansion\n     @ /tmp/tmp36y1raj7.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp36y1raj7.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp36y1raj7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp36y1raj7.jl:15\n   [2] macro expansion\n     @ /tmp/tmp36y1raj7.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp36y1raj7.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp36y1raj7.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int64(string(N, base=2))\n    # convert to string\n\
    \    binary = string(binary)\n    # sum digits\n    sum = 0\n    for i in binary\n\
    \        sum += parse(Int64, i)\n    end\n    # convert to string\n    sum = string(sum)\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpctllpl5n.jl:33\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpctllpl5n.jl:16\n   [2] macro expansion\n     @ /tmp/tmpctllpl5n.jl:33\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpctllpl5n.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpctllpl5n.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpctllpl5n.jl:16\n   [2] macro expansion\n     @ /tmp/tmpctllpl5n.jl:34\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpctllpl5n.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpctllpl5n.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twicepreci"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpctllpl5n.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = convert(Int64, N, base=2)\n    # convert\
    \ the binary to string\n    binary_string = string(binary)\n    # sum the digits\n\
    \    sum_digits = sum(parse.(Int64, binary_string))\n    # convert the sum to\
    \ binary\n    sum_digits_binary = convert(Int64, sum_digits, base=2)\n    # convert\
    \ the binary to string\n    sum_digits_binary_string = string(sum_digits_binary)\n\
    \    # return the string\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm47lpbd1.jl:33\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpm47lpbd1.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpm47lpbd1.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm47lpbd1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm47lpbd1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpm47lpbd1.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpm47lpbd1.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm47lpbd1.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpm47lpbd1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm47lpbd1.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum the digits in binary_string\n\
    \    sum_digits = sum(parse.(Int64, collect(binary_string)))\n    # convert sum_digits\
    \ to binary\n    sum_digits_binary = convert(Int64, sum_digits, base=2)\n    #\
    \ convert sum_digits_binary to string\n    sum_digits_binary_string = string(sum_digits_binary)\n\
    \    # return sum_digits_binary_string\n    return sum_digits_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp741gunok.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp741gunok.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp741gunok.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp741gunok.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp741gunok.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp741gunok.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp741gunok.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp741gunok.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp741gunok.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7stf1bt3.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp7stf1bt3.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7stf1bt3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7stf1bt3.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7stf1bt3.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7stf1bt3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7stf1bt3.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7stf1bt3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7stf1bt3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7stf1bt3.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7stf1bt3.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7stf1bt3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp7stf1bt3.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7stf1bt3.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7stf1bt3.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7stf1bt3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary = string(binary)\n    # sum of digits\n    sum = 0\n    for i in binary\n\
    \        sum += parse(Int64, i)\n    end\n    # convert to string\n    sum = string(sum)\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq0bvoreq.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpq0bvoreq.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpq0bvoreq.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq0bvoreq.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpq0bvoreq.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpq0bvoreq.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpq0bvoreq.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq0bvoreq.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpq0bvoreq.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(String, N)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_ska032f.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmp_ska032f.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmp_ska032f.jl:22 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_ska032f.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_ska032f.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmp_ska032f.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmp_ska032f.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_ska032f.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp_ska032f.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractStri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ska032f.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_str = string(binary)\n    # sum the digits\n    sum_digits\
    \ = sum(parse.(Int64, collect(binary_str)))\n    # convert sum to binary\n   \
    \ sum_binary = convert(Int64, sum_digits, base=2)\n    # convert sum_binary to\
    \ string\n    sum_binary_str = string(sum_binary)\n    return sum_binary_str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd0zg33qu.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpd0zg33qu.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpd0zg33qu.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpd0zg33qu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpd0zg33qu.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpd0zg33qu.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpd0zg33qu.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpd0zg33qu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpd0zg33qu.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ the integer to binary\n    binary = convert(Int64, N, base=2)\n    # Convert\
    \ the binary to string\n    binary_string = string(binary)\n    # Convert the\
    \ string to array of characters\n    binary_array = collect(binary_string)\n \
    \   # Convert the array of characters to array of integers\n    binary_array_int\
    \ = [parse(Int64, i) for i in binary_array]\n    # Sum the array of integers\n\
    \    sum_binary = sum(binary_array_int)\n    # Convert the sum to string\n   \
    \ sum_binary_string = string(sum_binary)\n    # Return the string\n    return\
    \ sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc_x77b_p.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpc_x77b_p.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpc_x77b_p.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc_x77b_p.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpc_x77b_p.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpc_x77b_p.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpc_x77b_p.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc_x77b_p.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpc_x77b_p.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc_x77b_p.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpphhzerh_.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpphhzerh_.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpphhzerh_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpphhzerh_.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpphhzerh_.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpphhzerh_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpphhzerh_.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpphhzerh_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpphhzerh_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpphhzerh_.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpphhzerh_.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpphhzerh_.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpphhzerh_.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpphhzerh_.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpphhzerh_.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpphhzerh_.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, base(N, 2))\n    # convert to string\n\
    \    binary = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary)))\n    # convert to string\n    sum_digits = string(sum_digits)\n\
    \    # return\n    return sum_digits\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptudp1wud.jl:31\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: base not defined\n \
    \ Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmptudp1wud.jl:16\n  \
    \ [2] macro expansion\n     @ /tmp/tmptudp1wud.jl:31 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptudp1wud.jl:30\ntest set:\
    \ Error During Test at /tmp/tmptudp1wud.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmptudp1wud.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmptudp1wud.jl:32 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptudp1wud.jl:30\ntest set:\
    \ Error During Test at /tmp/tmptudp1wud.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmptudp1wud.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmptudp1wud.jl:33 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptudp1wud.jl:30\ntest set:\
    \ Error During Test at /tmp/tmptudp1wud.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmptudp1wud.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmptudp1wud.jl:34 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptudp1wud.jl:30\ntest set:\
    \ Error During Test at /tmp/tmptudp1wud.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptudp1wud.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int64(string(N, base=2))\n    # convert to string\n\
    \    binary = string(binary)\n    # sum of digits\n    sum = 0\n    for i in binary\n\
    \        sum += parse(Int64, i)\n    end\n    # return sum\n    return string(sum)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9zw8t9rd.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmp9zw8t9rd.jl:16\n   [2] macro expansion\n     @ /tmp/tmp9zw8t9rd.jl:32\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9zw8t9rd.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp9zw8t9rd.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmp9zw8t9rd.jl:16\n   [2] macro expansion\n     @ /tmp/tmp9zw8t9rd.jl:33\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9zw8t9rd.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp9zw8t9rd.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twicepreci"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9zw8t9rd.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, 2)\n    # convert to string\n    binary_string\
    \ = string(binary)\n    # convert to array of chars\n    binary_array = collect(binary_string)\n\
    \    # convert to array of ints\n    binary_array_int = [parse(Int, i) for i in\
    \ binary_array]\n    # sum the array\n    binary_sum = sum(binary_array_int)\n\
    \    # convert to string\n    binary_sum_string = string(binary_sum)\n    # return\
    \ the string\n    return binary_sum_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpri24nha3.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpri24nha3.jl:16\n   [2] macro expansion\n     @ /tmp/tmpri24nha3.jl:35\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpri24nha3.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpri24nha3.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpri24nha3.jl:16\n   [2] macro expansion\n     @ /tmp/tmpri24nha3.jl:36\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpri24nha3.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpri24nha3.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpri24nha3.jl:16\n   [2] macro expansion\n     @ /tmp/tmpri24nha3.jl:37\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpri24n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpri24nha3.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = Int(string(N, base=2))\n    # convert the\
    \ binary to string\n    string_binary = string(binary)\n    # convert the string\
    \ to an array of characters\n    array_binary = collect(string_binary)\n    #\
    \ convert the array of characters to an array of integers\n    array_binary_int\
    \ = [parse(Int, i) for i in array_binary]\n    # sum the array of integers\n \
    \   sum_binary = sum(array_binary_int)\n    # convert the sum to a string\n  \
    \  string_sum_binary = string(sum_binary)\n    # return the string\n    return\
    \ string_sum_binary\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzm13ck4h.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpzm13ck4h.jl:16\n   [2] macro expansion\n     @ /tmp/tmpzm13ck4h.jl:35\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzm13ck4h.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpzm13ck4h.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpzm13ck4h.jl:16\n   [2] macro expansion\n     @ /tmp/tmpzm13ck4h.jl:36\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzm13ck4h.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpzm13ck4h.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twicepreci"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzm13ck4h.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3et0f919.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp3et0f919.jl:15\n   [2] macro expansion\n     @ /tmp/tmp3et0f919.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3et0f919.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp3et0f919.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp3et0f919.jl:15\n   [2] macro expansion\n     @ /tmp/tmp3et0f919.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3et0f919.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp3et0f919.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp3et0f919.jl:15\n   [2] macro expansion\n     @ /tmp/tmp3et0f919.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3et0f919.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3et0f919.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbs27h62k.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbs27h62k.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs27h62k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbs27h62k.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs27h62k.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs27h62k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbs27h62k.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs27h62k.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs27h62k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbs27h62k.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs27h62k.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs27h62k.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpbs27h62k.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbs27h62k.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbs27h62k.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbs27h62k.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, string(N, base=2))\n    # convert to\
    \ string\n    binary_str = string(binary)\n    # sum of digits\n    sum_digits\
    \ = sum(parse.(Int64, collect(binary_str)))\n    # convert to binary\n    sum_digits_binary\
    \ = convert(Int64, string(sum_digits, base=2))\n    # convert to string\n    sum_digits_binary_str\
    \ = string(sum_digits_binary)\n    # return\n    return sum_digits_binary_str\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwcdknecj.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type String to an object of type Int64\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpwcdknecj.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpwcdknecj.jl:33 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwcdknecj.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpwcdknecj.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpwcdknecj.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpwcdknecj.jl:34 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwcdknecj.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpwcdknecj.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Nu"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjh_d452f.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpjh_d452f.jl:15\n   [2] macro expansion\n     @ /tmp/tmpjh_d452f.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjh_d452f.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpjh_d452f.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpjh_d452f.jl:15\n   [2] macro expansion\n     @ /tmp/tmpjh_d452f.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjh_d452f.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpjh_d452f.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpjh_d452f.jl:15\n   [2] macro expansion\n     @ /tmp/tmpjh_d452f.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjh_d452f.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjh_d452f.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary = string(binary)\n    # initialize sum\n    sum = 0\n   \
    \ # iterate through binary string\n    for i in binary\n        # convert string\
    \ to integer\n        i = parse(Int64, i)\n        # add to sum\n        sum +=\
    \ i\n    end\n    # return sum\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzvpe4qhr.jl:36\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpzvpe4qhr.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpzvpe4qhr.jl:36\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzvpe4qhr.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpzvpe4qhr.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpzvpe4qhr.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpzvpe4qhr.jl:37 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzvpe4qhr.jl:35\\ntest set:\
    \ Error During Test at /tmp/tmpzvpe4qhr.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(String, N)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgdoz1hrm.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmpgdoz1hrm.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpgdoz1hrm.jl:22 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgdoz1hrm.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgdoz1hrm.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmpgdoz1hrm.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpgdoz1hrm.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgdoz1hrm.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgdoz1hrm.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractStri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdoz1hrm.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_str = string(binary)\n    # sum of digits\n    sum_digits\
    \ = sum(parse.(Int64, binary_str))\n    # convert sum to binary\n    sum_binary\
    \ = convert(Int64, sum_digits, base=2)\n    # convert sum_binary to string\n \
    \   sum_binary_str = string(sum_binary)\n    return sum_binary_str\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"\
    1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\
    \t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr24k9piu.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpr24k9piu.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpr24k9piu.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpr24k9piu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpr24k9piu.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpr24k9piu.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpr24k9piu.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpr24k9piu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpr24k9piu.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(digits(N, base=2))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg7n51b5x.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmpg7n51b5x.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpg7n51b5x.jl:22 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7n51b5x.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpg7n51b5x.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmpg7n51b5x.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpg7n51b5x.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7n51b5x.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpg7n51b5x.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractStri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7n51b5x.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdujogi98.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpdujogi98.jl:15\n   [2] macro expansion\n     @ /tmp/tmpdujogi98.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdujogi98.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdujogi98.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpdujogi98.jl:15\n   [2] macro expansion\n     @ /tmp/tmpdujogi98.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdujogi98.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpdujogi98.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpdujogi98.jl:15\n   [2] macro expansion\n     @ /tmp/tmpdujogi98.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdujogi98.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdujogi98.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8wr6z88c.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp8wr6z88c.jl:15\n   [2] macro expansion\n     @ /tmp/tmp8wr6z88c.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8wr6z88c.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp8wr6z88c.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp8wr6z88c.jl:15\n   [2] macro expansion\n     @ /tmp/tmp8wr6z88c.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8wr6z88c.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp8wr6z88c.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp8wr6z88c.jl:15\n   [2] macro expansion\n     @ /tmp/tmp8wr6z88c.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8wr6z88c.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8wr6z88c.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(map(x\
    \ -> parse(Int64, x), binary_string))\n    # convert to binary\n    sum_digits_binary\
    \ = convert(Int64, sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string\
    \ = string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"\
    1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\
    \t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe9ge2et7.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpe9ge2et7.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpe9ge2et7.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe9ge2et7.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpe9ge2et7.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpe9ge2et7.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpe9ge2et7.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe9ge2et7.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpe9ge2et7.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9ge2et7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary_N = convert(Int64, binary(N))\n    # convert binary_N\
    \ to string\n    binary_N_string = string(binary_N)\n    # sum the digits of binary_N_string\n\
    \    sum_digits = sum(parse.(Int64, binary_N_string))\n    # convert sum_digits\
    \ to binary\n    binary_sum_digits = convert(Int64, binary(sum_digits))\n    #\
    \ convert binary_sum_digits to string\n    binary_sum_digits_string = string(binary_sum_digits)\n\
    \    # return binary_sum_digits_string\n    return binary_sum_digits_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8e8kw8jd.jl:33\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp8e8kw8jd.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmp8e8kw8jd.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8e8kw8jd.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8e8kw8jd.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmp8e8kw8jd.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmp8e8kw8jd.jl:34 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8e8kw8jd.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8e8kw8jd.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmp8e8kw8jd.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmp8e8kw8jd.jl:35 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8e8kw8jd.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8e8kw8jd.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmp8e8kw8jd.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmp8e8kw8jd.jl:36 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8e8kw8jd.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp8e8kw8jd.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: binary not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8e8kw8jd.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplemg7ppq.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmplemg7ppq.jl:15\n   [2] macro expansion\n     @ /tmp/tmplemg7ppq.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplemg7ppq.jl:21\ntest set:\
    \ Error During Test at /tmp/tmplemg7ppq.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmplemg7ppq.jl:15\n   [2] macro expansion\n     @ /tmp/tmplemg7ppq.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplemg7ppq.jl:21\ntest set:\
    \ Error During Test at /tmp/tmplemg7ppq.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmplemg7ppq.jl:15\n   [2] macro expansion\n     @ /tmp/tmplemg7ppq.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplemg7ppq.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplemg7ppq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = Int(string(N, base=2))\n    # convert the\
    \ binary to string\n    binary_string = string(binary)\n    # sum the digits of\
    \ the binary\n    sum_digits = sum(int(i) for i in binary_string)\n    # return\
    \ the sum of digits\n    return sum_digits\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwxvgvg1g.jl:29\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpwxvgvg1g.jl:16\n   [2] macro expansion\n     @ /tmp/tmpwxvgvg1g.jl:29\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwxvgvg1g.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpwxvgvg1g.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpwxvgvg1g.jl:16\n   [2] macro expansion\n     @ /tmp/tmpwxvgvg1g.jl:30\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwxvgvg1g.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpwxvgvg1g.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twicepreci"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwxvgvg1g.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # convert binary string to array\
    \ of characters\n    binary_array = collect(binary_string)\n    # convert array\
    \ of characters to array of integers\n    binary_array_int = [parse(Int64, i)\
    \ for i in binary_array]\n    # sum the array of integers\n    binary_sum = sum(binary_array_int)\n\
    \    # convert binary_sum to string\n    binary_sum_string = string(binary_sum)\n\
    \    # return binary_sum_string\n    return binary_sum_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_410wy7v.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp_410wy7v.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmp_410wy7v.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_410wy7v.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp_410wy7v.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp_410wy7v.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmp_410wy7v.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_410wy7v.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp_410wy7v.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_410wy7v.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(int(i) for i in string(N, base=2))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfcw7fw1r.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpfcw7fw1r.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpfcw7fw1r.jl:22 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfcw7fw1r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfcw7fw1r.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpfcw7fw1r.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpfcw7fw1r.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfcw7fw1r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfcw7fw1r.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpfcw7fw1r.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpfcw7fw1r.jl:24 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfcw7fw1r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfcw7fw1r.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpfcw7fw1r.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpfcw7fw1r.jl:25 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfcw7fw1r.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfcw7fw1r.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: int not defined\n  Stacktrace:\n\
    \   [1] solv"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcw7fw1r.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprdwh0om8.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmprdwh0om8.jl:15\n   [2] macro expansion\n     @ /tmp/tmprdwh0om8.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprdwh0om8.jl:21\ntest set:\
    \ Error During Test at /tmp/tmprdwh0om8.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmprdwh0om8.jl:15\n   [2] macro expansion\n     @ /tmp/tmprdwh0om8.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprdwh0om8.jl:21\ntest set:\
    \ Error During Test at /tmp/tmprdwh0om8.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmprdwh0om8.jl:15\n   [2] macro expansion\n     @ /tmp/tmprdwh0om8.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprdwh0om8.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdwh0om8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, base=2)\n    # convert to string\n    binary\
    \ = string(binary)\n    # sum all digits\n    sum = 0\n    for i in binary\n \
    \       sum += parse(Int, i)\n    end\n    return string(sum)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk_5l_w2b.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Int64; base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at boot.jl:752 got unsupported keyword argument \"base\"\\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760 got unsupported keyword argument \"base\"\\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at char.jl:50 got unsupported keyword argument \"base\"\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpk_5l_w2b.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpk_5l_w2b.jl:31 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpk_5l_w2b.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpk_5l_w2b.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\
    \ got unsupported keyword argument \"base\"\\n    (::Type{T})(::T) where T<:Number\
    \ at boot.jl:760 got unsupported keyword argument \"base\"\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpk_5l_w2b.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpk_5l_w2b.jl:32 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpk_5l_w2b.jl:30\\ntest set:\
    \ Error During Test at /tmp/tmpk_5l_w2b.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum the digits of binary_string\n\
    \    sum_digits = sum(map(x -> parse(Int64, x), collect(binary_string)))\n   \
    \ # convert sum_digits to binary\n    sum_digits_binary = convert(Int64, sum_digits,\
    \ base=2)\n    # convert sum_digits_binary to string\n    sum_digits_binary_string\
    \ = string(sum_digits_binary)\n    # return sum_digits_binary_string\n    return\
    \ sum_digits_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2r8cys2p.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp2r8cys2p.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp2r8cys2p.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2r8cys2p.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp2r8cys2p.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp2r8cys2p.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp2r8cys2p.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2r8cys2p.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp2r8cys2p.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # convert string to array\n\
    \    binary_array = [parse(Int64, x) for x in binary_string]\n    # sum all elements\
    \ in array\n    binary_sum = sum(binary_array)\n    # convert binary_sum to string\n\
    \    binary_sum_string = string(binary_sum)\n    # return binary_sum_string\n\
    \    return binary_sum_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnqkbnn9x.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpnqkbnn9x.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpnqkbnn9x.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnqkbnn9x.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpnqkbnn9x.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpnqkbnn9x.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpnqkbnn9x.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnqkbnn9x.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpnqkbnn9x.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, 2)\n    # convert to string\n    binary = string(binary)\n\
    \    # sum of digits\n    sum = 0\n    for i in binary\n        sum += parse(Int,\
    \ i)\n    end\n    # convert to binary\n    sum = Int(sum, 2)\n    # convert to\
    \ string\n    sum = string(sum)\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppuqz1bh2.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmppuqz1bh2.jl:16\n   [2] macro expansion\n     @ /tmp/tmppuqz1bh2.jl:35\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppuqz1bh2.jl:34\ntest set:\
    \ Error During Test at /tmp/tmppuqz1bh2.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmppuqz1bh2.jl:16\n   [2] macro expansion\n     @ /tmp/tmppuqz1bh2.jl:36\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppuqz1bh2.jl:34\ntest set:\
    \ Error During Test at /tmp/tmppuqz1bh2.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmppuqz1bh2.jl:16\n   [2] macro expansion\n     @ /tmp/tmppuqz1bh2.jl:37\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppuqz1"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppuqz1bh2.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum the digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpac2sb0qn.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpac2sb0qn.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpac2sb0qn.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpac2sb0qn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpac2sb0qn.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpac2sb0qn.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpac2sb0qn.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpac2sb0qn.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpac2sb0qn.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # Convert binary to\
    \ string\n    binary = string(binary)\n    # Convert string to array of characters\n\
    \    binary = collect(binary)\n    # Convert array of characters to array of integers\n\
    \    binary = parse.(Int64, binary)\n    # Sum the array of integers\n    binary\
    \ = sum(binary)\n    # Convert the sum to string\n    binary = string(binary)\n\
    \    # Return the string\n    return binary\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoqi_bmm3.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpoqi_bmm3.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpoqi_bmm3.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpoqi_bmm3.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpoqi_bmm3.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpoqi_bmm3.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpoqi_bmm3.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpoqi_bmm3.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpoqi_bmm3.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert to string\n\
    \    bin_N_str = string(bin_N)\n    # sum the digits\n    sum_digits = sum(parse.(Int64,\
    \ bin_N_str))\n    # convert to string\n    sum_digits_str = string(sum_digits)\n\
    \    return sum_digits_str\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp09z44fq0.jl:30\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp09z44fq0.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmp09z44fq0.jl:30 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp09z44fq0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp09z44fq0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp09z44fq0.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmp09z44fq0.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp09z44fq0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp09z44fq0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp09z44fq0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, base=2)\n    # convert to string\n    binary\
    \ = string(binary)\n    # sum of digits\n    sum = 0\n    for i in binary\n  \
    \      sum += parse(Int, i)\n    end\n    # convert to binary\n    sum = Int(sum,\
    \ base=2)\n    # convert to string\n    sum = string(sum)\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplt2o76s4.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmplt2o76s4.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmplt2o76s4.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplt2o76s4.jl:34\ntest set:\
    \ Error During Test at /tmp/tmplt2o76s4.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmplt2o76s4.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmplt2o76s4.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplt2o76s4.jl:34\ntest set:\
    \ Error During Test at /tmp/tmplt2o76s4.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplt2o76s4.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpchddqizr.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpchddqizr.jl:15\n   [2] macro expansion\n     @ /tmp/tmpchddqizr.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpchddqizr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpchddqizr.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpchddqizr.jl:15\n   [2] macro expansion\n     @ /tmp/tmpchddqizr.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpchddqizr.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpchddqizr.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpchddqizr.jl:15\n   [2] macro expansion\n     @ /tmp/tmpchddqizr.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpchddqizr.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchddqizr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ bin(N)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphbv9wd6a.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmphbv9wd6a.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmphbv9wd6a.jl:22 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphbv9wd6a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphbv9wd6a.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmphbv9wd6a.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmphbv9wd6a.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphbv9wd6a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphbv9wd6a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmphbv9wd6a.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmphbv9wd6a.jl:24 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphbv9wd6a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphbv9wd6a.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmphbv9wd6a.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmphbv9wd6a.jl:25 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphbv9wd6a.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphbv9wd6a.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: bin not defined\n  Stacktrace:\n\
    \   [1] solv"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphbv9wd6a.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, base=2)\n    # convert to string\n    binary_str\
    \ = string(binary)\n    # sum the digits\n    sum_digits = sum(parse.(Int, binary_str))\n\
    \    # convert to binary\n    sum_digits_binary = Int(sum_digits, base=2)\n  \
    \  # convert to string\n    sum_digits_binary_str = string(sum_digits_binary)\n\
    \    return sum_digits_binary_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprz6v3rra.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmprz6v3rra.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmprz6v3rra.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprz6v3rra.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprz6v3rra.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmprz6v3rra.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmprz6v3rra.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprz6v3rra.jl:31\ntest set:\
    \ Error During Test at /tmp/tmprz6v3rra.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprz6v3rra.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin = convert(Int64, N, base=2)\n    # convert bin to string\n\
    \    bin = string(bin)\n    # convert bin to array of characters\n    bin = collect(bin)\n\
    \    # convert each character to integer\n    bin = map(x -> parse(Int64, x),\
    \ bin)\n    # sum all digits\n    bin = sum(bin)\n    # convert bin to string\n\
    \    bin = string(bin)\n    return bin\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps0rs2cgz.jl:34\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmps0rs2cgz.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmps0rs2cgz.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps0rs2cgz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmps0rs2cgz.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmps0rs2cgz.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmps0rs2cgz.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmps0rs2cgz.jl:33\ntest set:\
    \ Error During Test at /tmp/tmps0rs2cgz.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps0rs2cgz.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp47sb1pls.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp47sb1pls.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp47sb1pls.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp47sb1pls.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp47sb1pls.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp47sb1pls.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp47sb1pls.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp47sb1pls.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp47sb1pls.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfzualbed.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpfzualbed.jl:15\n   [2] macro expansion\n     @ /tmp/tmpfzualbed.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfzualbed.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfzualbed.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpfzualbed.jl:15\n   [2] macro expansion\n     @ /tmp/tmpfzualbed.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfzualbed.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpfzualbed.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpfzualbed.jl:15\n   [2] macro expansion\n     @ /tmp/tmpfzualbed.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfzualbed.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfzualbed.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin = convert(Int64, N, base=2)\n    # convert to string\n  \
    \  bin_str = string(bin)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ bin_str))\n    # convert to binary\n    sum_digits_bin = convert(Int64, sum_digits,\
    \ base=2)\n    # convert to string\n    sum_digits_bin_str = string(sum_digits_bin)\n\
    \    return sum_digits_bin_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6vjrgk6i.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp6vjrgk6i.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp6vjrgk6i.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6vjrgk6i.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp6vjrgk6i.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp6vjrgk6i.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp6vjrgk6i.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp6vjrgk6i.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp6vjrgk6i.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ the number to binary\n    binary = convert(Int64, N, base=2)\n    # Convert\
    \ the binary number to string\n    binary_string = string(binary)\n    # Convert\
    \ the string to array of characters\n    binary_array = collect(binary_string)\n\
    \    # Convert the array of characters to array of integers\n    binary_array_int\
    \ = [parse(Int64, i) for i in binary_array]\n    # Sum the array of integers\n\
    \    sum_binary = sum(binary_array_int)\n    # Convert the sum to string\n   \
    \ sum_binary_string = string(sum_binary)\n    # Return the string\n    return\
    \ sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3nw2xpvf.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp3nw2xpvf.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmp3nw2xpvf.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3nw2xpvf.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp3nw2xpvf.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp3nw2xpvf.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmp3nw2xpvf.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3nw2xpvf.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp3nw2xpvf.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3nw2xpvf.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgiln3589.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpgiln3589.jl:15\n   [2] macro expansion\n     @ /tmp/tmpgiln3589.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgiln3589.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgiln3589.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpgiln3589.jl:15\n   [2] macro expansion\n     @ /tmp/tmpgiln3589.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgiln3589.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpgiln3589.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpgiln3589.jl:15\n   [2] macro expansion\n     @ /tmp/tmpgiln3589.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgiln3589.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgiln3589.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxp0v8rr9.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpxp0v8rr9.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpxp0v8rr9.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxp0v8rr9.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxp0v8rr9.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpxp0v8rr9.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpxp0v8rr9.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxp0v8rr9.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpxp0v8rr9.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_of_digits =\
    \ sum(parse.(Int64, collect(binary_string)))\n    # convert to binary\n    sum_of_digits_binary\
    \ = convert(Int64, sum_of_digits, base=2)\n    # convert to string\n    sum_of_digits_binary_string\
    \ = string(sum_of_digits_binary)\n    return sum_of_digits_binary_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpi50mgz5u.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpi50mgz5u.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpi50mgz5u.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi50mgz5u.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpi50mgz5u.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpi50mgz5u.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpi50mgz5u.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi50mgz5u.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpi50mgz5u.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi50mgz5u.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    \"\"\"\n\
    \    This function takes an integer and returns a string of binary number\n  \
    \  \"\"\"\n    # convert the integer to binary\n    binary = convert(Int64, N,\
    \ base=2)\n    # convert the binary to string\n    binary_string = string(binary)\n\
    \    # initialize the sum of digits\n    sum_of_digits = 0\n    # loop through\
    \ the binary string\n    for i in binary_string\n        # sum the digits\n  \
    \      sum_of_digits += parse(Int64, i)\n    end\n    # return the sum of digits\n\
    \    return sum_of_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqu_jofuh.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpqu_jofuh.jl:19\\n   [2] macro expansion\\n     @ /tmp/tmpqu_jofuh.jl:37\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqu_jofuh.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpqu_jofuh.jl:38\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpqu_jofuh.jl:19\\\
    n   [2] macro expansion\\n     @ /tmp/tmpqu_jofuh.jl:38 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqu_jofuh.jl:36\\ntest set:\
    \ Error During Test at /tmp/tmpqu_jofuh.jl:39\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary = string(binary)\n    # sum of digits\n    sum = 0\n    for i in binary\n\
    \        sum += parse(Int64, i)\n    end\n    # convert to string\n    sum = string(sum)\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt8yknt5h.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpt8yknt5h.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpt8yknt5h.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpt8yknt5h.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpt8yknt5h.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpt8yknt5h.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpt8yknt5h.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpt8yknt5h.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpt8yknt5h.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsu2q4e1r.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsu2q4e1r.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsu2q4e1r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsu2q4e1r.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsu2q4e1r.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsu2q4e1r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsu2q4e1r.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsu2q4e1r.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsu2q4e1r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsu2q4e1r.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsu2q4e1r.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsu2q4e1r.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpsu2q4e1r.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsu2q4e1r.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsu2q4e1r.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsu2q4e1r.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, base=2)\n    # convert to string\n    binary_str\
    \ = string(binary)\n    # sum of digits\n    sum_digits = sum(int(i) for i in\
    \ binary_str)\n    return sum_digits\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3alcfv7r.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Int64; base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at boot.jl:752 got unsupported keyword argument \"base\"\\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760 got unsupported keyword argument \"base\"\\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at char.jl:50 got unsupported keyword argument \"base\"\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp3alcfv7r.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmp3alcfv7r.jl:28 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3alcfv7r.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp3alcfv7r.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\
    \ got unsupported keyword argument \"base\"\\n    (::Type{T})(::T) where T<:Number\
    \ at boot.jl:760 got unsupported keyword argument \"base\"\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp3alcfv7r.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp3alcfv7r.jl:29 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3alcfv7r.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmp3alcfv7r.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary = string(binary)\n    # sum the digits\n    sum = 0\n    for i in\
    \ binary\n        sum += parse(Int64, i)\n    end\n    # convert to binary\n \
    \   sum = convert(Int64, sum, base=2)\n    # convert to string\n    sum = string(sum)\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwt097_wv.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpwt097_wv.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpwt097_wv.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwt097_wv.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpwt097_wv.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpwt097_wv.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpwt097_wv.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwt097_wv.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpwt097_wv.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(digits(N, base=2))\n    # convert to string\n  \
    \  binary = string(binary)\n    # sum the digits\n    sum = 0\n    for i in binary\n\
    \        sum += parse(Int, i)\n    end\n    # return the sum\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuy386n6h.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Vector{Int64})\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpuy386n6h.jl:16\n   [2] macro expansion\n     @ /tmp/tmpuy386n6h.jl:32\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuy386n6h.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpuy386n6h.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Vector{Int64})\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpuy386n6h.jl:16\n   [2] macro expansion\n     @ /tmp/tmpuy386n6h.jl:33\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuy386n6h.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpuy386n6h.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Vector{Int64})\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuy386n6h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjpt0irie.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpjpt0irie.jl:15\n   [2] macro expansion\n     @ /tmp/tmpjpt0irie.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjpt0irie.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpjpt0irie.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpjpt0irie.jl:15\n   [2] macro expansion\n     @ /tmp/tmpjpt0irie.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjpt0irie.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpjpt0irie.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpjpt0irie.jl:15\n   [2] macro expansion\n     @ /tmp/tmpjpt0irie.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjpt0irie.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjpt0irie.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin_N = Int(N, base=2)\n    # convert to string\n    str_bin_N\
    \ = string(bin_N)\n    # sum of digits\n    sum_digits = sum(int(i) for i in str_bin_N)\n\
    \    # convert to binary\n    bin_sum_digits = Int(sum_digits, base=2)\n    #\
    \ convert to string\n    str_bin_sum_digits = string(bin_sum_digits)\n    return\
    \ str_bin_sum_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbhtxu1qi.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpbhtxu1qi.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpbhtxu1qi.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbhtxu1qi.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpbhtxu1qi.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpbhtxu1qi.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpbhtxu1qi.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbhtxu1qi.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpbhtxu1qi.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbhtxu1qi.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = convert(Int64, N, base=2)\n    # convert\
    \ the binary to string\n    binary_string = string(binary)\n    # sum the digits\
    \ of the binary string\n    sum_digits = sum(parse.(Int64, collect(binary_string)))\n\
    \    # convert the sum to binary\n    sum_digits_binary = convert(Int64, sum_digits,\
    \ base=2)\n    # convert the binary to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    # return the binary string\n    return sum_digits_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptnbvopq3.jl:33\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmptnbvopq3.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmptnbvopq3.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptnbvopq3.jl:32\ntest set:\
    \ Error During Test at /tmp/tmptnbvopq3.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmptnbvopq3.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmptnbvopq3.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptnbvopq3.jl:32\ntest set:\
    \ Error During Test at /tmp/tmptnbvopq3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptnbvopq3.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_str = string(binary)\n    # sum of digits\n    sum_digits\
    \ = sum(parse.(Int64, collect(binary_str)))\n    # convert sum of digits to binary\n\
    \    sum_digits_binary = convert(Int64, sum_digits, base=2)\n    # convert sum\
    \ of digits binary to string\n    sum_digits_binary_str = string(sum_digits_binary)\n\
    \    return sum_digits_binary_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf7_6ps5o.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpf7_6ps5o.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpf7_6ps5o.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf7_6ps5o.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpf7_6ps5o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpf7_6ps5o.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpf7_6ps5o.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf7_6ps5o.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpf7_6ps5o.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf7_6ps5o.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum all digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc5g73zp2.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpc5g73zp2.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpc5g73zp2.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc5g73zp2.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpc5g73zp2.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpc5g73zp2.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpc5g73zp2.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc5g73zp2.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpc5g73zp2.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqr_1zpa7.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpqr_1zpa7.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpqr_1zpa7.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqr_1zpa7.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpqr_1zpa7.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpqr_1zpa7.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpqr_1zpa7.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqr_1zpa7.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpqr_1zpa7.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpqr_1zpa7.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpqr_1zpa7.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ integer to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary\
    \ to string\n    binary_string = string(binary)\n    # sum the digits\n    sum_digits\
    \ = sum(parse.(Int64, collect(binary_string)))\n    # convert sum to binary\n\
    \    sum_binary = convert(Int64, sum_digits, base=2)\n    # convert binary to\
    \ string\n    sum_binary_string = string(sum_binary)\n    return sum_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0oigwwev.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp0oigwwev.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmp0oigwwev.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0oigwwev.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp0oigwwev.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmp0oigwwev.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmp0oigwwev.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0oigwwev.jl:31\ntest set:\
    \ Error During Test at /tmp/tmp0oigwwev.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0oigwwev.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaaxq3ytg.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpaaxq3ytg.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaxq3ytg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpaaxq3ytg.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaaxq3ytg.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaxq3ytg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpaaxq3ytg.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaaxq3ytg.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaxq3ytg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpaaxq3ytg.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaaxq3ytg.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaxq3ytg.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpaaxq3ytg.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaaxq3ytg.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaxq3ytg.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaaxq3ytg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # convert to array\n    binary_array\
    \ = [parse(Int64, i) for i in binary_string]\n    # sum array\n    sum_binary\
    \ = sum(binary_array)\n    # convert to string\n    sum_binary_string = string(sum_binary)\n\
    \    return sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptygtx6tg.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmptygtx6tg.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmptygtx6tg.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptygtx6tg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptygtx6tg.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmptygtx6tg.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmptygtx6tg.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptygtx6tg.jl:31\ntest set:\
    \ Error During Test at /tmp/tmptygtx6tg.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptygtx6tg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(string(N, base=2))\n    # convert to string\n  \
    \  binary = string(binary)\n    # sum of digits\n    sum = 0\n    for i in binary\n\
    \        sum += parse(Int, i)\n    end\n    return string(sum)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcybj9ebe.jl:31\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpcybj9ebe.jl:16\n   [2] macro expansion\n     @ /tmp/tmpcybj9ebe.jl:31\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcybj9ebe.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpcybj9ebe.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmpcybj9ebe.jl:16\n   [2] macro expansion\n     @ /tmp/tmpcybj9ebe.jl:32\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcybj9ebe.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpcybj9ebe.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::String)\n\
    \  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twicepreci"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcybj9ebe.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    \n    return sum_digits_binary_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpssbadx1j.jl:33\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpssbadx1j.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpssbadx1j.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpssbadx1j.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpssbadx1j.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpssbadx1j.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpssbadx1j.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpssbadx1j.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpssbadx1j.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpssbadx1j.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, base=2)\n    # convert to string\n    binary_str\
    \ = string(binary)\n    # sum digits\n    sum_digits = sum(int(x) for x in binary_str)\n\
    \    # convert to binary\n    sum_digits_binary = Int(sum_digits, base=2)\n  \
    \  # convert to string\n    sum_digits_binary_str = string(sum_digits_binary)\n\
    \    return sum_digits_binary_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn4ktw5xh.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpn4ktw5xh.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpn4ktw5xh.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn4ktw5xh.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpn4ktw5xh.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752 got unsupported\
    \ keyword argument \"base\"\n    (::Type{T})(::T) where T<:Number at boot.jl:760\
    \ got unsupported keyword argument \"base\"\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpn4ktw5xh.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpn4ktw5xh.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn4ktw5xh.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpn4ktw5xh.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn4ktw5xh.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert bin_N to string\n\
    \    str_bin_N = string(bin_N)\n    # sum the digits of str_bin_N\n    sum_digits\
    \ = sum(parse.(Int64, str_bin_N))\n    # convert sum_digits to binary\n    bin_sum_digits\
    \ = convert(Int64, sum_digits, base=2)\n    # convert bin_sum_digits to string\n\
    \    str_bin_sum_digits = string(bin_sum_digits)\n    # return str_bin_sum_digits\n\
    \    return str_bin_sum_digits\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfypakov2.jl:33\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpfypakov2.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpfypakov2.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfypakov2.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpfypakov2.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpfypakov2.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpfypakov2.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfypakov2.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpfypakov2.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfypakov2.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp94ota4_8.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp94ota4_8.jl:15\n   [2] macro expansion\n     @ /tmp/tmp94ota4_8.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp94ota4_8.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp94ota4_8.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp94ota4_8.jl:15\n   [2] macro expansion\n     @ /tmp/tmp94ota4_8.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp94ota4_8.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp94ota4_8.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp94ota4_8.jl:15\n   [2] macro expansion\n     @ /tmp/tmp94ota4_8.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp94ota4_8.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp94ota4_8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    str_bin_N = string(bin_N)\n    # convert string to array of characters\n\
    \    arr_str_bin_N = collect(str_bin_N)\n    # convert array of characters to\
    \ array of integers\n    arr_int_bin_N = [parse(Int64, x) for x in arr_str_bin_N]\n\
    \    # sum the array of integers\n    sum_arr_int_bin_N = sum(arr_int_bin_N)\n\
    \    # convert sum to string\n    str_sum_arr_int_bin_N = string(sum_arr_int_bin_N)\n\
    \    # return string\n    return str_sum_arr_int_bin_N\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq0_1qsgg.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpq0_1qsgg.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpq0_1qsgg.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq0_1qsgg.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpq0_1qsgg.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpq0_1qsgg.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpq0_1qsgg.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq0_1qsgg.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpq0_1qsgg.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq2_4an0s.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpq2_4an0s.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpq2_4an0s.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq2_4an0s.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpq2_4an0s.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpq2_4an0s.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpq2_4an0s.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq2_4an0s.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpq2_4an0s.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpq2_4an0s.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpq2_4an0s.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_str = string(binary)\n    # convert string to array\n   \
    \ binary_arr = [parse(Int64, i) for i in binary_str]\n    # sum the array\n  \
    \  sum_binary = sum(binary_arr)\n    # convert to string\n    sum_binary_str =\
    \ string(sum_binary)\n    return sum_binary_str\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp52wxblnz.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp52wxblnz.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp52wxblnz.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp52wxblnz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp52wxblnz.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp52wxblnz.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp52wxblnz.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp52wxblnz.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp52wxblnz.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprivte_2n.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmprivte_2n.jl:15\n   [2] macro expansion\n     @ /tmp/tmprivte_2n.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprivte_2n.jl:21\ntest set:\
    \ Error During Test at /tmp/tmprivte_2n.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmprivte_2n.jl:15\n   [2] macro expansion\n     @ /tmp/tmprivte_2n.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprivte_2n.jl:21\ntest set:\
    \ Error During Test at /tmp/tmprivte_2n.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmprivte_2n.jl:15\n   [2] macro expansion\n     @ /tmp/tmprivte_2n.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprivte_2n.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprivte_2n.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum of digits\n    sum_digits\
    \ = sum(map(x -> parse(Int64, x), split(binary_string, \"\")))\n    # convert\
    \ sum of digits to binary\n    sum_digits_binary = convert(Int64, sum_digits,\
    \ base=2)\n    # convert sum of digits binary to string\n    sum_digits_binary_string\
    \ = string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"\
    1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\
    \t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp75cenk31.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp75cenk31.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp75cenk31.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp75cenk31.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp75cenk31.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp75cenk31.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp75cenk31.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp75cenk31.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp75cenk31.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum the digits of binary_string\n\
    \    binary_sum = sum(map(parse, collect(binary_string)))\n    # convert binary_sum\
    \ to binary\n    binary_sum_binary = convert(Int64, binary_sum, base=2)\n    #\
    \ convert binary_sum_binary to string\n    binary_sum_binary_string = string(binary_sum_binary)\n\
    \    # return binary_sum_binary_string\n    return binary_sum_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqrwy4n2m.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpqrwy4n2m.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpqrwy4n2m.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqrwy4n2m.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpqrwy4n2m.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpqrwy4n2m.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpqrwy4n2m.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqrwy4n2m.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpqrwy4n2m.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = Int(N, 2)\n    # convert the binary to string\n\
    \    binary_string = string(binary)\n    # convert the string to array of characters\n\
    \    binary_array = collect(binary_string)\n    # convert the array of characters\
    \ to array of integers\n    binary_array_int = parse.(Int, binary_array)\n   \
    \ # sum the array of integers\n    sum_binary = sum(binary_array_int)\n    # convert\
    \ the sum to string\n    sum_binary_string = string(sum_binary)\n    # return\
    \ the string\n    return sum_binary_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm1ro5z9r.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at boot.jl:752\\n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpm1ro5z9r.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpm1ro5z9r.jl:35 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpm1ro5z9r.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpm1ro5z9r.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\\\
    n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpm1ro5z9r.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpm1ro5z9r.jl:36 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpm1ro5z9r.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpm1ro5z9r.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\\\
    n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpm1ro5z9r.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpm1ro5z9r.jl:37 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlin"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(Int.(digits(N, base=2))))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4vzp5tgi.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4vzp5tgi.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4vzp5tgi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4vzp5tgi.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4vzp5tgi.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4vzp5tgi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4vzp5tgi.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4vzp5tgi.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4vzp5tgi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4vzp5tgi.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4vzp5tgi.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4vzp5tgi.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp4vzp5tgi.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4vzp5tgi.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4vzp5tgi.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4vzp5tgi.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(string(N, base=2))\n    # sum digits\n    sum =\
    \ 0\n    while binary > 0\n        sum += binary % 10\n        binary = binary\
    \ \xF7 10\n    end\n    return string(sum)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk_jum1gw.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::String)\\n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpk_jum1gw.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpk_jum1gw.jl:30 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpk_jum1gw.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpk_jum1gw.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:243\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpk_jum1gw.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpk_jum1gw.jl:31 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpk_jum1gw.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpk_jum1gw.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::String)\\\
    n  Closest candidates are:\\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar,\
    \ Number} at char.jl:50\\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128,\
    \ Int16, Int32, Int64, Int8} at gmp.jl:356\\n    (::Type{T})(!Matched::Base."
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(digits(N, base=2))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1t4d6ivg.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmp1t4d6ivg.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmp1t4d6ivg.jl:22 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1t4d6ivg.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp1t4d6ivg.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\n    ...\n  Stacktrace:\n  \
    \ [1] solve(N::Int64)\n     @ Main /tmp/tmp1t4d6ivg.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmp1t4d6ivg.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp1t4d6ivg.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp1t4d6ivg.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractStri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1t4d6ivg.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum the digits of the binary\
    \ string\n    sum_digits = sum(parse.(Int64, collect(binary_string)))\n    # convert\
    \ sum_digits to binary\n    sum_digits_binary = convert(Int64, sum_digits, base=2)\n\
    \    # convert sum_digits_binary to string\n    sum_digits_binary_string = string(sum_digits_binary)\n\
    \    # return sum_digits_binary_string\n    return sum_digits_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjts0ep0a.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpjts0ep0a.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpjts0ep0a.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjts0ep0a.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpjts0ep0a.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpjts0ep0a.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpjts0ep0a.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjts0ep0a.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpjts0ep0a.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum the digits of the binary\
    \ string\n    sum_digits = sum(parse.(Int64, collect(binary_string)))\n    # convert\
    \ sum_digits to binary\n    sum_digits_binary = convert(Int64, sum_digits, base=2)\n\
    \    # convert sum_digits_binary to string\n    sum_digits_binary_string = string(sum_digits_binary)\n\
    \    # return sum_digits_binary_string\n    return sum_digits_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0_8lyv83.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp0_8lyv83.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp0_8lyv83.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0_8lyv83.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp0_8lyv83.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp0_8lyv83.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp0_8lyv83.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0_8lyv83.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmp0_8lyv83.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp09tfsl81.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp09tfsl81.jl:15\n   [2] macro expansion\n     @ /tmp/tmp09tfsl81.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp09tfsl81.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp09tfsl81.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp09tfsl81.jl:15\n   [2] macro expansion\n     @ /tmp/tmp09tfsl81.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp09tfsl81.jl:21\ntest set:\
    \ Error During Test at /tmp/tmp09tfsl81.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmp09tfsl81.jl:15\n   [2] macro expansion\n     @ /tmp/tmp09tfsl81.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp09tfsl81.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp09tfsl81.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(String, N)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdj1c83iq.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpdj1c83iq.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmpdj1c83iq.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdj1c83iq.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpdj1c83iq.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpdj1c83iq.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpdj1c83iq.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdj1c83iq.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpdj1c83iq.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # convert to array\n    binary_array\
    \ = [parse(Int64, i) for i in binary_string]\n    # sum the array\n    sum_binary\
    \ = sum(binary_array)\n    # convert to string\n    sum_binary_string = string(sum_binary)\n\
    \    return sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0cojv1d1.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp0cojv1d1.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp0cojv1d1.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0cojv1d1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp0cojv1d1.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp0cojv1d1.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp0cojv1d1.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0cojv1d1.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp0cojv1d1.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpovs2itb6.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpovs2itb6.jl:15\n   [2] macro expansion\n     @ /tmp/tmpovs2itb6.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpovs2itb6.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpovs2itb6.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpovs2itb6.jl:15\n   [2] macro expansion\n     @ /tmp/tmpovs2itb6.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpovs2itb6.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpovs2itb6.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpovs2itb6.jl:15\n   [2] macro expansion\n     @ /tmp/tmpovs2itb6.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpovs2itb6.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpovs2itb6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqz5z69c3.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqz5z69c3.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqz5z69c3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqz5z69c3.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqz5z69c3.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqz5z69c3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqz5z69c3.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqz5z69c3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqz5z69c3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqz5z69c3.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqz5z69c3.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqz5z69c3.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpqz5z69c3.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqz5z69c3.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqz5z69c3.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqz5z69c3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, 2)\n    # convert to string\n    binary_string\
    \ = string(binary)\n    # sum the digits\n    sum = 0\n    for i in binary_string\n\
    \        sum += parse(Int64, i)\n    end\n    # convert to binary\n    sum_binary\
    \ = convert(Int64, sum, 2)\n    # convert to string\n    sum_binary_string = string(sum_binary)\n\
    \    return sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpui6tch0m.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching convert(::Type{Int64}, ::Int64, ::Int64)\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ ::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\\
    n     @ Main /tmp/tmpui6tch0m.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpui6tch0m.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpui6tch0m.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpui6tch0m.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching convert(::Type{Int64},\
    \ ::Int64, ::Int64)\\n  Closest candidates are:\\n    convert(::Type{T}, ::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7\\n    convert(::Type{T}, ::T) where T at essentials.jl:205\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpui6tch0m.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpui6tch0m.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpui6tch0m.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmpui6tch0m.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching convert(::Type{Int64},\
    \ ::Int64, ::Int64)\\n  Closest candidates are:\\n    convert(::Type{T}, ::T)\
    \ where T<:Number at number.jl:6\\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7\\n    convert(::Type{T}, ::T) where T at essentials.jl:205\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpui6tch0m.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpui6tch0m.jl:37 [inlined]\\n   [3] ma"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    sum = 0\n\
    \    binary = \"\"\n    while N > 0\n        sum += N % 2\n        N = div(N,\
    \ 2)\n        push!(binary, sum)\n    end\n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxornc23l.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching push!(::String, ::Int64)\\n  Closest candidates are:\\n    push!(::Any,\
    \ ::Any, !Matched::Any) at abstractarray.jl:2387\\n    push!(::Any, ::Any, !Matched::Any,\
    \ !Matched::Any...) at abstractarray.jl:2388\\n    push!(!Matched::AbstractChannel,\
    \ ::Any) at channels.jl:10\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\\
    n     @ Main /tmp/tmpxornc23l.jl:20\\n   [2] macro expansion\\n     @ /tmp/tmpxornc23l.jl:29\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxornc23l.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpxornc23l.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at abstractarray.jl:2387\\n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at abstractarray.jl:2388\\n    push!(!Matched::AbstractChannel, ::Any) at channels.jl:10\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpxornc23l.jl:20\\\
    n   [2] macro expansion\\n     @ /tmp/tmpxornc23l.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxornc23l.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpxornc23l.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching push!(::String,\
    \ ::Int64)\\n  Closest candidates are:\\n    push!(::Any, ::Any, !Matched::Any)\
    \ at abstractarray.jl:2387\\n    push!(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at abstractarray.jl:2388\\n    push!(!Matched::AbstractChannel, ::Any) at channels.jl:10\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpxornc23l.jl:20\\\
    n   [2] macro expansion\\n     @ /tmp/tm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_str = string(binary)\n    # convert to array\n    binary_arr = [parse(Int64,\
    \ x) for x in binary_str]\n    # sum the array\n    sum_binary = sum(binary_arr)\n\
    \    # convert to string\n    sum_binary_str = string(sum_binary)\n    return\
    \ sum_binary_str\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t\
    @test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2zzkozog.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp2zzkozog.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp2zzkozog.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2zzkozog.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2zzkozog.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp2zzkozog.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp2zzkozog.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2zzkozog.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2zzkozog.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # your\
    \ code here\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfd66htid.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\\n  Closest candidates\
    \ are:\\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpfd66htid.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpfd66htid.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpfd66htid.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpfd66htid.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpfd66htid.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpfd66htid.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpfd66htid.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpfd66htid.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(Int64, sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy6akgjje.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpy6akgjje.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpy6akgjje.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpy6akgjje.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpy6akgjje.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpy6akgjje.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpy6akgjje.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpy6akgjje.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpy6akgjje.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpy6akgjje.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpy6akgjje.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # sum all digits\n    sum_digits\
    \ = sum(parse.(Int64, binary_string))\n    # convert sum to binary\n    sum_binary\
    \ = convert(Int64, sum_digits, base=2)\n    # convert sum_binary to string\n \
    \   sum_binary_string = string(sum_binary)\n    return sum_binary_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz8wc2xq9.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpz8wc2xq9.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpz8wc2xq9.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz8wc2xq9.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpz8wc2xq9.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpz8wc2xq9.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpz8wc2xq9.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpz8wc2xq9.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpz8wc2xq9.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = convert(Int64, N, base=2)\n    # convert\
    \ the binary to string\n    binary_string = string(binary)\n    # convert the\
    \ string to array\n    binary_array = collect(binary_string)\n    # sum the array\n\
    \    sum_binary = sum(binary_array)\n    # convert the sum to string\n    sum_binary_string\
    \ = string(sum_binary)\n    # return the string\n    return sum_binary_string\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkybm7us_.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpkybm7us_.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpkybm7us_.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkybm7us_.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpkybm7us_.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpkybm7us_.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpkybm7us_.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkybm7us_.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpkybm7us_.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, base=2)\n    # convert to string\n    binary\
    \ = string(binary)\n    # convert to array of characters\n    binary = collect(binary)\n\
    \    # convert to array of integers\n    binary = [parse(Int, x) for x in binary]\n\
    \    # sum the array\n    binary = sum(binary)\n    # convert to string\n    binary\
    \ = string(binary)\n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpeha011yn.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Int64; base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at boot.jl:752 got unsupported keyword argument \"base\"\\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760 got unsupported keyword argument \"base\"\\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at char.jl:50 got unsupported keyword argument \"base\"\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpeha011yn.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpeha011yn.jl:34 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpeha011yn.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpeha011yn.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\
    \ got unsupported keyword argument \"base\"\\n    (::Type{T})(::T) where T<:Number\
    \ at boot.jl:760 got unsupported keyword argument \"base\"\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpeha011yn.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpeha011yn.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpeha011yn.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpeha011yn.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary_string = string(binary)\n    # convert string to array\n\
    \    binary_array = [parse(Int64, i) for i in binary_string]\n    # sum the array\n\
    \    sum_binary = sum(binary_array)\n    # convert sum to string\n    sum_binary_string\
    \ = string(sum_binary)\n    return sum_binary_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq87k20yo.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpq87k20yo.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpq87k20yo.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq87k20yo.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpq87k20yo.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpq87k20yo.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpq87k20yo.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpq87k20yo.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpq87k20yo.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe7yzvt3v.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpe7yzvt3v.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpe7yzvt3v.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe7yzvt3v.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpe7yzvt3v.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpe7yzvt3v.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpe7yzvt3v.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe7yzvt3v.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpe7yzvt3v.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpe7yzvt3v.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpe7yzvt3v.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin = convert(Int64, N, base=2)\n    # convert bin to string\n\
    \    bin_str = string(bin)\n    # convert bin_str to array of characters\n   \
    \ bin_arr = collect(bin_str)\n    # convert bin_arr to array of integers\n   \
    \ bin_int = [parse(Int64, x) for x in bin_arr]\n    # sum the elements of bin_int\n\
    \    sum = sum(bin_int)\n    # convert sum to string\n    sum_str = string(sum)\n\
    \    return sum_str\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcr813ht0.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpcr813ht0.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpcr813ht0.jl:34\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpcr813ht0.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpcr813ht0.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpcr813ht0.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpcr813ht0.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpcr813ht0.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpcr813ht0.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(parse(Int, x) for x in binary(N))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpur8edse3.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: binary not defined\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpur8edse3.jl:15\n \
    \  [2] macro expansion\n     @ /tmp/tmpur8edse3.jl:22 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpur8edse3.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpur8edse3.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpur8edse3.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpur8edse3.jl:23 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpur8edse3.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpur8edse3.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpur8edse3.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpur8edse3.jl:24 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpur8edse3.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpur8edse3.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: binary not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpur8edse3.jl:15\n   [2] macro expansion\n\
    \     @ /tmp/tmpur8edse3.jl:25 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpur8edse3.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpur8edse3.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: binary not defined\n  Stacktra"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpur8edse3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, base=2)\n    # convert to string\n    binary_str\
    \ = string(binary)\n    # sum digits\n    sum_digits = sum(int(i) for i in binary_str)\n\
    \    # convert to binary\n    sum_digits_binary = Int(sum_digits, base=2)\n  \
    \  # convert to string\n    sum_digits_binary_str = string(sum_digits_binary)\n\
    \    return sum_digits_binary_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9kdcig_i.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Int64; base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at boot.jl:752 got unsupported keyword argument \"base\"\\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760 got unsupported keyword argument \"base\"\\n\
    \    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number}\
    \ at char.jl:50 got unsupported keyword argument \"base\"\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp9kdcig_i.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmp9kdcig_i.jl:32 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9kdcig_i.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp9kdcig_i.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\
    \ got unsupported keyword argument \"base\"\\n    (::Type{T})(::T) where T<:Number\
    \ at boot.jl:760 got unsupported keyword argument \"base\"\\n    (::Type{T})(!Matched::AbstractChar)\
    \ where T<:Union{AbstractChar, Number} at char.jl:50 got unsupported keyword argument\
    \ \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp9kdcig_i.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp9kdcig_i.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9kdcig_i.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp9kdcig_i.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Int64;\
    \ base=2)\\n  Closest candidates are:\\"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ convert(Int64, sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphmji38gm.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmphmji38gm.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmphmji38gm.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphmji38gm.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmphmji38gm.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmphmji38gm.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmphmji38gm.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphmji38gm.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmphmji38gm.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmphmji38gm.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmphmji38gm.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvflldgku.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpvflldgku.jl:15\n   [2] macro expansion\n     @ /tmp/tmpvflldgku.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvflldgku.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvflldgku.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpvflldgku.jl:15\n   [2] macro expansion\n     @ /tmp/tmpvflldgku.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvflldgku.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpvflldgku.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpvflldgku.jl:15\n   [2] macro expansion\n     @ /tmp/tmpvflldgku.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvflldgku.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvflldgku.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd3ttfpzt.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpd3ttfpzt.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmpd3ttfpzt.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpd3ttfpzt.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpd3ttfpzt.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpd3ttfpzt.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpd3ttfpzt.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpd3ttfpzt.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpd3ttfpzt.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmpd3ttfpzt.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmpd3ttfpzt.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum digits\n    sum_digits = sum(map(x\
    \ -> parse(Int64, x), collect(binary_string)))\n    # convert to binary\n    sum_digits_binary\
    \ = convert(Int64, sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string\
    \ = string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"\
    1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\
    \t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4cwgnekv.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp4cwgnekv.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp4cwgnekv.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4cwgnekv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp4cwgnekv.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp4cwgnekv.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp4cwgnekv.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp4cwgnekv.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp4cwgnekv.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin = convert(Int64, base(N, 2))\n    # convert to string\n \
    \   bin = string(bin)\n    # sum the digits\n    sum = 0\n    for i in bin\n \
    \       sum += parse(Int64, i)\n    end\n    # return the sum\n    return string(sum)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm1zs_cqe.jl:32\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  UndefVarError: base not defined\n \
    \ Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpm1zs_cqe.jl:16\n  \
    \ [2] macro expansion\n     @ /tmp/tmpm1zs_cqe.jl:32 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm1zs_cqe.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpm1zs_cqe.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpm1zs_cqe.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpm1zs_cqe.jl:33 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm1zs_cqe.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpm1zs_cqe.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpm1zs_cqe.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpm1zs_cqe.jl:34 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm1zs_cqe.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpm1zs_cqe.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(333) == \"1001\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1] solve(N::Int64)\n     @ Main /tmp/tmpm1zs_cqe.jl:16\n   [2] macro expansion\n\
    \     @ /tmp/tmpm1zs_cqe.jl:35 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm1zs_cqe.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpm1zs_cqe.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(963) == \"10010\"\n  UndefVarError: base not defined\n  Stacktrace:\n\
    \   [1]"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm1zs_cqe.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin_N = convert(Int64, string(N, base=2))\n    # convert to string\n\
    \    str_bin_N = string(bin_N)\n    # sum digits\n    sum_digits = sum(int(i)\
    \ for i in str_bin_N)\n    # return sum\n    return sum_digits\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsjhsiara.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type String to an object of type Int64\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpsjhsiara.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpsjhsiara.jl:29 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsjhsiara.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpsjhsiara.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpsjhsiara.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpsjhsiara.jl:30 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsjhsiara.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpsjhsiara.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\\n  Closest candidates are:\\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Nu"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum of digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmg5jx533.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpmg5jx533.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpmg5jx533.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmg5jx533.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpmg5jx533.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpmg5jx533.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpmg5jx533.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmg5jx533.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpmg5jx533.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # convert to array of characters\n  \
    \  binary_array = split(binary_string, \"\")\n    # convert to array of integers\n\
    \    binary_array_int = [parse(Int64, x) for x in binary_array]\n    # sum the\
    \ array\n    binary_sum = sum(binary_array_int)\n    # convert to string\n   \
    \ binary_sum_string = string(binary_sum)\n    return binary_sum_string\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmplmr73zf3.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmplmr73zf3.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmplmr73zf3.jl:34\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmplmr73zf3.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmplmr73zf3.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmplmr73zf3.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmplmr73zf3.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmplmr73zf3.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmplmr73zf3.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphi_5r923.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmphi_5r923.jl:15\n   [2] macro expansion\n     @ /tmp/tmphi_5r923.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphi_5r923.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphi_5r923.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmphi_5r923.jl:15\n   [2] macro expansion\n     @ /tmp/tmphi_5r923.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphi_5r923.jl:21\ntest set:\
    \ Error During Test at /tmp/tmphi_5r923.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmphi_5r923.jl:15\n   [2] macro expansion\n     @ /tmp/tmphi_5r923.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphi_5r923.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphi_5r923.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, 2)\n    # convert to string\n    binary_string\
    \ = string(binary)\n    # sum digits\n    sum_digits = sum(int(i) for i in binary_string)\n\
    \    # convert to binary\n    sum_digits_binary = Int(sum_digits, 2)\n    # convert\
    \ to string\n    sum_digits_binary_string = string(sum_digits_binary)\n    # return\n\
    \    return sum_digits_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx9zzxi4o.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching Int64(::Int64, ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool,\
    \ Int32, Int64, UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16})\
    \ at boot.jl:752\\n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpx9zzxi4o.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpx9zzxi4o.jl:33 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpx9zzxi4o.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpx9zzxi4o.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\\\
    n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpx9zzxi4o.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpx9zzxi4o.jl:34 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpx9zzxi4o.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpx9zzxi4o.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    Int64(::Union{Bool, Int32, Int64,\
    \ UInt32, UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\\\
    n    (::Type{T})(::T) where T<:Number at boot.jl:760\\n  Stacktrace:\\n   [1]\
    \ solve(N::Int64)\\n     @ Main /tmp/tmpx9zzxi4o.jl:16\\n   [2] macro expansion\\\
    n     @ /tmp/tmpx9zzxi4o.jl:35 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlin"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ the integer to binary\n    binary = convert(Int64, N, base=2)\n    # convert\
    \ the binary to string\n    binary_string = string(binary)\n    # convert the\
    \ string to an array of characters\n    binary_array = collect(binary_string)\n\
    \    # convert the array of characters to an array of integers\n    binary_array_int\
    \ = [parse(Int64, i) for i in binary_array]\n    # sum the array of integers\n\
    \    sum_binary = sum(binary_array_int)\n    # convert the sum to string\n   \
    \ sum_binary_string = string(sum_binary)\n    # return the string\n    return\
    \ sum_binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp98k03qaa.jl:35\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmp98k03qaa.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmp98k03qaa.jl:35\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp98k03qaa.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp98k03qaa.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp98k03qaa.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmp98k03qaa.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp98k03qaa.jl:34\\ntest set:\
    \ Error During Test at /tmp/tmp98k03qaa.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary_N = string(N, base=2)\n    # convert binary_N to array\
    \ of characters\n    binary_N_array = collect(binary_N)\n    # convert binary_N_array\
    \ to array of integers\n    binary_N_array_int = [parse(Int, i) for i in binary_N_array]\n\
    \    # sum up the digits\n    sum_digits = sum(binary_N_array_int)\n    # convert\
    \ sum_digits to string\n    sum_digits_string = string(sum_digits)\n    return\
    \ sum_digits_string\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaq6bp709.jl:32\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpaq6bp709.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaq6bp709.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpaq6bp709.jl:33\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaq6bp709.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaq6bp709.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpaq6bp709.jl:34\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaq6bp709.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaq6bp709.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpaq6bp709.jl:35\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaq6bp709.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaq6bp709.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpaq6bp709.jl:36\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaq6bp709.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaq6bp709.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaq6bp709.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary = string(binary)\n    # sum digits\n    sum = 0\n    for i in binary\n\
    \        sum += parse(Int64, i)\n    end\n    # return sum\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) ==\
    \ \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\"\
    )\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\")\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfhtpqv5a.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpfhtpqv5a.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpfhtpqv5a.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpfhtpqv5a.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpfhtpqv5a.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpfhtpqv5a.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpfhtpqv5a.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpfhtpqv5a.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpfhtpqv5a.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    binary = string(binary)\n    # sum the digits of binary\n    sum\
    \ = 0\n    for i in binary\n        sum += parse(Int64, i)\n    end\n    # return\
    \ the sum\n    return string(sum)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmeaxw67c.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpmeaxw67c.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpmeaxw67c.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmeaxw67c.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpmeaxw67c.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpmeaxw67c.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpmeaxw67c.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmeaxw67c.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpmeaxw67c.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert binary to\
    \ string\n    bin_N_str = string(bin_N)\n    # convert string to array of chars\n\
    \    bin_N_arr = collect(bin_N_str)\n    # convert array of chars to array of\
    \ ints\n    bin_N_arr_int = [parse(Int64, x) for x in bin_N_arr]\n    # sum array\
    \ of ints\n    sum_bin_N = sum(bin_N_arr_int)\n    # convert sum to string\n \
    \   sum_bin_N_str = string(sum_bin_N)\n    return sum_bin_N_str\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr4o42uqp.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpr4o42uqp.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpr4o42uqp.jl:34\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpr4o42uqp.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpr4o42uqp.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpr4o42uqp.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpr4o42uqp.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpr4o42uqp.jl:33\\ntest set:\
    \ Error During Test at /tmp/tmpr4o42uqp.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_str = string(binary)\n    # sum the digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_str)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_str = string(sum_digits_binary)\n\
    \    return sum_digits_binary_str\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkqcy2jf8.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpkqcy2jf8.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpkqcy2jf8.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkqcy2jf8.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpkqcy2jf8.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpkqcy2jf8.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpkqcy2jf8.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkqcy2jf8.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpkqcy2jf8.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Convert\
    \ the integer to binary\n    binary_string = convert(Int64, N, base=2)\n    #\
    \ Convert the binary string to an array of characters\n    binary_array = collect(binary_string)\n\
    \    # Convert the array of characters to an array of integers\n    binary_array\
    \ = [parse(Int64, x) for x in binary_array]\n    # Sum the array of integers\n\
    \    sum_of_digits = sum(binary_array)\n    # Convert the sum to a string\n  \
    \  sum_of_digits = string(sum_of_digits)\n    # Return the sum\n    return sum_of_digits\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000)\
    \ == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"\
    1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) == \"10010\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg5gquph2.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpg5gquph2.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpg5gquph2.jl:33\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg5gquph2.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg5gquph2.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpg5gquph2.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpg5gquph2.jl:34 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg5gquph2.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg5gquph2.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ sum(digits(N, base=2))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9mo5doqd.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type Int64 to an object of type String\\n  Closest candidates are:\\\
    n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp9mo5doqd.jl:15\\\
    n   [2] macro expansion\\n     @ /tmp/tmp9mo5doqd.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9mo5doqd.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp9mo5doqd.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !Matched::AbstractString)\
    \ where T<:AbstractString at strings/basic.jl:232\\n    ...\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp9mo5doqd.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmp9mo5doqd.jl:23 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9mo5doqd.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp9mo5doqd.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\\n  Closest candidates are:\\n    convert(::Type{String},\
    \ !Matched::String) at essentials.jl:210\\n    convert(::Type{T}, !Matched::T)\
    \ where T<:AbstractString at strings/basic.jl:231\\n    convert(::Type{T}, !M"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, 2)))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5hljm33v.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: no method\
    \ matching digits(::Int64, ::Int64)\\n  Closest candidates are:\\n    digits(::Integer;\
    \ base, pad) at intfuncs.jl:835\\n    digits(!Matched::Type{var\"#s75\"} where\
    \ var\"#s75\"<:Integer, ::Integer; base, pad) at intfuncs.jl:838\\n  Stacktrace:\\\
    n   [1] solve(N::Int64)\\n     @ Main /tmp/tmp5hljm33v.jl:15\\n   [2] macro expansion\\\
    n     @ /tmp/tmp5hljm33v.jl:22 [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5hljm33v.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp5hljm33v.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp5hljm33v.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp5hljm33v.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5hljm33v.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmp5hljm33v.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\\n  Closest candidates are:\\n    digits(::Integer; base, pad) at intfuncs.jl:835\\\
    n    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n  \
    \   @ Main /tmp/tmp5hljm33v.jl:15\\n   [2] macro expansion\\n     @ /tmp/tmp5hljm33v.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n "
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmp5hljm33v.jl:19\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = convert(Int64, N, base=2)\n    # convert to string\n\
    \    binary_string = string(binary)\n    # sum all digits\n    sum_digits = sum(parse.(Int64,\
    \ collect(binary_string)))\n    # convert to binary\n    sum_digits_binary = convert(Int64,\
    \ sum_digits, base=2)\n    # convert to string\n    sum_digits_binary_string =\
    \ string(sum_digits_binary)\n    return sum_digits_binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t\
    @test(candidate(150) == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333)\
    \ == \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbhrs01ed.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(1000) == \"1\"\\n  MethodError: Cannot `convert`\
    \ an object of type \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::Number)\
    \ where T<:Number at number.jl:7 got unsupported keyword argument \"base\"\\n\
    \    convert(::Type{T}, ::T) where T at essentials.jl:205 got unsupported keyword\
    \ argument \"base\"\\n    ...\\n  Stacktrace:\\n   [1] solve(N::Int64)\\n    \
    \ @ Main /tmp/tmpbhrs01ed.jl:16\\n   [2] macro expansion\\n     @ /tmp/tmpbhrs01ed.jl:32\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpbhrs01ed.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpbhrs01ed.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(150) == \"110\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\\n    ...\\\
    n  Stacktrace:\\n   [1] solve(N::Int64)\\n     @ Main /tmp/tmpbhrs01ed.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpbhrs01ed.jl:33 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpbhrs01ed.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmpbhrs01ed.jl:34\\n  Test threw exception\\n  Expression:\
    \ candidate(147) == \"1100\"\\n  MethodError: Cannot `convert` an object of type\
    \ \\n    Int64{} to an object of type \\n    Int64{}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, ::T) w"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    N = N\n\
    \    binary = \"\"\n    while N > 0\n        binary = string(N % 2) * binary\n\
    \        N = N \xF7 2\n    end\n    return binary\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_0f83zhg.jl:28\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"1111101000\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_0f83zhg.jl:28 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0f83zhg.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_0f83zhg.jl:29\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"10010110\" == \"110\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /tmp/tmp_0f83zhg.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0f83zhg.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_0f83zhg.jl:30\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"10010011\" == \"1100\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_0f83zhg.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0f83zhg.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_0f83zhg.jl:31\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"101001101\" == \"1001\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_0f83zhg.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0f83zhg.jl:27\ntest set: Test\
    \ Failed at /tmp/tmp_0f83zhg.jl:32\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"1111000011\" == \"10010\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp_0f83zhg.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_0f83zhg.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_0f83zhg.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    binary = Int(N, 2)\n    # convert to string\n    binary = string(binary)\n\
    \    # sum all digits\n    sum = 0\n    for i in binary\n        sum += parse(Int,\
    \ i)\n    end\n    # convert to binary\n    sum = Int(sum, 2)\n    # convert to\
    \ string\n    sum = string(sum)\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzxv8h46n.jl:35\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpzxv8h46n.jl:16\n   [2] macro expansion\n     @ /tmp/tmpzxv8h46n.jl:35\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzxv8h46n.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpzxv8h46n.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpzxv8h46n.jl:16\n   [2] macro expansion\n     @ /tmp/tmpzxv8h46n.jl:36\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzxv8h46n.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpzxv8h46n.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching Int64(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    Int64(::Union{Bool, Int32, Int64, UInt32,\
    \ UInt64, UInt8, Int128, Int16, Int8, UInt128, UInt16}) at boot.jl:752\n    (::Type{T})(::T)\
    \ where T<:Number at boot.jl:760\n  Stacktrace:\n   [1] solve(N::Int64)\n    \
    \ @ Main /tmp/tmpzxv8h46n.jl:16\n   [2] macro expansion\n     @ /tmp/tmpzxv8h46n.jl:37\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzxv8h"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxv8h46n.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ to binary\n    bin_N = convert(Int64, N, base=2)\n    # convert to string\n\
    \    bin_N_str = string(bin_N)\n    # sum the digits\n    sum_digits = sum(map(x\
    \ -> parse(Int64, x), split(bin_N_str, \"\")))\n    # return the sum\n    return\
    \ string(sum_digits)\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxizoodwf.jl:29\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates\
    \ are:\n    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported\
    \ keyword argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number\
    \ at number.jl:7 got unsupported keyword argument \"base\"\n    convert(::Type{T},\
    \ ::T) where T at essentials.jl:205 got unsupported keyword argument \"base\"\n\
    \    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpxizoodwf.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpxizoodwf.jl:29 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxizoodwf.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpxizoodwf.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported keyword\
    \ argument \"base\"\n    convert(::Type{T}, ::Number) where T<:Number at number.jl:7\
    \ got unsupported keyword argument \"base\"\n    convert(::Type{T}, ::T) where\
    \ T at essentials.jl:205 got unsupported keyword argument \"base\"\n    ...\n\
    \  Stacktrace:\n   [1] solve(N::Int64)\n     @ Main /tmp/tmpxizoodwf.jl:16\n \
    \  [2] macro expansion\n     @ /tmp/tmpxizoodwf.jl:30 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxizoodwf.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpxizoodwf.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ \n    Int64{} to an object of type \n    Int64{}\n  Closest candidates are:\n\
    \    convert(::Type{T}, ::T) where T<:Number at number.jl:6 got unsupported key"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxizoodwf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # Your\
    \ code goes here\n    return \"1\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm9hljq9r.jl:24\n  Expression: candidate(150)\
    \ == \"110\"\n   Evaluated: \"1\" == \"110\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpm9hljq9r.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm9hljq9r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm9hljq9r.jl:25\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"1\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm9hljq9r.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm9hljq9r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm9hljq9r.jl:26\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"1\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm9hljq9r.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm9hljq9r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpm9hljq9r.jl:27\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"1\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpm9hljq9r.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm9hljq9r.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9hljq9r.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn6tgzj4m.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpn6tgzj4m.jl:15\n   [2] macro expansion\n     @ /tmp/tmpn6tgzj4m.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn6tgzj4m.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpn6tgzj4m.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpn6tgzj4m.jl:15\n   [2] macro expansion\n     @ /tmp/tmpn6tgzj4m.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn6tgzj4m.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpn6tgzj4m.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpn6tgzj4m.jl:15\n   [2] macro expansion\n     @ /tmp/tmpn6tgzj4m.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn6tgzj4m.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn6tgzj4m.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxom5jjy4.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxom5jjy4.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxom5jjy4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxom5jjy4.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxom5jjy4.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxom5jjy4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxom5jjy4.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxom5jjy4.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxom5jjy4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxom5jjy4.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxom5jjy4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxom5jjy4.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpxom5jjy4.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxom5jjy4.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxom5jjy4.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxom5jjy4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N, base=2)))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\"\
    )\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t\
    @test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp983rmatr.jl:22\n  Expression: candidate(1000)\
    \ == \"1\"\n   Evaluated: \"6\" == \"1\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp983rmatr.jl:22 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp983rmatr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp983rmatr.jl:23\n  Expression: candidate(150) == \"110\"\n\
    \   Evaluated: \"4\" == \"110\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp983rmatr.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp983rmatr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp983rmatr.jl:24\n  Expression: candidate(147) == \"1100\"\n\
    \   Evaluated: \"4\" == \"1100\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp983rmatr.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp983rmatr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp983rmatr.jl:25\n  Expression: candidate(333) == \"1001\"\n\
    \   Evaluated: \"5\" == \"1001\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp983rmatr.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp983rmatr.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp983rmatr.jl:26\n  Expression: candidate(963) == \"10010\"\n\
    \   Evaluated: \"6\" == \"10010\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp983rmatr.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp983rmatr.jl:21\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp983rmatr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    return\
    \ string(sum(digits(N,2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = solve;\n\
    \t@test(candidate(1000) == \"1\")\n\t@test(candidate(150) == \"110\")\n\t@test(candidate(147)\
    \ == \"1100\")\n\t@test(candidate(333) == \"1001\")\n\t@test(candidate(963) ==\
    \ \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt13tqj5k.jl:22\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpt13tqj5k.jl:15\n   [2] macro expansion\n     @ /tmp/tmpt13tqj5k.jl:22\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt13tqj5k.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpt13tqj5k.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpt13tqj5k.jl:15\n   [2] macro expansion\n     @ /tmp/tmpt13tqj5k.jl:23\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt13tqj5k.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpt13tqj5k.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: no method matching digits(::Int64,\
    \ ::Int64)\n  Closest candidates are:\n    digits(::Integer; base, pad) at intfuncs.jl:835\n\
    \    digits(!Matched::Type{var\"#s75\"} where var\"#s75\"<:Integer, ::Integer;\
    \ base, pad) at intfuncs.jl:838\n  Stacktrace:\n   [1] solve(N::Int64)\n     @\
    \ Main /tmp/tmpt13tqj5k.jl:15\n   [2] macro expansion\n     @ /tmp/tmpt13tqj5k.jl:24\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt13tqj5k.jl:21\ntest set:\
    \ Error Duri"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt13tqj5k.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer N, return the total sum of its digits in\
    \ binary.\n    \n    Example\n        For N = 1000, the sum of digits will be\
    \ 1 the output should be \"1\".\n        For N = 150, the sum of digits will be\
    \ 6 the output should be \"110\".\n        For N = 147, the sum of digits will\
    \ be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n\
    \             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string\
    \ of binary number\n    \"\"\"\nfunction solve(N::Int64)::String \n    # convert\
    \ N to binary\n    binary_number = convert(Int64, string(N, base=2))\n    # sum\
    \ the digits of binary_number\n    sum_digits = sum(digits(binary_number))\n \
    \   # convert sum_digits to binary\n    sum_binary = convert(Int64, string(sum_digits,\
    \ base=2))\n    # return sum_binary\n    return sum_binary\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = solve;\n\t@test(candidate(1000) == \"1\")\n\t@test(candidate(150)\
    \ == \"110\")\n\t@test(candidate(147) == \"1100\")\n\t@test(candidate(333) ==\
    \ \"1001\")\n\t@test(candidate(963) == \"10010\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp97umi8g5.jl:29\n  Test threw exception\n\
    \  Expression: candidate(1000) == \"1\"\n  MethodError: Cannot `convert` an object\
    \ of type String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmp97umi8g5.jl:16\n   [2] macro expansion\n     @ /tmp/tmp97umi8g5.jl:29\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp97umi8g5.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp97umi8g5.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(150) == \"110\"\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\n    ...\n  Stacktrace:\n   [1] solve(N::Int64)\n\
    \     @ Main /tmp/tmp97umi8g5.jl:16\n   [2] macro expansion\n     @ /tmp/tmp97umi8g5.jl:30\
    \ [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp97umi8g5.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp97umi8g5.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(147) == \"1100\"\n  MethodError: Cannot `convert` an object of type\
    \ String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at number.jl:6\n    convert(::Type{T}, !Matched::Number)\
    \ where T<:Number at number.jl:7\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\n    ...\n  Stack"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp97umi8g5.jl:26\n"
  exit_code: 1
  status: SyntaxError

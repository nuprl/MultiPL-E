name: HumanEval_140_fix_spaces
language: julia
results:
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwwibygas.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpwwibygas.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpwwibygas.jl:19 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwwibygas.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpwwibygas.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpwwibygas.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpwwibygas.jl:20 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwwibyg"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpwwibygas.jl:16\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2sam_n1x.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp2sam_n1x.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp2sam_n1x.jl:19 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2sam_n1x.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp2sam_n1x.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp2sam_n1x.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp2sam_n1x.jl:20 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp2sam_n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(text, r\"\
    \\s+\" => \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\
    \t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif\
    \ \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\"\
    ) == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\") == \"\
    Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpa3ok0egs.jl:21\n  Expression: candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\n   Evaluated:\
    \ \"Yellow_Yellow_Dirty_Fellow\" == \"Yellow_Yellow__Dirty__Fellow\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpa3ok0egs.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3ok0egs.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpa3ok0egs.jl:22\n  Expression: candidate(\"Exa   mple\") ==\
    \ \"Exa-mple\"\n   Evaluated: \"Exa_mple\" == \"Exa-mple\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpa3ok0egs.jl:22 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3ok0egs.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpa3ok0egs.jl:23\n  Expression: candidate(\"   Exa 1 2 2 mple\"\
    ) == \"-Exa_1_2_2_mple\"\n   Evaluated: \"_Exa_1_2_2_mple\" == \"-Exa_1_2_2_mple\"\
    \nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa3ok0egs.jl:23 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa3ok0egs.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa3ok0egs.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpez9qcm3l.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpez9qcm3l.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpez9qcm3l.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpez9qcm3l.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpez9qcm3l.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpez9qcm3l.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpez9qcm3l.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpez9qcm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgg3k4rxv.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpgg3k4rxv.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpgg3k4rxv.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpgg3k4rxv.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpgg3k4rxv.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpgg3k4rxv.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpgg3k4rxv.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpgg3k4r"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpy3kii_2_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpy3kii_2_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpy3kii_2_.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy3kii_2_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpy3kii_2_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpy3kii_2_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpy3kii_2_.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpy3kii_2_.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy3kii_2_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqy1fc7ye.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpqy1fc7ye.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpqy1fc7ye.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqy1fc7ye.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpqy1fc7ye.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpqy1fc7ye.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpqy1fc7ye.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqy1fc7"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpqy1fc7ye.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqndgqg7_.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpqndgqg7_.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpqndgqg7_.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqndgqg7_.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpqndgqg7_.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpqndgqg7_.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpqndgqg7_.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqndgqg"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyt3nkcpv.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpyt3nkcpv.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpyt3nkcpv.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyt3nkcpv.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpyt3nkcpv.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpyt3nkcpv.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpyt3nkcpv.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyt3nkcpv.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyt3nkcpv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw72vheu2.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpw72vheu2.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpw72vheu2.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpw72vheu2.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpw72vheu2.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpw72vheu2.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpw72vheu2.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpw72vhe"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpw72vheu2.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2qp8761d.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2qp8761d.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2qp8761d.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2qp8761d.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp2qp8761d.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2qp8761d.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2qp8761d.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2qp8761d.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2qp8761d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0cvy17vu.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp0cvy17vu.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp0cvy17vu.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0cvy17vu.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp0cvy17vu.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp0cvy17vu.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp0cvy17vu.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0cvy17"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1gmgkjdv.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp1gmgkjdv.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp1gmgkjdv.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1gmgkjdv.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp1gmgkjdv.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp1gmgkjdv.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp1gmgkjdv.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1gmgkj"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp90arhier.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp90arhier.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp90arhier.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp90arhier.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp90arhier.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp90arhier.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp90arhier.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp90arhi"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp27soij2k.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp27soij2k.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp27soij2k.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp27soij2k.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp27soij2k.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp27soij2k.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp27soij2k.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp27soij2k.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp27soij2k.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfj65_5d_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpfj65_5d_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpfj65_5d_.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfj65_5d_.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpfj65_5d_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpfj65_5d_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpfj65_5d_.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfj65_5d_.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfj65_5d_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprsk0zt3q.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprsk0zt3q.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprsk0zt3q.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprsk0zt3q.jl:20\ntest set:\
    \ Error During Test at /tmp/tmprsk0zt3q.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprsk0zt3q.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprsk0zt3q.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprsk0zt3q.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprsk0zt3q.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplc6suv17.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmplc6suv17.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmplc6suv17.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmplc6suv17.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmplc6suv17.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmplc6suv17.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmplc6suv17.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmplc6suv"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmplc6suv17.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \ \", \"_\")\n    text = replace(text, \"__\", \"_\")\n    text = replace(text,\
    \ \"___\", \"-\")\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsqhdxw73.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpsqhdxw73.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpsqhdxw73.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsqhdxw73.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpsqhdxw73.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpsqhdxw73.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpsqhdxw73.jl:23 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsqhdxw"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjjnds2lj.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjjnds2lj.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjjnds2lj.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjjnds2lj.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpjjnds2lj.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjjnds2lj.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjjnds2lj.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjjnds2lj.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjjnds2lj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa9ditqs_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpa9ditqs_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpa9ditqs_.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa9ditqs_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpa9ditqs_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpa9ditqs_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpa9ditqs_.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa9ditqs_.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa9ditqs_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpleiajrde.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpleiajrde.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpleiajrde.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpleiajrde.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpleiajrde.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpleiajrde.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpleiajrde.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpleiajrde.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpleiajrde.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcr8g5sig.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcr8g5sig.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcr8g5sig.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcr8g5sig.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcr8g5sig.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcr8g5sig.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcr8g5sig.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcr8g5sig.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcr8g5sig.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdsrt5hzt.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpdsrt5hzt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpdsrt5hzt.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdsrt5hzt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdsrt5hzt.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpdsrt5hzt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpdsrt5hzt.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdsrt5hzt.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdsrt5hzt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl712_rs_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpl712_rs_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpl712_rs_.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl712_rs_.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpl712_rs_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpl712_rs_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpl712_rs_.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl712_rs_.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl712_rs_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpye4cx740.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpye4cx740.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpye4cx740.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpye4cx740.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpye4cx740.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpye4cx740.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpye4cx740.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpye4cx740.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpye4cx740.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf7b1q_zm.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpf7b1q_zm.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpf7b1q_zm.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf7b1q_zm.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpf7b1q_zm.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpf7b1q_zm.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpf7b1q_zm.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf7b1q_zm.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf7b1q_zm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpahaa4df4.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpahaa4df4.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpahaa4df4.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpahaa4df4.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpahaa4df4.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpahaa4df4.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpahaa4df4.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpahaa4df4.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpahaa4df4.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp49buz50_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp49buz50_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp49buz50_.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp49buz50_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp49buz50_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp49buz50_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp49buz50_.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp49buz50_.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp49buz50_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2o3fagtc.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2o3fagtc.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2o3fagtc.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2o3fagtc.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp2o3fagtc.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2o3fagtc.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2o3fagtc.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2o3fagtc.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2o3fagtc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgs9gkzbl.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpgs9gkzbl.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpgs9gkzbl.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgs9gkzbl.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpgs9gkzbl.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpgs9gkzbl.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpgs9gkzbl.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgs9gkzbl.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgs9gkzbl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp56jjj8pw.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp56jjj8pw.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp56jjj8pw.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp56jjj8pw.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp56jjj8pw.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp56jjj8pw.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp56jjj8pw.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp56jjj8pw.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp56jjj8pw.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbshcdbc9.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpbshcdbc9.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpbshcdbc9.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbshcdbc9.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpbshcdbc9.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpbshcdbc9.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpbshcdbc9.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbshcdbc9.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbshcdbc9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpapeel_6l.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpapeel_6l.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpapeel_6l.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpapeel_6l.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpapeel_6l.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpapeel_6l.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpapeel_6l.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpapeel_6l.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpapeel_6l.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbyq9otw2.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpbyq9otw2.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpbyq9otw2.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbyq9otw2.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpbyq9otw2.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpbyq9otw2.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpbyq9otw2.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbyq9otw2.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbyq9otw2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5dbzti2q.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp5dbzti2q.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5dbzti2q.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5dbzti2q.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5dbzti2q.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp5dbzti2q.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5dbzti2q.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5dbzti2q.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5dbzti2q.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpttrnt38j.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpttrnt38j.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpttrnt38j.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpttrnt38j.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpttrnt38j.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpttrnt38j.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpttrnt38j.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpttrnt38j.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpttrnt38j.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphxlb19zi.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphxlb19zi.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphxlb19zi.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphxlb19zi.jl:20\ntest set:\
    \ Error During Test at /tmp/tmphxlb19zi.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphxlb19zi.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphxlb19zi.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphxlb19zi.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphxlb19zi.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi_bd7a1_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpi_bd7a1_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpi_bd7a1_.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi_bd7a1_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpi_bd7a1_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpi_bd7a1_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpi_bd7a1_.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpi_bd7a1_.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi_bd7a1_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp678d9ynx.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp678d9ynx.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp678d9ynx.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp678d9ynx.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp678d9ynx.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp678d9ynx.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp678d9ynx.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp678d9ynx.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp678d9ynx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuez1gfgt.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpuez1gfgt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuez1gfgt.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuez1gfgt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpuez1gfgt.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpuez1gfgt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuez1gfgt.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuez1gfgt.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuez1gfgt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \" => \"-\"), \" \" => \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdkpucrnq.jl:21\n  Expression: candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\n   Evaluated:\
    \ \"Yellow_Yellow-Dirty-Fellow\" == \"Yellow_Yellow__Dirty__Fellow\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpdkpucrnq.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdkpucrnq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpdkpucrnq.jl:22\n  Expression: candidate(\"Exa   mple\") ==\
    \ \"Exa-mple\"\n   Evaluated: \"Exa-_mple\" == \"Exa-mple\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpdkpucrnq.jl:22 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdkpucrnq.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpdkpucrnq.jl:23\n  Expression: candidate(\"   Exa 1 2 2 mple\"\
    ) == \"-Exa_1_2_2_mple\"\n   Evaluated: \"-_Exa_1_2_2_mple\" == \"-Exa_1_2_2_mple\"\
    \nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdkpucrnq.jl:23 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdkpucrnq.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdkpucrnq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzmhc10gh.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpzmhc10gh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpzmhc10gh.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzmhc10gh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpzmhc10gh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpzmhc10gh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpzmhc10gh.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzmhc10gh.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzmhc10gh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyyvmx6p_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpyyvmx6p_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpyyvmx6p_.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyyvmx6p_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpyyvmx6p_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpyyvmx6p_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpyyvmx6p_.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyyvmx6p_.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyyvmx6p_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp704amfq3.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp704amfq3.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp704amfq3.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp704amfq3.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp704amfq3.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp704amfq3.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp704amfq3.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp704amf"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmwbv9cuk.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpmwbv9cuk.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpmwbv9cuk.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmwbv9cuk.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpmwbv9cuk.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpmwbv9cuk.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpmwbv9cuk.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmwbv9c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmum4bd4h.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpmum4bd4h.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpmum4bd4h.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmum4bd4h.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpmum4bd4h.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpmum4bd4h.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpmum4bd4h.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpmum4bd"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \ \", \"_\")\n    text = replace(text, \"__\", \"_\")\n    text = replace(text,\
    \ \"___\", \"-\")\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphiqeowrd.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmphiqeowrd.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmphiqeowrd.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphiqeowrd.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmphiqeowrd.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmphiqeowrd.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmphiqeowrd.jl:23 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphiqeow"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3p4mx_j4.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp3p4mx_j4.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp3p4mx_j4.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3p4mx_j4.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp3p4mx_j4.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp3p4mx_j4.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp3p4mx_j4.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3p4mx_"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpw0nn7ohe.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpw0nn7ohe.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpw0nn7ohe.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpw0nn7ohe.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpw0nn7ohe.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpw0nn7ohe.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpw0nn7ohe.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpw0nn7o"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptmdxjk8z.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmptmdxjk8z.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmptmdxjk8z.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptmdxjk8z.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmptmdxjk8z.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmptmdxjk8z.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmptmdxjk8z.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptmdxjk"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf3pnmhgg.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpf3pnmhgg.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpf3pnmhgg.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpf3pnmhgg.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpf3pnmhgg.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpf3pnmhgg.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpf3pnmhgg.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpf3pnmh"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdhpss6bm.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpdhpss6bm.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpdhpss6bm.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdhpss6bm.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpdhpss6bm.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpdhpss6bm.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpdhpss6bm.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdhpss6"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp774xuset.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp774xuset.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp774xuset.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp774xuset.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp774xuset.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp774xuset.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp774xuset.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp774xus"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_zsysytp.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp_zsysytp.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmp_zsysytp.jl:19 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_zsysytp.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp_zsysytp.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type String\\n  Closest\
    \ candidates are:\\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\\\
    n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\\\
    n    ...\\n  Stacktrace:\\n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp_zsysytp.jl:13\\\
    n   [2] macro expansion\\n     @ /tmp/tmp_zsysytp.jl:20 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp_zsysytp.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp_zsysytp.jl:21\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    \\n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\\n  Closest candidates are:\\n    convert(::Type{String}, !Matched::String)\
    \ at essentials.jl:210\\n"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpew3zyekr.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpew3zyekr.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpew3zyekr.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpew3zyekr.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpew3zyekr.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpew3zyekr.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpew3zyekr.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpew3zyekr.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpew3zyekr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppwnwm_9i.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmppwnwm_9i.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmppwnwm_9i.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmppwnwm_9i.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmppwnwm_9i.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmppwnwm_9i.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmppwnwm_9i.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmppwnwm_"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq2i1kz76.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpq2i1kz76.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpq2i1kz76.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpq2i1kz76.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpq2i1kz76.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpq2i1kz76.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpq2i1kz76.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpq2i1kz76.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq2i1kz76.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe3i8_xyf.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpe3i8_xyf.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe3i8_xyf.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe3i8_xyf.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpe3i8_xyf.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpe3i8_xyf.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe3i8_xyf.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe3i8_xyf.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3i8_xyf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxv31ws4h.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpxv31ws4h.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpxv31ws4h.jl:19 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxv31ws4h.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmpxv31ws4h.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpxv31ws4h.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpxv31ws4h.jl:20 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxv31ws"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcelbjld7.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcelbjld7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcelbjld7.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcelbjld7.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcelbjld7.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcelbjld7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcelbjld7.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcelbjld7.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcelbjld7.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    # YOUR CODE HERE\n    return\
    \ text\nend\nusing Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx8n6wm8k.jl:21\n  Expression: candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\"\n   Evaluated: \"Mudasir Hanif \" == \"\
    Mudasir_Hanif_\"\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx8n6wm8k.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx8n6wm8k.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpx8n6wm8k.jl:22\n  Expression: candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\n   Evaluated: \"Yellow Yellow\
    \  Dirty  Fellow\" == \"Yellow_Yellow__Dirty__Fellow\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpx8n6wm8k.jl:22 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx8n6wm8k.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpx8n6wm8k.jl:23\n  Expression: candidate(\"Exa   mple\") ==\
    \ \"Exa-mple\"\n   Evaluated: \"Exa   mple\" == \"Exa-mple\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpx8n6wm8k.jl:23 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx8n6wm8k.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpx8n6wm8k.jl:24\n  Expression: candidate(\"   Exa 1 2 2 mple\"\
    ) == \"-Exa_1_2_2_mple\"\n   Evaluated: \"   Exa 1 2 2 mple\" == \"-Exa_1_2_2_mple\"\
    \nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx8n6wm8k.jl:24 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx8n6wm8k.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx8n6wm8k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbvmbxjox.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpbvmbxjox.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpbvmbxjox.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbvmbxjox.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpbvmbxjox.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpbvmbxjox.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpbvmbxjox.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpbvmbxjox.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbvmbxjox.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3jvnql1a.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp3jvnql1a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp3jvnql1a.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3jvnql1a.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp3jvnql1a.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp3jvnql1a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp3jvnql1a.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3jvnql1a.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jvnql1a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx5tunm_i.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpx5tunm_i.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpx5tunm_i.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx5tunm_i.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpx5tunm_i.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpx5tunm_i.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpx5tunm_i.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx5tunm_i.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5tunm_i.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkv4mz74a.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkv4mz74a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkv4mz74a.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkv4mz74a.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpkv4mz74a.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkv4mz74a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkv4mz74a.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkv4mz74a.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkv4mz74a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4r09qafk.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp4r09qafk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4r09qafk.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4r09qafk.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp4r09qafk.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp4r09qafk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4r09qafk.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4r09qafk.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4r09qafk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkdjq7xuh.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkdjq7xuh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkdjq7xuh.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkdjq7xuh.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpkdjq7xuh.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkdjq7xuh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkdjq7xuh.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkdjq7xuh.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkdjq7xuh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7bn8u37z.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp7bn8u37z.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp7bn8u37z.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7bn8u37z.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7bn8u37z.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp7bn8u37z.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp7bn8u37z.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7bn8u37z.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7bn8u37z.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg5uems_s.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpg5uems_s.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg5uems_s.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg5uems_s.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpg5uems_s.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpg5uems_s.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg5uems_s.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg5uems_s.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5uems_s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmqqvi6mh.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpmqqvi6mh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmqqvi6mh.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmqqvi6mh.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpmqqvi6mh.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpmqqvi6mh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmqqvi6mh.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmqqvi6mh.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmqqvi6mh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp87ou7kei.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp87ou7kei.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp87ou7kei.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp87ou7kei.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp87ou7kei.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp87ou7kei.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp87ou7kei.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp87ou7kei.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87ou7kei.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu0bf90yd.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpu0bf90yd.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu0bf90yd.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu0bf90yd.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpu0bf90yd.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpu0bf90yd.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu0bf90yd.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu0bf90yd.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu0bf90yd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprydvaktu.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprydvaktu.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmprydvaktu.jl:19 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprydvaktu.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprydvaktu.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprydvaktu.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmprydvaktu.jl:20 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprydvaktu.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprydvaktu.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)\
    \ at essentials.jl:210\n    convert(::Type{T}, !Matched::T) where T<"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprydvaktu.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0sf4yk6m.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp0sf4yk6m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp0sf4yk6m.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0sf4yk6m.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp0sf4yk6m.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp0sf4yk6m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp0sf4yk6m.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp0sf4yk6m.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0sf4yk6m.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_bgmmdfk.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp_bgmmdfk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_bgmmdfk.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_bgmmdfk.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp_bgmmdfk.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp_bgmmdfk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_bgmmdfk.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_bgmmdfk.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_bgmmdfk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ r\"\\s+\", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp59y3sbda.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp59y3sbda.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp59y3sbda.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59y3sbda.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp59y3sbda.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp59y3sbda.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp59y3sbda.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59y3sbda.jl:18\ntest set:\
    \ Error During Test at"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59y3sbda.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphrl2nor7.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphrl2nor7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphrl2nor7.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphrl2nor7.jl:18\ntest set:\
    \ Error During Test at /tmp/tmphrl2nor7.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphrl2nor7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphrl2nor7.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphrl2nor7.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphrl2nor7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd4yshp5e.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpd4yshp5e.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpd4yshp5e.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd4yshp5e.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpd4yshp5e.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpd4yshp5e.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpd4yshp5e.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd4yshp5e.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd4yshp5e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn8r9w0n3.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpn8r9w0n3.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpn8r9w0n3.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn8r9w0n3.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpn8r9w0n3.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpn8r9w0n3.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpn8r9w0n3.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn8r9w0n3.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn8r9w0n3.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, r\"\
    \\s+\", \"_\")\n    text = replace(text, r\"\\s\", \"-\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeys4jh0o.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpeys4jh0o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpeys4jh0o.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeys4jh0o.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpeys4jh0o.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpeys4jh0o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpeys4jh0o.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeys4jh0o.jl:20\ntest set:\
    \ Error During Test at"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeys4jh0o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, r\"\
    \\s+\", \"_\")\n    text = replace(text, r\"\\s\", \"-\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgoj9c3h6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpgoj9c3h6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpgoj9c3h6.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgoj9c3h6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpgoj9c3h6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpgoj9c3h6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpgoj9c3h6.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgoj9c3h6.jl:20\ntest set:\
    \ Error During Test at"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgoj9c3h6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdxhtvbwf.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpdxhtvbwf.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpdxhtvbwf.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdxhtvbwf.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpdxhtvbwf.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpdxhtvbwf.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpdxhtvbwf.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpdxhtvb"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyzvjs9lj.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpyzvjs9lj.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpyzvjs9lj.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpyzvjs9lj.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpyzvjs9lj.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpyzvjs9lj.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpyzvjs9lj.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpyzvjs9"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp33dadtz_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp33dadtz_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp33dadtz_.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp33dadtz_.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp33dadtz_.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp33dadtz_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp33dadtz_.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp33dadtz_.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp33dadtz_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpemy_ciqr.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpemy_ciqr.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpemy_ciqr.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpemy_ciqr.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpemy_ciqr.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpemy_ciqr.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpemy_ciqr.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpemy_ciqr.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpemy_ciqr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe6plo75f.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpe6plo75f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe6plo75f.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe6plo75f.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpe6plo75f.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpe6plo75f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe6plo75f.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe6plo75f.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe6plo75f.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphqz5n266.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphqz5n266.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphqz5n266.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphqz5n266.jl:20\ntest set:\
    \ Error During Test at /tmp/tmphqz5n266.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphqz5n266.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphqz5n266.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphqz5n266.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphqz5n266.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn5m40hky.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpn5m40hky.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpn5m40hky.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn5m40hky.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpn5m40hky.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpn5m40hky.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpn5m40hky.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpn5m40hky.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5m40hky.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7_d_n7lh.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp7_d_n7lh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp7_d_n7lh.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7_d_n7lh.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp7_d_n7lh.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp7_d_n7lh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp7_d_n7lh.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp7_d_n7lh.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7_d_n7lh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptlm5xokr.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmptlm5xokr.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmptlm5xokr.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptlm5xokr.jl:20\ntest set:\
    \ Error During Test at /tmp/tmptlm5xokr.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmptlm5xokr.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmptlm5xokr.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptlm5xokr.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptlm5xokr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppzq0z3zs.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmppzq0z3zs.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmppzq0z3zs.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppzq0z3zs.jl:20\ntest set:\
    \ Error During Test at /tmp/tmppzq0z3zs.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmppzq0z3zs.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmppzq0z3zs.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppzq0z3zs.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppzq0z3zs.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4y94_gzg.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp4y94_gzg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4y94_gzg.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4y94_gzg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp4y94_gzg.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp4y94_gzg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4y94_gzg.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4y94_gzg.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4y94_gzg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprzh78tvs.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprzh78tvs.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprzh78tvs.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprzh78tvs.jl:20\ntest set:\
    \ Error During Test at /tmp/tmprzh78tvs.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprzh78tvs.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprzh78tvs.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprzh78tvs.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprzh78tvs.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8qg9qd0e.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp8qg9qd0e.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp8qg9qd0e.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qg9qd0e.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp8qg9qd0e.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp8qg9qd0e.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp8qg9qd0e.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8qg9qd0e.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8qg9qd0e.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpp68ic_5o.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpp68ic_5o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpp68ic_5o.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpp68ic_5o.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpp68ic_5o.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpp68ic_5o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpp68ic_5o.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpp68ic_5o.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp68ic_5o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxo6_a37s.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpxo6_a37s.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpxo6_a37s.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxo6_a37s.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpxo6_a37s.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpxo6_a37s.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpxo6_a37s.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxo6_a37s.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxo6_a37s.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpno1ayhaa.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpno1ayhaa.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpno1ayhaa.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpno1ayhaa.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpno1ayhaa.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpno1ayhaa.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpno1ayhaa.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpno1ayhaa.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpno1ayhaa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4gq30nvi.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp4gq30nvi.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4gq30nvi.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4gq30nvi.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp4gq30nvi.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp4gq30nvi.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp4gq30nvi.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp4gq30nvi.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4gq30nvi.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa2k32026.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpa2k32026.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpa2k32026.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa2k32026.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpa2k32026.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpa2k32026.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpa2k32026.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa2k32026.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa2k32026.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6ndlwmz0.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp6ndlwmz0.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6ndlwmz0.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6ndlwmz0.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ndlwmz0.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp6ndlwmz0.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6ndlwmz0.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6ndlwmz0.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ndlwmz0.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplm2kydnp.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmplm2kydnp.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmplm2kydnp.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplm2kydnp.jl:20\ntest set:\
    \ Error During Test at /tmp/tmplm2kydnp.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmplm2kydnp.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmplm2kydnp.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplm2kydnp.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplm2kydnp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2co8wodk.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2co8wodk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2co8wodk.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2co8wodk.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp2co8wodk.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2co8wodk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2co8wodk.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2co8wodk.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2co8wodk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppoumbi8n.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmppoumbi8n.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmppoumbi8n.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppoumbi8n.jl:20\ntest set:\
    \ Error During Test at /tmp/tmppoumbi8n.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmppoumbi8n.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmppoumbi8n.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmppoumbi8n.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppoumbi8n.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp812xz4f2.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp812xz4f2.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp812xz4f2.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp812xz4f2.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp812xz4f2.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp812xz4f2.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp812xz4f2.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp812xz4f2.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp812xz4f2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0_ipmopg.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp0_ipmopg.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp0_ipmopg.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0_ipmopg.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp0_ipmopg.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp0_ipmopg.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp0_ipmopg.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp0_ipmo"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, r\"\
    \\s+\", \"_\")\n    text = replace(text, r\"\\s\", \"-\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpljmqzrf6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpljmqzrf6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpljmqzrf6.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpljmqzrf6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpljmqzrf6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpljmqzrf6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpljmqzrf6.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpljmqzrf6.jl:20\ntest set:\
    \ Error During Test at"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpljmqzrf6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg7k4wmeg.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpg7k4wmeg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg7k4wmeg.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7k4wmeg.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpg7k4wmeg.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpg7k4wmeg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg7k4wmeg.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7k4wmeg.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7k4wmeg.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd2a3nwpk.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpd2a3nwpk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpd2a3nwpk.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd2a3nwpk.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpd2a3nwpk.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpd2a3nwpk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpd2a3nwpk.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd2a3nwpk.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd2a3nwpk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwm0u2vst.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpwm0u2vst.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpwm0u2vst.jl:19 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwm0u2vst.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpwm0u2vst.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpwm0u2vst.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmpwm0u2vst.jl:20 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpwm0u2vst.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpwm0u2vst.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)\
    \ at essentials.jl:210\n    convert(::Type{T}, !Matched::T) where T<"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwm0u2vst.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt2qc58em.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpt2qc58em.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpt2qc58em.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt2qc58em.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpt2qc58em.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpt2qc58em.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpt2qc58em.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt2qc58em.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt2qc58em.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp66fvei_8.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp66fvei_8.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp66fvei_8.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp66fvei_8.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp66fvei_8.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp66fvei_8.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp66fvei_8.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp66fvei_8.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp66fvei_8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgpjktc_r.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpgpjktc_r.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpgpjktc_r.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgpjktc_r.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpgpjktc_r.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpgpjktc_r.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpgpjktc_r.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgpjktc_r.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgpjktc_r.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp98urt0qz.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp98urt0qz.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp98urt0qz.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp98urt0qz.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp98urt0qz.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp98urt0qz.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp98urt0qz.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp98urt0qz.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp98urt0qz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6x5q0n80.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp6x5q0n80.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6x5q0n80.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6x5q0n80.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6x5q0n80.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp6x5q0n80.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6x5q0n80.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6x5q0n80.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6x5q0n80.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5zpf8kyl.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp5zpf8kyl.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5zpf8kyl.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5zpf8kyl.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp5zpf8kyl.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp5zpf8kyl.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5zpf8kyl.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5zpf8kyl.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5zpf8kyl.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp11ziqmlh.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp11ziqmlh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp11ziqmlh.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp11ziqmlh.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp11ziqmlh.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp11ziqmlh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp11ziqmlh.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp11ziqmlh.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp11ziqmlh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmxo33d59.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpmxo33d59.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmxo33d59.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmxo33d59.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpmxo33d59.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpmxo33d59.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmxo33d59.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmxo33d59.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmxo33d59.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphno_x9al.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphno_x9al.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphno_x9al.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphno_x9al.jl:20\ntest set:\
    \ Error During Test at /tmp/tmphno_x9al.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmphno_x9al.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmphno_x9al.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphno_x9al.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphno_x9al.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjma18lz0.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjma18lz0.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjma18lz0.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjma18lz0.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpjma18lz0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjma18lz0.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjma18lz0.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjma18lz0.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjma18lz0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpucd6k8ie.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpucd6k8ie.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpucd6k8ie.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpucd6k8ie.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpucd6k8ie.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpucd6k8ie.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpucd6k8ie.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpucd6k8ie.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpucd6k8ie.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp29zm_drz.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp29zm_drz.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp29zm_drz.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp29zm_drz.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp29zm_drz.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp29zm_drz.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp29zm_drz.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp29zm_drz.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp29zm_drz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpopxu9_kz.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpopxu9_kz.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpopxu9_kz.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpopxu9_kz.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpopxu9_kz.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpopxu9_kz.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpopxu9_kz.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpopxu9_"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3siqvuik.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp3siqvuik.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp3siqvuik.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3siqvuik.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp3siqvuik.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp3siqvuik.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp3siqvuik.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp3siqvuik.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3siqvuik.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_kbg78q2.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp_kbg78q2.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_kbg78q2.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_kbg78q2.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp_kbg78q2.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp_kbg78q2.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_kbg78q2.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_kbg78q2.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_kbg78q2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptvnonjmj.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmptvnonjmj.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmptvnonjmj.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptvnonjmj.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmptvnonjmj.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmptvnonjmj.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmptvnonjmj.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmptvnonj"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqbbf3w1m.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpqbbf3w1m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpqbbf3w1m.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqbbf3w1m.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpqbbf3w1m.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpqbbf3w1m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpqbbf3w1m.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqbbf3w1m.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqbbf3w1m.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkggj_6h6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkggj_6h6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkggj_6h6.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkggj_6h6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpkggj_6h6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkggj_6h6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkggj_6h6.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkggj_6h6.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkggj_6h6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr80b4ot1.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpr80b4ot1.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpr80b4ot1.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpr80b4ot1.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpr80b4ot1.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpr80b4ot1.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpr80b4ot1.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpr80b4ot1.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr80b4ot1.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq0cr3ih7.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpq0cr3ih7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpq0cr3ih7.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpq0cr3ih7.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpq0cr3ih7.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpq0cr3ih7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpq0cr3ih7.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpq0cr3ih7.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq0cr3ih7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(text, r\"\
    \\s+\", \"-\")\nend\nusing Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\
    \t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif\
    \ \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\"\
    ) == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\") == \"\
    Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5_hlc_8m.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp5_hlc_8m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5_hlc_8m.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5_hlc_8m.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp5_hlc_8m.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp5_hlc_8m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp5_hlc_8m.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5_hlc_8m.jl:18\ntest set:\
    \ Error During Test at"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5_hlc_8m.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl54t4b2e.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpl54t4b2e.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpl54t4b2e.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl54t4b2e.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpl54t4b2e.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpl54t4b2e.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpl54t4b2e.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl54t4b"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpl54t4b2e.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjx8189n4.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpjx8189n4.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpjx8189n4.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjx8189n4.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpjx8189n4.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpjx8189n4.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpjx8189n4.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjx8189"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkpwr8jge.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkpwr8jge.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkpwr8jge.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkpwr8jge.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpkpwr8jge.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkpwr8jge.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkpwr8jge.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkpwr8jge.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkpwr8jge.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpknfdwus9.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpknfdwus9.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpknfdwus9.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpknfdwus9.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpknfdwus9.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpknfdwus9.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpknfdwus9.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpknfdwus9.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknfdwus9.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl4hns012.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpl4hns012.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpl4hns012.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl4hns012.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpl4hns012.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpl4hns012.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpl4hns012.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl4hns0"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfu_80014.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpfu_80014.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpfu_80014.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfu_80014.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpfu_80014.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpfu_80014.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpfu_80014.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfu_80014.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfu_80014.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcloowcvb.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcloowcvb.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcloowcvb.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcloowcvb.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcloowcvb.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcloowcvb.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcloowcvb.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcloowcvb.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcloowcvb.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjogxp97m.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjogxp97m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjogxp97m.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjogxp97m.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpjogxp97m.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjogxp97m.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjogxp97m.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjogxp97m.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjogxp97m.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc25b8i37.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpc25b8i37.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpc25b8i37.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc25b8i37.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpc25b8i37.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpc25b8i37.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpc25b8i37.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpc25b8i37.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc25b8i37.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkw2njb1f.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkw2njb1f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkw2njb1f.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkw2njb1f.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpkw2njb1f.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpkw2njb1f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpkw2njb1f.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkw2njb1f.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkw2njb1f.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \" \" => \"_\"), r\"\\s{2,}\" => \"-\")\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t\
    @test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"\
    Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"\
    -Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0u_olbu9.jl:22\n  Expression: candidate(\"\
    Exa   mple\") == \"Exa-mple\"\n   Evaluated: \"Exa___mple\" == \"Exa-mple\"\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp0u_olbu9.jl:22 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0u_olbu9.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp0u_olbu9.jl:23\n  Expression: candidate(\"   Exa 1 2 2 mple\"\
    ) == \"-Exa_1_2_2_mple\"\n   Evaluated: \"___Exa_1_2_2_mple\" == \"-Exa_1_2_2_mple\"\
    \nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0u_olbu9.jl:23 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0u_olbu9.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0u_olbu9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnp8kpb5_.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpnp8kpb5_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpnp8kpb5_.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnp8kpb5_.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpnp8kpb5_.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpnp8kpb5_.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpnp8kpb5_.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpnp8kpb5_.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnp8kpb5_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzqdj92my.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpzqdj92my.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpzqdj92my.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzqdj92my.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzqdj92my.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpzqdj92my.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpzqdj92my.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzqdj92my.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzqdj92my.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprcop9n3t.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprcop9n3t.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprcop9n3t.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprcop9n3t.jl:20\ntest set:\
    \ Error During Test at /tmp/tmprcop9n3t.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprcop9n3t.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprcop9n3t.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprcop9n3t.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprcop9n3t.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqpp3ndsj.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpqpp3ndsj.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpqpp3ndsj.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqpp3ndsj.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpqpp3ndsj.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpqpp3ndsj.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpqpp3ndsj.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqpp3ndsj.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqpp3ndsj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb6r5ly90.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpb6r5ly90.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpb6r5ly90.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb6r5ly90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpb6r5ly90.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpb6r5ly90.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpb6r5ly90.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb6r5ly90.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb6r5ly90.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe3rpzpja.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpe3rpzpja.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe3rpzpja.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe3rpzpja.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpe3rpzpja.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpe3rpzpja.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe3rpzpja.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe3rpzpja.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3rpzpja.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr2uzito5.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpr2uzito5.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpr2uzito5.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpr2uzito5.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpr2uzito5.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpr2uzito5.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpr2uzito5.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpr2uzito5.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr2uzito5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzmhbruo8.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpzmhbruo8.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpzmhbruo8.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzmhbruo8.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpzmhbruo8.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpzmhbruo8.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpzmhbruo8.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzmhbru"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpzmhbruo8.jl:18\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxlzf2mfs.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpxlzf2mfs.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpxlzf2mfs.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxlzf2mfs.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpxlzf2mfs.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpxlzf2mfs.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpxlzf2mfs.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpxlzf2m"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprsdsdsir.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprsdsdsir.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmprsdsdsir.jl:19 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprsdsdsir.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprsdsdsir.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at essentials.jl:210\n \
    \   convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] fix_spaces(text::String)\n     @ Main /tmp/tmprsdsdsir.jl:13\n\
    \   [2] macro expansion\n     @ /tmp/tmprsdsdsir.jl:20 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprsdsdsir.jl:18\ntest set:\
    \ Error During Test at /tmp/tmprsdsdsir.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    \n  MethodError: Cannot `convert` an object of type Nothing to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)\
    \ at essentials.jl:210\n    convert(::Type{T}, !Matched::T) where T<"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprsdsdsir.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9wsqvmub.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp9wsqvmub.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp9wsqvmub.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9wsqvmub.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp9wsqvmub.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp9wsqvmub.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp9wsqvmub.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9wsqvm"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2rc2nvof.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2rc2nvof.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2rc2nvof.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2rc2nvof.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp2rc2nvof.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2rc2nvof.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2rc2nvof.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2rc2nvof.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2rc2nvof.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \ \", \"_\")\n    text = replace(text, \"__\", \"-\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiqbhg700.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpiqbhg700.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpiqbhg700.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiqbhg700.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiqbhg700.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpiqbhg700.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpiqbhg700.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiqbhg700.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiqbhg700.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_3wo0hsq.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp_3wo0hsq.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_3wo0hsq.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_3wo0hsq.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp_3wo0hsq.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp_3wo0hsq.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_3wo0hsq.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_3wo0hsq.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_3wo0hsq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvl_zccup.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpvl_zccup.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvl_zccup.jl:19 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvl_zccup.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpvl_zccup.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpvl_zccup.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvl_zccup.jl:20 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvl_zccup.jl:18\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvl_zccup.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9y48vukt.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp9y48vukt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp9y48vukt.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9y48vukt.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp9y48vukt.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp9y48vukt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp9y48vukt.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9y48vukt.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9y48vukt.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyrvx2g3z.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpyrvx2g3z.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpyrvx2g3z.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyrvx2g3z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpyrvx2g3z.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpyrvx2g3z.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpyrvx2g3z.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpyrvx2g3z.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyrvx2g3z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuswv3pbj.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpuswv3pbj.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuswv3pbj.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuswv3pbj.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpuswv3pbj.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpuswv3pbj.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuswv3pbj.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuswv3pbj.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuswv3pbj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpupo4uz7f.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpupo4uz7f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpupo4uz7f.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpupo4uz7f.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpupo4uz7f.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpupo4uz7f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpupo4uz7f.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpupo4uz7f.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpupo4uz7f.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9v6f9_yx.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp9v6f9_yx.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp9v6f9_yx.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9v6f9_yx.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp9v6f9_yx.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp9v6f9_yx.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp9v6f9_yx.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9v6f9_yx.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9v6f9_yx.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9hidyx93.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp9hidyx93.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp9hidyx93.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9hidyx93.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp9hidyx93.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp9hidyx93.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp9hidyx93.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9hidyx"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmply6wv04t.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmply6wv04t.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmply6wv04t.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmply6wv04t.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmply6wv04t.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmply6wv04t.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmply6wv04t.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmply6wv0"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \ \", \"_\")\n    text = replace(text, \"__\", \"_\")\n    text = replace(text,\
    \ \"___\", \"-\")\n    return text\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpswqby5q3.jl:22\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpswqby5q3.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpswqby5q3.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpswqby5q3.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpswqby5q3.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpswqby5q3.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpswqby5q3.jl:23 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpswqby5q3.jl:21\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpswqby5q3.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9gyqsuif.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp9gyqsuif.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp9gyqsuif.jl:19 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9gyqsuif.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmp9gyqsuif.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp9gyqsuif.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp9gyqsuif.jl:20 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp9gyqsu"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvmvanqq0.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpvmvanqq0.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpvmvanqq0.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvmvanqq0.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpvmvanqq0.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpvmvanqq0.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpvmvanqq0.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvmvanq"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3_gtlqu7.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp3_gtlqu7.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp3_gtlqu7.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3_gtlqu7.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp3_gtlqu7.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp3_gtlqu7.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp3_gtlqu7.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3_gtlq"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \" => \"-\"), \" \" => \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmybqu0ir.jl:21\n  Expression: candidate(\"\
    Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\n   Evaluated:\
    \ \"Yellow_Yellow-Dirty-Fellow\" == \"Yellow_Yellow__Dirty__Fellow\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpmybqu0ir.jl:21 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmybqu0ir.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmybqu0ir.jl:22\n  Expression: candidate(\"Exa   mple\") ==\
    \ \"Exa-mple\"\n   Evaluated: \"Exa-_mple\" == \"Exa-mple\"\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpmybqu0ir.jl:22 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmybqu0ir.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpmybqu0ir.jl:23\n  Expression: candidate(\"   Exa 1 2 2 mple\"\
    ) == \"-Exa_1_2_2_mple\"\n   Evaluated: \"-_Exa_1_2_2_mple\" == \"-Exa_1_2_2_mple\"\
    \nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmybqu0ir.jl:23 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmybqu0ir.jl:18\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmybqu0ir.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3jir8zt1.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp3jir8zt1.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp3jir8zt1.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3jir8zt1.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp3jir8zt1.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp3jir8zt1.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp3jir8zt1.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp3jir8z"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5nf7uiv_.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp5nf7uiv_.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp5nf7uiv_.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5nf7uiv_.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp5nf7uiv_.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp5nf7uiv_.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp5nf7uiv_.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5nf7ui"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjdjtm7ut.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpjdjtm7ut.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpjdjtm7ut.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjdjtm7ut.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpjdjtm7ut.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpjdjtm7ut.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpjdjtm7ut.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjdjtm7"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplymd9zzg.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmplymd9zzg.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmplymd9zzg.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmplymd9zzg.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmplymd9zzg.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmplymd9zzg.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmplymd9zzg.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmplymd9z"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpd9wpo5c3.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpd9wpo5c3.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpd9wpo5c3.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpd9wpo5c3.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpd9wpo5c3.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpd9wpo5c3.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpd9wpo5c3.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpd9wpo5"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp7cjefvd0.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp7cjefvd0.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp7cjefvd0.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7cjefvd0.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmp7cjefvd0.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmp7cjefvd0.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmp7cjefvd0.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp7cjefv"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdnmhiq6o.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpdnmhiq6o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpdnmhiq6o.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdnmhiq6o.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdnmhiq6o.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpdnmhiq6o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpdnmhiq6o.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdnmhiq6o.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdnmhiq6o.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqxn0y312.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpqxn0y312.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpqxn0y312.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqxn0y312.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpqxn0y312.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpqxn0y312.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpqxn0y312.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqxn0y3"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    return replace(replace(text,\
    \ \"  \", \"-\"), \" \", \"_\")\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fix_spaces;\n\t@test(candidate(\"Example\") == \"Example\")\n\t@test(candidate(\"\
    Mudasir Hanif \") == \"Mudasir_Hanif_\")\n\t@test(candidate(\"Yellow Yellow  Dirty\
    \  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\n\t@test(candidate(\"Exa   mple\"\
    ) == \"Exa-mple\")\n\t@test(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\"\
    )\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph8o5h924.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmph8o5h924.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmph8o5h924.jl:19 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmph8o5h924.jl:18\\ntest set:\
    \ Error During Test at /tmp/tmph8o5h924.jl:20\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmph8o5h924.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmph8o5h924.jl:20 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmph8o5h9"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaze7iet9.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpaze7iet9.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpaze7iet9.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpaze7iet9.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpaze7iet9.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpaze7iet9.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpaze7iet9.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpaze7ie"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpht2h1y9v.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpht2h1y9v.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpht2h1y9v.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpht2h1y9v.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpht2h1y9v.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpht2h1y9v.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpht2h1y9v.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpht2h1y"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl27cb6pm.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(\"Example\") == \"Example\"\\n  MethodError:\
    \ no method matching replace(::String, ::String, ::String)\\n  Closest candidates\
    \ are:\\n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\\
    n    replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpl27cb6pm.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpl27cb6pm.jl:21 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl27cb6pm.jl:20\\ntest set:\
    \ Error During Test at /tmp/tmpl27cb6pm.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\\n  Closest candidates are:\\\
    n    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\\n \
    \   replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\\n    ...\\n  Stacktrace:\\\
    n   [1] fix_spaces(text::String)\\n     @ Main /tmp/tmpl27cb6pm.jl:12\\n   [2]\
    \ macro expansion\\n     @ /tmp/tmpl27cb6pm.jl:22 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl27cb6"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjoyn8cgg.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjoyn8cgg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjoyn8cgg.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjoyn8cgg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpjoyn8cgg.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpjoyn8cgg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpjoyn8cgg.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpjoyn8cgg.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjoyn8cgg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcu6dfdhp.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcu6dfdhp.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcu6dfdhp.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcu6dfdhp.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpcu6dfdhp.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpcu6dfdhp.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpcu6dfdhp.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcu6dfdhp.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcu6dfdhp.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp920h3br8.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp920h3br8.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp920h3br8.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp920h3br8.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp920h3br8.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp920h3br8.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp920h3br8.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp920h3br8.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp920h3br8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd171nvq6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpd171nvq6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpd171nvq6.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd171nvq6.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpd171nvq6.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpd171nvq6.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpd171nvq6.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd171nvq6.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd171nvq6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfxmj3hnh.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpfxmj3hnh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpfxmj3hnh.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfxmj3hnh.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpfxmj3hnh.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpfxmj3hnh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpfxmj3hnh.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfxmj3hnh.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfxmj3hnh.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9ulnpv5a.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp9ulnpv5a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp9ulnpv5a.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9ulnpv5a.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp9ulnpv5a.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp9ulnpv5a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp9ulnpv5a.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp9ulnpv5a.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ulnpv5a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdbdjomhk.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpdbdjomhk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpdbdjomhk.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdbdjomhk.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpdbdjomhk.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpdbdjomhk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpdbdjomhk.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdbdjomhk.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdbdjomhk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpclr1y7br.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpclr1y7br.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpclr1y7br.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpclr1y7br.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpclr1y7br.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpclr1y7br.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpclr1y7br.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpclr1y7br.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpclr1y7br.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp26j02ogg.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp26j02ogg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp26j02ogg.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp26j02ogg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp26j02ogg.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp26j02ogg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp26j02ogg.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp26j02ogg.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp26j02ogg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp848_fmis.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp848_fmis.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp848_fmis.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp848_fmis.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp848_fmis.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp848_fmis.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp848_fmis.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp848_fmis.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp848_fmis.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl4enw83i.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpl4enw83i.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpl4enw83i.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl4enw83i.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpl4enw83i.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpl4enw83i.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpl4enw83i.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpl4enw83i.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl4enw83i.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2sj639jg.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2sj639jg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2sj639jg.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2sj639jg.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp2sj639jg.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmp2sj639jg.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp2sj639jg.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp2sj639jg.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2sj639jg.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb941j91b.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpb941j91b.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpb941j91b.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb941j91b.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpb941j91b.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpb941j91b.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpb941j91b.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpb941j91b.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb941j91b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw_isp43z.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpw_isp43z.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpw_isp43z.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw_isp43z.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpw_isp43z.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpw_isp43z.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpw_isp43z.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpw_isp43z.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw_isp43z.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm82eodxk.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpm82eodxk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpm82eodxk.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm82eodxk.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpm82eodxk.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpm82eodxk.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpm82eodxk.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpm82eodxk.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm82eodxk.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvo8i9593.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpvo8i9593.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvo8i9593.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvo8i9593.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpvo8i9593.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpvo8i9593.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpvo8i9593.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvo8i9593.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvo8i9593.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzzjrv8ru.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpzzjrv8ru.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpzzjrv8ru.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzzjrv8ru.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpzzjrv8ru.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpzzjrv8ru.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpzzjrv8ru.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpzzjrv8ru.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzzjrv8ru.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, r\"\
    \\s+\", \"_\")\n    text = replace(text, r\"\\s\", \"-\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg6wlgj7b.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpg6wlgj7b.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg6wlgj7b.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg6wlgj7b.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpg6wlgj7b.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n \
    \   replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n   \
    \ replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpg6wlgj7b.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg6wlgj7b.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg6wlgj7b.jl:20\ntest set:\
    \ Error During Test at"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg6wlgj7b.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string text, replace all spaces in it with underscores,\
    \ \n    and if a string has more than 2 consecutive spaces, \n    then replace\
    \ all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\
    \n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"\n    \"\
    \"\"\nfunction fix_spaces(text::String)::String \n    text = replace(text, \"\
    \  \", \"-\")\n    text = replace(text, \" \", \"_\")\n    return text\nend\n\
    using Test\n\n@testset begin\n\ncandidate = fix_spaces;\n\t@test(candidate(\"\
    Example\") == \"Example\")\n\t@test(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
    )\n\t@test(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
    )\n\t@test(candidate(\"Exa   mple\") == \"Exa-mple\")\n\t@test(candidate(\"  \
    \ Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu_ev7qnp.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"Example\") == \"Example\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpu_ev7qnp.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu_ev7qnp.jl:21 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu_ev7qnp.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpu_ev7qnp.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\n  MethodError: no method\
    \ matching replace(::String, ::String, ::String)\n  Closest candidates are:\n\
    \    replace(!Matched::Union{Function, Type}, ::Any; count) at set.jl:605\n  \
    \  replace(::String, !Matched::Pair{var\"#s75\", B} where {var\"#s75\"<:AbstractChar,\
    \ B}; count) at strings/util.jl:513\n    replace(::String, !Matched::Pair{var\"\
    #s72\", B} where {var\"#s72\"<:Union{Tuple{Vararg{AbstractChar, N} where N}, Set{var\"\
    #s53\"} where var\"#s53\"<:AbstractChar, AbstractVector{var\"#s54\"} where var\"\
    #s54\"<:AbstractChar}, B}; count) at strings/util.jl:518\n    ...\n  Stacktrace:\n\
    \   [1] fix_spaces(text::String)\n     @ Main /tmp/tmpu_ev7qnp.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu_ev7qnp.jl:22 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu_ev7qnp.jl:20\ntest set:\
    \ Error During Test "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu_ev7qnp.jl:18\n"
  exit_code: 1
  status: SyntaxError
